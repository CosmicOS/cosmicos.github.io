[
  {
    "role": "file",
    "lines": [
      "== COS_License =="
    ],
    "stanza": 0
  },
  {
    "role": "comment",
    "lines": [
      "#   Author: Paul Fitzpatrick, paulfitz@alum.mit.edu",
      "#   Copyright (c) 2018 Paul Fitzpatrick",
      "#",
      "#   This file is part of CosmicOS.",
      "#",
      "#   CosmicOS is free software; you can redistribute it and/or modify",
      "#   it under the terms of the GNU General Public License as published by",
      "#   the Free Software Foundation; either version 2 of the License, or",
      "#   (at your option) any later version.",
      "#",
      "#   CosmicOS is distributed in the hope that it will be useful,",
      "#   but WITHOUT ANY WARRANTY; without even the implied warranty of",
      "#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
      "#   GNU General Public License for more details.",
      "#",
      "#   You should have received a copy of the GNU General Public License",
      "#   along with CosmicOS; if not, write to the Free Software",
      "#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",
      "#"
    ],
    "stanza": 1
  },
  {
    "role": "file",
    "lines": [
      "== COS_Intro =="
    ],
    "stanza": 2
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Here we count up from zero, go through some primes, that sort of",
      "thing.  Just like in the movies!  There is some syntax around the",
      "numbers, and a structure to the \"lesson,\" but it will be fine for the",
      "listener to ignore all that for now.  Hopefully what they will pick up",
      "on is:",
      "",
      " * There are some repeating patterns.",
      " * Between those patterns, there's a specific short unit repeating",
      "   a varying number of times (we count in unary).",
      " * The number of times it varies smells like math.",
      "",
      "We'll get to a more compact representation of numbers later, once",
      "we've established the basics.",
      ""
    ],
    "section_description": "introduce numbers (in unary notation)",
    "section_category": "MATH",
    "section_index": 0,
    "stanza": 3
  },
  {
    "role": "code",
    "lines": [
      "intro unary;"
    ],
    "preprocessed": "intro unary;",
    "code": "210010321111111132233",
    "parse": [
      "intro",
      "unary"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF183;&#xF24B;",
    "dt": false,
    "stanza": 4
  },
  {
    "role": "code",
    "lines": [
      "intro is:int;"
    ],
    "preprocessed": "intro is:int;",
    "code": "2100103210100032233",
    "parse": [
      "intro",
      "is:int"
    ],
    "spider": "&#xF156;&#xF24A;&#xF16C;&#xF24B;",
    "dt": false,
    "stanza": 5
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 0;"
    ],
    "preprocessed": "is:int | unary 0;",
    "code": "2101000312321111111132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 6
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 0;"
    ],
    "preprocessed": "is:int | unary 1 0;",
    "code": "2101000312321111111132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 7
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 0;",
    "code": "2101000312321111111132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 8
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 0;",
    "code": "2101000312321111111132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 9
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 10
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 11
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 12
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 13
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 14
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 15
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 16
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 17
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 18
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 19
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 20
  },
  {
    "role": "code",
    "lines": [
      "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2101000312321111111132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF16C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 21
  },
  {
    "role": "code",
    "lines": [
      "intro is:square;"
    ],
    "preprocessed": "intro is:square;",
    "code": "2100103211101032233",
    "parse": [
      "intro",
      "is:square"
    ],
    "spider": "&#xF156;&#xF24A;&#xF17E;&#xF24B;",
    "dt": false,
    "stanza": 22
  },
  {
    "role": "code",
    "lines": [
      "is:square | unary 0;"
    ],
    "preprocessed": "is:square | unary 0;",
    "code": "2111010312321111111132032233",
    "parse": [
      "is:square",
      [
        -1,
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF17E;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 23
  },
  {
    "role": "code",
    "lines": [
      "is:square | unary 1 0;"
    ],
    "preprocessed": "is:square | unary 1 0;",
    "code": "2111010312321111111132132032233",
    "parse": [
      "is:square",
      [
        -1,
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17E;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 24
  },
  {
    "role": "code",
    "lines": [
      "is:square | unary 1 1 1 1 0;"
    ],
    "preprocessed": "is:square | unary 1 1 1 1 0;",
    "code": "2111010312321111111132132132132132032233",
    "parse": [
      "is:square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17E;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 25
  },
  {
    "role": "code",
    "lines": [
      "is:square | unary 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:square | unary 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111010312321111111132132132132132132132132132132032233",
    "parse": [
      "is:square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17E;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 26
  },
  {
    "role": "code",
    "lines": [
      "is:square | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:square | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111010312321111111132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17E;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 27
  },
  {
    "role": "code",
    "lines": [
      "is:square | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:square | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111010312321111111132132132132132132132132132132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17E;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 28
  },
  {
    "role": "code",
    "lines": [
      "intro is:prime;"
    ],
    "preprocessed": "intro is:prime;",
    "code": "2100103211100032233",
    "parse": [
      "intro",
      "is:prime"
    ],
    "spider": "&#xF156;&#xF24A;&#xF17C;&#xF24B;",
    "dt": false,
    "stanza": 29
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 0;",
    "code": "2111000312321111111132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 30
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 0;",
    "code": "2111000312321111111132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 31
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 32
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 33
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 34
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 35
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 36
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 37
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 38
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132132132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 39
  },
  {
    "role": "code",
    "lines": [
      "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "preprocessed": "is:prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;",
    "code": "2111000312321111111132132132132132132132132132132132132132132132132132132132132132132132132132132132132132132132132032233",
    "parse": [
      "is:prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF17C;&#xF248;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 40
  },
  {
    "role": "file",
    "lines": [
      "== COS_Compare =="
    ],
    "stanza": 41
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We've hopefully cued our listeners to be looking for mathematical",
      "patterns.  So let's give them some more.  It doesn't matter so much",
      "what patterns we give, as long as they are clear, and that there are",
      "several of them.  Eventually we'll want the listener to start turning",
      "things around, and use the parts of the message they understand (the",
      "mathematical patterns) to learn something about the parts they don't",
      "(the message structure and syntax).",
      "",
      "Let's take a shot at introducing ways of comparing numbers.",
      "No doubt we're revealing a feudal, reductive mindset in which",
      "all things must be ranked in a hierachy.  ¯\\\\\\_(ツ)_/¯.",
      "",
      "Equality is introduced by a series of true statements of the form `X = X` ",
      "(the syntax is a little different than regular math, more like ",
      "`= X X`, but that isn't important yet).  The listener will hopefully",
      "discern a number getting repeated twice within the \"sentence\"",
      "structure they've been seeing, but won't be sure yet what we are",
      "driving at until we introduce non-equality and contrast with it.",
      "",
      ""
    ],
    "section_description": "introduce equality and inequality of numbers",
    "section_category": "MATH",
    "section_index": 1,
    "stanza": 42
  },
  {
    "role": "code",
    "lines": [
      "intro =;"
    ],
    "preprocessed": "intro =;",
    "code": "210010321132233",
    "parse": [
      "intro",
      "="
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 43
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) (unary 1 0);"
    ],
    "preprocessed": "= (unary 1 0) (unary 1 0);",
    "code": "21132211111111321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 44
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 0) (unary 1 1 0);",
    "code": "21132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 45
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 0) (unary 1 1 1 0);",
    "code": "21132211111111321321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 46
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21132211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 47
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 0) (unary 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 0) (unary 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321320332211111111321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 48
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 49
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 50
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321321321320332211111111321321321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 51
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) (unary 1 0);"
    ],
    "preprocessed": "= (unary 1 0) (unary 1 0);",
    "code": "21132211111111321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 52
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 53
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 0) (unary 1 1 0);",
    "code": "21132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 54
  },
  {
    "role": "doc",
    "lines": [
      "Now introduce symbols for 'greater than' and 'less than,' and contrast with equality.",
      "Hopefully the listener will start to understand what part of the sentences are numbers, what part is a function of the relationship between the numbers, and what parts are just meaningless (for now) scaffolding around all that.",
      "There's an ambiguity between the 'greater than' and 'less than' symbols, depending on how you interpret the sentences, but it doesn't matter yet."
    ],
    "stanza": 55
  },
  {
    "role": "code",
    "lines": [
      "intro >;"
    ],
    "preprocessed": "intro >;",
    "code": "2100103210032233",
    "parse": [
      "intro",
      ">"
    ],
    "spider": "&#xF156;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 56
  },
  {
    "role": "code",
    "lines": [
      "intro <;"
    ],
    "preprocessed": "intro <;",
    "code": "210010321032233",
    "parse": [
      "intro",
      "<"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 57
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) (unary 1 0);"
    ],
    "preprocessed": "= (unary 1 0) (unary 1 0);",
    "code": "21132211111111321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 58
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "< (unary 1 0) (unary 1 1 0);",
    "code": "21032211111111321320332211111111321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 59
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 0) (unary 1 1 1 0);",
    "code": "21032211111111321320332211111111321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 60
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 61
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 0) (unary 1 0);",
    "code": "210032211111111321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 62
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 0) (unary 1 1 0);",
    "code": "21132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 63
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 64
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 65
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 1 0);",
    "code": "210032211111111321321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 66
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 67
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 0) (unary 1 1 1 0);",
    "code": "21132211111111321321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 68
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 69
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 0);",
    "code": "210032211111111321321321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 70
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 71
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 1 1 0);",
    "code": "210032211111111321321321321320332211111111321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 72
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21132211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 73
  },
  {
    "role": "doc",
    "lines": [
      "Add some random examples."
    ],
    "stanza": 74
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 1 1 0);",
    "code": "210032211111111321321321321320332211111111321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 75
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 0);",
    "code": "210032211111111321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 76
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 0) (unary 0);",
    "code": "210032211111111321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 77
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 1 1 1 1 0) (unary 0);",
    "code": "210032211111111321321321321321321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 78
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);",
    "code": "210032211111111321321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 79
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 80
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 1 0) (unary 0);",
    "code": "210032211111111321321321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 81
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 1 1 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "210032211111111321321321321321321321321321320332211111111321321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 82
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 1 0) (unary 1 0);",
    "code": "210032211111111321321321321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 83
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 0) (unary 0);",
    "code": "210032211111111321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 84
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 1 0);",
    "code": "210032211111111321321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 85
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 1 1 0);",
    "code": "21032211111111321321321321321321321320332211111111321321321321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 86
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 1 0) (unary 1 1 1 1 1 1 0);",
    "code": "21032211111111321321321320332211111111321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 87
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 88
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 89
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 0);",
    "code": "21032211111111320332211111111321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 90
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21032211111111320332211111111321321321321321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 91
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 1 0);",
    "code": "21032211111111320332211111111321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 92
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 1 1 0);",
    "code": "21032211111111320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 93
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 1 1 0) (unary 1 1 1 1 1 1 0);",
    "code": "21032211111111321321321321320332211111111321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 94
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 0);",
    "code": "21032211111111320332211111111321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 95
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 0) (unary 1 1 1 1 1 1 1 1 0);",
    "code": "21032211111111321320332211111111321321321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 96
  },
  {
    "role": "doc",
    "lines": [
      "Even more random examples.  We shouldn't be shy about piling on examples at this early stage of the message.  Even just the repetition of the sentence structure with many small variations could help guide the listener at a more fundamental level than what we're ostensibly trying to communicate here."
    ],
    "stanza": 97
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21132211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 98
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 99
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "< (unary 1 0) (unary 1 1 0);",
    "code": "21032211111111321320332211111111321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 100
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 101
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 0);",
    "code": "210032211111111321321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 102
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 1 0);",
    "code": "210032211111111321321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 103
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 0);",
    "code": "21032211111111320332211111111321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 104
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 0);",
    "code": "210032211111111321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 105
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 0) (unary 1 0);"
    ],
    "preprocessed": "> (unary 1 1 0) (unary 1 0);",
    "code": "210032211111111321321320332211111111321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 106
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 107
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 108
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 1 0);",
    "code": "210032211111111321321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 109
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 0) (unary 1 1 0);",
    "code": "21132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 110
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 0);",
    "code": "21032211111111320332211111111321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 111
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 0);",
    "code": "210032211111111321321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 112
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 113
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 114
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "> (unary 1 1 1 1 0) (unary 1 1 1 0);",
    "code": "210032211111111321321321321320332211111111321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 115
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 0) (unary 1 1 1 1 0);",
    "code": "21032211111111320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 116
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 117
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary 1 1 0) (unary 1 1 1 1 0);",
    "code": "21032211111111321321320332211111111321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 118
  },
  {
    "role": "file",
    "lines": [
      "== COS_NotLogic =="
    ],
    "stanza": 119
  },
  {
    "role": "doc",
    "lines": [
      "",
      "At this point, the listener can find numbers in our sentences, and has some",
      "idea of symbols related to equality and inequality.  But the structure of the",
      "sentences remains a mystery.  Let's introduce more math, so that we can show",
      "different sentence structures.  First, let's introduce logical negation.",
      "We construct some sentences the listener should know are wrong, and put \"not\"",
      "in front of them.",
      "",
      ""
    ],
    "section_description": "introduce logical negation",
    "section_category": "MATH",
    "section_index": 2,
    "stanza": 120
  },
  {
    "role": "code",
    "lines": [
      "intro not;"
    ],
    "preprocessed": "intro not;",
    "code": "2100103210132233",
    "parse": [
      "intro",
      "not"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 121
  },
  {
    "role": "doc",
    "lines": [
      "Show an equality, then negate two conflicting inequalities."
    ],
    "stanza": 122
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) (unary  0);",
    "code": "21132211111111320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 123
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  0) (unary  0);"
    ],
    "preprocessed": "not | < (unary  0) (unary  0);",
    "code": "2101312321032211111111320332211111111320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 124
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  0) (unary  0);"
    ],
    "preprocessed": "not | > (unary  0) (unary  0);",
    "code": "21013123210032211111111320332211111111320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 125
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) (unary  1 1 1 1 0);",
    "code": "21132211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 126
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 0) (unary  1 1 1 1 0);",
    "code": "2101312321032211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 127
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 1 1 0) (unary  1 1 1 1 0);",
    "code": "21013123210032211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 128
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 129
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);",
    "code": "2101312321032211111111321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 130
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);",
    "code": "21013123210032211111111321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 131
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 0) (unary  1 1 0);",
    "code": "21132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 132
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 0) (unary  1 1 0);",
    "code": "2101312321032211111111321321320332211111111321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 133
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 0) (unary  1 1 0);",
    "code": "21013123210032211111111321321320332211111111321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 134
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) (unary  1 1 1 0);",
    "code": "21132211111111321321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 135
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 0) (unary  1 1 1 0);",
    "code": "2101312321032211111111321321321320332211111111321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 136
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 1 0) (unary  1 1 1 0);",
    "code": "21013123210032211111111321321321320332211111111321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 137
  },
  {
    "role": "doc",
    "lines": [
      "Show an inequality, then two negations."
    ],
    "stanza": 138
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21032211111111321321321320332211111111321321321321321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 139
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);",
    "code": "2101312321132211111111321321321320332211111111321321321321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 140
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21013123210032211111111321321321320332211111111321321321321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 141
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);",
    "code": "21032211111111321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 142
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);",
    "code": "2101312321132211111111321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 143
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);",
    "code": "21013123210032211111111321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 144
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 0) (unary  1 1 0);"
    ],
    "preprocessed": "< (unary  1 0) (unary  1 1 0);",
    "code": "21032211111111321320332211111111321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 145
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 0) (unary  1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 0) (unary  1 1 0);",
    "code": "2101312321132211111111321320332211111111321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 146
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 0) (unary  1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 0) (unary  1 1 0);",
    "code": "21013123210032211111111321320332211111111321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 147
  },
  {
    "role": "code",
    "lines": [
      "< (unary  0) (unary  1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary  0) (unary  1 1 1 1 1 0);",
    "code": "21032211111111320332211111111321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 148
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  0) (unary  1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  0) (unary  1 1 1 1 1 0);",
    "code": "2101312321132211111111320332211111111321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 149
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  0) (unary  1 1 1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  0) (unary  1 1 1 1 1 0);",
    "code": "21013123210032211111111320332211111111321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 150
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "< (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21032211111111321321321321321321321321320332211111111321321321321321321321321321321321321321321320332233",
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 151
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "2101312321132211111111321321321321321321321321320332211111111321321321321321321321321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 152
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | > (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21013123210032211111111321321321321321321321321320332211111111321321321321321321321321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 153
  },
  {
    "role": "doc",
    "lines": [
      "Show another batch of inequalities with negations."
    ],
    "stanza": 154
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "preprocessed": "> (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);",
    "code": "210032211111111321321321321321321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 155
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);",
    "code": "2101312321132211111111321321321321321321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 156
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);",
    "code": "2101312321032211111111321321321321321321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 157
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "> (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);",
    "code": "210032211111111321321321321321321321321321321321321320332211111111321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 158
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);",
    "code": "2101312321132211111111321321321321321321321321321321321321320332211111111321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 159
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);",
    "code": "2101312321032211111111321321321321321321321321321321321321320332211111111321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 160
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "> (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);",
    "code": "210032211111111321321321321321321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 161
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);",
    "code": "2101312321132211111111321321321321321321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 162
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);",
    "code": "2101312321032211111111321321321321321321321321321321320332211111111321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 163
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "> (unary  1 1 1 1 0) (unary  0);",
    "code": "210032211111111321321321321320332211111111320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 164
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 0) (unary  0);",
    "code": "2101312321132211111111321321321321320332211111111320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 165
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 0) (unary  0);",
    "code": "2101312321032211111111321321321321320332211111111320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 166
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "> (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);",
    "code": "210032211111111321321321321321321321321321321321321321321321321320332211111111321321321321321321321321321320332233",
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 167
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);",
    "code": "2101312321132211111111321321321321321321321321321321321321321321321321320332211111111321321321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 168
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);",
    "code": "2101312321032211111111321321321321321321321321321321321321321321321321320332211111111321321321321321321321321321320332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 169
  },
  {
    "role": "file",
    "lines": [
      "== COS_Addition =="
    ],
    "stanza": 170
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Let's introduce some arithmetic, to show off still more sentence structure.",
      "We show sentences of the mathematical form `X = Y + Z`, which in our message look like",
      "`= X | + Y Z`.  From this, and the negation lesson, the listener will hopefully",
      "start picking up on how to chain operations.",
      "",
      "If the listener didn't already have a pretty clear idea of what `=` is,",
      "then these sentences could just as easily be interpreted as being about subtraction.",
      "Even having an idea of `=`, syntax is still fuzzy enough that this lesson may not",
      "be unambiguous by itself.",
      ""
    ],
    "section_description": "introduce addition",
    "section_category": "MATH",
    "section_index": 3,
    "stanza": 171
  },
  {
    "role": "code",
    "lines": [
      "intro +;"
    ],
    "preprocessed": "intro +;",
    "code": "21001032101032233",
    "parse": [
      "intro",
      "+"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 172
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | + (unary  0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 0) | + (unary  0) (unary  1 1 0);",
    "code": "21132211111111321321320331232101032211111111320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 173
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321321321320331232101032211111111321321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 174
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | + (unary  1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  1 1 0) | + (unary  1 1 0) (unary  0);",
    "code": "21132211111111321321320331232101032211111111321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 175
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  0) (unary  1 1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | + (unary  0) (unary  1 1 1 1 0);",
    "code": "21132211111111321321321321320331232101032211111111320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 176
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | + (unary  1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321321320331232101032211111111321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 177
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | + (unary  1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | + (unary  1 0) (unary  1 1 0);",
    "code": "21132211111111321321321320331232101032211111111321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 178
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | + (unary  0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | + (unary  0) (unary  0);",
    "code": "21132211111111320331232101032211111111320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 179
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  0);",
    "code": "21132211111111321321321321320331232101032211111111321321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 180
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | + (unary  1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | + (unary  1 1 0) (unary  1 0);",
    "code": "21132211111111321321321320331232101032211111111321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 181
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  0);",
    "code": "21132211111111321321321321320331232101032211111111321321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 182
  },
  {
    "role": "file",
    "lines": [
      "== COS_Subtraction =="
    ],
    "stanza": 183
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Introduce subtraction via `= X | - Y Z` sentences.  Until syntax is fully understood,",
      "an ambiguity may remain between this and addition.",
      ""
    ],
    "section_description": "introduce subtraction",
    "section_category": "MATH",
    "section_index": 4,
    "stanza": 184
  },
  {
    "role": "code",
    "lines": [
      "intro -;"
    ],
    "preprocessed": "intro -;",
    "code": "21001032101132233",
    "parse": [
      "intro",
      "-"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 185
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | - (unary  1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  0) | - (unary  1 1 0) (unary  1 1 0);",
    "code": "21132211111111320331232101132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 186
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321321320331232101132211111111321321321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 187
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | - (unary  1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  1 1 0) | - (unary  1 1 0) (unary  0);",
    "code": "21132211111111321321320331232101132211111111321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 188
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | - (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "preprocessed": "= (unary  0) | - (unary  1 1 1 1 0) (unary  1 1 1 1 0);",
    "code": "21132211111111320331232101132211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 189
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | - (unary  1 1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | - (unary  1 1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321320331232101132211111111321321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 190
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 0) | - (unary  1 1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 0) | - (unary  1 1 1 0) (unary  1 1 0);",
    "code": "21132211111111321320331232101132211111111321321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 191
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | - (unary  0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | - (unary  0) (unary  0);",
    "code": "21132211111111320331232101132211111111320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 192
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 0) (unary  0);",
    "code": "21132211111111321321321321320331232101132211111111321321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 193
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | - (unary  1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 0) | - (unary  1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321320331232101132211111111321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 194
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 0) (unary  0);",
    "code": "21132211111111321321321321320331232101132211111111321321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 195
  },
  {
    "role": "file",
    "lines": [
      "== COS_Multiplication =="
    ],
    "stanza": 196
  },
  {
    "role": "doc",
    "lines": [
      "",
      "While we're at it, let's introduce multiplication with `= X | * Y Z` sentences.",
      "As for addition and subtraction, there will be some ambiguity as to whether we are",
      "presenting multiplication or division here, until syntax is clearly understood.",
      ""
    ],
    "section_description": "introduce multiplication",
    "section_category": "MATH",
    "section_index": 5,
    "stanza": 197
  },
  {
    "role": "code",
    "lines": [
      "intro *;"
    ],
    "preprocessed": "intro *;",
    "code": "21001032100132233",
    "parse": [
      "intro",
      "*"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 198
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  0);",
    "code": "21132211111111320331232100132211111111320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 199
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 200
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  1 1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 201
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 1 1 0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  1 1 1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 202
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 203
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 0) | * (unary  1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 0) | * (unary  1 0) (unary  1 0);",
    "code": "21132211111111321320331232100132211111111321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 204
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | * (unary  1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 0) | * (unary  1 0) (unary  1 1 0);",
    "code": "21132211111111321321320331232100132211111111321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 205
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 0) (unary  1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | * (unary  1 0) (unary  1 1 1 0);",
    "code": "21132211111111321321321320331232100132211111111321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 206
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 207
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | * (unary  1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 0) | * (unary  1 1 0) (unary  1 0);",
    "code": "21132211111111321321320331232100132211111111321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 208
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | * (unary  1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 0) | * (unary  1 1 0) (unary  1 1 0);",
    "code": "21132211111111321321321321320331232100132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 209
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 0) | * (unary  1 1 0) (unary  1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 1 1 0) | * (unary  1 1 0) (unary  1 1 1 0);",
    "code": "21132211111111321321321321321321320331232100132211111111321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 210
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 1 1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 211
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321320331232100132211111111321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 212
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 0) | * (unary  1 1 1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 1 1 0) | * (unary  1 1 1 0) (unary  1 1 0);",
    "code": "21132211111111321321321321321321320331232100132211111111321321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 213
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 1 1 1 0) | * (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 1 1 1 1 1 1 0) | * (unary  1 1 1 0) (unary  1 1 1 0);",
    "code": "21132211111111321321321321321321321321321320331232100132211111111321321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 214
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 215
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321320331232100132211111111321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 216
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 217
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 1 1 0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  1 1 1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 218
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);"
    ],
    "preprocessed": "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);",
    "code": "21132211111111321321321320331232100132211111111321321321320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 219
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | * (unary  1 0) (unary  1 1 0);"
    ],
    "preprocessed": "= (unary  1 1 0) | * (unary  1 0) (unary  1 1 0);",
    "code": "21132211111111321321320331232100132211111111321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 220
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  0) (unary  0);",
    "code": "21132211111111320331232100132211111111320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 221
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 1 1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 222
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 223
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 1 0) (unary  0);"
    ],
    "preprocessed": "= (unary  0) | * (unary  1 1 1 0) (unary  0);",
    "code": "21132211111111320331232100132211111111321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 224
  },
  {
    "role": "file",
    "lines": [
      "== COS_Binary =="
    ],
    "stanza": 225
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Switch from unary numbers to another representation.  The best representation",
      "will depend on the details of how the message is being transmitted, and the",
      "rest of the message doesn't depend on that choice for correctness (though the",
      "choice will have implications for how easy the message will be to interpret).",
      "As a base-line, imagine we use a binary representation.",
      "",
      "It isn't important for the listener to understand, but it might be worth explaining",
      "at this point how the unary representation worked.  In fact there's no special",
      "syntax used, just three objects:",
      "",
      " * The number `0`.",
      " * The number `1`.",
      " * A function (called `unary` in English) that takes a value and:",
      "   - If passed `0`, the function returns `0`",
      "   - If passed `1`, the function returns another function, just like itself,",
      "     except with any ultimate return value increased by `1`.",
      "",
      "Using syntax defined later in the message, `unary` could be defined as:",
      "",
      "```",
      "@ unary-v | ? v | ? x | if (= $x 0) $v (unary-v | + $v 1)",
      "@ unary | unary-v 0",
      "```",
      "",
      "If you know Lisp/Scheme/etc, just read `@` as `define`, `?` as",
      "`lambda`, and `|` as opening a parenthesis that gets closed at the end",
      "of the statement.",
      "",
      "Anyway, all of this is a digression, but it is worth knowing that as much as possible",
      "the message is built from itself, so that in the end everything dovetails nicely.",
      "",
      ""
    ],
    "section_description": "introduce non-unary representation of numbers",
    "section_category": "MATH",
    "section_index": 6,
    "stanza": 226
  },
  {
    "role": "code",
    "lines": [
      "= 0 (unary 0);"
    ],
    "preprocessed": "= 0 (unary 0);",
    "code": "21132032211111111320332233",
    "parse": [
      "=",
      "0",
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 227
  },
  {
    "role": "code",
    "lines": [
      "= 1 (unary 1 0);"
    ],
    "preprocessed": "= 1 (unary 1 0);",
    "code": "21132132211111111321320332233",
    "parse": [
      "=",
      "1",
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 228
  },
  {
    "role": "code",
    "lines": [
      "= 2 (unary 1 1 0);"
    ],
    "preprocessed": "= 2 (unary 1 1 0);",
    "code": "211321032211111111321321320332233",
    "parse": [
      "=",
      "2",
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 229
  },
  {
    "role": "code",
    "lines": [
      "= 3 (unary 1 1 1 0);"
    ],
    "preprocessed": "= 3 (unary 1 1 1 0);",
    "code": "211321132211111111321321321320332233",
    "parse": [
      "=",
      "3",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 230
  },
  {
    "role": "code",
    "lines": [
      "= 4 (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= 4 (unary 1 1 1 1 0);",
    "code": "2113210032211111111321321321321320332233",
    "parse": [
      "=",
      "4",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 231
  },
  {
    "role": "code",
    "lines": [
      "= 5 (unary 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 5 (unary 1 1 1 1 1 0);",
    "code": "2113210132211111111321321321321321320332233",
    "parse": [
      "=",
      "5",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 232
  },
  {
    "role": "code",
    "lines": [
      "= 6 (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 6 (unary 1 1 1 1 1 1 0);",
    "code": "2113211032211111111321321321321321321320332233",
    "parse": [
      "=",
      "6",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 233
  },
  {
    "role": "code",
    "lines": [
      "= 7 (unary 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 7 (unary 1 1 1 1 1 1 1 0);",
    "code": "2113211132211111111321321321321321321321320332233",
    "parse": [
      "=",
      "7",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 234
  },
  {
    "role": "code",
    "lines": [
      "= 8 (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 8 (unary 1 1 1 1 1 1 1 1 0);",
    "code": "21132100032211111111321321321321321321321321320332233",
    "parse": [
      "=",
      "8",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 235
  },
  {
    "role": "code",
    "lines": [
      "= 9 (unary 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 9 (unary 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132100132211111111321321321321321321321321321320332233",
    "parse": [
      "=",
      "9",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 236
  },
  {
    "role": "code",
    "lines": [
      "= 10 (unary 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 10 (unary 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132101032211111111321321321321321321321321321321320332233",
    "parse": [
      "=",
      "10",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 237
  },
  {
    "role": "code",
    "lines": [
      "= 11 (unary 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 11 (unary 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132101132211111111321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "11",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 238
  },
  {
    "role": "code",
    "lines": [
      "= 12 (unary 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 12 (unary 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132110032211111111321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "12",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF150;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 239
  },
  {
    "role": "code",
    "lines": [
      "= 13 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 13 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132110132211111111321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "13",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF151;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 240
  },
  {
    "role": "code",
    "lines": [
      "= 14 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 14 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132111032211111111321321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "14",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF152;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 241
  },
  {
    "role": "code",
    "lines": [
      "= 15 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 15 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132111132211111111321321321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "15",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 242
  },
  {
    "role": "code",
    "lines": [
      "= 1 (unary 1 0);"
    ],
    "preprocessed": "= 1 (unary 1 0);",
    "code": "21132132211111111321320332233",
    "parse": [
      "=",
      "1",
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 243
  },
  {
    "role": "code",
    "lines": [
      "= 2 (unary 1 1 0);"
    ],
    "preprocessed": "= 2 (unary 1 1 0);",
    "code": "211321032211111111321321320332233",
    "parse": [
      "=",
      "2",
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 244
  },
  {
    "role": "code",
    "lines": [
      "= 4 (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= 4 (unary 1 1 1 1 0);",
    "code": "2113210032211111111321321321321320332233",
    "parse": [
      "=",
      "4",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 245
  },
  {
    "role": "code",
    "lines": [
      "= 8 (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 8 (unary 1 1 1 1 1 1 1 1 0);",
    "code": "21132100032211111111321321321321321321321321320332233",
    "parse": [
      "=",
      "8",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 246
  },
  {
    "role": "code",
    "lines": [
      "= 16 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 16 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "211321000032211111111321321321321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "16",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 247
  },
  {
    "role": "code",
    "lines": [
      "= 5 (unary 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 5 (unary 1 1 1 1 1 0);",
    "code": "2113210132211111111321321321321321320332233",
    "parse": [
      "=",
      "5",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 248
  },
  {
    "role": "code",
    "lines": [
      "= 14 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 14 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132111032211111111321321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "14",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF152;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 249
  },
  {
    "role": "code",
    "lines": [
      "= 2 (unary 1 1 0);"
    ],
    "preprocessed": "= 2 (unary 1 1 0);",
    "code": "211321032211111111321321320332233",
    "parse": [
      "=",
      "2",
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 250
  },
  {
    "role": "code",
    "lines": [
      "= 3 (unary 1 1 1 0);"
    ],
    "preprocessed": "= 3 (unary 1 1 1 0);",
    "code": "211321132211111111321321321320332233",
    "parse": [
      "=",
      "3",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 251
  },
  {
    "role": "code",
    "lines": [
      "= 0 (unary 0);"
    ],
    "preprocessed": "= 0 (unary 0);",
    "code": "21132032211111111320332233",
    "parse": [
      "=",
      "0",
      [
        "unary",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 252
  },
  {
    "role": "code",
    "lines": [
      "= 13 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 13 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132110132211111111321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "13",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF151;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 253
  },
  {
    "role": "code",
    "lines": [
      "= 11 (unary 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 11 (unary 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132101132211111111321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "11",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 254
  },
  {
    "role": "code",
    "lines": [
      "= 1 (unary 1 0);"
    ],
    "preprocessed": "= 1 (unary 1 0);",
    "code": "21132132211111111321320332233",
    "parse": [
      "=",
      "1",
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 255
  },
  {
    "role": "code",
    "lines": [
      "= 9 (unary 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 9 (unary 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132100132211111111321321321321321321321321321320332233",
    "parse": [
      "=",
      "9",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 256
  },
  {
    "role": "code",
    "lines": [
      "= 15 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 15 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132111132211111111321321321321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "15",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 257
  },
  {
    "role": "code",
    "lines": [
      "= 8 (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 8 (unary 1 1 1 1 1 1 1 1 0);",
    "code": "21132100032211111111321321321321321321321321320332233",
    "parse": [
      "=",
      "8",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 258
  },
  {
    "role": "code",
    "lines": [
      "= 7 (unary 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 7 (unary 1 1 1 1 1 1 1 0);",
    "code": "2113211132211111111321321321321321321321320332233",
    "parse": [
      "=",
      "7",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 259
  },
  {
    "role": "code",
    "lines": [
      "= 6 (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 6 (unary 1 1 1 1 1 1 0);",
    "code": "2113211032211111111321321321321321321320332233",
    "parse": [
      "=",
      "6",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 260
  },
  {
    "role": "code",
    "lines": [
      "= 4 (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= 4 (unary 1 1 1 1 0);",
    "code": "2113210032211111111321321321321320332233",
    "parse": [
      "=",
      "4",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 261
  },
  {
    "role": "code",
    "lines": [
      "= 12 (unary 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 12 (unary 1 1 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132110032211111111321321321321321321321321321321321321320332233",
    "parse": [
      "=",
      "12",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF150;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 262
  },
  {
    "role": "code",
    "lines": [
      "= 10 (unary 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= 10 (unary 1 1 1 1 1 1 1 1 1 1 0);",
    "code": "21132101032211111111321321321321321321321321321321320332233",
    "parse": [
      "=",
      "10",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 263
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 0);",
    "code": "21132211111111321321321321321321321321321320331232101032211111111321321321321321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 264
  },
  {
    "role": "code",
    "lines": [
      "= 9 | + 6 3;"
    ],
    "preprocessed": "= 9 | + 6 3;",
    "code": "21132100131232101032110321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        "+",
        "6",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 265
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) | + (unary 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 0) | + (unary 0) (unary 1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321320331232101032211111111320332211111111321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 266
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 0 6;"
    ],
    "preprocessed": "= 6 | + 0 6;",
    "code": "211321103123210103203211032233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "0",
        "6"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF14E;&#xF24A;&#xF144;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 267
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21132211111111321321321321321321321321321321320331232101032211111111321321321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 268
  },
  {
    "role": "code",
    "lines": [
      "= 10 | + 6 4;"
    ],
    "preprocessed": "= 10 | + 6 4;",
    "code": "211321010312321010321103210032233",
    "parse": [
      "=",
      "10",
      [
        -1,
        "+",
        "6",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14E;&#xF248;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 269
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 0) | + (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 0) | + (unary 1 1 1 0) (unary 1 1 0);",
    "code": "21132211111111321321321321321320331232101032211111111321321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 270
  },
  {
    "role": "code",
    "lines": [
      "= 5 | + 3 2;"
    ],
    "preprocessed": "= 5 | + 3 2;",
    "code": "211321013123210103211321032233",
    "parse": [
      "=",
      "5",
      [
        -1,
        "+",
        "3",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF14E;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 271
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) | + (unary 1 0) (unary 0);"
    ],
    "preprocessed": "= (unary 1 0) | + (unary 1 0) (unary 0);",
    "code": "21132211111111321320331232101032211111111321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 272
  },
  {
    "role": "code",
    "lines": [
      "= 1 | + 1 0;"
    ],
    "preprocessed": "= 1 | + 1 0;",
    "code": "21132131232101032132032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "+",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 273
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) | + (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 0) | + (unary 1 1 0) (unary 1 1 1 1 0);",
    "code": "21132211111111321321321321321321320331232101032211111111321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 274
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 2 4;"
    ],
    "preprocessed": "= 6 | + 2 4;",
    "code": "2113211031232101032103210032233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "2",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 275
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);",
    "code": "21132211111111321321321321321321321321321321321321320331232101032211111111321321321321321321320332211111111321321321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 276
  },
  {
    "role": "code",
    "lines": [
      "= 12 | + 6 6;"
    ],
    "preprocessed": "= 12 | + 6 6;",
    "code": "211321100312321010321103211032233",
    "parse": [
      "=",
      "12",
      [
        -1,
        "+",
        "6",
        "6"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF150;&#xF248;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 277
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 0) (unary 1 1 1 1 0);",
    "code": "21132211111111321321321321321321321321320331232101032211111111321321321321320332211111111321321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 278
  },
  {
    "role": "code",
    "lines": [
      "= 8 | + 4 4;"
    ],
    "preprocessed": "= 8 | + 4 4;",
    "code": "211321000312321010321003210032233",
    "parse": [
      "=",
      "8",
      [
        -1,
        "+",
        "4",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 279
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 0) | * (unary 0) (unary 1 1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 280
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 0 2;"
    ],
    "preprocessed": "= 0 | * 0 2;",
    "code": "211320312321001320321032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "0",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 281
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) | * (unary 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 0) | * (unary 1 0) (unary 1 1 0);",
    "code": "21132211111111321321320331232100132211111111321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 282
  },
  {
    "role": "code",
    "lines": [
      "= 2 | * 1 2;"
    ],
    "preprocessed": "= 2 | * 1 2;",
    "code": "2113210312321001321321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "*",
        "1",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 283
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 0) (unary 1 0);"
    ],
    "preprocessed": "= (unary 0) | * (unary 0) (unary 1 0);",
    "code": "21132211111111320331232100132211111111320332211111111321320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 284
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 0 1;"
    ],
    "preprocessed": "= 0 | * 0 1;",
    "code": "21132031232100132032132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 285
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 1 1 1 0) (unary 0);"
    ],
    "preprocessed": "= (unary 0) | * (unary 1 1 1 0) (unary 0);",
    "code": "21132211111111320331232100132211111111321321321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 286
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 3 0;"
    ],
    "preprocessed": "= 0 | * 3 0;",
    "code": "211320312321001321132032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "3",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14D;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 287
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 0) (unary 0);"
    ],
    "preprocessed": "= (unary 0) | * (unary 0) (unary 0);",
    "code": "21132211111111320331232100132211111111320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 288
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 0 0;"
    ],
    "preprocessed": "= 0 | * 0 0;",
    "code": "21132031232100132032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 289
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 1 0) (unary 0);"
    ],
    "preprocessed": "= (unary 0) | * (unary 1 0) (unary 0);",
    "code": "21132211111111320331232100132211111111321320332211111111320332233",
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 290
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 1 0;"
    ],
    "preprocessed": "= 0 | * 1 0;",
    "code": "21132031232100132132032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 291
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) | * (unary 1 1 0) (unary 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 0) | * (unary 1 1 0) (unary 1 1 0);",
    "code": "21132211111111321321321321320331232100132211111111321321320332211111111321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 292
  },
  {
    "role": "code",
    "lines": [
      "= 4 | * 2 2;"
    ],
    "preprocessed": "= 4 | * 2 2;",
    "code": "211321003123210013210321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "*",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 293
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 0) | * (unary 1 1 1 0) (unary 1 1 1 0);"
    ],
    "preprocessed": "= (unary 1 1 1 1 1 1 1 1 1 0) | * (unary 1 1 1 0) (unary 1 1 1 0);",
    "code": "21132211111111321321321321321321321321321320331232100132211111111321321321320332211111111321321321320332233",
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 294
  },
  {
    "role": "code",
    "lines": [
      "= 9 | * 3 3;"
    ],
    "preprocessed": "= 9 | * 3 3;",
    "code": "2113210013123210013211321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        "*",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF14D;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 295
  },
  {
    "role": "file",
    "lines": [
      "== COS_Evaluation =="
    ],
    "stanza": 296
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We've advanced enough that we're starting to have choices about how",
      "something is expressed.  Let's pause to acknowledge that, and",
      "reinforce some syntactic equivalences so the listener can be confident",
      "of them.",
      "",
      "Parentheses play a role in grouping expressions, just like in regular",
      "math.  To reduce the mental burden of tracking nesting, we use a `|` shortcut",
      "that means \"add parentheses between this point and as far as you can go.\"  So for",
      "example `(= 7 | + 3 4)` is equivalent to `(= 7 (+ 3 4))`.",
      ""
    ],
    "section_description": "show alternative groupings",
    "section_category": "MATH",
    "section_index": 7,
    "stanza": 297
  },
  {
    "role": "code",
    "lines": [
      "= 6 6;"
    ],
    "preprocessed": "= 6 6;",
    "code": "211321103211032233",
    "parse": [
      "=",
      "6",
      "6"
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 298
  },
  {
    "role": "code",
    "lines": [
      "= 6 (+ 1 5);"
    ],
    "preprocessed": "= 6 (+ 1 5);",
    "code": "21132110322101032132101332233",
    "parse": [
      "=",
      "6",
      [
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 299
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 1 5;"
    ],
    "preprocessed": "= 6 | + 1 5;",
    "code": "211321103123210103213210132233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 300
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 1 (+ 4 1);"
    ],
    "preprocessed": "= 6 | + 1 (+ 4 1);",
    "code": "21132110312321010321322101032100321332233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "1",
        [
          "+",
          "4",
          "1"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF246;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 301
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 1 | + 4 1;"
    ],
    "preprocessed": "= 6 | + 1 | + 4 1;",
    "code": "211321103123210103213123210103210032132233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "1",
        [
          -1,
          "+",
          "4",
          "1"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 302
  },
  {
    "role": "code",
    "lines": [
      "= 6 (+ 1 5);"
    ],
    "preprocessed": "= 6 (+ 1 5);",
    "code": "21132110322101032132101332233",
    "parse": [
      "=",
      "6",
      [
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 303
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 3) (+ 1 5);"
    ],
    "preprocessed": "= (+ 3 3) (+ 1 5);",
    "code": "2113221010321132113322101032132101332233",
    "parse": [
      "=",
      [
        "+",
        "3",
        "3"
      ],
      [
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 304
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 (- 5 2)) (+ 1 5);"
    ],
    "preprocessed": "= (+ 3 (- 5 2)) (+ 1 5);",
    "code": "21132210103211322101132101321033322101032132101332233",
    "parse": [
      "=",
      [
        "+",
        "3",
        [
          "-",
          "5",
          "2"
        ]
      ],
      [
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF246;&#xF14F;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF245;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 305
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 | - 5 2) (+ 1 5);"
    ],
    "preprocessed": "= (+ 3 | - 5 2) (+ 1 5);",
    "code": "211322101032113123210113210132103322101032132101332233",
    "parse": [
      "=",
      [
        "+",
        "3",
        [
          -1,
          "-",
          "5",
          "2"
        ]
      ],
      [
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF248;&#xF14F;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 306
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 | - 5 2) | + 1 5;"
    ],
    "preprocessed": "= (+ 3 | - 5 2) | + 1 5;",
    "code": "2113221010321131232101132101321033123210103213210132233",
    "parse": [
      "=",
      [
        "+",
        "3",
        [
          -1,
          "-",
          "5",
          "2"
        ]
      ],
      [
        -1,
        "+",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF248;&#xF14F;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 307
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "show local assignment",
    "section_category": "MATH",
    "section_index": 8,
    "stanza": 308
  },
  {
    "role": "doc",
    "lines": [
      "An expression starting with `assign` is a way to name values for use within that expression. To use the assigned value, simply place its name at the beginning of an expression.  For example, a value assigned to `x` can be used by writing `(x)`. The name is entirely arbitrary, and can be just an integer."
    ],
    "stanza": 309
  },
  {
    "role": "code",
    "lines": [
      "intro assign;"
    ],
    "preprocessed": "intro assign;",
    "code": "21001032111032233",
    "parse": [
      "intro",
      "assign"
    ],
    "spider": "&#xF156;&#xF24A;&#xF152;&#xF24B;",
    "dt": false,
    "stanza": 310
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | = (x) 1;"
    ],
    "preprocessed": "assign x 1 | = (x) 1;",
    "code": "21110321010013213123211322101001332132233",
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "=",
        [
          "x"
        ],
        "1"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 311
  },
  {
    "role": "code",
    "lines": [
      "assign x 2 | = (x) 2;"
    ],
    "preprocessed": "assign x 2 | = (x) 2;",
    "code": "2111032101001321031232113221010013321032233",
    "parse": [
      "assign",
      "x",
      "2",
      [
        -1,
        "=",
        [
          "x"
        ],
        "2"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF146;&#xF248;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 312
  },
  {
    "role": "code",
    "lines": [
      "assign x 3 | = (x) 3;"
    ],
    "preprocessed": "assign x 3 | = (x) 3;",
    "code": "2111032101001321131232113221010013321132233",
    "parse": [
      "assign",
      "x",
      "3",
      [
        -1,
        "=",
        [
          "x"
        ],
        "3"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 313
  },
  {
    "role": "code",
    "lines": [
      "assign y 1 | = (y) 1;"
    ],
    "preprocessed": "assign y 1 | = (y) 1;",
    "code": "21110321111013213123211322111101332132233",
    "parse": [
      "assign",
      "y",
      "1",
      [
        -1,
        "=",
        [
          "y"
        ],
        "1"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF246;&#xF181;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 314
  },
  {
    "role": "code",
    "lines": [
      "assign y 2 | = (y) 2;"
    ],
    "preprocessed": "assign y 2 | = (y) 2;",
    "code": "2111032111101321031232113221111013321032233",
    "parse": [
      "assign",
      "y",
      "2",
      [
        -1,
        "=",
        [
          "y"
        ],
        "2"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF146;&#xF248;&#xF147;&#xF246;&#xF181;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 315
  },
  {
    "role": "code",
    "lines": [
      "assign y 3 | = (y) 3;"
    ],
    "preprocessed": "assign y 3 | = (y) 3;",
    "code": "2111032111101321131232113221111013321132233",
    "parse": [
      "assign",
      "y",
      "3",
      [
        -1,
        "=",
        [
          "y"
        ],
        "3"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF246;&#xF181;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 316
  },
  {
    "role": "code",
    "lines": [
      "assign x 3 | = 9 (* (x) (x));"
    ],
    "preprocessed": "assign x 3 | = 9 (* (x) (x));",
    "code": "211103210100132113123211321001322100132210100133221010013332233",
    "parse": [
      "assign",
      "x",
      "3",
      [
        -1,
        "=",
        "9",
        [
          "*",
          [
            "x"
          ],
          [
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF24A;&#xF14D;&#xF246;&#xF14D;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 317
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 (* (x) (x));"
    ],
    "preprocessed": "assign x 4 | = 16 (* (x) (x));",
    "code": "21110321010013210031232113210000322100132210100133221010013332233",
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            "x"
          ],
          [
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF148;&#xF248;&#xF147;&#xF24A;&#xF154;&#xF246;&#xF14D;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 318
  },
  {
    "role": "code",
    "lines": [
      "assign z 3 | = 9 (* (z) (z));"
    ],
    "preprocessed": "assign z 3 | = 9 (* (z) (z));",
    "code": "211103211111032113123211321001322100132211111033221111103332233",
    "parse": [
      "assign",
      "z",
      "3",
      [
        -1,
        "=",
        "9",
        [
          "*",
          [
            "z"
          ],
          [
            "z"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF182;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF24A;&#xF14D;&#xF246;&#xF14D;&#xF246;&#xF182;&#xF245;&#xF246;&#xF182;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 319
  },
  {
    "role": "code",
    "lines": [
      "assign z 4 | = 16 (* (z) (z));"
    ],
    "preprocessed": "assign z 4 | = 16 (* (z) (z));",
    "code": "21110321111103210031232113210000322100132211111033221111103332233",
    "parse": [
      "assign",
      "z",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            "z"
          ],
          [
            "z"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF182;&#xF24A;&#xF148;&#xF248;&#xF147;&#xF24A;&#xF154;&#xF246;&#xF14D;&#xF246;&#xF182;&#xF245;&#xF246;&#xF182;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 320
  },
  {
    "role": "code",
    "lines": [
      "assign x (+) | = 7 (x 4 3);"
    ],
    "preprocessed": "assign x (+) | = 7 (x 4 3);",
    "code": "211103210100132210103312321132111322101001321003211332233",
    "parse": [
      "assign",
      "x",
      [
        "+"
      ],
      [
        -1,
        "=",
        "7",
        [
          "x",
          "4",
          "3"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF14E;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14B;&#xF246;&#xF16D;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 321
  },
  {
    "role": "code",
    "lines": [
      "assign y (+) | = 12 (y 6 6);"
    ],
    "preprocessed": "assign y (+) | = 12 (y 6 6);",
    "code": "21110321111013221010331232113211003221111013211032110332233",
    "parse": [
      "assign",
      "y",
      [
        "+"
      ],
      [
        -1,
        "=",
        "12",
        [
          "y",
          "6",
          "6"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF181;&#xF246;&#xF14E;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF150;&#xF246;&#xF181;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 322
  },
  {
    "role": "code",
    "lines": [
      "assign z (+) | = 9 (z 7 2);"
    ],
    "preprocessed": "assign z (+) | = 9 (z 7 2);",
    "code": "2111032111110322101033123211321001322111110321113210332233",
    "parse": [
      "assign",
      "z",
      [
        "+"
      ],
      [
        -1,
        "=",
        "9",
        [
          "z",
          "7",
          "2"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF182;&#xF246;&#xF14E;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14D;&#xF246;&#xF182;&#xF24A;&#xF14B;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 323
  },
  {
    "role": "code",
    "lines": [
      "assign a (-) | = 1 (a 4 3);"
    ],
    "preprocessed": "assign a (-) | = 1 (a 4 3);",
    "code": "2111032111111322101133123211321322111111321003211332233",
    "parse": [
      "assign",
      "a",
      [
        "-"
      ],
      [
        -1,
        "=",
        "1",
        [
          "a",
          "4",
          "3"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF183;&#xF246;&#xF14F;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF145;&#xF246;&#xF183;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 324
  },
  {
    "role": "code",
    "lines": [
      "assign b (-) | = 0 (b 6 6);"
    ],
    "preprocessed": "assign b (-) | = 0 (b 6 6);",
    "code": "2111032100000032210113312321132032210000003211032110332233",
    "parse": [
      "assign",
      "b",
      [
        "-"
      ],
      [
        -1,
        "=",
        "0",
        [
          "b",
          "6",
          "6"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF145;&#xF144;&#xF246;&#xF14F;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF246;&#xF145;&#xF144;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 325
  },
  {
    "role": "code",
    "lines": [
      "assign c (-) | = 5 (c 7 2);"
    ],
    "preprocessed": "assign c (-) | = 5 (c 7 2);",
    "code": "21110321000001322101133123211321013221000001321113210332233",
    "parse": [
      "assign",
      "c",
      [
        "-"
      ],
      [
        -1,
        "=",
        "5",
        [
          "c",
          "7",
          "2"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF145;&#xF145;&#xF246;&#xF14F;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF149;&#xF246;&#xF145;&#xF145;&#xF24A;&#xF14B;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 326
  },
  {
    "role": "code",
    "lines": [
      "assign z (*) | = 12 (z 4 3);"
    ],
    "preprocessed": "assign z (*) | = 12 (z 4 3);",
    "code": "2111032111110322100133123211321100322111110321003211332233",
    "parse": [
      "assign",
      "z",
      [
        "*"
      ],
      [
        -1,
        "=",
        "12",
        [
          "z",
          "4",
          "3"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF182;&#xF246;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF150;&#xF246;&#xF182;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 327
  },
  {
    "role": "code",
    "lines": [
      "assign y (*) | = 36 (y 6 6);"
    ],
    "preprocessed": "assign y (*) | = 36 (y 6 6);",
    "code": "2111032111101322100133123211321001003221111013211032110332233",
    "parse": [
      "assign",
      "y",
      [
        "*"
      ],
      [
        -1,
        "=",
        "36",
        [
          "y",
          "6",
          "6"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF181;&#xF246;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF168;&#xF246;&#xF181;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 328
  },
  {
    "role": "code",
    "lines": [
      "assign x (*) | = 14 (x 7 2);"
    ],
    "preprocessed": "assign x (*) | = 14 (x 7 2);",
    "code": "2111032101001322100133123211321110322101001321113210332233",
    "parse": [
      "assign",
      "x",
      [
        "*"
      ],
      [
        -1,
        "=",
        "14",
        [
          "x",
          "7",
          "2"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF152;&#xF246;&#xF16D;&#xF24A;&#xF14B;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 329
  },
  {
    "role": "code",
    "lines": [
      "assign x (=) | x 4 4;"
    ],
    "preprocessed": "assign x (=) | x 4 4;",
    "code": "211103210100132211331232101001321003210032233",
    "parse": [
      "assign",
      "x",
      [
        "="
      ],
      [
        -1,
        "x",
        "4",
        "4"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF147;&#xF245;&#xF248;&#xF16D;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 330
  },
  {
    "role": "code",
    "lines": [
      "assign x (=) | x 4 (+ 2 2);"
    ],
    "preprocessed": "assign x (=) | x 4 (+ 2 2);",
    "code": "21110321010013221133123210100132100322101032103210332233",
    "parse": [
      "assign",
      "x",
      [
        "="
      ],
      [
        -1,
        "x",
        "4",
        [
          "+",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF147;&#xF245;&#xF248;&#xF16D;&#xF24A;&#xF148;&#xF246;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 331
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | assign y 2 | = 3 (+ (x) (y));"
    ],
    "preprocessed": "assign x 1 | assign y 2 | = 3 (+ (x) (y));",
    "code": "211103210100132131232111032111101321031232113211322101032210100133221111013332233",
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "assign",
        "y",
        "2",
        [
          -1,
          "=",
          "3",
          [
            "+",
            [
              "x"
            ],
            [
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF248;&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF146;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF246;&#xF14E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF181;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 332
  },
  {
    "role": "code",
    "lines": [
      "assign x 2 | assign y 7 | = 5 (- (y) (x));"
    ],
    "preprocessed": "assign x 2 | assign y 7 | = 5 (- (y) (x));",
    "code": "211103210100132103123211103211110132111312321132101322101132211110133221010013332233",
    "parse": [
      "assign",
      "x",
      "2",
      [
        -1,
        "assign",
        "y",
        "7",
        [
          -1,
          "=",
          "5",
          [
            "-",
            [
              "y"
            ],
            [
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF146;&#xF248;&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF14B;&#xF248;&#xF147;&#xF24A;&#xF149;&#xF246;&#xF14F;&#xF246;&#xF181;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 333
  },
  {
    "role": "code",
    "lines": [
      "assign x (+) | assign y 3 | = 4 (x 1 (y));"
    ],
    "preprocessed": "assign x (+) | assign y 3 | = 4 (x 1 (y));",
    "code": "2111032101001322101033123211103211110132113123211321003221010013213221111013332233",
    "parse": [
      "assign",
      "x",
      [
        "+"
      ],
      [
        -1,
        "assign",
        "y",
        "3",
        [
          -1,
          "=",
          "4",
          [
            "x",
            "1",
            [
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF14E;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF246;&#xF16D;&#xF24A;&#xF145;&#xF246;&#xF181;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 334
  },
  {
    "role": "doc",
    "lines": [
      "We are pretty ruthless about adding syntax to reduce parentheses.  So let's allow writing `(x)` as `$x` (or equivalent in other renderings).  This and `|` are in fact global options for the message that you can turn off if they are not to your taste."
    ],
    "stanza": 335
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | = (x) 1;"
    ],
    "preprocessed": "assign x 1 | = (x) 1;",
    "code": "21110321010013213123211322101001332132233",
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "=",
        [
          "x"
        ],
        "1"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 336
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | = $x 1;"
    ],
    "preprocessed": "assign x 1 | = $x 1;",
    "code": "211103210100132131232113023210100132132233",
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "=",
        [
          -2,
          "x"
        ],
        "1"
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 337
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 (* (x) (x));"
    ],
    "preprocessed": "assign x 4 | = 16 (* (x) (x));",
    "code": "21110321010013210031232113210000322100132210100133221010013332233",
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            "x"
          ],
          [
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF148;&#xF248;&#xF147;&#xF24A;&#xF154;&#xF246;&#xF14D;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 338
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 (* $x $x);"
    ],
    "preprocessed": "assign x 4 | = 16 (* $x $x);",
    "code": "2111032101001321003123211321000032210013023210100130232101001332233",
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            -2,
            "x"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF148;&#xF248;&#xF147;&#xF24A;&#xF154;&#xF246;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 339
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 | * $x $x;"
    ],
    "preprocessed": "assign x 4 | = 16 | * $x $x;",
    "code": "21110321010013210031232113210000312321001302321010013023210100132233",
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          -1,
          "*",
          [
            -2,
            "x"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF148;&#xF248;&#xF147;&#xF24A;&#xF154;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 340
  },
  {
    "role": "doc",
    "lines": [
      "Add more examples to give hints about scoping and other odd corners."
    ],
    "stanza": 341
  },
  {
    "role": "code",
    "lines": [
      "= 2 | assign x 1 | + $x 1;"
    ],
    "preprocessed": "= 2 | assign x 1 | + $x 1;",
    "code": "2113210312321110321010013213123210103023210100132132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "assign",
        "x",
        "1",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 342
  },
  {
    "role": "code",
    "lines": [
      "= 1 | assign x 1 $x;"
    ],
    "preprocessed": "= 1 | assign x 1 $x;",
    "code": "211321312321110321010013213023210100132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "assign",
        "x",
        "1",
        [
          -2,
          "x"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 343
  },
  {
    "role": "code",
    "lines": [
      "= 14 | assign x 1 14;"
    ],
    "preprocessed": "= 14 | assign x 1 14;",
    "code": "2113211103123211103210100132132111032233",
    "parse": [
      "=",
      "14",
      [
        -1,
        "assign",
        "x",
        "1",
        "14"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF152;&#xF248;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF24A;&#xF152;&#xF24B;",
    "dt": false,
    "stanza": 344
  },
  {
    "role": "code",
    "lines": [
      "= 4 | assign x (assign y 3 | + 1 $y) $x;"
    ],
    "preprocessed": "= 4 | assign x (assign y 3 | + 1 $y) $x;",
    "code": "211321003123211103210100132211103211110132113123210103213023211110133023210100132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "assign",
        "x",
        [
          "assign",
          "y",
          "3",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "y"
            ]
          ]
        ],
        [
          -2,
          "x"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF147;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF181;&#xF245;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 345
  },
  {
    "role": "code",
    "lines": [
      "= 4 | assign x (assign x 3 | + 1 $x) $x;"
    ],
    "preprocessed": "= 4 | assign x (assign x 3 | + 1 $x) $x;",
    "code": "211321003123211103210100132211103210100132113123210103213023210100133023210100132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "assign",
        "x",
        [
          "assign",
          "x",
          "3",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        [
          -2,
          "x"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF147;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 346
  },
  {
    "role": "doc",
    "lines": [
      "We're ready for functions.  `?` starts a lambda function.  Now we can have fun!"
    ],
    "stanza": 347
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? x $x) 0;"
    ],
    "preprocessed": "= 0 | (? x $x) 0;",
    "code": "21132031232211003210100130232101001332032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 348
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? x $x) 1;"
    ],
    "preprocessed": "= 1 | (? x $x) 1;",
    "code": "21132131232211003210100130232101001332132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 349
  },
  {
    "role": "code",
    "lines": [
      "= 2 | (? x $x) 2;"
    ],
    "preprocessed": "= 2 | (? x $x) 2;",
    "code": "2113210312322110032101001302321010013321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 350
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (? x $x) 3;"
    ],
    "preprocessed": "= 3 | (? x $x) 3;",
    "code": "2113211312322110032101001302321010013321132233",
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 351
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? x $x) 4;"
    ],
    "preprocessed": "= 4 | (? x $x) 4;",
    "code": "211321003123221100321010013023210100133210032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 352
  },
  {
    "role": "code",
    "lines": [
      "= 5 | (? x $x) 5;"
    ],
    "preprocessed": "= 5 | (? x $x) 5;",
    "code": "211321013123221100321010013023210100133210132233",
    "parse": [
      "=",
      "5",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 353
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? x | + 1 $x) 0;"
    ],
    "preprocessed": "= 1 | (? x | + 1 $x) 0;",
    "code": "21132131232211003210100131232101032130232101001332032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 354
  },
  {
    "role": "code",
    "lines": [
      "= 2 | (? x | + 1 $x) 1;"
    ],
    "preprocessed": "= 2 | (? x | + 1 $x) 1;",
    "code": "211321031232211003210100131232101032130232101001332132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 355
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (? x | + 1 $x) 2;"
    ],
    "preprocessed": "= 3 | (? x | + 1 $x) 2;",
    "code": "2113211312322110032101001312321010321302321010013321032233",
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 356
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? x | + 1 $x) 3;"
    ],
    "preprocessed": "= 4 | (? x | + 1 $x) 3;",
    "code": "21132100312322110032101001312321010321302321010013321132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 357
  },
  {
    "role": "code",
    "lines": [
      "= 5 | (? x | + 1 $x) 4;"
    ],
    "preprocessed": "= 5 | (? x | + 1 $x) 4;",
    "code": "211321013123221100321010013123210103213023210100133210032233",
    "parse": [
      "=",
      "5",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 358
  },
  {
    "role": "code",
    "lines": [
      "= 6 | (? x | + 1 $x) 5;"
    ],
    "preprocessed": "= 6 | (? x | + 1 $x) 5;",
    "code": "211321103123221100321010013123210103213023210100133210132233",
    "parse": [
      "=",
      "6",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 359
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? x | * $x $x) 0;"
    ],
    "preprocessed": "= 0 | (? x | * $x $x) 0;",
    "code": "2113203123221100321010013123210013023210100130232101001332032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 360
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? x | * $x $x) 1;"
    ],
    "preprocessed": "= 1 | (? x | * $x $x) 1;",
    "code": "2113213123221100321010013123210013023210100130232101001332132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 361
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? x | * $x $x) 2;"
    ],
    "preprocessed": "= 4 | (? x | * $x $x) 2;",
    "code": "2113210031232211003210100131232100130232101001302321010013321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 362
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? x | * $x $x) 3;"
    ],
    "preprocessed": "= 9 | (? x | * $x $x) 3;",
    "code": "21132100131232211003210100131232100130232101001302321010013321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 363
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? x | * $x $x) 4;"
    ],
    "preprocessed": "= 16 | (? x | * $x $x) 4;",
    "code": "2113210000312322110032101001312321001302321010013023210100133210032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 364
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? x | * $x $x) 5;"
    ],
    "preprocessed": "= 25 | (? x | * $x $x) 5;",
    "code": "2113211001312322110032101001312321001302321010013023210100133210132233",
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 365
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? y | * $y $y) 0;"
    ],
    "preprocessed": "= 0 | (? y | * $y $y) 0;",
    "code": "2113203123221100321111013123210013023211110130232111101332032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 366
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? y | * $y $y) 1;"
    ],
    "preprocessed": "= 1 | (? y | * $y $y) 1;",
    "code": "2113213123221100321111013123210013023211110130232111101332132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 367
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? y | * $y $y) 2;"
    ],
    "preprocessed": "= 4 | (? y | * $y $y) 2;",
    "code": "2113210031232211003211110131232100130232111101302321111013321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 368
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? y | * $y $y) 3;"
    ],
    "preprocessed": "= 9 | (? y | * $y $y) 3;",
    "code": "21132100131232211003211110131232100130232111101302321111013321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 369
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? y | * $y $y) 4;"
    ],
    "preprocessed": "= 16 | (? y | * $y $y) 4;",
    "code": "2113210000312322110032111101312321001302321111013023211110133210032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 370
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? y | * $y $y) 5;"
    ],
    "preprocessed": "= 25 | (? y | * $y $y) 5;",
    "code": "2113211001312322110032111101312321001302321111013023211110133210132233",
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 371
  },
  {
    "role": "doc",
    "lines": [
      "Emphasize the arbitrary nature of names, and hint that things we've learned already like addition could possibly be re-imagined as a named value."
    ],
    "stanza": 372
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? + | * $+ $+) 0;"
    ],
    "preprocessed": "= 0 | (? + | * $+ $+) 0;",
    "code": "2113203123221100321010312321001302321010302321010332032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF249;&#xF14E;&#xF249;&#xF14E;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 373
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? + | * $+ $+) 1;"
    ],
    "preprocessed": "= 1 | (? + | * $+ $+) 1;",
    "code": "2113213123221100321010312321001302321010302321010332132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF249;&#xF14E;&#xF249;&#xF14E;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 374
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? + | * $+ $+) 2;"
    ],
    "preprocessed": "= 4 | (? + | * $+ $+) 2;",
    "code": "2113210031232211003210103123210013023210103023210103321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF249;&#xF14E;&#xF249;&#xF14E;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 375
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? + | * $+ $+) 3;"
    ],
    "preprocessed": "= 9 | (? + | * $+ $+) 3;",
    "code": "21132100131232211003210103123210013023210103023210103321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF249;&#xF14E;&#xF249;&#xF14E;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 376
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? + | * $+ $+) 4;"
    ],
    "preprocessed": "= 16 | (? + | * $+ $+) 4;",
    "code": "2113210000312322110032101031232100130232101030232101033210032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF249;&#xF14E;&#xF249;&#xF14E;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 377
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? + | * $+ $+) 5;"
    ],
    "preprocessed": "= 25 | (? + | * $+ $+) 5;",
    "code": "2113211001312322110032101031232100130232101030232101033210132233",
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF249;&#xF14E;&#xF249;&#xF14E;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 378
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? 5 | * $5 $5) 0;"
    ],
    "preprocessed": "= 0 | (? 5 | * $5 $5) 0;",
    "code": "2113203123221100321013123210013023210130232101332032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF249;&#xF149;&#xF249;&#xF149;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 379
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? 5 | * $5 $5) 1;"
    ],
    "preprocessed": "= 1 | (? 5 | * $5 $5) 1;",
    "code": "2113213123221100321013123210013023210130232101332132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF249;&#xF149;&#xF249;&#xF149;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 380
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? 5 | * $5 $5) 2;"
    ],
    "preprocessed": "= 4 | (? 5 | * $5 $5) 2;",
    "code": "2113210031232211003210131232100130232101302321013321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF249;&#xF149;&#xF249;&#xF149;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 381
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? 5 | * $5 $5) 3;"
    ],
    "preprocessed": "= 9 | (? 5 | * $5 $5) 3;",
    "code": "21132100131232211003210131232100130232101302321013321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF249;&#xF149;&#xF249;&#xF149;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 382
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? 5 | * $5 $5) 4;"
    ],
    "preprocessed": "= 16 | (? 5 | * $5 $5) 4;",
    "code": "2113210000312322110032101312321001302321013023210133210032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF249;&#xF149;&#xF249;&#xF149;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 383
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? 5 | * $5 $5) 5;"
    ],
    "preprocessed": "= 25 | (? 5 | * $5 $5) 5;",
    "code": "2113211001312322110032101312321001302321013023210133210132233",
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF249;&#xF149;&#xF249;&#xF149;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 384
  },
  {
    "role": "doc",
    "lines": [
      "Show that we can name functions and use them later - still within a single expression for now."
    ],
    "stanza": 385
  },
  {
    "role": "code",
    "lines": [
      "assign x (? y | * $y $y) | = 25 | x 5;"
    ],
    "preprocessed": "assign x (? y | * $y $y) | = 25 | x 5;",
    "code": "21110321010013221100321111013123210013023211110130232111101331232113211001312321010013210132233",
    "parse": [
      "assign",
      "x",
      [
        "?",
        "y",
        [
          -1,
          "*",
          [
            -2,
            "y"
          ],
          [
            -2,
            "y"
          ]
        ]
      ],
      [
        -1,
        "=",
        "25",
        [
          -1,
          "x",
          "5"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF181;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF16D;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 386
  },
  {
    "role": "code",
    "lines": [
      "assign x (? y | + $y 1) | = 6 | x 5;"
    ],
    "preprocessed": "assign x (? y | + $y 1) | = 6 | x 5;",
    "code": "2111032101001322110032111101312321010302321111013213312321132110312321010013210132233",
    "parse": [
      "assign",
      "x",
      [
        "?",
        "y",
        [
          -1,
          "+",
          [
            -2,
            "y"
          ],
          "1"
        ]
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "x",
          "5"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14E;&#xF249;&#xF181;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF16D;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 387
  },
  {
    "role": "code",
    "lines": [
      "assign x (? x | + $x 1) | = 6 | x 5;"
    ],
    "preprocessed": "assign x (? x | + $x 1) | = 6 | x 5;",
    "code": "2111032101001322110032101001312321010302321010013213312321132110312321010013210132233",
    "parse": [
      "assign",
      "x",
      [
        "?",
        "x",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "x",
          "5"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF16D;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 388
  },
  {
    "role": "code",
    "lines": [
      "assign y (? x | + $x 1) | = 6 | y 5;"
    ],
    "preprocessed": "assign y (? x | + $x 1) | = 6 | y 5;",
    "code": "2111032111101322110032101001312321010302321010013213312321132110312321111013210132233",
    "parse": [
      "assign",
      "y",
      [
        "?",
        "x",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "y",
          "5"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF181;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF181;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 389
  },
  {
    "role": "doc",
    "lines": [
      "Show that we can nest functions to take multiple values."
    ],
    "stanza": 390
  },
  {
    "role": "code",
    "lines": [
      "= 52 | * 4 13;"
    ],
    "preprocessed": "= 52 | * 4 13;",
    "code": "211321101003123210013210032110132233",
    "parse": [
      "=",
      "52",
      [
        -1,
        "*",
        "4",
        "13"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF178;&#xF248;&#xF14D;&#xF24A;&#xF148;&#xF24A;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 391
  },
  {
    "role": "code",
    "lines": [
      "= 52 | (? x | * $x 4) 13;"
    ],
    "preprocessed": "= 52 | (? x | * $x 4) 13;",
    "code": "211321101003123221100321010013123210013023210100132100332110132233",
    "parse": [
      "=",
      "52",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "4"
          ]
        ],
        "13"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF178;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 392
  },
  {
    "role": "code",
    "lines": [
      "= 52 | (? x | ? y | * $x $y) 13 4;"
    ],
    "preprocessed": "= 52 | (? x | ? y | * $x $y) 13 4;",
    "code": "2113211010031232211003210100131232110032111101312321001302321010013023211110133211013210032233",
    "parse": [
      "=",
      "52",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "*",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ],
        "13",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF178;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF151;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 393
  },
  {
    "role": "code",
    "lines": [
      "= 53 | (? x | ? y | + 1 | * $x $y) 13 4;"
    ],
    "preprocessed": "= 53 | (? x | ? y | + 1 | * $x $y) 13 4;",
    "code": "2113211010131232211003210100131232110032111101312321010321312321001302321010013023211110133211013210032233",
    "parse": [
      "=",
      "53",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "+",
              "1",
              [
                -1,
                "*",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ],
        "13",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF179;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF151;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 394
  },
  {
    "role": "code",
    "lines": [
      "assign z (? x | ? y | + 1 | * $x $y) | = 53 | z 13 4;"
    ],
    "preprocessed": "assign z (? x | ? y | + 1 | * $x $y) | = 53 | z 13 4;",
    "code": "21110321111103221100321010013123211003211110131232101032131232100130232101001302321111013312321132110101312321111103211013210032233",
    "parse": [
      "assign",
      "z",
      [
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "+",
            "1",
            [
              -1,
              "*",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "53",
        [
          -1,
          "z",
          "13",
          "4"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF182;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF179;&#xF248;&#xF182;&#xF24A;&#xF151;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 395
  },
  {
    "role": "file",
    "lines": [
      "== COS_DefineFunction =="
    ],
    "stanza": 396
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We've set up a way to name a value within an expression.  Now let's go beyond that,",
      "and introduce a way to name a value in one sentence and use it in a later sentence.",
      "In other words, a message-level memory.  After this, we'll be able to define new",
      "symbols from existing ones, with less need for large numbers of examples.",
      "",
      "We introduce a `define` symbol that works just like `assign`, except that it applies",
      "to the rest of the message rather than the rest of the sentence.",
      "",
      "A sentence of the form `define X Y` means that `$X` will evaluate to `Y` from that",
      "point on (unless `X` is changed by another `define`).",
      "",
      "The `meaning-of-life-universe-everything` symbol here is entirely arbitrary, and",
      "won't be encoded as anything particularly meaningful in the message.",
      ""
    ],
    "section_description": "demonstrate existence of memory",
    "section_category": "MATH",
    "section_index": 9,
    "stanza": 397
  },
  {
    "role": "code",
    "lines": [
      "define meaning-of-life-universe-everything 39;"
    ],
    "preprocessed": "define meaning-of-life-universe-everything 39;",
    "code": "211013210000103210011132233",
    "parse": [
      "define",
      "meaning-of-life-universe-everything",
      "39"
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF146;&#xF24A;&#xF16B;&#xF24B;",
    "dt": true,
    "stanza": 398
  },
  {
    "role": "code",
    "lines": [
      "= 39 $meaning-of-life-universe-everything;"
    ],
    "preprocessed": "= 39 $meaning-of-life-universe-everything;",
    "code": "2113210011130232100001032233",
    "parse": [
      "=",
      "39",
      [
        -2,
        "meaning-of-life-universe-everything"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16B;&#xF249;&#xF145;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 399
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 39;"
    ],
    "preprocessed": "= $meaning-of-life-universe-everything 39;",
    "code": "2113023210000103210011132233",
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "39"
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF146;&#xF24A;&#xF16B;&#xF24B;",
    "dt": false,
    "stanza": 400
  },
  {
    "role": "code",
    "lines": [
      "= 49 | + 10 $meaning-of-life-universe-everything;"
    ],
    "preprocessed": "= 49 | + 10 $meaning-of-life-universe-everything;",
    "code": "2113211000131232101032101030232100001032233",
    "parse": [
      "=",
      "49",
      [
        -1,
        "+",
        "10",
        [
          -2,
          "meaning-of-life-universe-everything"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF175;&#xF248;&#xF14E;&#xF24A;&#xF14E;&#xF249;&#xF145;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 401
  },
  {
    "role": "code",
    "lines": [
      "define meaning-of-life-universe-everything 40;"
    ],
    "preprocessed": "define meaning-of-life-universe-everything 40;",
    "code": "211013210000103210100032233",
    "parse": [
      "define",
      "meaning-of-life-universe-everything",
      "40"
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF146;&#xF24A;&#xF16C;&#xF24B;",
    "dt": true,
    "stanza": 402
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 40;"
    ],
    "preprocessed": "= $meaning-of-life-universe-everything 40;",
    "code": "2113023210000103210100032233",
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "40"
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF146;&#xF24A;&#xF16C;&#xF24B;",
    "dt": false,
    "stanza": 403
  },
  {
    "role": "code",
    "lines": [
      "= 80 | * $meaning-of-life-universe-everything 2;"
    ],
    "preprocessed": "= 80 | * $meaning-of-life-universe-everything 2;",
    "code": "211321010000312321001302321000010321032233",
    "parse": [
      "=",
      "80",
      [
        -1,
        "*",
        [
          -2,
          "meaning-of-life-universe-everything"
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF154;&#xF248;&#xF14D;&#xF249;&#xF145;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 404
  },
  {
    "role": "code",
    "lines": [
      "define meaning-of-life-universe-everything | + 1 $meaning-of-life-universe-everything;"
    ],
    "preprocessed": "define meaning-of-life-universe-everything | + 1 $meaning-of-life-universe-everything;",
    "code": "2110132100001031232101032130232100001032233",
    "parse": [
      "define",
      "meaning-of-life-universe-everything",
      [
        -1,
        "+",
        "1",
        [
          -2,
          "meaning-of-life-universe-everything"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF146;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF145;&#xF146;&#xF24B;",
    "dt": true,
    "stanza": 405
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 41;"
    ],
    "preprocessed": "= $meaning-of-life-universe-everything 41;",
    "code": "2113023210000103210100132233",
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "41"
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF146;&#xF24A;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 406
  },
  {
    "role": "code",
    "lines": [
      "assign x (+ 1 $meaning-of-life-universe-everything) | define meaning-of-life-universe-everything $x;"
    ],
    "preprocessed": "assign x (+ 1 $meaning-of-life-universe-everything) | define meaning-of-life-universe-everything $x;",
    "code": "2111032101001322101032130232100001033123211013210000103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "+",
        "1",
        [
          -2,
          "meaning-of-life-universe-everything"
        ]
      ],
      [
        -1,
        "define",
        "meaning-of-life-universe-everything",
        [
          -2,
          "x"
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF145;&#xF146;&#xF245;&#xF248;&#xF151;&#xF24A;&#xF145;&#xF146;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 407
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 42;"
    ],
    "preprocessed": "= $meaning-of-life-universe-everything 42;",
    "code": "2113023210000103210101032233",
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "42"
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF146;&#xF24A;&#xF16E;&#xF24B;",
    "dt": false,
    "stanza": 408
  },
  {
    "role": "doc",
    "lines": [
      "Now we can start defining and naming functions.  Here's one to square an integer."
    ],
    "stanza": 409
  },
  {
    "role": "code",
    "lines": [
      "intro square;"
    ],
    "preprocessed": "intro square;",
    "code": "21001032100001132233",
    "parse": [
      "intro",
      "square"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 410
  },
  {
    "role": "code",
    "lines": [
      "define square | ? x | * $x $x;"
    ],
    "preprocessed": "define square | ? x | * $x $x;",
    "code": "2110132100001131232110032101001312321001302321010013023210100132233",
    "parse": [
      "define",
      "square",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "*",
          [
            -2,
            "x"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF147;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 411
  },
  {
    "role": "code",
    "lines": [
      "= 9 | square 3;"
    ],
    "preprocessed": "= 9 | square 3;",
    "code": "211321001312321000011321132233",
    "parse": [
      "=",
      "9",
      [
        -1,
        "square",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF145;&#xF147;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 412
  },
  {
    "role": "code",
    "lines": [
      "= 81 | square 9;"
    ],
    "preprocessed": "= 81 | square 9;",
    "code": "21132101000131232100001132100132233",
    "parse": [
      "=",
      "81",
      [
        -1,
        "square",
        "9"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF145;&#xF147;&#xF24A;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 413
  },
  {
    "role": "code",
    "lines": [
      "= 1 | square 1;"
    ],
    "preprocessed": "= 1 | square 1;",
    "code": "21132131232100001132132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "square",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF147;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 414
  },
  {
    "role": "code",
    "lines": [
      "= 4 | square 2;"
    ],
    "preprocessed": "= 4 | square 2;",
    "code": "21132100312321000011321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "square",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF147;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 415
  },
  {
    "role": "code",
    "lines": [
      "= 0 | square 0;"
    ],
    "preprocessed": "= 0 | square 0;",
    "code": "21132031232100001132032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "square",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF147;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 416
  },
  {
    "role": "doc",
    "lines": [
      "Here's a function to increment an integer."
    ],
    "stanza": 417
  },
  {
    "role": "code",
    "lines": [
      "intro ++;"
    ],
    "preprocessed": "intro ++;",
    "code": "21001032100010032233",
    "parse": [
      "intro",
      "++"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 418
  },
  {
    "role": "code",
    "lines": [
      "define ++ | ? x | + $x 1;"
    ],
    "preprocessed": "define ++ | ? x | + $x 1;",
    "code": "21101321000100312321100321010013123210103023210100132132233",
    "parse": [
      "define",
      "++",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF148;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 419
  },
  {
    "role": "code",
    "lines": [
      "= 4 | ++ 3;"
    ],
    "preprocessed": "= 4 | ++ 3;",
    "code": "21132100312321000100321132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "++",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF148;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 420
  },
  {
    "role": "code",
    "lines": [
      "= 10 | ++ 9;"
    ],
    "preprocessed": "= 10 | ++ 9;",
    "code": "21132101031232100010032100132233",
    "parse": [
      "=",
      "10",
      [
        -1,
        "++",
        "9"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14E;&#xF248;&#xF145;&#xF148;&#xF24A;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 421
  },
  {
    "role": "code",
    "lines": [
      "= 2 | ++ 1;"
    ],
    "preprocessed": "= 2 | ++ 1;",
    "code": "211321031232100010032132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "++",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF148;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 422
  },
  {
    "role": "code",
    "lines": [
      "= 3 | ++ 2;"
    ],
    "preprocessed": "= 3 | ++ 2;",
    "code": "2113211312321000100321032233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "++",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF145;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 423
  },
  {
    "role": "code",
    "lines": [
      "= 1 | ++ 0;"
    ],
    "preprocessed": "= 1 | ++ 0;",
    "code": "21132131232100010032032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "++",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF148;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 424
  },
  {
    "role": "file",
    "lines": [
      "== COS_TrueFalse =="
    ],
    "stanza": 425
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Now that we have functions, we could introduce some clever definitions of true, false,",
      "and conditionals, where:",
      "",
      " * `if` is `? x | ? y | ? z | x $y $z`",
      " * `true` is `? y | ? z | y`",
      " * `false` is `? y | ? z | z`",
      " ",
      "This is a neat implementation, but maybe a bit confusing.  So let's",
      "not actually commit to a type for truth values in the message yet,",
      "but just equate them with the results of equality `=`.",
      "",
      "Once we have truth values, we can introduce conditionals and build up to fun stuff.",
      "",
      "One slightly sneaky thing we do is to code `true` and `false` as `$1`",
      "and `$0`.  This could be helpful, or confusing, I'm not sure.  Nothing",
      "else in the message depends on this so it can be adjusted to taste.",
      ""
    ],
    "section_description": "introduce true and false",
    "section_category": "MATH",
    "section_index": 10,
    "stanza": 426
  },
  {
    "role": "code",
    "lines": [
      "intro true;"
    ],
    "preprocessed": "intro true;",
    "code": "21001032132233",
    "parse": [
      "intro",
      "true"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 427
  },
  {
    "role": "code",
    "lines": [
      "intro false;"
    ],
    "preprocessed": "intro false;",
    "code": "21001032032233",
    "parse": [
      "intro",
      "false"
    ],
    "spider": "&#xF156;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 428
  },
  {
    "role": "code",
    "lines": [
      "define true | = 0 0;"
    ],
    "preprocessed": "define true | = 0 0;",
    "code": "21101321312321132032032233",
    "parse": [
      "define",
      "true",
      [
        -1,
        "=",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 429
  },
  {
    "role": "code",
    "lines": [
      "define false | = 0 1;"
    ],
    "preprocessed": "define false | = 0 1;",
    "code": "21101320312321132032132233",
    "parse": [
      "define",
      "false",
      [
        -1,
        "=",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF144;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 430
  },
  {
    "role": "code",
    "lines": [
      "= $true (= 2 2);"
    ],
    "preprocessed": "= $true (= 2 2);",
    "code": "2113023213221132103210332233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        "=",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 431
  },
  {
    "role": "code",
    "lines": [
      "= $true (> 4 2);"
    ],
    "preprocessed": "= $true (> 4 2);",
    "code": "211302321322100321003210332233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        ">",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 432
  },
  {
    "role": "code",
    "lines": [
      "= $true (= 1 1);"
    ],
    "preprocessed": "= $true (= 1 1);",
    "code": "21130232132211321321332233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        "=",
        "1",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 433
  },
  {
    "role": "code",
    "lines": [
      "= $true (> 6 4);"
    ],
    "preprocessed": "= $true (> 6 4);",
    "code": "2113023213221003211032100332233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 434
  },
  {
    "role": "code",
    "lines": [
      "= $true (< 3 4);"
    ],
    "preprocessed": "= $true (< 3 4);",
    "code": "21130232132210321132100332233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        "<",
        "3",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 435
  },
  {
    "role": "code",
    "lines": [
      "= (= 5 5) $true;"
    ],
    "preprocessed": "= (= 5 5) $true;",
    "code": "211322113210132101330232132233",
    "parse": [
      "=",
      [
        "=",
        "5",
        "5"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF245;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 436
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 3) $true;"
    ],
    "preprocessed": "= (= 3 3) $true;",
    "code": "2113221132113211330232132233",
    "parse": [
      "=",
      [
        "=",
        "3",
        "3"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 437
  },
  {
    "role": "code",
    "lines": [
      "= (= 4 4) $true;"
    ],
    "preprocessed": "= (= 4 4) $true;",
    "code": "211322113210032100330232132233",
    "parse": [
      "=",
      [
        "=",
        "4",
        "4"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF245;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 438
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 3) $true;"
    ],
    "preprocessed": "= (= 3 3) $true;",
    "code": "2113221132113211330232132233",
    "parse": [
      "=",
      [
        "=",
        "3",
        "3"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 439
  },
  {
    "role": "code",
    "lines": [
      "= (= 0 0) $true;"
    ],
    "preprocessed": "= (= 0 0) $true;",
    "code": "21132211320320330232132233",
    "parse": [
      "=",
      [
        "=",
        "0",
        "0"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 440
  },
  {
    "role": "code",
    "lines": [
      "= $false (< 6 2);"
    ],
    "preprocessed": "= $false (< 6 2);",
    "code": "21130232032210321103210332233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        "<",
        "6",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 441
  },
  {
    "role": "code",
    "lines": [
      "= $false (< 4 2);"
    ],
    "preprocessed": "= $false (< 4 2);",
    "code": "21130232032210321003210332233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        "<",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 442
  },
  {
    "role": "code",
    "lines": [
      "= $false (< 4 1);"
    ],
    "preprocessed": "= $false (< 4 1);",
    "code": "2113023203221032100321332233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        "<",
        "4",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 443
  },
  {
    "role": "code",
    "lines": [
      "= $false (> 0 0);"
    ],
    "preprocessed": "= $false (> 0 0);",
    "code": "211302320322100320320332233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        ">",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 444
  },
  {
    "role": "code",
    "lines": [
      "= $false (> 0 5);"
    ],
    "preprocessed": "= $false (> 0 5);",
    "code": "21130232032210032032101332233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        ">",
        "0",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 445
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 2) $false;"
    ],
    "preprocessed": "= (= 3 2) $false;",
    "code": "2113221132113210330232032233",
    "parse": [
      "=",
      [
        "=",
        "3",
        "2"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 446
  },
  {
    "role": "code",
    "lines": [
      "= (> 2 3) $false;"
    ],
    "preprocessed": "= (> 2 3) $false;",
    "code": "21132210032103211330232032233",
    "parse": [
      "=",
      [
        ">",
        "2",
        "3"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 447
  },
  {
    "role": "code",
    "lines": [
      "= (> 4 5) $false;"
    ],
    "preprocessed": "= (> 4 5) $false;",
    "code": "2113221003210032101330232032233",
    "parse": [
      "=",
      [
        ">",
        "4",
        "5"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 448
  },
  {
    "role": "code",
    "lines": [
      "= (> 2 6) $false;"
    ],
    "preprocessed": "= (> 2 6) $false;",
    "code": "211322100321032110330232032233",
    "parse": [
      "=",
      [
        ">",
        "2",
        "6"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF245;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 449
  },
  {
    "role": "code",
    "lines": [
      "= (> 1 6) $false;"
    ],
    "preprocessed": "= (> 1 6) $false;",
    "code": "21132210032132110330232032233",
    "parse": [
      "=",
      [
        ">",
        "1",
        "6"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF14A;&#xF245;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 450
  },
  {
    "role": "code",
    "lines": [
      "= $true $true;"
    ],
    "preprocessed": "= $true $true;",
    "code": "21130232130232132233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 451
  },
  {
    "role": "code",
    "lines": [
      "= $false $false;"
    ],
    "preprocessed": "= $false $false;",
    "code": "21130232030232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 452
  },
  {
    "role": "code",
    "lines": [
      "not | = $true $false;"
    ],
    "preprocessed": "not | = $true $false;",
    "code": "2101312321130232130232032233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 453
  },
  {
    "role": "code",
    "lines": [
      "not | = $false $true;"
    ],
    "preprocessed": "not | = $false $true;",
    "code": "2101312321130232030232132233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 454
  },
  {
    "role": "code",
    "lines": [
      "= (> 4 2) (< 1 4);"
    ],
    "preprocessed": "= (> 4 2) (< 1 4);",
    "code": "21132210032100321033221032132100332233",
    "parse": [
      "=",
      [
        ">",
        "4",
        "2"
      ],
      [
        "<",
        "1",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 455
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 3) (< 3 5);"
    ],
    "preprocessed": "= (= 3 3) (< 3 5);",
    "code": "2113221132113211332210321132101332233",
    "parse": [
      "=",
      [
        "=",
        "3",
        "3"
      ],
      [
        "<",
        "3",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 456
  },
  {
    "role": "code",
    "lines": [
      "= (= 0 0) (= 4 4);"
    ],
    "preprocessed": "= (= 0 0) (= 4 4);",
    "code": "211322113203203322113210032100332233",
    "parse": [
      "=",
      [
        "=",
        "0",
        "0"
      ],
      [
        "=",
        "4",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 457
  },
  {
    "role": "code",
    "lines": [
      "= (> 6 4) (< 3 5);"
    ],
    "preprocessed": "= (> 6 4) (< 3 5);",
    "code": "2113221003211032100332210321132101332233",
    "parse": [
      "=",
      [
        ">",
        "6",
        "4"
      ],
      [
        "<",
        "3",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 458
  },
  {
    "role": "code",
    "lines": [
      "= (< 5 6) (< 0 2);"
    ],
    "preprocessed": "= (< 5 6) (< 0 2);",
    "code": "2113221032101321103322103203210332233",
    "parse": [
      "=",
      [
        "<",
        "5",
        "6"
      ],
      [
        "<",
        "0",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 459
  },
  {
    "role": "code",
    "lines": [
      "= (= 5 1) (> 2 4);"
    ],
    "preprocessed": "= (= 5 1) (> 2 4);",
    "code": "21132211321013213322100321032100332233",
    "parse": [
      "=",
      [
        "=",
        "5",
        "1"
      ],
      [
        ">",
        "2",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 460
  },
  {
    "role": "code",
    "lines": [
      "= (> 4 6) (> 1 3);"
    ],
    "preprocessed": "= (> 4 6) (> 1 3);",
    "code": "211322100321003211033221003213211332233",
    "parse": [
      "=",
      [
        ">",
        "4",
        "6"
      ],
      [
        ">",
        "1",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 461
  },
  {
    "role": "code",
    "lines": [
      "= (> 2 5) (= 5 3);"
    ],
    "preprocessed": "= (> 2 5) (= 5 3);",
    "code": "211322100321032101332211321013211332233",
    "parse": [
      "=",
      [
        ">",
        "2",
        "5"
      ],
      [
        "=",
        "5",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 462
  },
  {
    "role": "code",
    "lines": [
      "= (< 2 1) (< 6 4);"
    ],
    "preprocessed": "= (< 2 1) (< 6 4);",
    "code": "2113221032103213322103211032100332233",
    "parse": [
      "=",
      [
        "<",
        "2",
        "1"
      ],
      [
        "<",
        "6",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 463
  },
  {
    "role": "code",
    "lines": [
      "= (< 6 2) (> 4 5);"
    ],
    "preprocessed": "= (< 6 2) (> 4 5);",
    "code": "2113221032110321033221003210032101332233",
    "parse": [
      "=",
      [
        "<",
        "6",
        "2"
      ],
      [
        ">",
        "4",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 464
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 0 1) (= 0 0);"
    ],
    "preprocessed": "not | = (> 0 1) (= 0 0);",
    "code": "21013123211322100320321332211320320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "0",
          "1"
        ],
        [
          "=",
          "0",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 465
  },
  {
    "role": "code",
    "lines": [
      "not | = (< 6 4) (= 5 5);"
    ],
    "preprocessed": "not | = (< 6 4) (= 5 5);",
    "code": "210131232113221032110321003322113210132101332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "<",
          "6",
          "4"
        ],
        [
          "=",
          "5",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 466
  },
  {
    "role": "code",
    "lines": [
      "not | = (= 4 2) (> 1 0);"
    ],
    "preprocessed": "not | = (= 4 2) (> 1 0);",
    "code": "21013123211322113210032103322100321320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "=",
          "4",
          "2"
        ],
        [
          ">",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 467
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 5 6) (< 1 3);"
    ],
    "preprocessed": "not | = (> 5 6) (< 1 3);",
    "code": "2101312321132210032101321103322103213211332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "5",
          "6"
        ],
        [
          "<",
          "1",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 468
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 3 6) (> 5 4);"
    ],
    "preprocessed": "not | = (> 3 6) (> 5 4);",
    "code": "2101312321132210032113211033221003210132100332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "3",
          "6"
        ],
        [
          ">",
          "5",
          "4"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 469
  },
  {
    "role": "code",
    "lines": [
      "not | = (= 2 2) (> 0 3);"
    ],
    "preprocessed": "not | = (= 2 2) (> 0 3);",
    "code": "21013123211322113210321033221003203211332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "=",
          "2",
          "2"
        ],
        [
          ">",
          "0",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 470
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 5 2) (= 2 3);"
    ],
    "preprocessed": "not | = (> 5 2) (= 2 3);",
    "code": "2101312321132210032101321033221132103211332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "5",
          "2"
        ],
        [
          "=",
          "2",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 471
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 4 1) (< 2 0);"
    ],
    "preprocessed": "not | = (> 4 1) (< 2 0);",
    "code": "21013123211322100321003213322103210320332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "4",
          "1"
        ],
        [
          "<",
          "2",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 472
  },
  {
    "role": "code",
    "lines": [
      "not | = (= 2 2) (< 3 2);"
    ],
    "preprocessed": "not | = (= 2 2) (< 3 2);",
    "code": "21013123211322113210321033221032113210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "=",
          "2",
          "2"
        ],
        [
          "<",
          "3",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 473
  },
  {
    "role": "code",
    "lines": [
      "not | = (< 0 1) (> 3 4);"
    ],
    "preprocessed": "not | = (< 0 1) (> 3 4);",
    "code": "21013123211322103203213322100321132100332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "<",
          "0",
          "1"
        ],
        [
          ">",
          "3",
          "4"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 474
  },
  {
    "role": "file",
    "lines": [
      "== COS_If =="
    ],
    "stanza": 475
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Now that we spent some time looking at `true` and `false`, let's show",
      "a way to build conditional expressions.  We start with an `if` expression,",
      "of the form `if CONDITION E1 E2`, which evaluates to `E1` if the `CONDITION`",
      "is `true`, otherwise `E2`.",
      "",
      "If the listener is trying to map the language we are describing onto",
      "their own system of computation, it is pretty important that `if` be",
      "\"lazy,\" and completely skip evaluating the branch not taken.  That",
      "should become clear fairly soon if they were to try an \"eager\" `if`.",
      ""
    ],
    "section_description": "show conditionals",
    "section_category": "MATH",
    "section_index": 11,
    "stanza": 476
  },
  {
    "role": "code",
    "lines": [
      "intro if;"
    ],
    "preprocessed": "intro if;",
    "code": "21001032111132233",
    "parse": [
      "intro",
      "if"
    ],
    "spider": "&#xF156;&#xF24A;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 477
  },
  {
    "role": "code",
    "lines": [
      "= 28 | if (< 3 0) 24 28;"
    ],
    "preprocessed": "= 28 | if (< 3 0) 24 28;",
    "code": "211321110031232111132210321132033211000321110032233",
    "parse": [
      "=",
      "28",
      [
        -1,
        "if",
        [
          "<",
          "3",
          "0"
        ],
        "24",
        "28"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF160;&#xF248;&#xF153;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF245;&#xF15C;&#xF24A;&#xF160;&#xF24B;",
    "dt": false,
    "stanza": 478
  },
  {
    "role": "code",
    "lines": [
      "= 27 | if (> 2 4) 29 27;"
    ],
    "preprocessed": "= 27 | if (> 2 4) 29 27;",
    "code": "211321101131232111132210032103210033211101321101132233",
    "parse": [
      "=",
      "27",
      [
        -1,
        "if",
        [
          ">",
          "2",
          "4"
        ],
        "29",
        "27"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15F;&#xF248;&#xF153;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF161;&#xF24A;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 479
  },
  {
    "role": "code",
    "lines": [
      "= 29 | if (= 3 1) 20 29;"
    ],
    "preprocessed": "= 29 | if (= 3 1) 20 29;",
    "code": "211321110131232111132211321132133210100321110132233",
    "parse": [
      "=",
      "29",
      [
        -1,
        "if",
        [
          "=",
          "3",
          "1"
        ],
        "20",
        "29"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF161;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF158;&#xF24A;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 480
  },
  {
    "role": "code",
    "lines": [
      "= 21 | if (= 0 0) 21 26;"
    ],
    "preprocessed": "= 21 | if (= 0 0) 21 26;",
    "code": "21132101013123211113221132032033210101321101032233",
    "parse": [
      "=",
      "21",
      [
        -1,
        "if",
        [
          "=",
          "0",
          "0"
        ],
        "21",
        "26"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF159;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF159;&#xF24A;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 481
  },
  {
    "role": "code",
    "lines": [
      "= 29 | if (> 5 3) 29 23;"
    ],
    "preprocessed": "= 29 | if (> 5 3) 29 23;",
    "code": "211321110131232111132210032101321133211101321011132233",
    "parse": [
      "=",
      "29",
      [
        -1,
        "if",
        [
          ">",
          "5",
          "3"
        ],
        "29",
        "23"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF161;&#xF248;&#xF153;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF161;&#xF24A;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 482
  },
  {
    "role": "code",
    "lines": [
      "= 26 | if (> 1 0) 26 22;"
    ],
    "preprocessed": "= 26 | if (> 1 0) 26 22;",
    "code": "211321101031232111132210032132033211010321011032233",
    "parse": [
      "=",
      "26",
      [
        -1,
        "if",
        [
          ">",
          "1",
          "0"
        ],
        "26",
        "22"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15E;&#xF248;&#xF153;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF15E;&#xF24A;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 483
  },
  {
    "role": "code",
    "lines": [
      "= 21 | if (= 3 3) 21 27;"
    ],
    "preprocessed": "= 21 | if (= 3 3) 21 27;",
    "code": "2113210101312321111322113211321133210101321101132233",
    "parse": [
      "=",
      "21",
      [
        -1,
        "if",
        [
          "=",
          "3",
          "3"
        ],
        "21",
        "27"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF159;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF159;&#xF24A;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 484
  },
  {
    "role": "code",
    "lines": [
      "= 23 | if (> 4 4) 25 23;"
    ],
    "preprocessed": "= 23 | if (> 4 4) 25 23;",
    "code": "2113210111312321111322100321003210033211001321011132233",
    "parse": [
      "=",
      "23",
      [
        -1,
        "if",
        [
          ">",
          "4",
          "4"
        ],
        "25",
        "23"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15B;&#xF248;&#xF153;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF245;&#xF15D;&#xF24A;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 485
  },
  {
    "role": "doc",
    "lines": [
      "We can now define more interesting functions.  Here's the maximum of two integers:"
    ],
    "stanza": 486
  },
  {
    "role": "code",
    "lines": [
      "intro max;"
    ],
    "preprocessed": "intro max;",
    "code": "21001032100010132233",
    "parse": [
      "intro",
      "max"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 487
  },
  {
    "role": "code",
    "lines": [
      "define max | ? x | ? y | if (> $x $y) $x $y;"
    ],
    "preprocessed": "define max | ? x | ? y | if (> $x $y) $x $y;",
    "code": "21101321000101312321100321010013123211003211110131232111132210030232101001302321111013302321010013023211110132233",
    "parse": [
      "define",
      "max",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              ">",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF149;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF148;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 488
  },
  {
    "role": "code",
    "lines": [
      "= 0 | max 0 0;"
    ],
    "preprocessed": "= 0 | max 0 0;",
    "code": "21132031232100010132032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "max",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 489
  },
  {
    "role": "code",
    "lines": [
      "= 1 | max 0 1;"
    ],
    "preprocessed": "= 1 | max 0 1;",
    "code": "21132131232100010132032132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "max",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 490
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 0 2;"
    ],
    "preprocessed": "= 2 | max 0 2;",
    "code": "2113210312321000101320321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "max",
        "0",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 491
  },
  {
    "role": "code",
    "lines": [
      "= 1 | max 1 0;"
    ],
    "preprocessed": "= 1 | max 1 0;",
    "code": "21132131232100010132132032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "max",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 492
  },
  {
    "role": "code",
    "lines": [
      "= 1 | max 1 1;"
    ],
    "preprocessed": "= 1 | max 1 1;",
    "code": "21132131232100010132132132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "max",
        "1",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 493
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 1 2;"
    ],
    "preprocessed": "= 2 | max 1 2;",
    "code": "2113210312321000101321321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "max",
        "1",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 494
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 2 0;"
    ],
    "preprocessed": "= 2 | max 2 0;",
    "code": "2113210312321000101321032032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "max",
        "2",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 495
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 2 1;"
    ],
    "preprocessed": "= 2 | max 2 1;",
    "code": "2113210312321000101321032132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "max",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 496
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 2 2;"
    ],
    "preprocessed": "= 2 | max 2 2;",
    "code": "21132103123210001013210321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "max",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF149;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 497
  },
  {
    "role": "doc",
    "lines": [
      "Now the minimum of two integers:"
    ],
    "stanza": 498
  },
  {
    "role": "code",
    "lines": [
      "intro min;"
    ],
    "preprocessed": "intro min;",
    "code": "21001032100011032233",
    "parse": [
      "intro",
      "min"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 499
  },
  {
    "role": "code",
    "lines": [
      "define min | ? x | ? y | if (< $x $y) $x $y;"
    ],
    "preprocessed": "define min | ? x | ? y | if (< $x $y) $x $y;",
    "code": "2110132100011031232110032101001312321100321111013123211113221030232101001302321111013302321010013023211110132233",
    "parse": [
      "define",
      "min",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "<",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF146;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 500
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 0 0;"
    ],
    "preprocessed": "= 0 | min 0 0;",
    "code": "21132031232100011032032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "min",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 501
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 0 1;"
    ],
    "preprocessed": "= 0 | min 0 1;",
    "code": "21132031232100011032032132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "min",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 502
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 0 2;"
    ],
    "preprocessed": "= 0 | min 0 2;",
    "code": "211320312321000110320321032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "min",
        "0",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 503
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 1 0;"
    ],
    "preprocessed": "= 0 | min 1 0;",
    "code": "21132031232100011032132032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "min",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 504
  },
  {
    "role": "code",
    "lines": [
      "= 1 | min 1 1;"
    ],
    "preprocessed": "= 1 | min 1 1;",
    "code": "21132131232100011032132132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "min",
        "1",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 505
  },
  {
    "role": "code",
    "lines": [
      "= 1 | min 1 2;"
    ],
    "preprocessed": "= 1 | min 1 2;",
    "code": "211321312321000110321321032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "min",
        "1",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 506
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 2 0;"
    ],
    "preprocessed": "= 0 | min 2 0;",
    "code": "211320312321000110321032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "min",
        "2",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 507
  },
  {
    "role": "code",
    "lines": [
      "= 1 | min 2 1;"
    ],
    "preprocessed": "= 1 | min 2 1;",
    "code": "211321312321000110321032132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "min",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 508
  },
  {
    "role": "code",
    "lines": [
      "= 2 | min 2 2;"
    ],
    "preprocessed": "= 2 | min 2 2;",
    "code": "21132103123210001103210321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "min",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 509
  },
  {
    "role": "doc",
    "lines": [
      "Why should human CS students be the only ones the factorial example is inflicted on..."
    ],
    "stanza": 510
  },
  {
    "role": "code",
    "lines": [
      "intro factorial;"
    ],
    "preprocessed": "intro factorial;",
    "code": "21001032100011132233",
    "parse": [
      "intro",
      "factorial"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 511
  },
  {
    "role": "code",
    "lines": [
      "define factorial | ? x | if (< $x 1) 1 | * $x | factorial | - $x 1;"
    ],
    "preprocessed": "define factorial | ? x | if (< $x 1) 1 | * $x | factorial | - $x 1;",
    "code": "211013210001113123211003210100131232111132210302321010013213321312321001302321010013123210001113123210113023210100132132233",
    "parse": [
      "define",
      "factorial",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "<",
            [
              -2,
              "x"
            ],
            "1"
          ],
          "1",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -1,
              "factorial",
              [
                -1,
                "-",
                [
                  -2,
                  "x"
                ],
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF14B;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF146;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF145;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF248;&#xF145;&#xF14B;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 512
  },
  {
    "role": "code",
    "lines": [
      "= 1 | factorial 1;"
    ],
    "preprocessed": "= 1 | factorial 1;",
    "code": "21132131232100011132132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "factorial",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF14B;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 513
  },
  {
    "role": "code",
    "lines": [
      "= 2 | factorial 2;"
    ],
    "preprocessed": "= 2 | factorial 2;",
    "code": "2113210312321000111321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "factorial",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF14B;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 514
  },
  {
    "role": "code",
    "lines": [
      "= 6 | factorial 3;"
    ],
    "preprocessed": "= 6 | factorial 3;",
    "code": "21132110312321000111321132233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "factorial",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF145;&#xF14B;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 515
  },
  {
    "role": "code",
    "lines": [
      "= 24 | factorial 4;"
    ],
    "preprocessed": "= 24 | factorial 4;",
    "code": "21132110003123210001113210032233",
    "parse": [
      "=",
      "24",
      [
        -1,
        "factorial",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15C;&#xF248;&#xF145;&#xF14B;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 516
  },
  {
    "role": "code",
    "lines": [
      "= 120 | factorial 5;"
    ],
    "preprocessed": "= 120 | factorial 5;",
    "code": "2113211110003123210001113210132233",
    "parse": [
      "=",
      "120",
      [
        -1,
        "factorial",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF17C;&#xF248;&#xF145;&#xF14B;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 517
  },
  {
    "role": "file",
    "lines": [
      "== COS_AndLogic =="
    ],
    "stanza": 518
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We continue introducing symbols related to math and logic.  Now we will often",
      "be able to both define them and give examples, so the listener has multiple",
      "paths to understanding.",
      "",
      "Here is `and`, which evaluates to `true` if both its two arguments are `true`,",
      "and `false` otherwise.  We don't talk about wbat happens if you pass it integers",
      "or something funky.  There'd be value in getting into talking about types, but",
      "it might be a bit much just now.",
      ""
    ],
    "section_description": "introduce the AND logical operator",
    "section_category": "MATH",
    "section_index": 12,
    "stanza": 519
  },
  {
    "role": "code",
    "lines": [
      "intro and;"
    ],
    "preprocessed": "intro and;",
    "code": "2100103211032233",
    "parse": [
      "intro",
      "and"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 520
  },
  {
    "role": "code",
    "lines": [
      "define and | ? x | ? y | if $x $y $false;"
    ],
    "preprocessed": "define and | ? x | ? y | if $x $y $false;",
    "code": "21101321103123211003210100131232110032111101312321111302321010013023211110130232032233",
    "parse": [
      "define",
      "and",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ],
            [
              -2,
              "false"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF249;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 521
  },
  {
    "role": "code",
    "lines": [
      "not | and $false $false;"
    ],
    "preprocessed": "not | and $false $false;",
    "code": "21013123211030232030232032233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 522
  },
  {
    "role": "code",
    "lines": [
      "not | and $false $true;"
    ],
    "preprocessed": "not | and $false $true;",
    "code": "21013123211030232030232132233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 523
  },
  {
    "role": "code",
    "lines": [
      "not | and $true $false;"
    ],
    "preprocessed": "not | and $true $false;",
    "code": "21013123211030232130232032233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 524
  },
  {
    "role": "code",
    "lines": [
      "and $true $true;"
    ],
    "preprocessed": "and $true $true;",
    "code": "211030232130232132233",
    "parse": [
      "and",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF14A;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 525
  },
  {
    "role": "code",
    "lines": [
      "= $false | and $false $false;"
    ],
    "preprocessed": "= $false | and $false $false;",
    "code": "2113023203123211030232030232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "and",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 526
  },
  {
    "role": "code",
    "lines": [
      "= $false | and $false $true;"
    ],
    "preprocessed": "= $false | and $false $true;",
    "code": "2113023203123211030232030232132233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "and",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 527
  },
  {
    "role": "code",
    "lines": [
      "= $false | and $true $false;"
    ],
    "preprocessed": "= $false | and $true $false;",
    "code": "2113023203123211030232130232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "and",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 528
  },
  {
    "role": "code",
    "lines": [
      "= $true | and $true $true;"
    ],
    "preprocessed": "= $true | and $true $true;",
    "code": "2113023213123211030232130232132233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "and",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 529
  },
  {
    "role": "code",
    "lines": [
      "and (= 2 2) (> 4 2);"
    ],
    "preprocessed": "and (= 2 2) (> 4 2);",
    "code": "211032211321032103322100321003210332233",
    "parse": [
      "and",
      [
        "=",
        "2",
        "2"
      ],
      [
        ">",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 530
  },
  {
    "role": "code",
    "lines": [
      "and (= 1 1) (> 6 4);"
    ],
    "preprocessed": "and (= 1 1) (> 6 4);",
    "code": "21103221132132133221003211032100332233",
    "parse": [
      "and",
      [
        "=",
        "1",
        "1"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 531
  },
  {
    "role": "code",
    "lines": [
      "and (< 3 4) (= 5 5);"
    ],
    "preprocessed": "and (< 3 4) (= 5 5);",
    "code": "2110322103211321003322113210132101332233",
    "parse": [
      "and",
      [
        "<",
        "3",
        "4"
      ],
      [
        "=",
        "5",
        "5"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 532
  },
  {
    "role": "code",
    "lines": [
      "and (= 3 3) (= 4 4);"
    ],
    "preprocessed": "and (= 3 3) (= 4 4);",
    "code": "211032211321132113322113210032100332233",
    "parse": [
      "and",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "4",
        "4"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 533
  },
  {
    "role": "code",
    "lines": [
      "and (= 3 3) (= 0 0);"
    ],
    "preprocessed": "and (= 3 3) (= 0 0);",
    "code": "21103221132113211332211320320332233",
    "parse": [
      "and",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 534
  },
  {
    "role": "code",
    "lines": [
      "and (< 5 7) (> 5 3);"
    ],
    "preprocessed": "and (< 5 7) (> 5 3);",
    "code": "21103221032101321113322100321013211332233",
    "parse": [
      "and",
      [
        "<",
        "5",
        "7"
      ],
      [
        ">",
        "5",
        "3"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 535
  },
  {
    "role": "code",
    "lines": [
      "and (> 5 4) (> 1 0);"
    ],
    "preprocessed": "and (> 5 4) (> 1 0);",
    "code": "211032210032101321003322100321320332233",
    "parse": [
      "and",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 536
  },
  {
    "role": "code",
    "lines": [
      "and (> 3 0) (= 3 3);"
    ],
    "preprocessed": "and (> 3 0) (= 3 3);",
    "code": "2110322100321132033221132113211332233",
    "parse": [
      "and",
      [
        ">",
        "3",
        "0"
      ],
      [
        "=",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 537
  },
  {
    "role": "code",
    "lines": [
      "and (< 3 4) (< 3 6);"
    ],
    "preprocessed": "and (< 3 4) (< 3 6);",
    "code": "211032210321132100332210321132110332233",
    "parse": [
      "and",
      [
        "<",
        "3",
        "4"
      ],
      [
        "<",
        "3",
        "6"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 538
  },
  {
    "role": "code",
    "lines": [
      "and (> 5 4) (> 5 4);"
    ],
    "preprocessed": "and (> 5 4) (> 5 4);",
    "code": "2110322100321013210033221003210132100332233",
    "parse": [
      "and",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "5",
        "4"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 539
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 6 4) (< 3 1);"
    ],
    "preprocessed": "not | and (> 6 4) (< 3 1);",
    "code": "21013123211032210032110321003322103211321332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "6",
          "4"
        ],
        [
          "<",
          "3",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 540
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 3 1) (> 3 3);"
    ],
    "preprocessed": "not | and (> 3 1) (> 3 3);",
    "code": "2101312321103221003211321332210032113211332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "3",
          "1"
        ],
        [
          ">",
          "3",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 541
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 0 0) (= 5 4);"
    ],
    "preprocessed": "not | and (= 0 0) (= 5 4);",
    "code": "210131232110322113203203322113210132100332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "=",
          "0",
          "0"
        ],
        [
          "=",
          "5",
          "4"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 542
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 2 4) (> 4 6);"
    ],
    "preprocessed": "not | and (< 2 4) (> 4 6);",
    "code": "2101312321103221032103210033221003210032110332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "2",
          "4"
        ],
        [
          ">",
          "4",
          "6"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 543
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 3 3) (= 3 1);"
    ],
    "preprocessed": "not | and (= 3 3) (= 3 1);",
    "code": "21013123211032211321132113322113211321332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "=",
          "3",
          "3"
        ],
        [
          "=",
          "3",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 544
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 1 5) (< 3 6);"
    ],
    "preprocessed": "not | and (> 1 5) (< 3 6);",
    "code": "21013123211032210032132101332210321132110332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "1",
          "5"
        ],
        [
          "<",
          "3",
          "6"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 545
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 2) (= 2 2);"
    ],
    "preprocessed": "not | and (< 6 2) (= 2 2);",
    "code": "2101312321103221032110321033221132103210332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "6",
          "2"
        ],
        [
          "=",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 546
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 2 5) (= 5 5);"
    ],
    "preprocessed": "not | and (> 2 5) (= 5 5);",
    "code": "2101312321103221003210321013322113210132101332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "2",
          "5"
        ],
        [
          "=",
          "5",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 547
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 2) (= 3 3);"
    ],
    "preprocessed": "not | and (< 6 2) (= 3 3);",
    "code": "2101312321103221032110321033221132113211332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "6",
          "2"
        ],
        [
          "=",
          "3",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 548
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 4 3) (> 5 2);"
    ],
    "preprocessed": "not | and (< 4 3) (> 5 2);",
    "code": "210131232110322103210032113322100321013210332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "4",
          "3"
        ],
        [
          ">",
          "5",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 549
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 5 4) (= 1 2);"
    ],
    "preprocessed": "not | and (< 5 4) (= 1 2);",
    "code": "2101312321103221032101321003322113213210332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "5",
          "4"
        ],
        [
          "=",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 550
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 4) (= 5 1);"
    ],
    "preprocessed": "not | and (< 6 4) (= 5 1);",
    "code": "21013123211032210321103210033221132101321332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "6",
          "4"
        ],
        [
          "=",
          "5",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 551
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 2 6) (= 1 5);"
    ],
    "preprocessed": "not | and (> 2 6) (= 1 5);",
    "code": "21013123211032210032103211033221132132101332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "2",
          "6"
        ],
        [
          "=",
          "1",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 552
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 3) (= 2 3);"
    ],
    "preprocessed": "not | and (< 6 3) (= 2 3);",
    "code": "2101312321103221032110321133221132103211332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "2",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 553
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 4) (> 0 1);"
    ],
    "preprocessed": "not | and (< 6 4) (> 0 1);",
    "code": "2101312321103221032110321003322100320321332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "6",
          "4"
        ],
        [
          ">",
          "0",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 554
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 3 5) (< 4 1);"
    ],
    "preprocessed": "not | and (= 3 5) (< 4 1);",
    "code": "2101312321103221132113210133221032100321332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "=",
          "3",
          "5"
        ],
        [
          "<",
          "4",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 555
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 4 1) (< 4 2);"
    ],
    "preprocessed": "not | and (= 4 1) (< 4 2);",
    "code": "2101312321103221132100321332210321003210332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "=",
          "4",
          "1"
        ],
        [
          "<",
          "4",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 556
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 3) (= 3 0);"
    ],
    "preprocessed": "not | and (< 6 3) (= 3 0);",
    "code": "210131232110322103211032113322113211320332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "3",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 557
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 4 2) (< 4 6);"
    ],
    "preprocessed": "not | and (< 4 2) (< 4 6);",
    "code": "210131232110322103210032103322103210032110332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "4",
          "2"
        ],
        [
          "<",
          "4",
          "6"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 558
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 4 1) (< 5 2);"
    ],
    "preprocessed": "not | and (> 4 1) (< 5 2);",
    "code": "21013123211032210032100321332210321013210332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "4",
          "1"
        ],
        [
          "<",
          "5",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 559
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 0 1) (> 7 5);"
    ],
    "preprocessed": "not | and (> 0 1) (> 7 5);",
    "code": "21013123211032210032032133221003211132101332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "0",
          "1"
        ],
        [
          ">",
          "7",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 560
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 3 4) (> 3 6);"
    ],
    "preprocessed": "not | and (< 3 4) (> 3 6);",
    "code": "210131232110322103211321003322100321132110332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "3",
          "4"
        ],
        [
          ">",
          "3",
          "6"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 561
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 1 2) (> 6 4);"
    ],
    "preprocessed": "not | and (> 1 2) (> 6 4);",
    "code": "210131232110322100321321033221003211032100332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          ">",
          "1",
          "2"
        ],
        [
          ">",
          "6",
          "4"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 562
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 0 1) (= 4 5);"
    ],
    "preprocessed": "not | and (< 0 1) (= 4 5);",
    "code": "210131232110322103203213322113210032101332233",
    "parse": [
      "not",
      [
        -1,
        "and",
        [
          "<",
          "0",
          "1"
        ],
        [
          "=",
          "4",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 563
  },
  {
    "role": "code",
    "lines": [
      "and (< 4 6) (< 5 7);"
    ],
    "preprocessed": "and (< 4 6) (< 5 7);",
    "code": "21103221032100321103322103210132111332233",
    "parse": [
      "and",
      [
        "<",
        "4",
        "6"
      ],
      [
        "<",
        "5",
        "7"
      ]
    ],
    "spider": "&#xF14A;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14B;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 564
  },
  {
    "role": "file",
    "lines": [
      "== COS_OrLogic =="
    ],
    "stanza": 565
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Here is `or`, which evaluates to `true` if either of its arguments are `true`,",
      "and `false` otherwise.  Again, we just don't talk about what happens if you",
      "pass in any unexpected values, like integers or functions.  The message is",
      "constructed so that the problem never comes up.",
      ""
    ],
    "section_description": "introduce the OR logical operator",
    "section_category": "MATH",
    "section_index": 13,
    "stanza": 566
  },
  {
    "role": "code",
    "lines": [
      "intro or;"
    ],
    "preprocessed": "intro or;",
    "code": "2100103211132233",
    "parse": [
      "intro",
      "or"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 567
  },
  {
    "role": "code",
    "lines": [
      "define or | ? x | ? y | if $x $true $y"
    ],
    "preprocessed": "define or | ? x | ? y | if $x $true $y",
    "code": "21101321113123211003210100131232110032111101312321111302321010013023213023211110132233",
    "parse": [
      "define",
      "or",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              -2,
              "x"
            ],
            [
              -2,
              "true"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF249;&#xF16D;&#xF249;&#xF145;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 568
  },
  {
    "role": "code",
    "lines": [
      "not | or $false $false;"
    ],
    "preprocessed": "not | or $false $false;",
    "code": "21013123211130232030232032233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 569
  },
  {
    "role": "code",
    "lines": [
      "or $false $true;"
    ],
    "preprocessed": "or $false $true;",
    "code": "211130232030232132233",
    "parse": [
      "or",
      [
        -2,
        "false"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF14B;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 570
  },
  {
    "role": "code",
    "lines": [
      "or $true $false;"
    ],
    "preprocessed": "or $true $false;",
    "code": "211130232130232032233",
    "parse": [
      "or",
      [
        -2,
        "true"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF14B;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 571
  },
  {
    "role": "code",
    "lines": [
      "or $true $true;"
    ],
    "preprocessed": "or $true $true;",
    "code": "211130232130232132233",
    "parse": [
      "or",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF14B;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 572
  },
  {
    "role": "code",
    "lines": [
      "= $false | or $false $false;"
    ],
    "preprocessed": "= $false | or $false $false;",
    "code": "2113023203123211130232030232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "or",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14B;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 573
  },
  {
    "role": "code",
    "lines": [
      "= $true | or $false $true;"
    ],
    "preprocessed": "= $true | or $false $true;",
    "code": "2113023213123211130232030232132233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "or",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14B;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 574
  },
  {
    "role": "code",
    "lines": [
      "= $true | or $true $false;"
    ],
    "preprocessed": "= $true | or $true $false;",
    "code": "2113023213123211130232130232032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "or",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14B;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 575
  },
  {
    "role": "code",
    "lines": [
      "= $true | or $true $true;"
    ],
    "preprocessed": "= $true | or $true $true;",
    "code": "2113023213123211130232130232132233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "or",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14B;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 576
  },
  {
    "role": "code",
    "lines": [
      "or (= 2 2) (> 4 2);"
    ],
    "preprocessed": "or (= 2 2) (> 4 2);",
    "code": "211132211321032103322100321003210332233",
    "parse": [
      "or",
      [
        "=",
        "2",
        "2"
      ],
      [
        ">",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 577
  },
  {
    "role": "code",
    "lines": [
      "or (= 1 1) (> 6 4);"
    ],
    "preprocessed": "or (= 1 1) (> 6 4);",
    "code": "21113221132132133221003211032100332233",
    "parse": [
      "or",
      [
        "=",
        "1",
        "1"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 578
  },
  {
    "role": "code",
    "lines": [
      "or (< 3 4) (= 5 5);"
    ],
    "preprocessed": "or (< 3 4) (= 5 5);",
    "code": "2111322103211321003322113210132101332233",
    "parse": [
      "or",
      [
        "<",
        "3",
        "4"
      ],
      [
        "=",
        "5",
        "5"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 579
  },
  {
    "role": "code",
    "lines": [
      "or (= 3 3) (= 4 4);"
    ],
    "preprocessed": "or (= 3 3) (= 4 4);",
    "code": "211132211321132113322113210032100332233",
    "parse": [
      "or",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "4",
        "4"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 580
  },
  {
    "role": "code",
    "lines": [
      "or (= 3 3) (= 0 0);"
    ],
    "preprocessed": "or (= 3 3) (= 0 0);",
    "code": "21113221132113211332211320320332233",
    "parse": [
      "or",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "0",
        "0"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 581
  },
  {
    "role": "code",
    "lines": [
      "or (< 5 7) (> 5 3);"
    ],
    "preprocessed": "or (< 5 7) (> 5 3);",
    "code": "21113221032101321113322100321013211332233",
    "parse": [
      "or",
      [
        "<",
        "5",
        "7"
      ],
      [
        ">",
        "5",
        "3"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 582
  },
  {
    "role": "code",
    "lines": [
      "or (> 5 4) (> 1 0);"
    ],
    "preprocessed": "or (> 5 4) (> 1 0);",
    "code": "211132210032101321003322100321320332233",
    "parse": [
      "or",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 583
  },
  {
    "role": "code",
    "lines": [
      "or (> 3 0) (= 3 3);"
    ],
    "preprocessed": "or (> 3 0) (= 3 3);",
    "code": "2111322100321132033221132113211332233",
    "parse": [
      "or",
      [
        ">",
        "3",
        "0"
      ],
      [
        "=",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 584
  },
  {
    "role": "code",
    "lines": [
      "or (< 3 4) (< 3 6);"
    ],
    "preprocessed": "or (< 3 4) (< 3 6);",
    "code": "211132210321132100332210321132110332233",
    "parse": [
      "or",
      [
        "<",
        "3",
        "4"
      ],
      [
        "<",
        "3",
        "6"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 585
  },
  {
    "role": "code",
    "lines": [
      "or (> 5 4) (> 5 4);"
    ],
    "preprocessed": "or (> 5 4) (> 5 4);",
    "code": "2111322100321013210033221003210132100332233",
    "parse": [
      "or",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "5",
        "4"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 586
  },
  {
    "role": "code",
    "lines": [
      "or (> 6 4) (< 3 1);"
    ],
    "preprocessed": "or (> 6 4) (< 3 1);",
    "code": "211132210032110321003322103211321332233",
    "parse": [
      "or",
      [
        ">",
        "6",
        "4"
      ],
      [
        "<",
        "3",
        "1"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 587
  },
  {
    "role": "code",
    "lines": [
      "or (> 3 1) (> 3 3);"
    ],
    "preprocessed": "or (> 3 1) (> 3 3);",
    "code": "21113221003211321332210032113211332233",
    "parse": [
      "or",
      [
        ">",
        "3",
        "1"
      ],
      [
        ">",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 588
  },
  {
    "role": "code",
    "lines": [
      "or (= 0 0) (= 5 4);"
    ],
    "preprocessed": "or (= 0 0) (= 5 4);",
    "code": "2111322113203203322113210132100332233",
    "parse": [
      "or",
      [
        "=",
        "0",
        "0"
      ],
      [
        "=",
        "5",
        "4"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 589
  },
  {
    "role": "code",
    "lines": [
      "or (< 2 4) (> 4 6);"
    ],
    "preprocessed": "or (< 2 4) (> 4 6);",
    "code": "21113221032103210033221003210032110332233",
    "parse": [
      "or",
      [
        "<",
        "2",
        "4"
      ],
      [
        ">",
        "4",
        "6"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 590
  },
  {
    "role": "code",
    "lines": [
      "or (= 3 3) (= 3 1);"
    ],
    "preprocessed": "or (= 3 3) (= 3 1);",
    "code": "211132211321132113322113211321332233",
    "parse": [
      "or",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "3",
        "1"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 591
  },
  {
    "role": "code",
    "lines": [
      "or (> 1 5) (< 3 6);"
    ],
    "preprocessed": "or (> 1 5) (< 3 6);",
    "code": "211132210032132101332210321132110332233",
    "parse": [
      "or",
      [
        ">",
        "1",
        "5"
      ],
      [
        "<",
        "3",
        "6"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 592
  },
  {
    "role": "code",
    "lines": [
      "or (< 6 2) (= 2 2);"
    ],
    "preprocessed": "or (< 6 2) (= 2 2);",
    "code": "21113221032110321033221132103210332233",
    "parse": [
      "or",
      [
        "<",
        "6",
        "2"
      ],
      [
        "=",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 593
  },
  {
    "role": "code",
    "lines": [
      "or (> 2 5) (= 5 5);"
    ],
    "preprocessed": "or (> 2 5) (= 5 5);",
    "code": "21113221003210321013322113210132101332233",
    "parse": [
      "or",
      [
        ">",
        "2",
        "5"
      ],
      [
        "=",
        "5",
        "5"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 594
  },
  {
    "role": "code",
    "lines": [
      "or (< 6 2) (= 3 3);"
    ],
    "preprocessed": "or (< 6 2) (= 3 3);",
    "code": "21113221032110321033221132113211332233",
    "parse": [
      "or",
      [
        "<",
        "6",
        "2"
      ],
      [
        "=",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 595
  },
  {
    "role": "code",
    "lines": [
      "or (< 4 3) (> 5 2);"
    ],
    "preprocessed": "or (< 4 3) (> 5 2);",
    "code": "2111322103210032113322100321013210332233",
    "parse": [
      "or",
      [
        "<",
        "4",
        "3"
      ],
      [
        ">",
        "5",
        "2"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 596
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 5 4) (= 1 2);"
    ],
    "preprocessed": "not | or (< 5 4) (= 1 2);",
    "code": "2101312321113221032101321003322113213210332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "<",
          "5",
          "4"
        ],
        [
          "=",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 597
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 4) (= 5 1);"
    ],
    "preprocessed": "not | or (< 6 4) (= 5 1);",
    "code": "21013123211132210321103210033221132101321332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "<",
          "6",
          "4"
        ],
        [
          "=",
          "5",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 598
  },
  {
    "role": "code",
    "lines": [
      "not | or (> 2 6) (= 1 5);"
    ],
    "preprocessed": "not | or (> 2 6) (= 1 5);",
    "code": "21013123211132210032103211033221132132101332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          ">",
          "2",
          "6"
        ],
        [
          "=",
          "1",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 599
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 3) (= 2 3);"
    ],
    "preprocessed": "not | or (< 6 3) (= 2 3);",
    "code": "2101312321113221032110321133221132103211332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "2",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 600
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 4) (> 0 1);"
    ],
    "preprocessed": "not | or (< 6 4) (> 0 1);",
    "code": "2101312321113221032110321003322100320321332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "<",
          "6",
          "4"
        ],
        [
          ">",
          "0",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 601
  },
  {
    "role": "code",
    "lines": [
      "not | or (= 3 5) (< 4 1);"
    ],
    "preprocessed": "not | or (= 3 5) (< 4 1);",
    "code": "2101312321113221132113210133221032100321332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "=",
          "3",
          "5"
        ],
        [
          "<",
          "4",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 602
  },
  {
    "role": "code",
    "lines": [
      "not | or (= 4 1) (< 4 2);"
    ],
    "preprocessed": "not | or (= 4 1) (< 4 2);",
    "code": "2101312321113221132100321332210321003210332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "=",
          "4",
          "1"
        ],
        [
          "<",
          "4",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 603
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 3) (= 3 0);"
    ],
    "preprocessed": "not | or (< 6 3) (= 3 0);",
    "code": "210131232111322103211032113322113211320332233",
    "parse": [
      "not",
      [
        -1,
        "or",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "3",
          "0"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 604
  },
  {
    "role": "code",
    "lines": [
      "or (< 4 2) (< 4 6);"
    ],
    "preprocessed": "or (< 4 2) (< 4 6);",
    "code": "2111322103210032103322103210032110332233",
    "parse": [
      "or",
      [
        "<",
        "4",
        "2"
      ],
      [
        "<",
        "4",
        "6"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 605
  },
  {
    "role": "code",
    "lines": [
      "or (> 4 1) (< 5 2);"
    ],
    "preprocessed": "or (> 4 1) (< 5 2);",
    "code": "211132210032100321332210321013210332233",
    "parse": [
      "or",
      [
        ">",
        "4",
        "1"
      ],
      [
        "<",
        "5",
        "2"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 606
  },
  {
    "role": "code",
    "lines": [
      "or (> 0 1) (> 7 5);"
    ],
    "preprocessed": "or (> 0 1) (> 7 5);",
    "code": "211132210032032133221003211132101332233",
    "parse": [
      "or",
      [
        ">",
        "0",
        "1"
      ],
      [
        ">",
        "7",
        "5"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 607
  },
  {
    "role": "code",
    "lines": [
      "or (< 3 4) (> 3 6);"
    ],
    "preprocessed": "or (< 3 4) (> 3 6);",
    "code": "2111322103211321003322100321132110332233",
    "parse": [
      "or",
      [
        "<",
        "3",
        "4"
      ],
      [
        ">",
        "3",
        "6"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 608
  },
  {
    "role": "code",
    "lines": [
      "or (> 1 2) (> 6 4);"
    ],
    "preprocessed": "or (> 1 2) (> 6 4);",
    "code": "2111322100321321033221003211032100332233",
    "parse": [
      "or",
      [
        ">",
        "1",
        "2"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 609
  },
  {
    "role": "code",
    "lines": [
      "or (< 0 1) (= 4 5);"
    ],
    "preprocessed": "or (< 0 1) (= 4 5);",
    "code": "2111322103203213322113210032101332233",
    "parse": [
      "or",
      [
        "<",
        "0",
        "1"
      ],
      [
        "=",
        "4",
        "5"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 610
  },
  {
    "role": "code",
    "lines": [
      "or (< 4 6) (< 5 7);"
    ],
    "preprocessed": "or (< 4 6) (< 5 7);",
    "code": "21113221032100321103322103210132111332233",
    "parse": [
      "or",
      [
        "<",
        "4",
        "6"
      ],
      [
        "<",
        "5",
        "7"
      ]
    ],
    "spider": "&#xF14B;&#xF246;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14B;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 611
  },
  {
    "role": "doc",
    "lines": [
      "Now is an opportune moment to add `<=` and `>=` definitions.",
      "There are shorter definitions, like just negating `>` and `<`, but this feels more natural?"
    ],
    "stanza": 612
  },
  {
    "role": "code",
    "lines": [
      "define >= | ? x | ? y | or (> $x $y) (= $x $y);"
    ],
    "preprocessed": "define >= | ? x | ? y | or (> $x $y) (= $x $y);",
    "code": "2110132100100031232110032101001312321100321111013123211132210030232101001302321111013322113023210100130232111101332233",
    "parse": [
      "define",
      ">=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "or",
            [
              ">",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF14C;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14B;&#xF246;&#xF148;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 613
  },
  {
    "role": "code",
    "lines": [
      "define <= | ? x | ? y | or (< $x $y) (= $x $y);"
    ],
    "preprocessed": "define <= | ? x | ? y | or (< $x $y) (= $x $y);",
    "code": "211013210010013123211003210100131232110032111101312321113221030232101001302321111013322113023210100130232111101332233",
    "parse": [
      "define",
      "<=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "or",
            [
              "<",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF14D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14B;&#xF246;&#xF146;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 614
  },
  {
    "role": "code",
    "lines": [
      ">= 0 0;"
    ],
    "preprocessed": ">= 0 0;",
    "code": "2100100032032032233",
    "parse": [
      ">=",
      "0",
      "0"
    ],
    "spider": "&#xF145;&#xF14C;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 615
  },
  {
    "role": "code",
    "lines": [
      "<= 0 0;"
    ],
    "preprocessed": "<= 0 0;",
    "code": "2100100132032032233",
    "parse": [
      "<=",
      "0",
      "0"
    ],
    "spider": "&#xF145;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 616
  },
  {
    "role": "code",
    "lines": [
      "not | >= 0 1;"
    ],
    "preprocessed": "not | >= 0 1;",
    "code": "210131232100100032032132233",
    "parse": [
      "not",
      [
        -1,
        ">=",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF14C;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 617
  },
  {
    "role": "code",
    "lines": [
      "<= 0 1;"
    ],
    "preprocessed": "<= 0 1;",
    "code": "2100100132032132233",
    "parse": [
      "<=",
      "0",
      "1"
    ],
    "spider": "&#xF145;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 618
  },
  {
    "role": "code",
    "lines": [
      "not | >= 0 2;"
    ],
    "preprocessed": "not | >= 0 2;",
    "code": "2101312321001000320321032233",
    "parse": [
      "not",
      [
        -1,
        ">=",
        "0",
        "2"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF14C;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 619
  },
  {
    "role": "code",
    "lines": [
      "<= 0 2;"
    ],
    "preprocessed": "<= 0 2;",
    "code": "21001001320321032233",
    "parse": [
      "<=",
      "0",
      "2"
    ],
    "spider": "&#xF145;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 620
  },
  {
    "role": "code",
    "lines": [
      ">= 1 0;"
    ],
    "preprocessed": ">= 1 0;",
    "code": "2100100032132032233",
    "parse": [
      ">=",
      "1",
      "0"
    ],
    "spider": "&#xF145;&#xF14C;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 621
  },
  {
    "role": "code",
    "lines": [
      "not | <= 1 0;"
    ],
    "preprocessed": "not | <= 1 0;",
    "code": "210131232100100132132032233",
    "parse": [
      "not",
      [
        -1,
        "<=",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 622
  },
  {
    "role": "code",
    "lines": [
      ">= 1 1;"
    ],
    "preprocessed": ">= 1 1;",
    "code": "2100100032132132233",
    "parse": [
      ">=",
      "1",
      "1"
    ],
    "spider": "&#xF145;&#xF14C;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 623
  },
  {
    "role": "code",
    "lines": [
      "<= 1 1;"
    ],
    "preprocessed": "<= 1 1;",
    "code": "2100100132132132233",
    "parse": [
      "<=",
      "1",
      "1"
    ],
    "spider": "&#xF145;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 624
  },
  {
    "role": "code",
    "lines": [
      "not | >= 1 2;"
    ],
    "preprocessed": "not | >= 1 2;",
    "code": "2101312321001000321321032233",
    "parse": [
      "not",
      [
        -1,
        ">=",
        "1",
        "2"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF14C;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 625
  },
  {
    "role": "code",
    "lines": [
      "<= 1 2;"
    ],
    "preprocessed": "<= 1 2;",
    "code": "21001001321321032233",
    "parse": [
      "<=",
      "1",
      "2"
    ],
    "spider": "&#xF145;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 626
  },
  {
    "role": "code",
    "lines": [
      ">= 2 0;"
    ],
    "preprocessed": ">= 2 0;",
    "code": "21001000321032032233",
    "parse": [
      ">=",
      "2",
      "0"
    ],
    "spider": "&#xF145;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 627
  },
  {
    "role": "code",
    "lines": [
      "not | <= 2 0;"
    ],
    "preprocessed": "not | <= 2 0;",
    "code": "2101312321001001321032032233",
    "parse": [
      "not",
      [
        -1,
        "<=",
        "2",
        "0"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 628
  },
  {
    "role": "code",
    "lines": [
      ">= 2 1;"
    ],
    "preprocessed": ">= 2 1;",
    "code": "21001000321032132233",
    "parse": [
      ">=",
      "2",
      "1"
    ],
    "spider": "&#xF145;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 629
  },
  {
    "role": "code",
    "lines": [
      "not | <= 2 1;"
    ],
    "preprocessed": "not | <= 2 1;",
    "code": "2101312321001001321032132233",
    "parse": [
      "not",
      [
        -1,
        "<=",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 630
  },
  {
    "role": "code",
    "lines": [
      ">= 2 2;"
    ],
    "preprocessed": ">= 2 2;",
    "code": "210010003210321032233",
    "parse": [
      ">=",
      "2",
      "2"
    ],
    "spider": "&#xF145;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 631
  },
  {
    "role": "code",
    "lines": [
      "<= 2 2;"
    ],
    "preprocessed": "<= 2 2;",
    "code": "210010013210321032233",
    "parse": [
      "<=",
      "2",
      "2"
    ],
    "spider": "&#xF145;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 632
  },
  {
    "role": "file",
    "lines": [
      "== COS_Cons =="
    ],
    "stanza": 633
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Now we introduce our first data structure.  The expression `cons X Y` stores `X` and `Y`",
      "in a pair.  We can then pull `X` out from the pair with `car (cons X Y)`, and we can",
      "get `Y` out from the pair with `cdr (cons X Y)`.  Apologies for the arcane names,",
      "they are inherited from Lisp (and they'll be encoded as something else in the",
      "message anyway).",
      "",
      "We give a definition of `cons` that is a bit funky.  The `cons X Y` expression",
      "constructs a function which takes a single argument, also a function.  That",
      "argument gets called with `X` and `Y`.  That means to pull `X` back out, we",
      "just need to call `cons X Y` with a function like `? a | ? b $a`.  Likewise for",
      "`Y`.  That is exactly what `car` and `cdr` do.",
      "",
      "Definitions like that can be a bit hard to think about.  But the great",
      "thing is that you can apply definitions like these without initially",
      "understanding them.  So if the listener wants to try them out, they",
      "can there's an element of interactivity beyond what a plain text",
      "message could give.",
      ""
    ],
    "section_description": "introduce pairs",
    "section_category": "MATH",
    "section_index": 14,
    "stanza": 634
  },
  {
    "role": "code",
    "lines": [
      "intro cons;"
    ],
    "preprocessed": "intro cons;",
    "code": "210010321010132233",
    "parse": [
      "intro",
      "cons"
    ],
    "spider": "&#xF156;&#xF24A;&#xF159;&#xF24B;",
    "dt": false,
    "stanza": 635
  },
  {
    "role": "code",
    "lines": [
      "intro car;"
    ],
    "preprocessed": "intro car;",
    "code": "210010321011032233",
    "parse": [
      "intro",
      "car"
    ],
    "spider": "&#xF156;&#xF24A;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 636
  },
  {
    "role": "code",
    "lines": [
      "intro cdr;"
    ],
    "preprocessed": "intro cdr;",
    "code": "210010321011132233",
    "parse": [
      "intro",
      "cdr"
    ],
    "spider": "&#xF156;&#xF24A;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 637
  },
  {
    "role": "code",
    "lines": [
      "define cons | ? x | ? y | ? z | z $x $y;"
    ],
    "preprocessed": "define cons | ? x | ? y | ? z | z $x $y;",
    "code": "21101321010131232110032101001312321100321111013123211003211111031232111110302321010013023211110132233",
    "parse": [
      "define",
      "cons",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "z",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF159;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF182;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 638
  },
  {
    "role": "code",
    "lines": [
      "define car | ? z | z | ? x | ? y $x;"
    ],
    "preprocessed": "define car | ? z | z | ? x | ? y $x;",
    "code": "211013210110312321100321111103123211111031232110032101001312321100321111013023210100132233",
    "parse": [
      "define",
      "car",
      [
        -1,
        "?",
        "z",
        [
          -1,
          "z",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "?",
              "y",
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15A;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF182;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 639
  },
  {
    "role": "code",
    "lines": [
      "define cdr | ? z | z | ? x | ? y $y;"
    ],
    "preprocessed": "define cdr | ? z | z | ? x | ? y $y;",
    "code": "211013210111312321100321111103123211111031232110032101001312321100321111013023211110132233",
    "parse": [
      "define",
      "cdr",
      [
        -1,
        "?",
        "z",
        [
          -1,
          "z",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "?",
              "y",
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15B;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF182;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 640
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 0 4) | = 0 | car $x;"
    ],
    "preprocessed": "assign x (cons 0 4) | = 0 | car $x;",
    "code": "211103210100132210101320321003312321132031232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "0",
        "4"
      ],
      [
        -1,
        "=",
        "0",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 641
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 0 4) | = 4 | cdr $x;"
    ],
    "preprocessed": "assign x (cons 0 4) | = 4 | cdr $x;",
    "code": "21110321010013221010132032100331232113210031232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "0",
        "4"
      ],
      [
        -1,
        "=",
        "4",
        [
          -1,
          "cdr",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 642
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 6 2) | = 6 | car $x;"
    ],
    "preprocessed": "assign x (cons 6 2) | = 6 | car $x;",
    "code": "211103210100132210101321103210331232113211031232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "6",
        "2"
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 643
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 6 2) | = 2 | cdr $x;"
    ],
    "preprocessed": "assign x (cons 6 2) | = 2 | cdr $x;",
    "code": "21110321010013221010132110321033123211321031232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "6",
        "2"
      ],
      [
        -1,
        "=",
        "2",
        [
          -1,
          "cdr",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF146;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 644
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 9) | = 3 | car $x;"
    ],
    "preprocessed": "assign x (cons 3 9) | = 3 | car $x;",
    "code": "211103210100132210101321132100133123211321131232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        "9"
      ],
      [
        -1,
        "=",
        "3",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 645
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 9) | = 9 | cdr $x;"
    ],
    "preprocessed": "assign x (cons 3 9) | = 9 | cdr $x;",
    "code": "21110321010013221010132113210013312321132100131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        "9"
      ],
      [
        -1,
        "=",
        "9",
        [
          -1,
          "cdr",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 646
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 7 | cons 10 2) | = 7 | car $x;"
    ],
    "preprocessed": "assign x (cons 7 | cons 10 2) | = 7 | car $x;",
    "code": "2111032101001322101013211131232101013210103210331232113211131232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "7",
        [
          -1,
          "cons",
          "10",
          "2"
        ]
      ],
      [
        -1,
        "=",
        "7",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14B;&#xF248;&#xF159;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14B;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 647
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 7 | cons 10 2) | = 10 | car | cdr $x;"
    ],
    "preprocessed": "assign x (cons 7 | cons 10 2) | = 10 | car | cdr $x;",
    "code": "211103210100132210101321113123210101321010321033123211321010312321011031232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "7",
        [
          -1,
          "cons",
          "10",
          "2"
        ]
      ],
      [
        -1,
        "=",
        "10",
        [
          -1,
          "car",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14B;&#xF248;&#xF159;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14E;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 648
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 7 | cons 10 2) | = 2 | cdr | cdr $x;"
    ],
    "preprocessed": "assign x (cons 7 | cons 10 2) | = 2 | cdr | cdr $x;",
    "code": "2111032101001322101013211131232101013210103210331232113210312321011131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "7",
        [
          -1,
          "cons",
          "10",
          "2"
        ]
      ],
      [
        -1,
        "=",
        "2",
        [
          -1,
          "cdr",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14B;&#xF248;&#xF159;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF146;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 649
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 1 | cons 15 17) | = 1 | car $x;"
    ],
    "preprocessed": "assign x (cons 1 | cons 15 17) | = 1 | car $x;",
    "code": "211103210100132210101321312321010132111132100013312321132131232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "1",
        [
          -1,
          "cons",
          "15",
          "17"
        ]
      ],
      [
        -1,
        "=",
        "1",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF145;&#xF248;&#xF159;&#xF24A;&#xF153;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 650
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 1 | cons 15 17) | = 15 | car | cdr $x;"
    ],
    "preprocessed": "assign x (cons 1 | cons 15 17) | = 15 | car | cdr $x;",
    "code": "2111032101001322101013213123210101321111321000133123211321111312321011031232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "1",
        [
          -1,
          "cons",
          "15",
          "17"
        ]
      ],
      [
        -1,
        "=",
        "15",
        [
          -1,
          "car",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF145;&#xF248;&#xF159;&#xF24A;&#xF153;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF153;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 651
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 1 | cons 15 17) | = 17 | cdr | cdr $x;"
    ],
    "preprocessed": "assign x (cons 1 | cons 15 17) | = 17 | cdr | cdr $x;",
    "code": "21110321010013221010132131232101013211113210001331232113210001312321011131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "1",
        [
          -1,
          "cons",
          "15",
          "17"
        ]
      ],
      [
        -1,
        "=",
        "17",
        [
          -1,
          "cdr",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF145;&#xF248;&#xF159;&#xF24A;&#xF153;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF155;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 652
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 8 | cons 14 9) | = 8 | car $x;"
    ],
    "preprocessed": "assign x (cons 8 | cons 14 9) | = 8 | car $x;",
    "code": "21110321010013221010132100031232101013211103210013312321132100031232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "8",
        [
          -1,
          "cons",
          "14",
          "9"
        ]
      ],
      [
        -1,
        "=",
        "8",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14C;&#xF248;&#xF159;&#xF24A;&#xF152;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 653
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 8 | cons 14 9) | = 14 | car | cdr $x;"
    ],
    "preprocessed": "assign x (cons 8 | cons 14 9) | = 14 | car | cdr $x;",
    "code": "211103210100132210101321000312321010132111032100133123211321110312321011031232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "8",
        [
          -1,
          "cons",
          "14",
          "9"
        ]
      ],
      [
        -1,
        "=",
        "14",
        [
          -1,
          "car",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14C;&#xF248;&#xF159;&#xF24A;&#xF152;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF152;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 654
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 8 | cons 14 9) | = 9 | cdr | cdr $x;"
    ],
    "preprocessed": "assign x (cons 8 | cons 14 9) | = 9 | cdr | cdr $x;",
    "code": "211103210100132210101321000312321010132111032100133123211321001312321011131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "8",
        [
          -1,
          "cons",
          "14",
          "9"
        ]
      ],
      [
        -1,
        "=",
        "9",
        [
          -1,
          "cdr",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF14C;&#xF248;&#xF159;&#xF24A;&#xF152;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 655
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 3 | car $x;"
    ],
    "preprocessed": "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 3 | car $x;",
    "code": "211103210100132210101321131232101013203123210101321031232101013210032133123211321131232101103023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "3",
        [
          -1,
          "car",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF248;&#xF159;&#xF24A;&#xF144;&#xF248;&#xF159;&#xF24A;&#xF146;&#xF248;&#xF159;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF248;&#xF15A;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 656
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 0 | car | cdr $x;"
    ],
    "preprocessed": "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 0 | car | cdr $x;",
    "code": "211103210100132210101321131232101013203123210101321031232101013210032133123211320312321011031232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "0",
        [
          -1,
          "car",
          [
            -1,
            "cdr",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF248;&#xF159;&#xF24A;&#xF144;&#xF248;&#xF159;&#xF24A;&#xF146;&#xF248;&#xF159;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 657
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 2 | car | cdr | cdr $x;"
    ],
    "preprocessed": "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 2 | car | cdr | cdr $x;",
    "code": "21110321010013221010132113123210101320312321010132103123210101321003213312321132103123210110312321011131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "2",
        [
          -1,
          "car",
          [
            -1,
            "cdr",
            [
              -1,
              "cdr",
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF248;&#xF159;&#xF24A;&#xF144;&#xF248;&#xF159;&#xF24A;&#xF146;&#xF248;&#xF159;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF146;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 658
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 4 | car | cdr | cdr | cdr $x;"
    ],
    "preprocessed": "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 4 | car | cdr | cdr | cdr $x;",
    "code": "2111032101001322101013211312321010132031232101013210312321010132100321331232113210031232101103123210111312321011131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "4",
        [
          -1,
          "car",
          [
            -1,
            "cdr",
            [
              -1,
              "cdr",
              [
                -1,
                "cdr",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF248;&#xF159;&#xF24A;&#xF144;&#xF248;&#xF159;&#xF24A;&#xF146;&#xF248;&#xF159;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 659
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 1 | cdr | cdr | cdr | cdr $x;"
    ],
    "preprocessed": "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 1 | cdr | cdr | cdr | cdr $x;",
    "code": "21110321010013221010132113123210101320312321010132103123210101321003213312321132131232101113123210111312321011131232101113023210100132233",
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "1",
        [
          -1,
          "cdr",
          [
            -1,
            "cdr",
            [
              -1,
              "cdr",
              [
                -1,
                "cdr",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF16D;&#xF246;&#xF159;&#xF24A;&#xF147;&#xF248;&#xF159;&#xF24A;&#xF144;&#xF248;&#xF159;&#xF24A;&#xF146;&#xF248;&#xF159;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 660
  },
  {
    "role": "file",
    "lines": [
      "== COS_Mutable =="
    ],
    "stanza": 661
  },
  {
    "role": "doc",
    "lines": [
      "",
      "With `define`, we showed that there is a global memory, where we can associate a",
      "symbol with a value.  That's nice, but it can be handy to separate memory from",
      "naming.  In this section we introduce `make-cell X`, which creates a \"cell\"",
      "of memory and puts `X` in it.  The cell can be read with `get!`, like",
      "`get! | make-cell X`, or written to with `set!`, like `set! (make-cell-X) Y`.",
      ""
    ],
    "section_description": "introduce mutable cells",
    "section_category": "MATH",
    "section_index": 15,
    "stanza": 662
  },
  {
    "role": "code",
    "lines": [
      "intro make-cell;"
    ],
    "preprocessed": "intro make-cell;",
    "code": "210010321101132233",
    "parse": [
      "intro",
      "make-cell"
    ],
    "spider": "&#xF156;&#xF24A;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 663
  },
  {
    "role": "code",
    "lines": [
      "intro set!;"
    ],
    "preprocessed": "intro set!;",
    "code": "210010321110032233",
    "parse": [
      "intro",
      "set!"
    ],
    "spider": "&#xF156;&#xF24A;&#xF160;&#xF24B;",
    "dt": true,
    "stanza": 664
  },
  {
    "role": "code",
    "lines": [
      "intro get!;"
    ],
    "preprocessed": "intro get!;",
    "code": "210010321110132233",
    "parse": [
      "intro",
      "get!"
    ],
    "spider": "&#xF156;&#xF24A;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 665
  },
  {
    "role": "code",
    "lines": [
      "define demo:make-cell:x | make-cell 14;"
    ],
    "preprocessed": "define demo:make-cell:x | make-cell 14;",
    "code": "21101321001010312321101132111032233",
    "parse": [
      "define",
      "demo:make-cell:x",
      [
        -1,
        "make-cell",
        "14"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF14E;&#xF248;&#xF15F;&#xF24A;&#xF152;&#xF24B;",
    "dt": true,
    "stanza": 666
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 14;"
    ],
    "preprocessed": "= (get! $demo:make-cell:x) 14;",
    "code": "21132211101302321001010332111032233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:x"
        ]
      ],
      "14"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF152;&#xF24B;",
    "dt": false,
    "stanza": 667
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:x 15;"
    ],
    "preprocessed": "set! $demo:make-cell:x 15;",
    "code": "21110030232100101032111132233",
    "parse": [
      "set!",
      [
        -2,
        "demo:make-cell:x"
      ],
      "15"
    ],
    "spider": "&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF153;&#xF24B;",
    "dt": true,
    "stanza": 668
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 15;"
    ],
    "preprocessed": "= (get! $demo:make-cell:x) 15;",
    "code": "21132211101302321001010332111132233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:x"
        ]
      ],
      "15"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 669
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:x 5;"
    ],
    "preprocessed": "set! $demo:make-cell:x 5;",
    "code": "2111003023210010103210132233",
    "parse": [
      "set!",
      [
        -2,
        "demo:make-cell:x"
      ],
      "5"
    ],
    "spider": "&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF149;&#xF24B;",
    "dt": true,
    "stanza": 670
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:x 7;"
    ],
    "preprocessed": "set! $demo:make-cell:x 7;",
    "code": "2111003023210010103211132233",
    "parse": [
      "set!",
      [
        -2,
        "demo:make-cell:x"
      ],
      "7"
    ],
    "spider": "&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF14B;&#xF24B;",
    "dt": true,
    "stanza": 671
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 7;"
    ],
    "preprocessed": "= (get! $demo:make-cell:x) 7;",
    "code": "2113221110130232100101033211132233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:x"
        ]
      ],
      "7"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 672
  },
  {
    "role": "code",
    "lines": [
      "define demo:make-cell:y | make-cell 11;"
    ],
    "preprocessed": "define demo:make-cell:y | make-cell 11;",
    "code": "21101321001011312321101132101132233",
    "parse": [
      "define",
      "demo:make-cell:y",
      [
        -1,
        "make-cell",
        "11"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF14F;&#xF248;&#xF15F;&#xF24A;&#xF14F;&#xF24B;",
    "dt": true,
    "stanza": 673
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:y) 11;"
    ],
    "preprocessed": "= (get! $demo:make-cell:y) 11;",
    "code": "21132211101302321001011332101132233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:y"
        ]
      ],
      "11"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14F;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 674
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:y 22;"
    ],
    "preprocessed": "set! $demo:make-cell:y 22;",
    "code": "211100302321001011321011032233",
    "parse": [
      "set!",
      [
        -2,
        "demo:make-cell:y"
      ],
      "22"
    ],
    "spider": "&#xF160;&#xF249;&#xF145;&#xF14F;&#xF24A;&#xF15A;&#xF24B;",
    "dt": true,
    "stanza": 675
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:y) 22;"
    ],
    "preprocessed": "= (get! $demo:make-cell:y) 22;",
    "code": "211322111013023210010113321011032233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:y"
        ]
      ],
      "22"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14F;&#xF245;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 676
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 7;"
    ],
    "preprocessed": "= (get! $demo:make-cell:x) 7;",
    "code": "2113221110130232100101033211132233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:x"
        ]
      ],
      "7"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 677
  },
  {
    "role": "code",
    "lines": [
      "= 29 (+ (get! $demo:make-cell:x) | get! $demo:make-cell:y);"
    ],
    "preprocessed": "= 29 (+ (get! $demo:make-cell:x) | get! $demo:make-cell:y);",
    "code": "211321110132210103221110130232100101033123211101302321001011332233",
    "parse": [
      "=",
      "29",
      [
        "+",
        [
          "get!",
          [
            -2,
            "demo:make-cell:x"
          ]
        ],
        [
          -1,
          "get!",
          [
            -2,
            "demo:make-cell:y"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF161;&#xF246;&#xF14E;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF248;&#xF161;&#xF249;&#xF145;&#xF14F;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 678
  },
  {
    "role": "code",
    "lines": [
      "if (= (get! $demo:make-cell:x) 7) (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 99);"
    ],
    "preprocessed": "if (= (get! $demo:make-cell:x) 7) (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 99);",
    "code": "211113221132211101302321001010332111332211100302321001010321011000332211100302321001010321100011332233",
    "parse": [
      "if",
      [
        "=",
        [
          "get!",
          [
            -2,
            "demo:make-cell:x"
          ]
        ],
        "7"
      ],
      [
        "set!",
        [
          -2,
          "demo:make-cell:x"
        ],
        "88"
      ],
      [
        "set!",
        [
          -2,
          "demo:make-cell:x"
        ],
        "99"
      ]
    ],
    "spider": "&#xF153;&#xF246;&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF14B;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF145;&#xF15C;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF145;&#xF167;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 679
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 88;"
    ],
    "preprocessed": "= (get! $demo:make-cell:x) 88;",
    "code": "21132211101302321001010332101100032233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:x"
        ]
      ],
      "88"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF145;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 680
  },
  {
    "role": "code",
    "lines": [
      "if (= (get! $demo:make-cell:x) 7) (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 99);"
    ],
    "preprocessed": "if (= (get! $demo:make-cell:x) 7) (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 99);",
    "code": "211113221132211101302321001010332111332211100302321001010321011000332211100302321001010321100011332233",
    "parse": [
      "if",
      [
        "=",
        [
          "get!",
          [
            -2,
            "demo:make-cell:x"
          ]
        ],
        "7"
      ],
      [
        "set!",
        [
          -2,
          "demo:make-cell:x"
        ],
        "88"
      ],
      [
        "set!",
        [
          -2,
          "demo:make-cell:x"
        ],
        "99"
      ]
    ],
    "spider": "&#xF153;&#xF246;&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF14B;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF145;&#xF15C;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF145;&#xF167;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 681
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 99;"
    ],
    "preprocessed": "= (get! $demo:make-cell:x) 99;",
    "code": "21132211101302321001010332110001132233",
    "parse": [
      "=",
      [
        "get!",
        [
          -2,
          "demo:make-cell:x"
        ]
      ],
      "99"
    ],
    "spider": "&#xF147;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 682
  },
  {
    "role": "file",
    "lines": [
      "== COS_ListPre =="
    ],
    "stanza": 683
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Lists are a handy data structure to have.  We'd like to get to the point",
      "in the message where we can make lists like this: `vector 1 4 5`,",
      "`vector 77 $undefined (vector 1 2 3) 14`, etc.  But",
      "`vector` can't be a function in the language we've described up to now,",
      "it just can't work syntactically.",
      "What we can do is make lists like this: `(list 3) 1 4 5`,",
      "`(list 4) 77 $undefined ((list 3) 1 2 3) 14`, where we manually",
      "specify how many values are in the list.",
      "And then we can introduce a way to transform the syntax of the language,",
      "so that `vector 1 4 5` gets rewritten to `(list 3) 1 4 5` prior to being",
      "evaluated.",
      "",
      "An alternative would be just to introduce some special new syntax for",
      "lists, and give examples.  If the listener finds our transformation approach",
      "confusing, they can simply ignore it and pick the message up again once",
      "`vector` is in place.  But by giving the transformation, we offer a second",
      "way to understand and experiment with the concepts being introduced.",
      ""
    ],
    "section_description": "introduce lists",
    "section_category": "MATH",
    "section_index": 16,
    "stanza": 684
  },
  {
    "role": "code",
    "lines": [
      "intro list;"
    ],
    "preprocessed": "intro list;",
    "code": "21001032100110032233",
    "parse": [
      "intro",
      "list"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF150;&#xF24B;",
    "dt": false,
    "stanza": 685
  },
  {
    "role": "code",
    "lines": [
      "define list:n | ? n | ? ret |",
      "  if (= $n 1) (? x | ret 1 $x) |",
      "  ? x | list:n (- $n 1) | ? y | ? z | ret (+ 1 $y) | cons $x $z;"
    ],
    "preprocessed": "define list:n | ? n | ? ret |\n  if (= $n 1) (? x | ret 1 $x) |\n  ? x | list:n (- $n 1) | ? y | ? z | ret (+ 1 $y) | cons $x $z;",
    "code": "211013210011013123211003210011103123211003210011113123211113221130232100111032133221100321010013123210011113213023210100133123211003210100131232100110132210113023210011103213312321100321111013123211003211111031232100111132210103213023211110133123210101302321010013023211111032233",
    "parse": [
      "define",
      "list:n",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "?",
          "ret",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "1"
            ],
            [
              "?",
              "x",
              [
                -1,
                "ret",
                "1",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -1,
              "?",
              "x",
              [
                -1,
                "list:n",
                [
                  "-",
                  [
                    -2,
                    "n"
                  ],
                  "1"
                ],
                [
                  -1,
                  "?",
                  "y",
                  [
                    -1,
                    "?",
                    "z",
                    [
                      -1,
                      "ret",
                      [
                        "+",
                        "1",
                        [
                          -2,
                          "y"
                        ]
                      ],
                      [
                        -1,
                        "cons",
                        [
                          -2,
                          "x"
                        ],
                        [
                          -2,
                          "z"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF151;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF153;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF153;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF151;&#xF246;&#xF14F;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF145;&#xF153;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF181;&#xF245;&#xF248;&#xF159;&#xF249;&#xF16D;&#xF249;&#xF182;&#xF24B;",
    "dt": true,
    "stanza": 686
  },
  {
    "role": "code",
    "lines": [
      "define list | ? n | if (= $n 0) (cons 0 0) (list:n $n $cons);"
    ],
    "preprocessed": "define list | ? n | if (= $n 0) (cons 0 0) (list:n $n $cons);",
    "code": "2110132100110031232110032100111031232111132211302321001110320332210101320320332210011013023210011103023210101332233",
    "parse": [
      "define",
      "list",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "n"
            ],
            "0"
          ],
          [
            "cons",
            "0",
            "0"
          ],
          [
            "list:n",
            [
              -2,
              "n"
            ],
            [
              -2,
              "cons"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF150;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF151;&#xF249;&#xF145;&#xF152;&#xF249;&#xF159;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 687
  },
  {
    "role": "code",
    "lines": [
      "intro undefined;"
    ],
    "preprocessed": "intro undefined;",
    "code": "2100103210000032233",
    "parse": [
      "intro",
      "undefined"
    ],
    "spider": "&#xF156;&#xF24A;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 688
  },
  {
    "role": "code",
    "lines": [
      "= $undefined $undefined;"
    ],
    "preprocessed": "= $undefined $undefined;",
    "code": "211302321000003023210000032233",
    "parse": [
      "=",
      [
        -2,
        "undefined"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF164;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 689
  },
  {
    "role": "code",
    "lines": [
      "not | = $undefined 0;"
    ],
    "preprocessed": "not | = $undefined 0;",
    "code": "210131232113023210000032032233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "undefined"
        ],
        "0"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF249;&#xF164;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 690
  },
  {
    "role": "code",
    "lines": [
      "not | = $undefined 1;"
    ],
    "preprocessed": "not | = $undefined 1;",
    "code": "210131232113023210000032132233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "undefined"
        ],
        "1"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF249;&#xF164;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 691
  },
  {
    "role": "code",
    "lines": [
      "not | = $undefined 2;"
    ],
    "preprocessed": "not | = $undefined 2;",
    "code": "2101312321130232100000321032233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "undefined"
        ],
        "2"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF249;&#xF164;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 692
  },
  {
    "role": "code",
    "lines": [
      "intro head;"
    ],
    "preprocessed": "intro head;",
    "code": "21001032101000032233",
    "parse": [
      "intro",
      "head"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 693
  },
  {
    "role": "code",
    "lines": [
      "define head | ? x:list |",
      "  if (= 0 | car $x:list) $undefined |",
      "  if (= 1 | car $x:list) (cdr $x:list) |",
      "  car | cdr $x:list;"
    ],
    "preprocessed": "define head | ? x:list |\n  if (= 0 | car $x:list) $undefined |\n  if (= 1 | car $x:list) (cdr $x:list) |\n  car | cdr $x:list;",
    "code": "2110132101000031232110032101000131232111132211320312321011030232101000133023210000031232111132211321312321011030232101000133221011130232101000133123210110312321011130232101000132233",
    "parse": [
      "define",
      "head",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "car",
              [
                -2,
                "x:list"
              ]
            ]
          ],
          [
            -2,
            "undefined"
          ],
          [
            -1,
            "if",
            [
              "=",
              "1",
              [
                -1,
                "car",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              "cdr",
              [
                -2,
                "x:list"
              ]
            ],
            [
              -1,
              "car",
              [
                -1,
                "cdr",
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF154;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF164;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF15B;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF15A;&#xF248;&#xF15B;&#xF249;&#xF145;&#xF155;&#xF24B;",
    "dt": true,
    "stanza": 694
  },
  {
    "role": "code",
    "lines": [
      "intro tail;"
    ],
    "preprocessed": "intro tail;",
    "code": "21001032101001032233",
    "parse": [
      "intro",
      "tail"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 695
  },
  {
    "role": "code",
    "lines": [
      "define tail | ? x:list |",
      "  if (= 0 | car $x:list) $undefined |",
      "  if (= 1 | car $x:list) (cons 0 0) |",
      "  cons (- (car $x:list) 1) | cdr | cdr $x:list;"
    ],
    "preprocessed": "define tail | ? x:list |\n  if (= 0 | car $x:list) $undefined |\n  if (= 1 | car $x:list) (cons 0 0) |\n  cons (- (car $x:list) 1) | cdr | cdr $x:list;",
    "code": "2110132101001031232110032101000131232111132211320312321011030232101000133023210000031232111132211321312321011030232101000133221010132032033123210101322101132210110302321010001332133123210111312321011130232101000132233",
    "parse": [
      "define",
      "tail",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "car",
              [
                -2,
                "x:list"
              ]
            ]
          ],
          [
            -2,
            "undefined"
          ],
          [
            -1,
            "if",
            [
              "=",
              "1",
              [
                -1,
                "car",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              "cons",
              "0",
              "0"
            ],
            [
              -1,
              "cons",
              [
                "-",
                [
                  "car",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                "1"
              ],
              [
                -1,
                "cdr",
                [
                  -1,
                  "cdr",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF156;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF164;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF159;&#xF246;&#xF14F;&#xF246;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF145;&#xF245;&#xF248;&#xF15B;&#xF248;&#xF15B;&#xF249;&#xF145;&#xF155;&#xF24B;",
    "dt": true,
    "stanza": 696
  },
  {
    "role": "code",
    "lines": [
      "= 17 | head | (list 4) 17 4 3 0;"
    ],
    "preprocessed": "= 17 | head | (list 4) 17 4 3 0;",
    "code": "21132100013123210100003123221001100321003321000132100321132032233",
    "parse": [
      "=",
      "17",
      [
        -1,
        "head",
        [
          -1,
          [
            "list",
            "4"
          ],
          "17",
          "4",
          "3",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF155;&#xF248;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF155;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 697
  },
  {
    "role": "code",
    "lines": [
      "= 14 | head | (list 9) 14 0 12 19 11 9 8 0 17;"
    ],
    "preprocessed": "= 14 | head | (list 9) 14 0 12 19 11 9 8 0 17;",
    "code": "211321110312321010000312322100110032100133211103203211003210011321011321001321000320321000132233",
    "parse": [
      "=",
      "14",
      [
        -1,
        "head",
        [
          -1,
          [
            "list",
            "9"
          ],
          "14",
          "0",
          "12",
          "19",
          "11",
          "9",
          "8",
          "0",
          "17"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF152;&#xF248;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF152;&#xF24A;&#xF144;&#xF24A;&#xF150;&#xF24A;&#xF157;&#xF24A;&#xF14F;&#xF24A;&#xF14D;&#xF24A;&#xF14C;&#xF24A;&#xF144;&#xF24A;&#xF155;&#xF24B;",
    "dt": false,
    "stanza": 698
  },
  {
    "role": "code",
    "lines": [
      "= 16 | head | (list 6) 16 9 0 17 17 10;"
    ],
    "preprocessed": "= 16 | head | (list 6) 16 9 0 17 17 10;",
    "code": "2113210000312321010000312322100110032110332100003210013203210001321000132101032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        "head",
        [
          -1,
          [
            "list",
            "6"
          ],
          "16",
          "9",
          "0",
          "17",
          "17",
          "10"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF155;&#xF24A;&#xF155;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 699
  },
  {
    "role": "code",
    "lines": [
      "= 5 | head | (list 5) 5 3 1 5 11;"
    ],
    "preprocessed": "= 5 | head | (list 5) 5 3 1 5 11;",
    "code": "2113210131232101000031232210011003210133210132113213210132101132233",
    "parse": [
      "=",
      "5",
      [
        -1,
        "head",
        [
          -1,
          [
            "list",
            "5"
          ],
          "5",
          "3",
          "1",
          "5",
          "11"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 700
  },
  {
    "role": "code",
    "lines": [
      "= 15 | head | (list 9) 15 10 12 4 13 6 13 1 6;"
    ],
    "preprocessed": "= 15 | head | (list 9) 15 10 12 4 13 6 13 1 6;",
    "code": "2113211113123210100003123221001100321001332111132101032110032100321101321103211013213211032233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "head",
        [
          -1,
          [
            "list",
            "9"
          ],
          "15",
          "10",
          "12",
          "4",
          "13",
          "6",
          "13",
          "1",
          "6"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF153;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF24A;&#xF151;&#xF24A;&#xF14A;&#xF24A;&#xF151;&#xF24A;&#xF145;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 701
  },
  {
    "role": "code",
    "lines": [
      "= 4 | head | tail | (list 10) 1 4 3 7 0 1 2 11 13 3;"
    ],
    "preprocessed": "= 4 | head | tail | (list 10) 1 4 3 7 0 1 2 11 13 3;",
    "code": "2113210031232101000031232101001031232210011003210103321321003211321113203213210321011321101321132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            [
              "list",
              "10"
            ],
            "1",
            "4",
            "3",
            "7",
            "0",
            "1",
            "2",
            "11",
            "13",
            "3"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14E;&#xF245;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF14B;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF14F;&#xF24A;&#xF151;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 702
  },
  {
    "role": "code",
    "lines": [
      "= 3 | head | tail | (list 5) 15 3 19 16 17;"
    ],
    "preprocessed": "= 3 | head | tail | (list 5) 15 3 19 16 17;",
    "code": "21132113123210100003123210100103123221001100321013321111321132100113210000321000132233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            [
              "list",
              "5"
            ],
            "15",
            "3",
            "19",
            "16",
            "17"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF153;&#xF24A;&#xF147;&#xF24A;&#xF157;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF24B;",
    "dt": false,
    "stanza": 703
  },
  {
    "role": "code",
    "lines": [
      "= 8 | head | tail | (list 6) 6 8 13 9 18 2;"
    ],
    "preprocessed": "= 8 | head | tail | (list 6) 6 8 13 9 18 2;",
    "code": "2113210003123210100003123210100103123221001100321103321103210003211013210013210010321032233",
    "parse": [
      "=",
      "8",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            [
              "list",
              "6"
            ],
            "6",
            "8",
            "13",
            "9",
            "18",
            "2"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF151;&#xF24A;&#xF14D;&#xF24A;&#xF156;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 704
  },
  {
    "role": "code",
    "lines": [
      "= 3 | head | tail | (list 8) 5 3 10 13 2 8 6 12;"
    ],
    "preprocessed": "= 3 | head | tail | (list 8) 5 3 10 13 2 8 6 12;",
    "code": "21132113123210100003123210100103123221001100321000332101321132101032110132103210003211032110032233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            [
              "list",
              "8"
            ],
            "5",
            "3",
            "10",
            "13",
            "2",
            "8",
            "6",
            "12"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF24A;&#xF151;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF150;&#xF24B;",
    "dt": false,
    "stanza": 705
  },
  {
    "role": "code",
    "lines": [
      "= 11 | head | tail | (list 10) 14 11 18 9 9 11 3 10 16 2;"
    ],
    "preprocessed": "= 11 | head | tail | (list 10) 14 11 18 9 9 11 3 10 16 2;",
    "code": "21132101131232101000031232101001031232210011003210103321110321011321001032100132100132101132113210103210000321032233",
    "parse": [
      "=",
      "11",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            [
              "list",
              "10"
            ],
            "14",
            "11",
            "18",
            "9",
            "9",
            "11",
            "3",
            "10",
            "16",
            "2"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14E;&#xF245;&#xF152;&#xF24A;&#xF14F;&#xF24A;&#xF156;&#xF24A;&#xF14D;&#xF24A;&#xF14D;&#xF24A;&#xF14F;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF24A;&#xF154;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 706
  },
  {
    "role": "code",
    "lines": [
      "= 16 | head | tail | tail | (list 7) 19 7 16 17 12 1 18;"
    ],
    "preprocessed": "= 16 | head | tail | tail | (list 7) 19 7 16 17 12 1 18;",
    "code": "2113210000312321010000312321010010312321010010312322100110032111332100113211132100003210001321100321321001032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            "tail",
            [
              -1,
              [
                "list",
                "7"
              ],
              "19",
              "7",
              "16",
              "17",
              "12",
              "1",
              "18"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF157;&#xF24A;&#xF14B;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF24A;&#xF150;&#xF24A;&#xF145;&#xF24A;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 707
  },
  {
    "role": "code",
    "lines": [
      "= 18 | head | tail | tail | (list 6) 16 9 18 5 11 17;"
    ],
    "preprocessed": "= 18 | head | tail | tail | (list 6) 16 9 18 5 11 17;",
    "code": "211321001031232101000031232101001031232101001031232210011003211033210000321001321001032101321011321000132233",
    "parse": [
      "=",
      "18",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            "tail",
            [
              -1,
              [
                "list",
                "6"
              ],
              "16",
              "9",
              "18",
              "5",
              "11",
              "17"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF156;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF156;&#xF24A;&#xF149;&#xF24A;&#xF14F;&#xF24A;&#xF155;&#xF24B;",
    "dt": false,
    "stanza": 708
  },
  {
    "role": "code",
    "lines": [
      "= 15 | head | tail | tail | (list 4) 1 0 15 18;"
    ],
    "preprocessed": "= 15 | head | tail | tail | (list 4) 1 0 15 18;",
    "code": "2113211113123210100003123210100103123210100103123221001100321003321320321111321001032233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            "tail",
            [
              -1,
              [
                "list",
                "4"
              ],
              "1",
              "0",
              "15",
              "18"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF153;&#xF24A;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 709
  },
  {
    "role": "code",
    "lines": [
      "= 4 | head | tail | tail | (list 6) 0 0 4 19 1 5;"
    ],
    "preprocessed": "= 4 | head | tail | tail | (list 6) 0 0 4 19 1 5;",
    "code": "2113210031232101000031232101001031232101001031232210011003211033203203210032100113213210132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            "tail",
            [
              -1,
              [
                "list",
                "6"
              ],
              "0",
              "0",
              "4",
              "19",
              "1",
              "5"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF24A;&#xF157;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 710
  },
  {
    "role": "code",
    "lines": [
      "= 7 | head | tail | tail | (list 4) 7 1 7 14;"
    ],
    "preprocessed": "= 7 | head | tail | tail | (list 4) 7 1 7 14;",
    "code": "211321113123210100003123210100103123210100103123221001100321003321113213211132111032233",
    "parse": [
      "=",
      "7",
      [
        -1,
        "head",
        [
          -1,
          "tail",
          [
            -1,
            "tail",
            [
              -1,
              [
                "list",
                "4"
              ],
              "7",
              "1",
              "7",
              "14"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF14B;&#xF24A;&#xF152;&#xF24B;",
    "dt": false,
    "stanza": 711
  },
  {
    "role": "code",
    "lines": [
      "intro list-length;"
    ],
    "preprocessed": "intro list-length;",
    "code": "21001032101001132233",
    "parse": [
      "intro",
      "list-length"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 712
  },
  {
    "role": "code",
    "lines": [
      "define list-length $car;"
    ],
    "preprocessed": "define list-length $car;",
    "code": "21101321010011302321011032233",
    "parse": [
      "define",
      "list-length",
      [
        -2,
        "car"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF157;&#xF249;&#xF15A;&#xF24B;",
    "dt": true,
    "stanza": 713
  },
  {
    "role": "code",
    "lines": [
      "= 4 | list-length | (list 4) 1 9 3 6;"
    ],
    "preprocessed": "= 4 | list-length | (list 4) 1 9 3 6;",
    "code": "21132100312321010011312322100110032100332132100132113211032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "4"
          ],
          "1",
          "9",
          "3",
          "6"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF157;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF145;&#xF24A;&#xF14D;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 714
  },
  {
    "role": "code",
    "lines": [
      "= 1 | list-length | (list 1) 6;"
    ],
    "preprocessed": "= 1 | list-length | (list 1) 6;",
    "code": "211321312321010011312322100110032133211032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "1"
          ],
          "6"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF157;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF145;&#xF245;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 715
  },
  {
    "role": "code",
    "lines": [
      "= 9 | list-length | (list 9) 6 2 5 8 7 4 1 3 0;"
    ],
    "preprocessed": "= 9 | list-length | (list 9) 6 2 5 8 7 4 1 3 0;",
    "code": "21132100131232101001131232210011003210013321103210321013210003211132100321321132032233",
    "parse": [
      "=",
      "9",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "9"
          ],
          "6",
          "2",
          "5",
          "8",
          "7",
          "4",
          "1",
          "3",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF145;&#xF157;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF14B;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 716
  },
  {
    "role": "code",
    "lines": [
      "= 7 | list-length | (list 7) 6 0 1 9 4 5 2;"
    ],
    "preprocessed": "= 7 | list-length | (list 7) 6 0 1 9 4 5 2;",
    "code": "211321113123210100113123221001100321113321103203213210013210032101321032233",
    "parse": [
      "=",
      "7",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "7"
          ],
          "6",
          "0",
          "1",
          "9",
          "4",
          "5",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF248;&#xF145;&#xF157;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF14A;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF14D;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 717
  },
  {
    "role": "code",
    "lines": [
      "= 6 | list-length | (list 6) 2 4 7 0 3 8;"
    ],
    "preprocessed": "= 6 | list-length | (list 6) 2 4 7 0 3 8;",
    "code": "21132110312321010011312322100110032110332103210032111320321132100032233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "6"
          ],
          "2",
          "4",
          "7",
          "0",
          "3",
          "8"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF145;&#xF157;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF14B;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 718
  },
  {
    "role": "code",
    "lines": [
      "intro list-ref;"
    ],
    "preprocessed": "intro list-ref;",
    "code": "21001032101010032233",
    "parse": [
      "intro",
      "list-ref"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF158;&#xF24B;",
    "dt": false,
    "stanza": 719
  },
  {
    "role": "code",
    "lines": [
      "define list-ref | ? x:list | ? n |",
      "  if (= 0 | car $x:list) $undefined |",
      "  if (= $n 0) (head $x:list) |",
      "  list-ref (tail $x:list) | - $n 1;"
    ],
    "preprocessed": "define list-ref | ? x:list | ? n |\n  if (= 0 | car $x:list) $undefined |\n  if (= $n 0) (head $x:list) |\n  list-ref (tail $x:list) | - $n 1;",
    "code": "21101321010100312321100321010001312321100321001110312321111322113203123210110302321010001330232100000312321111322113023210011103203322101000030232101000133123210101003221010010302321010001331232101130232100111032132233",
    "parse": [
      "define",
      "list-ref",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "car",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              -2,
              "undefined"
            ],
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "n"
                ],
                "0"
              ],
              [
                "head",
                [
                  -2,
                  "x:list"
                ]
              ],
              [
                -1,
                "list-ref",
                [
                  "tail",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                [
                  -1,
                  "-",
                  [
                    -2,
                    "n"
                  ],
                  "1"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF164;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF145;&#xF158;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF14F;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 720
  },
  {
    "role": "code",
    "lines": [
      "= 15 | list-ref ((list 4) 5 8 15 3) 2;"
    ],
    "preprocessed": "= 15 | list-ref ((list 4) 5 8 15 3) 2;",
    "code": "211321111312321010100322210011003210033210132100032111132113321032233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "4"
          ],
          "5",
          "8",
          "15",
          "3"
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF153;&#xF24A;&#xF147;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 721
  },
  {
    "role": "code",
    "lines": [
      "= 7 | list-ref ((list 7) 12 19 0 15 1 8 7) 6;"
    ],
    "preprocessed": "= 7 | list-ref ((list 7) 12 19 0 15 1 8 7) 6;",
    "code": "211321113123210101003222100110032111332110032100113203211113213210003211133211032233",
    "parse": [
      "=",
      "7",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "7"
          ],
          "12",
          "19",
          "0",
          "15",
          "1",
          "8",
          "7"
        ],
        "6"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF150;&#xF24A;&#xF157;&#xF24A;&#xF144;&#xF24A;&#xF153;&#xF24A;&#xF145;&#xF24A;&#xF14C;&#xF24A;&#xF14B;&#xF245;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 722
  },
  {
    "role": "code",
    "lines": [
      "= 4 | list-ref ((list 2) 4 6) 0;"
    ],
    "preprocessed": "= 4 | list-ref ((list 2) 4 6) 0;",
    "code": "2113210031232101010032221001100321033210032110332032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "2"
          ],
          "4",
          "6"
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF148;&#xF24A;&#xF14A;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 723
  },
  {
    "role": "code",
    "lines": [
      "= 13 | list-ref ((list 4) 11 10 13 8) 2;"
    ],
    "preprocessed": "= 13 | list-ref ((list 4) 11 10 13 8) 2;",
    "code": "211321101312321010100322210011003210033210113210103211013210003321032233",
    "parse": [
      "=",
      "13",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "4"
          ],
          "11",
          "10",
          "13",
          "8"
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF151;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF14F;&#xF24A;&#xF14E;&#xF24A;&#xF151;&#xF24A;&#xF14C;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 724
  },
  {
    "role": "code",
    "lines": [
      "= 2 | list-ref ((list 6) 9 2 9 8 10 12) 1;"
    ],
    "preprocessed": "= 2 | list-ref ((list 6) 9 2 9 8 10 12) 1;",
    "code": "2113210312321010100322210011003211033210013210321001321000321010321100332132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "6"
          ],
          "9",
          "2",
          "9",
          "8",
          "10",
          "12"
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF14D;&#xF24A;&#xF14C;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 725
  },
  {
    "role": "code",
    "lines": [
      "= 7 | list-ref ((list 4) 18 7 12 13) 1;"
    ],
    "preprocessed": "= 7 | list-ref ((list 4) 18 7 12 13) 1;",
    "code": "2113211131232101010032221001100321003321001032111321100321101332132233",
    "parse": [
      "=",
      "7",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "4"
          ],
          "18",
          "7",
          "12",
          "13"
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF156;&#xF24A;&#xF14B;&#xF24A;&#xF150;&#xF24A;&#xF151;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 726
  },
  {
    "role": "code",
    "lines": [
      "= 2 | list-ref ((list 9) 3 3 5 6 2 16 10 1 1) 4;"
    ],
    "preprocessed": "= 2 | list-ref ((list 9) 3 3 5 6 2 16 10 1 1) 4;",
    "code": "21132103123210101003222100110032100133211321132101321103210321000032101032132133210032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "9"
          ],
          "3",
          "3",
          "5",
          "6",
          "2",
          "16",
          "10",
          "1",
          "1"
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 727
  },
  {
    "role": "code",
    "lines": [
      "= 13 | list-ref ((list 7) 11 13 9 12 5 7 5) 1;"
    ],
    "preprocessed": "= 13 | list-ref ((list 7) 11 13 9 12 5 7 5) 1;",
    "code": "21132110131232101010032221001100321113321011321101321001321100321013211132101332132233",
    "parse": [
      "=",
      "13",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "7"
          ],
          "11",
          "13",
          "9",
          "12",
          "5",
          "7",
          "5"
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF151;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF14F;&#xF24A;&#xF151;&#xF24A;&#xF14D;&#xF24A;&#xF150;&#xF24A;&#xF149;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 728
  },
  {
    "role": "code",
    "lines": [
      "= 17 | list-ref ((list 9) 13 17 14 16 0 2 9 3 5) 1;"
    ],
    "preprocessed": "= 17 | list-ref ((list 9) 13 17 14 16 0 2 9 3 5) 1;",
    "code": "2113210001312321010100322210011003210013321101321000132111032100003203210321001321132101332132233",
    "parse": [
      "=",
      "17",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "9"
          ],
          "13",
          "17",
          "14",
          "16",
          "0",
          "2",
          "9",
          "3",
          "5"
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF155;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF151;&#xF24A;&#xF155;&#xF24A;&#xF152;&#xF24A;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF14D;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 729
  },
  {
    "role": "code",
    "lines": [
      "= 1 | list-ref ((list 9) 18 10 4 1 17 18 8 8 8) 3;"
    ],
    "preprocessed": "= 1 | list-ref ((list 9) 18 10 4 1 17 18 8 8 8) 3;",
    "code": "211321312321010100322210011003210013321001032101032100321321000132100103210003210003210003321132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "9"
          ],
          "18",
          "10",
          "4",
          "1",
          "17",
          "18",
          "8",
          "8",
          "8"
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF158;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF156;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF155;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 730
  },
  {
    "role": "code",
    "lines": [
      "intro function?;"
    ],
    "preprocessed": "intro function?;",
    "code": "2100103210110032233",
    "parse": [
      "intro",
      "function?"
    ],
    "spider": "&#xF156;&#xF24A;&#xF170;&#xF24B;",
    "dt": false,
    "stanza": 731
  },
  {
    "role": "code",
    "lines": [
      "function? | ? x 1;"
    ],
    "preprocessed": "function? | ? x 1;",
    "code": "21011003123211003210100132132233",
    "parse": [
      "function?",
      [
        -1,
        "?",
        "x",
        "1"
      ]
    ],
    "spider": "&#xF170;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 732
  },
  {
    "role": "code",
    "lines": [
      "not | function? 1;"
    ],
    "preprocessed": "not | function? 1;",
    "code": "21013123210110032132233",
    "parse": [
      "not",
      [
        -1,
        "function?",
        "1"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF170;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 733
  },
  {
    "role": "code",
    "lines": [
      "not | function? | + 1 1;"
    ],
    "preprocessed": "not | function? | + 1 1;",
    "code": "21013123210110031232101032132132233",
    "parse": [
      "not",
      [
        -1,
        "function?",
        [
          -1,
          "+",
          "1",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF170;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 734
  },
  {
    "role": "code",
    "lines": [
      "function? | ? y | + $y 2;"
    ],
    "preprocessed": "function? | ? y | + $y 2;",
    "code": "21011003123211003211110131232101030232111101321032233",
    "parse": [
      "function?",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "+",
          [
            -2,
            "y"
          ],
          "2"
        ]
      ]
    ],
    "spider": "&#xF170;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14E;&#xF249;&#xF181;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 735
  },
  {
    "role": "code",
    "lines": [
      "function? $*;"
    ],
    "preprocessed": "function? $*;",
    "code": "210110030232100132233",
    "parse": [
      "function?",
      [
        -2,
        "*"
      ]
    ],
    "spider": "&#xF170;&#xF249;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 736
  },
  {
    "role": "code",
    "lines": [
      "not | function? | = 1 2;"
    ],
    "preprocessed": "not | function? | = 1 2;",
    "code": "2101312321011003123211321321032233",
    "parse": [
      "not",
      [
        -1,
        "function?",
        [
          -1,
          "=",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF170;&#xF248;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 737
  },
  {
    "role": "code",
    "lines": [
      "intro equal;"
    ],
    "preprocessed": "intro equal;",
    "code": "21001032100032233",
    "parse": [
      "intro",
      "equal"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 738
  },
  {
    "role": "code",
    "lines": [
      "define equal | ? x | ? y |",
      "  if (not | = (function? $x) (function? $y)) $false |",
      "  if (function? $x) (list= $x $y) (= $x $y);"
    ],
    "preprocessed": "define equal | ? x | ? y |\n  if (not | = (function? $x) (function? $y)) $false |\n  if (function? $x) (list= $x $y) (= $x $y);",
    "code": "21101321000312321100321010013123211003211110131232111132210131232113221011003023210100133221011003023211110133302320312321111322101100302321010013322101010130232101001302321111013322113023210100130232111101332233",
    "parse": [
      "define",
      "equal",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                [
                  "function?",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  "function?",
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "if",
              [
                "function?",
                [
                  -2,
                  "x"
                ]
              ],
              [
                "list=",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                "=",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF246;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF170;&#xF249;&#xF181;&#xF245;&#xF245;&#xF249;&#xF144;&#xF248;&#xF153;&#xF246;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF159;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 739
  },
  {
    "role": "code",
    "lines": [
      "intro list=;"
    ],
    "preprocessed": "intro list=;",
    "code": "21001032101010132233",
    "parse": [
      "intro",
      "list="
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF159;&#xF24B;",
    "dt": false,
    "stanza": 740
  },
  {
    "role": "code",
    "lines": [
      "define list= | ? x | ? y |",
      "  if (not | = (list-length $x) (list-length $y)) $false |",
      "  if (= 0 | list-length $x) $true |",
      "  if (not | equal (head $x) (head $y)) $false |",
      "  list= (tail $x) (tail $y);"
    ],
    "preprocessed": "define list= | ? x | ? y |\n  if (not | = (list-length $x) (list-length $y)) $false |\n  if (= 0 | list-length $x) $true |\n  if (not | equal (head $x) (head $y)) $false |\n  list= (tail $x) (tail $y);",
    "code": "2110132101010131232110032101001312321100321111013123211113221013123211322101001130232101001332210100113023211110133302320312321111322113203123210100113023210100133023213123211113221013123210003221010000302321010013322101000030232111101333023203123210101013221010010302321010013322101001030232111101332233",
    "parse": [
      "define",
      "list=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                [
                  "list-length",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  "list-length",
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "if",
              [
                "=",
                "0",
                [
                  -1,
                  "list-length",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -2,
                "true"
              ],
              [
                -1,
                "if",
                [
                  "not",
                  [
                    -1,
                    "equal",
                    [
                      "head",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    [
                      "head",
                      [
                        -2,
                        "y"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "false"
                ],
                [
                  -1,
                  "list=",
                  [
                    "tail",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    "tail",
                    [
                      -2,
                      "y"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF159;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF246;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF157;&#xF249;&#xF181;&#xF245;&#xF245;&#xF249;&#xF144;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF145;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF14C;&#xF246;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF154;&#xF249;&#xF181;&#xF245;&#xF245;&#xF249;&#xF144;&#xF248;&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF156;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 741
  },
  {
    "role": "code",
    "lines": [
      "equal 1 1;"
    ],
    "preprocessed": "equal 1 1;",
    "code": "2100032132132233",
    "parse": [
      "equal",
      "1",
      "1"
    ],
    "spider": "&#xF14C;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 742
  },
  {
    "role": "code",
    "lines": [
      "equal ((list 2) 5 3) ((list 2) 5 3);"
    ],
    "preprocessed": "equal ((list 2) 5 3) ((list 2) 5 3);",
    "code": "21000322210011003210332101321133222100110032103321013211332233",
    "parse": [
      "equal",
      [
        [
          "list",
          "2"
        ],
        "5",
        "3"
      ],
      [
        [
          "list",
          "2"
        ],
        "5",
        "3"
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 743
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) ((list 3) 5 3 9);"
    ],
    "preprocessed": "not | equal ((list 2) 5 3) ((list 3) 5 3 9);",
    "code": "2101312321000322210011003210332101321133222100110032113321013211321001332233",
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        [
          [
            "list",
            "3"
          ],
          "5",
          "3",
          "9"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 744
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) ((list 2) 5 4);"
    ],
    "preprocessed": "not | equal ((list 2) 5 3) ((list 2) 5 4);",
    "code": "21013123210003222100110032103321013211332221001100321033210132100332233",
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        [
          [
            "list",
            "2"
          ],
          "5",
          "4"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 745
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) ((list 2) 4 3);"
    ],
    "preprocessed": "not | equal ((list 2) 5 3) ((list 2) 4 3);",
    "code": "2101312321000322210011003210332101321133222100110032103321003211332233",
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        [
          [
            "list",
            "2"
          ],
          "4",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF148;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 746
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) 12;"
    ],
    "preprocessed": "not | equal ((list 2) 5 3) 12;",
    "code": "21013123210003222100110032103321013211332110032233",
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        "12"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF150;&#xF24B;",
    "dt": false,
    "stanza": 747
  },
  {
    "role": "code",
    "lines": [
      "equal ((list 3) 5 3 9) ((list 3) 5 3 9);"
    ],
    "preprocessed": "equal ((list 3) 5 3 9) ((list 3) 5 3 9);",
    "code": "21000322210011003211332101321132100133222100110032113321013211321001332233",
    "parse": [
      "equal",
      [
        [
          "list",
          "3"
        ],
        "5",
        "3",
        "9"
      ],
      [
        [
          "list",
          "3"
        ],
        "5",
        "3",
        "9"
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 748
  },
  {
    "role": "code",
    "lines": [
      "equal ((list 3) 5 ((list 2) 15 1) 9) ((list 3) 5 ((list 2) 15 1) 9);"
    ],
    "preprocessed": "equal ((list 3) 5 ((list 2) 15 1) 9) ((list 3) 5 ((list 2) 15 1) 9);",
    "code": "2100032221001100321133210132221001100321033211113213321001332221001100321133210132221001100321033211113213321001332233",
    "parse": [
      "equal",
      [
        [
          "list",
          "3"
        ],
        "5",
        [
          [
            "list",
            "2"
          ],
          "15",
          "1"
        ],
        "9"
      ],
      [
        [
          "list",
          "3"
        ],
        "5",
        [
          [
            "list",
            "2"
          ],
          "15",
          "1"
        ],
        "9"
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF153;&#xF24A;&#xF145;&#xF245;&#xF14D;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF153;&#xF24A;&#xF145;&#xF245;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 749
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 3) 5 ((list 2) 15 1) 9) ((list 3) 5 ((list 2) 14 1) 9);"
    ],
    "preprocessed": "not | equal ((list 3) 5 ((list 2) 15 1) 9) ((list 3) 5 ((list 2) 14 1) 9);",
    "code": "210131232100032221001100321133210132221001100321033211113213321001332221001100321133210132221001100321033211103213321001332233",
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "3"
          ],
          "5",
          [
            [
              "list",
              "2"
            ],
            "15",
            "1"
          ],
          "9"
        ],
        [
          [
            "list",
            "3"
          ],
          "5",
          [
            [
              "list",
              "2"
            ],
            "14",
            "1"
          ],
          "9"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF153;&#xF24A;&#xF145;&#xF245;&#xF14D;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 750
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 3) 5 3 9) ((list 3) 5 ((list 2) 14 1) 9);"
    ],
    "preprocessed": "not | equal ((list 3) 5 3 9) ((list 3) 5 ((list 2) 14 1) 9);",
    "code": "21013123210003222100110032113321013211321001332221001100321133210132221001100321033211103213321001332233",
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "3"
          ],
          "5",
          "3",
          "9"
        ],
        [
          [
            "list",
            "3"
          ],
          "5",
          [
            [
              "list",
              "2"
            ],
            "14",
            "1"
          ],
          "9"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14C;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF149;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 751
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 8) 7 15 18 11 13 0 13 6) 7;"
    ],
    "preprocessed": "= (head | (list 8) 7 15 18 11 13 0 13 6) 7;",
    "code": "2113221010000312322100110032100033211132111132100103210113211013203211013211033211132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "8"
          ],
          "7",
          "15",
          "18",
          "11",
          "13",
          "0",
          "13",
          "6"
        ]
      ],
      "7"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF14B;&#xF24A;&#xF153;&#xF24A;&#xF156;&#xF24A;&#xF14F;&#xF24A;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF151;&#xF24A;&#xF14A;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 752
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 8) 7 15 18 11 13 0 13 6) ((list 7) 15 18 11 13 0 13 6);"
    ],
    "preprocessed": "list= (tail | (list 8) 7 15 18 11 13 0 13 6) ((list 7) 15 18 11 13 0 13 6);",
    "code": "2101010132210100103123221001100321000332111321111321001032101132110132032110132110332221001100321113321111321001032101132110132032110132110332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "8"
          ],
          "7",
          "15",
          "18",
          "11",
          "13",
          "0",
          "13",
          "6"
        ]
      ],
      [
        [
          "list",
          "7"
        ],
        "15",
        "18",
        "11",
        "13",
        "0",
        "13",
        "6"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF14B;&#xF24A;&#xF153;&#xF24A;&#xF156;&#xF24A;&#xF14F;&#xF24A;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF151;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF153;&#xF24A;&#xF156;&#xF24A;&#xF14F;&#xF24A;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF151;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 753
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 9) 7 17 11 10 1 3 18 13 5) 7;"
    ],
    "preprocessed": "= (head | (list 9) 7 17 11 10 1 3 18 13 5) 7;",
    "code": "211322101000031232210011003210013321113210001321011321010321321132100103211013210133211132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "9"
          ],
          "7",
          "17",
          "11",
          "10",
          "1",
          "3",
          "18",
          "13",
          "5"
        ]
      ],
      "7"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF14B;&#xF24A;&#xF155;&#xF24A;&#xF14F;&#xF24A;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF156;&#xF24A;&#xF151;&#xF24A;&#xF149;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 754
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 9) 7 17 11 10 1 3 18 13 5) ((list 8) 17 11 10 1 3 18 13 5);"
    ],
    "preprocessed": "list= (tail | (list 9) 7 17 11 10 1 3 18 13 5) ((list 8) 17 11 10 1 3 18 13 5);",
    "code": "210101013221010010312322100110032100133211132100013210113210103213211321001032110132101332221001100321000332100013210113210103213211321001032110132101332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "9"
          ],
          "7",
          "17",
          "11",
          "10",
          "1",
          "3",
          "18",
          "13",
          "5"
        ]
      ],
      [
        [
          "list",
          "8"
        ],
        "17",
        "11",
        "10",
        "1",
        "3",
        "18",
        "13",
        "5"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF14B;&#xF24A;&#xF155;&#xF24A;&#xF14F;&#xF24A;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF156;&#xF24A;&#xF151;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF155;&#xF24A;&#xF14F;&#xF24A;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF156;&#xF24A;&#xF151;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 755
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 7) 0 15 15 10 12 2 4) 0;"
    ],
    "preprocessed": "= (head | (list 7) 0 15 15 10 12 2 4) 0;",
    "code": "21132210100003123221001100321113320321111321111321010321100321032100332032233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "7"
          ],
          "0",
          "15",
          "15",
          "10",
          "12",
          "2",
          "4"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF144;&#xF24A;&#xF153;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 756
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 7) 0 15 15 10 12 2 4) ((list 6) 15 15 10 12 2 4);"
    ],
    "preprocessed": "list= (tail | (list 7) 0 15 15 10 12 2 4) ((list 6) 15 15 10 12 2 4);",
    "code": "2101010132210100103123221001100321113320321111321111321010321100321032100332221001100321103321111321111321010321100321032100332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "7"
          ],
          "0",
          "15",
          "15",
          "10",
          "12",
          "2",
          "4"
        ]
      ],
      [
        [
          "list",
          "6"
        ],
        "15",
        "15",
        "10",
        "12",
        "2",
        "4"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF144;&#xF24A;&#xF153;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF153;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 757
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 5) 18 12 3 18 8) 18;"
    ],
    "preprocessed": "= (head | (list 5) 18 12 3 18 8) 18;",
    "code": "211322101000031232210011003210133210010321100321132100103210003321001032233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "5"
          ],
          "18",
          "12",
          "3",
          "18",
          "8"
        ]
      ],
      "18"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF156;&#xF24A;&#xF150;&#xF24A;&#xF147;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF245;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 758
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 5) 18 12 3 18 8) ((list 4) 12 3 18 8);"
    ],
    "preprocessed": "list= (tail | (list 5) 18 12 3 18 8) ((list 4) 12 3 18 8);",
    "code": "210101013221010010312322100110032101332100103211003211321001032100033222100110032100332110032113210010321000332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "5"
          ],
          "18",
          "12",
          "3",
          "18",
          "8"
        ]
      ],
      [
        [
          "list",
          "4"
        ],
        "12",
        "3",
        "18",
        "8"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF156;&#xF24A;&#xF150;&#xF24A;&#xF147;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF150;&#xF24A;&#xF147;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 759
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 2) 17 13) 17;"
    ],
    "preprocessed": "= (head | (list 2) 17 13) 17;",
    "code": "211322101000031232210011003210332100013211013321000132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "2"
          ],
          "17",
          "13"
        ]
      ],
      "17"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF155;&#xF24A;&#xF151;&#xF245;&#xF155;&#xF24B;",
    "dt": false,
    "stanza": 760
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 2) 17 13) ((list 1) 13);"
    ],
    "preprocessed": "list= (tail | (list 2) 17 13) ((list 1) 13);",
    "code": "21010101322101001031232210011003210332100013211013322210011003213321101332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "2"
          ],
          "17",
          "13"
        ]
      ],
      [
        [
          "list",
          "1"
        ],
        "13"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF155;&#xF24A;&#xF151;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF145;&#xF245;&#xF151;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 761
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 5) 5 6 1 19 13) 5;"
    ],
    "preprocessed": "= (head | (list 5) 5 6 1 19 13) 5;",
    "code": "211322101000031232210011003210133210132110321321001132110133210132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "5"
          ],
          "5",
          "6",
          "1",
          "19",
          "13"
        ]
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF157;&#xF24A;&#xF151;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 762
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 5) 5 6 1 19 13) ((list 4) 6 1 19 13);"
    ],
    "preprocessed": "list= (tail | (list 5) 5 6 1 19 13) ((list 4) 6 1 19 13);",
    "code": "210101013221010010312322100110032101332101321103213210011321101332221001100321003321103213210011321101332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "5"
          ],
          "5",
          "6",
          "1",
          "19",
          "13"
        ]
      ],
      [
        [
          "list",
          "4"
        ],
        "6",
        "1",
        "19",
        "13"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF157;&#xF24A;&#xF151;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF157;&#xF24A;&#xF151;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 763
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 9) 5 1 6 14 6 15 4 16 5) 5;"
    ],
    "preprocessed": "= (head | (list 9) 5 1 6 14 6 15 4 16 5) 5;",
    "code": "2113221010000312322100110032100133210132132110321110321103211113210032100003210133210132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "9"
          ],
          "5",
          "1",
          "6",
          "14",
          "6",
          "15",
          "4",
          "16",
          "5"
        ]
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF14A;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF24A;&#xF153;&#xF24A;&#xF148;&#xF24A;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 764
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 9) 5 1 6 14 6 15 4 16 5) ((list 8) 1 6 14 6 15 4 16 5);"
    ],
    "preprocessed": "list= (tail | (list 9) 5 1 6 14 6 15 4 16 5) ((list 8) 1 6 14 6 15 4 16 5);",
    "code": "21010101322101001031232210011003210013321013213211032111032110321111321003210000321013322210011003210003321321103211103211032111132100321000032101332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "9"
          ],
          "5",
          "1",
          "6",
          "14",
          "6",
          "15",
          "4",
          "16",
          "5"
        ]
      ],
      [
        [
          "list",
          "8"
        ],
        "1",
        "6",
        "14",
        "6",
        "15",
        "4",
        "16",
        "5"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF14A;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF24A;&#xF153;&#xF24A;&#xF148;&#xF24A;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF145;&#xF24A;&#xF14A;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF24A;&#xF153;&#xF24A;&#xF148;&#xF24A;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 765
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 4) 16 8 6 18) 16;"
    ],
    "preprocessed": "= (head | (list 4) 16 8 6 18) 16;",
    "code": "2113221010000312322100110032100332100003210003211032100103321000032233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "4"
          ],
          "16",
          "8",
          "6",
          "18"
        ]
      ],
      "16"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF156;&#xF245;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 766
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 4) 16 8 6 18) ((list 3) 8 6 18);"
    ],
    "preprocessed": "list= (tail | (list 4) 16 8 6 18) ((list 3) 8 6 18);",
    "code": "2101010132210100103123221001100321003321000032100032110321001033222100110032113321000321103210010332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "4"
          ],
          "16",
          "8",
          "6",
          "18"
        ]
      ],
      [
        [
          "list",
          "3"
        ],
        "8",
        "6",
        "18"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF156;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF156;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 767
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 3) 9 1 1) 9;"
    ],
    "preprocessed": "= (head | (list 3) 9 1 1) 9;",
    "code": "2113221010000312322100110032113321001321321332100132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "3"
          ],
          "9",
          "1",
          "1"
        ]
      ],
      "9"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 768
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 3) 9 1 1) ((list 2) 1 1);"
    ],
    "preprocessed": "list= (tail | (list 3) 9 1 1) ((list 2) 1 1);",
    "code": "21010101322101001031232210011003211332100132132133222100110032103321321332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "3"
          ],
          "9",
          "1",
          "1"
        ]
      ],
      [
        [
          "list",
          "2"
        ],
        "1",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 769
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 4) 11 16 11 2) 11;"
    ],
    "preprocessed": "= (head | (list 4) 11 16 11 2) 11;",
    "code": "2113221010000312322100110032100332101132100003210113210332101132233",
    "parse": [
      "=",
      [
        "head",
        [
          -1,
          [
            "list",
            "4"
          ],
          "11",
          "16",
          "11",
          "2"
        ]
      ],
      "11"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF154;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF14F;&#xF24A;&#xF154;&#xF24A;&#xF14F;&#xF24A;&#xF146;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 770
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 4) 11 16 11 2) ((list 3) 16 11 2);"
    ],
    "preprocessed": "list= (tail | (list 4) 11 16 11 2) ((list 3) 16 11 2);",
    "code": "2101010132210100103123221001100321003321011321000032101132103322210011003211332100003210113210332233",
    "parse": [
      "list=",
      [
        "tail",
        [
          -1,
          [
            "list",
            "4"
          ],
          "11",
          "16",
          "11",
          "2"
        ]
      ],
      [
        [
          "list",
          "3"
        ],
        "16",
        "11",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF156;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF14F;&#xF24A;&#xF154;&#xF24A;&#xF14F;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF154;&#xF24A;&#xF14F;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 771
  },
  {
    "role": "code",
    "lines": [
      "intro prepend;"
    ],
    "preprocessed": "intro prepend;",
    "code": "21001032101011032233",
    "parse": [
      "intro",
      "prepend"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 772
  },
  {
    "role": "code",
    "lines": [
      "define prepend | ? x | ? x:list |",
      "  cons (+ (car $x:list) 1)",
      "       (if (= (car $x:list) 0) $x | cons $x | cdr $x:list);"
    ],
    "preprocessed": "define prepend | ? x | ? x:list |\n  cons (+ (car $x:list) 1)\n       (if (= (car $x:list) 0) $x | cons $x | cdr $x:list);",
    "code": "21101321010110312321100321010013123211003210100013123210101322101032210110302321010001332133221111322113221011030232101000133203302321010013123210101302321010013123210111302321010001332233",
    "parse": [
      "define",
      "prepend",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "cons",
            [
              "+",
              [
                "car",
                [
                  -2,
                  "x:list"
                ]
              ],
              "1"
            ],
            [
              "if",
              [
                "=",
                [
                  "car",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                "0"
              ],
              [
                -2,
                "x"
              ],
              [
                -1,
                "cons",
                [
                  -2,
                  "x"
                ],
                [
                  -1,
                  "cdr",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF15A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF159;&#xF246;&#xF14E;&#xF246;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF145;&#xF245;&#xF246;&#xF153;&#xF246;&#xF147;&#xF246;&#xF15A;&#xF249;&#xF145;&#xF155;&#xF245;&#xF144;&#xF245;&#xF249;&#xF16D;&#xF248;&#xF159;&#xF249;&#xF16D;&#xF248;&#xF15B;&#xF249;&#xF145;&#xF155;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 773
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 14 | (list 0)) ((list 1) 14);"
    ],
    "preprocessed": "list= (prepend 14 | (list 0)) ((list 1) 14);",
    "code": "210101013221010110321110312322100110032033322210011003213321110332233",
    "parse": [
      "list=",
      [
        "prepend",
        "14",
        [
          -1,
          [
            "list",
            "0"
          ]
        ]
      ],
      [
        [
          "list",
          "1"
        ],
        "14"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF152;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF144;&#xF245;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF145;&#xF245;&#xF152;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 774
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 6 | (list 1) 4) ((list 2) 6 4);"
    ],
    "preprocessed": "list= (prepend 6 | (list 1) 4) ((list 2) 6 4);",
    "code": "210101013221010110321103123221001100321332100332221001100321033211032100332233",
    "parse": [
      "list=",
      [
        "prepend",
        "6",
        [
          -1,
          [
            "list",
            "1"
          ],
          "4"
        ]
      ],
      [
        [
          "list",
          "2"
        ],
        "6",
        "4"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF14A;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF145;&#xF245;&#xF148;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 775
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 19 | (list 2) 17 14) ((list 3) 19 17 14);"
    ],
    "preprocessed": "list= (prepend 19 | (list 2) 17 14) ((list 3) 19 17 14);",
    "code": "210101013221010110321001131232210011003210332100013211103322210011003211332100113210001321110332233",
    "parse": [
      "list=",
      [
        "prepend",
        "19",
        [
          -1,
          [
            "list",
            "2"
          ],
          "17",
          "14"
        ]
      ],
      [
        [
          "list",
          "3"
        ],
        "19",
        "17",
        "14"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF157;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF155;&#xF24A;&#xF152;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF157;&#xF24A;&#xF155;&#xF24A;&#xF152;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 776
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 13 | (list 3) 12 7 16) ((list 4) 13 12 7 16);"
    ],
    "preprocessed": "list= (prepend 13 | (list 3) 12 7 16) ((list 4) 13 12 7 16);",
    "code": "210101013221010110321101312322100110032113321100321113210000332221001100321003321101321100321113210000332233",
    "parse": [
      "list=",
      [
        "prepend",
        "13",
        [
          -1,
          [
            "list",
            "3"
          ],
          "12",
          "7",
          "16"
        ]
      ],
      [
        [
          "list",
          "4"
        ],
        "13",
        "12",
        "7",
        "16"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF151;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF150;&#xF24A;&#xF14B;&#xF24A;&#xF154;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF151;&#xF24A;&#xF150;&#xF24A;&#xF14B;&#xF24A;&#xF154;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 777
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 4 | (list 4) 15 18 6 10) ((list 5) 4 15 18 6 10);"
    ],
    "preprocessed": "list= (prepend 4 | (list 4) 15 18 6 10) ((list 5) 4 15 18 6 10);",
    "code": "21010101322101011032100312322100110032100332111132100103211032101033222100110032101332100321111321001032110321010332233",
    "parse": [
      "list=",
      [
        "prepend",
        "4",
        [
          -1,
          [
            "list",
            "4"
          ],
          "15",
          "18",
          "6",
          "10"
        ]
      ],
      [
        [
          "list",
          "5"
        ],
        "4",
        "15",
        "18",
        "6",
        "10"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF148;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF153;&#xF24A;&#xF156;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF148;&#xF24A;&#xF153;&#xF24A;&#xF156;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 778
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 8 | (list 5) 2 19 15 13 13) ((list 6) 8 2 19 15 13 13);"
    ],
    "preprocessed": "list= (prepend 8 | (list 5) 2 19 15 13 13) ((list 6) 8 2 19 15 13 13);",
    "code": "21010101322101011032100031232210011003210133210321001132111132110132110133222100110032110332100032103210011321111321101321101332233",
    "parse": [
      "list=",
      [
        "prepend",
        "8",
        [
          -1,
          [
            "list",
            "5"
          ],
          "2",
          "19",
          "15",
          "13",
          "13"
        ]
      ],
      [
        [
          "list",
          "6"
        ],
        "8",
        "2",
        "19",
        "15",
        "13",
        "13"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF14C;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF146;&#xF24A;&#xF157;&#xF24A;&#xF153;&#xF24A;&#xF151;&#xF24A;&#xF151;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF157;&#xF24A;&#xF153;&#xF24A;&#xF151;&#xF24A;&#xF151;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 779
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 11 | (list 6) 0 17 15 4 10 7) ((list 7) 11 0 17 15 4 10 7);"
    ],
    "preprocessed": "list= (prepend 11 | (list 6) 0 17 15 4 10 7) ((list 7) 11 0 17 15 4 10 7);",
    "code": "21010101322101011032101131232210011003211033203210001321111321003210103211133222100110032111332101132032100013211113210032101032111332233",
    "parse": [
      "list=",
      [
        "prepend",
        "11",
        [
          -1,
          [
            "list",
            "6"
          ],
          "0",
          "17",
          "15",
          "4",
          "10",
          "7"
        ]
      ],
      [
        [
          "list",
          "7"
        ],
        "11",
        "0",
        "17",
        "15",
        "4",
        "10",
        "7"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF14F;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF144;&#xF24A;&#xF155;&#xF24A;&#xF153;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF14F;&#xF24A;&#xF144;&#xF24A;&#xF155;&#xF24A;&#xF153;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF14B;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 780
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 15 | (list 7) 2 12 18 12 4 1 12) ((list 8) 15 2 12 18 12 4 1 12);"
    ],
    "preprocessed": "list= (prepend 15 | (list 7) 2 12 18 12 4 1 12) ((list 8) 15 2 12 18 12 4 1 12);",
    "code": "2101010132210101103211113123221001100321113321032110032100103211003210032132110033222100110032100033211113210321100321001032110032100321321100332233",
    "parse": [
      "list=",
      [
        "prepend",
        "15",
        [
          -1,
          [
            "list",
            "7"
          ],
          "2",
          "12",
          "18",
          "12",
          "4",
          "1",
          "12"
        ]
      ],
      [
        [
          "list",
          "8"
        ],
        "15",
        "2",
        "12",
        "18",
        "12",
        "4",
        "1",
        "12"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF153;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF146;&#xF24A;&#xF150;&#xF24A;&#xF156;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF150;&#xF245;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF153;&#xF24A;&#xF146;&#xF24A;&#xF150;&#xF24A;&#xF156;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF150;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 781
  },
  {
    "role": "code",
    "lines": [
      "intro pair;"
    ],
    "preprocessed": "intro pair;",
    "code": "21001032101011132233",
    "parse": [
      "intro",
      "pair"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 782
  },
  {
    "role": "code",
    "lines": [
      "intro first;"
    ],
    "preprocessed": "intro first;",
    "code": "21001032101100032233",
    "parse": [
      "intro",
      "first"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 783
  },
  {
    "role": "code",
    "lines": [
      "intro second;"
    ],
    "preprocessed": "intro second;",
    "code": "21001032101100132233",
    "parse": [
      "intro",
      "second"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF15D;&#xF24B;",
    "dt": false,
    "stanza": 784
  },
  {
    "role": "code",
    "lines": [
      "define pair | list 2;"
    ],
    "preprocessed": "define pair | list 2;",
    "code": "21101321010111312321001100321032233",
    "parse": [
      "define",
      "pair",
      [
        -1,
        "list",
        "2"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF15B;&#xF248;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF24B;",
    "dt": true,
    "stanza": 785
  },
  {
    "role": "code",
    "lines": [
      "define first | ? x:list | head $x:list;"
    ],
    "preprocessed": "define first | ? x:list | head $x:list;",
    "code": "2110132101100031232110032101000131232101000030232101000132233",
    "parse": [
      "define",
      "first",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "head",
          [
            -2,
            "x:list"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF15C;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF24B;",
    "dt": true,
    "stanza": 786
  },
  {
    "role": "code",
    "lines": [
      "define second | ? x:list | head | tail $x:list;"
    ],
    "preprocessed": "define second | ? x:list | head | tail $x:list;",
    "code": "2110132101100131232110032101000131232101000031232101001030232101000132233",
    "parse": [
      "define",
      "second",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "head",
          [
            -1,
            "tail",
            [
              -2,
              "x:list"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF24B;",
    "dt": true,
    "stanza": 787
  },
  {
    "role": "code",
    "lines": [
      "list= (pair 4 5) | (list 2) 4 5;"
    ],
    "preprocessed": "list= (pair 4 5) | (list 2) 4 5;",
    "code": "21010101322101011132100321013312322100110032103321003210132233",
    "parse": [
      "list=",
      [
        "pair",
        "4",
        "5"
      ],
      [
        -1,
        [
          "list",
          "2"
        ],
        "4",
        "5"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF148;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 788
  },
  {
    "role": "code",
    "lines": [
      "= (first | pair 4 5) 4;"
    ],
    "preprocessed": "= (first | pair 4 5) 4;",
    "code": "2113221011000312321010111321003210133210032233",
    "parse": [
      "=",
      [
        "first",
        [
          -1,
          "pair",
          "4",
          "5"
        ]
      ],
      "4"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF15C;&#xF248;&#xF145;&#xF15B;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 789
  },
  {
    "role": "code",
    "lines": [
      "= (second | pair 4 5) 5;"
    ],
    "preprocessed": "= (second | pair 4 5) 5;",
    "code": "2113221011001312321010111321003210133210132233",
    "parse": [
      "=",
      [
        "second",
        [
          -1,
          "pair",
          "4",
          "5"
        ]
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF15D;&#xF248;&#xF145;&#xF15B;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 790
  },
  {
    "role": "code",
    "lines": [
      "list= (pair 6 4) | (list 2) 6 4;"
    ],
    "preprocessed": "list= (pair 6 4) | (list 2) 6 4;",
    "code": "21010101322101011132110321003312322100110032103321103210032233",
    "parse": [
      "list=",
      [
        "pair",
        "6",
        "4"
      ],
      [
        -1,
        [
          "list",
          "2"
        ],
        "6",
        "4"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF14A;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 791
  },
  {
    "role": "code",
    "lines": [
      "= (first | pair 6 4) 6;"
    ],
    "preprocessed": "= (first | pair 6 4) 6;",
    "code": "2113221011000312321010111321103210033211032233",
    "parse": [
      "=",
      [
        "first",
        [
          -1,
          "pair",
          "6",
          "4"
        ]
      ],
      "6"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF15C;&#xF248;&#xF145;&#xF15B;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 792
  },
  {
    "role": "code",
    "lines": [
      "= (second | pair 6 4) 4;"
    ],
    "preprocessed": "= (second | pair 6 4) 4;",
    "code": "2113221011001312321010111321103210033210032233",
    "parse": [
      "=",
      [
        "second",
        [
          -1,
          "pair",
          "6",
          "4"
        ]
      ],
      "4"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF15D;&#xF248;&#xF145;&#xF15B;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 793
  },
  {
    "role": "code",
    "lines": [
      "list= (pair 8 9) | (list 2) 8 9;"
    ],
    "preprocessed": "list= (pair 8 9) | (list 2) 8 9;",
    "code": "210101013221010111321000321001331232210011003210332100032100132233",
    "parse": [
      "list=",
      [
        "pair",
        "8",
        "9"
      ],
      [
        -1,
        [
          "list",
          "2"
        ],
        "8",
        "9"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF14C;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF14C;&#xF24A;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 794
  },
  {
    "role": "code",
    "lines": [
      "= (first | pair 8 9) 8;"
    ],
    "preprocessed": "= (first | pair 8 9) 8;",
    "code": "2113221011000312321010111321000321001332100032233",
    "parse": [
      "=",
      [
        "first",
        [
          -1,
          "pair",
          "8",
          "9"
        ]
      ],
      "8"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF15C;&#xF248;&#xF145;&#xF15B;&#xF24A;&#xF14C;&#xF24A;&#xF14D;&#xF245;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 795
  },
  {
    "role": "code",
    "lines": [
      "= (second | pair 8 9) 9;"
    ],
    "preprocessed": "= (second | pair 8 9) 9;",
    "code": "2113221011001312321010111321000321001332100132233",
    "parse": [
      "=",
      [
        "second",
        [
          -1,
          "pair",
          "8",
          "9"
        ]
      ],
      "9"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF15D;&#xF248;&#xF145;&#xF15B;&#xF24A;&#xF14C;&#xF24A;&#xF14D;&#xF245;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 796
  },
  {
    "role": "file",
    "lines": [
      "== COS_Map =="
    ],
    "stanza": 797
  },
  {
    "role": "doc",
    "lines": [
      "",
      "For programming and for math, it is handy to be able to apply an element-wise",
      "transform to a list, and some kind of accumulator to pull out a summary.",
      ""
    ],
    "section_description": "introduce map and reduce",
    "section_category": "MATH",
    "section_index": 17,
    "stanza": 798
  },
  {
    "role": "code",
    "lines": [
      "intro map;"
    ],
    "preprocessed": "intro map;",
    "code": "21001032101101032233",
    "parse": [
      "intro",
      "map"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 799
  },
  {
    "role": "code",
    "lines": [
      "define map | ? x:? | ? x:list |",
      "  if (= 0 | list-length $x:list) (list 0) |",
      "  prepend (x:? | head $x:list) (map $x:? | tail $x:list);"
    ],
    "preprocessed": "define map | ? x:? | ? x:list |\n  if (= 0 | list-length $x:list) (list 0) |\n  prepend (x:? | head $x:list) (map $x:? | tail $x:list);",
    "code": "2110132101101031232110032101101131232110032101000131232111132211320312321010011302321010001332210011003203312321010110322101101131232101000030232101000133221011010302321011011312321010010302321010001332233",
    "parse": [
      "define",
      "map",
      [
        -1,
        "?",
        "x:?",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              "list",
              "0"
            ],
            [
              -1,
              "prepend",
              [
                "x:?",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ],
              [
                "map",
                [
                  -2,
                  "x:?"
                ],
                [
                  -1,
                  "tail",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF15E;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF15F;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF145;&#xF15E;&#xF249;&#xF145;&#xF15F;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 800
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 3) 12 34 6) | map (? x | * $x 2) | (list 3) 6 17 3;"
    ],
    "preprocessed": "list= ((list 3) 12 34 6) | map (? x | * $x 2) | (list 3) 6 17 3;",
    "code": "210101013222100110032113321100321000103211033123210110103221100321010013123210013023210100132103312322100110032113321103210001321132233",
    "parse": [
      "list=",
      [
        [
          "list",
          "3"
        ],
        "12",
        "34",
        "6"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "3"
          ],
          "6",
          "17",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF150;&#xF24A;&#xF166;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF14A;&#xF24A;&#xF155;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 801
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 4) 34 20 14 8) | map (? x | * $x 2) | (list 4) 17 10 7 4;"
    ],
    "preprocessed": "list= ((list 4) 34 20 14 8) | map (? x | * $x 2) | (list 4) 17 10 7 4;",
    "code": "21010101322210011003210033210001032101003211103210003312321011010322110032101001312321001302321010013210331232210011003210033210001321010321113210032233",
    "parse": [
      "list=",
      [
        [
          "list",
          "4"
        ],
        "34",
        "20",
        "14",
        "8"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "4"
          ],
          "17",
          "10",
          "7",
          "4"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF166;&#xF24A;&#xF158;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF155;&#xF24A;&#xF14E;&#xF24A;&#xF14B;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 802
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 5) 8 4 16 0 6) | map (? x | * $x 2) | (list 5) 4 2 8 0 3;"
    ],
    "preprocessed": "list= ((list 5) 8 4 16 0 6) | map (? x | * $x 2) | (list 5) 4 2 8 0 3;",
    "code": "210101013222100110032101332100032100321000032032110331232101101032211003210100131232100130232101001321033123221001100321013321003210321000320321132233",
    "parse": [
      "list=",
      [
        [
          "list",
          "5"
        ],
        "8",
        "4",
        "16",
        "0",
        "6"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "5"
          ],
          "4",
          "2",
          "8",
          "0",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 803
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 6) 36 4 28 10 6 20) | map (? x | * $x 2) | (list 6) 18 2 14 5 3 10;"
    ],
    "preprocessed": "list= ((list 6) 36 4 28 10 6 20) | map (? x | * $x 2) | (list 6) 18 2 14 5 3 10;",
    "code": "2101010132221001100321103321001003210032111003210103211032101003312321011010322110032101001312321001302321010013210331232210011003211033210010321032111032101321132101032233",
    "parse": [
      "list=",
      [
        [
          "list",
          "6"
        ],
        "36",
        "4",
        "28",
        "10",
        "6",
        "20"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "6"
          ],
          "18",
          "2",
          "14",
          "5",
          "3",
          "10"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF168;&#xF24A;&#xF148;&#xF24A;&#xF160;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF158;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF156;&#xF24A;&#xF146;&#xF24A;&#xF152;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 804
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 3) 42 42 42) | map (? x 42) | (list 3) 16 2 11;"
    ],
    "preprocessed": "list= ((list 3) 42 42 42) | map (? x 42) | (list 3) 16 2 11;",
    "code": "21010101322210011003211332101010321010103210101033123210110103221100321010013210101033123221001100321133210000321032101132233",
    "parse": [
      "list=",
      [
        [
          "list",
          "3"
        ],
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "3"
          ],
          "16",
          "2",
          "11"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 805
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 4) 42 42 42 42) | map (? x 42) | (list 4) 15 18 6 0;"
    ],
    "preprocessed": "list= ((list 4) 42 42 42 42) | map (? x 42) | (list 4) 15 18 6 0;",
    "code": "2101010132221001100321003321010103210101032101010321010103312321011010322110032101001321010103312322100110032100332111132100103211032032233",
    "parse": [
      "list=",
      [
        [
          "list",
          "4"
        ],
        "42",
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "4"
          ],
          "15",
          "18",
          "6",
          "0"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF153;&#xF24A;&#xF156;&#xF24A;&#xF14A;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 806
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 5) 42 42 42 42 42) | map (? x 42) | (list 5) 19 11 5 17 2;"
    ],
    "preprocessed": "list= ((list 5) 42 42 42 42 42) | map (? x 42) | (list 5) 19 11 5 17 2;",
    "code": "21010101322210011003210133210101032101010321010103210101032101010331232101101032211003210100132101010331232210011003210133210011321011321013210001321032233",
    "parse": [
      "list=",
      [
        [
          "list",
          "5"
        ],
        "42",
        "42",
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "5"
          ],
          "19",
          "11",
          "5",
          "17",
          "2"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF157;&#xF24A;&#xF14F;&#xF24A;&#xF149;&#xF24A;&#xF155;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 807
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 6) 42 42 42 42 42 42) | map (? x 42) | (list 6) 11 19 5 3 12 6;"
    ],
    "preprocessed": "list= ((list 6) 42 42 42 42 42 42) | map (? x 42) | (list 6) 11 19 5 3 12 6;",
    "code": "21010101322210011003211033210101032101010321010103210101032101010321010103312321011010322110032101001321010103312322100110032110332101132100113210132113211003211032233",
    "parse": [
      "list=",
      [
        [
          "list",
          "6"
        ],
        "42",
        "42",
        "42",
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "6"
          ],
          "11",
          "19",
          "5",
          "3",
          "12",
          "6"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF14F;&#xF24A;&#xF157;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 808
  },
  {
    "role": "code",
    "lines": [
      "intro reduce;"
    ],
    "preprocessed": "intro reduce;",
    "code": "21001032101110032233",
    "parse": [
      "intro",
      "reduce"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF160;&#xF24B;",
    "dt": false,
    "stanza": 809
  },
  {
    "role": "code",
    "lines": [
      "define reduce | ? x:? | ? x:list |",
      "  if (= 0 | list-length $x:list) $undefined |",
      "  if (= 1 | list-length $x:list) (head $x:list) |",
      "  x:? (head $x:list) (reduce $x:? | tail $x:list);"
    ],
    "preprocessed": "define reduce | ? x:? | ? x:list |\n  if (= 0 | list-length $x:list) $undefined |\n  if (= 1 | list-length $x:list) (head $x:list) |\n  x:? (head $x:list) (reduce $x:? | tail $x:list);",
    "code": "211013210111003123211003210110113123211003210100013123211113221132031232101001130232101000133023210000031232111132211321312321010011302321010001332210100003023210100013312321011011322101000030232101000133221011100302321011011312321010010302321010001332233",
    "parse": [
      "define",
      "reduce",
      [
        -1,
        "?",
        "x:?",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              -2,
              "undefined"
            ],
            [
              -1,
              "if",
              [
                "=",
                "1",
                [
                  -1,
                  "list-length",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ],
              [
                "head",
                [
                  -2,
                  "x:list"
                ]
              ],
              [
                -1,
                "x:?",
                [
                  "head",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                [
                  "reduce",
                  [
                    -2,
                    "x:?"
                  ],
                  [
                    -1,
                    "tail",
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF164;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF145;&#xF15F;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF145;&#xF160;&#xF249;&#xF145;&#xF15F;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 810
  },
  {
    "role": "code",
    "lines": [
      "= 21 | reduce $+ | (list 3) 3 7 11;"
    ],
    "preprocessed": "= 21 | reduce $+ | (list 3) 3 7 11;",
    "code": "211321010131232101110030232101031232210011003211332113211132101132233",
    "parse": [
      "=",
      "21",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "3"
          ],
          "3",
          "7",
          "11"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF159;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF147;&#xF24A;&#xF14B;&#xF24A;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 811
  },
  {
    "role": "code",
    "lines": [
      "= 43 | reduce $+ | (list 4) 13 11 19 0;"
    ],
    "preprocessed": "= 43 | reduce $+ | (list 4) 13 11 19 0;",
    "code": "211321010113123210111003023210103123221001100321003321101321011321001132032233",
    "parse": [
      "=",
      "43",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "4"
          ],
          "13",
          "11",
          "19",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16F;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF151;&#xF24A;&#xF14F;&#xF24A;&#xF157;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 812
  },
  {
    "role": "code",
    "lines": [
      "= 41 | reduce $+ | (list 5) 9 2 10 8 12;"
    ],
    "preprocessed": "= 41 | reduce $+ | (list 5) 9 2 10 8 12;",
    "code": "211321010013123210111003023210103123221001100321013321001321032101032100032110032233",
    "parse": [
      "=",
      "41",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "5"
          ],
          "9",
          "2",
          "10",
          "8",
          "12"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF149;&#xF245;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24B;",
    "dt": false,
    "stanza": 813
  },
  {
    "role": "code",
    "lines": [
      "= 50 | reduce $+ | (list 6) 10 1 2 12 14 11;"
    ],
    "preprocessed": "= 50 | reduce $+ | (list 6) 10 1 2 12 14 11;",
    "code": "211321100103123210111003023210103123221001100321103321010321321032110032111032101132233",
    "parse": [
      "=",
      "50",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "6"
          ],
          "10",
          "1",
          "2",
          "12",
          "14",
          "11"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF176;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF150;&#xF24A;&#xF152;&#xF24A;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 814
  },
  {
    "role": "file",
    "lines": [
      "== COS_Translate =="
    ],
    "stanza": 815
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "how to change the imagined interpreter",
    "section_category": "SYNTAX",
    "section_index": 18,
    "stanza": 816
  },
  {
    "role": "code",
    "lines": [
      "intro translate;"
    ],
    "preprocessed": "intro translate;",
    "code": "210010321100132233",
    "parse": [
      "intro",
      "translate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF15D;&#xF24B;",
    "dt": false,
    "stanza": 817
  },
  {
    "role": "code",
    "lines": [
      "define translate:begin $translate;"
    ],
    "preprocessed": "define translate:begin $translate;",
    "code": "21101321011101302321100132233",
    "parse": [
      "define",
      "translate:begin",
      [
        -2,
        "translate"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF161;&#xF249;&#xF15D;&#xF24B;",
    "dt": true,
    "stanza": 818
  },
  {
    "role": "code",
    "lines": [
      "define translate | ? x | if (= $x 32) 64 | translate:begin $x;"
    ],
    "preprocessed": "define translate | ? x | if (= $x 32) 64 | translate:begin $x;",
    "code": "2110132110013123211003210100131232111132211302321010013210000033210000003123210111013023210100132233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "x"
            ],
            "32"
          ],
          "64",
          [
            -1,
            "translate:begin",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF164;&#xF245;&#xF145;&#xF144;&#xF248;&#xF145;&#xF161;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 819
  },
  {
    "role": "code",
    "lines": [
      "= 32 64;"
    ],
    "preprocessed": "= 32 64;",
    "code": "2113210000032100000032233",
    "parse": [
      "=",
      "32",
      "64"
    ],
    "spider": "&#xF147;&#xF24A;&#xF164;&#xF24A;&#xF145;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 820
  },
  {
    "role": "code",
    "lines": [
      "= (+ 32 64) 128;"
    ],
    "preprocessed": "= (+ 32 64) 128;",
    "code": "2113221010321000003210000003321000000032233",
    "parse": [
      "=",
      [
        "+",
        "32",
        "64"
      ],
      "128"
    ],
    "spider": "&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF164;&#xF24A;&#xF145;&#xF144;&#xF245;&#xF146;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 821
  },
  {
    "role": "code",
    "lines": [
      "define translate $translate:begin;"
    ],
    "preprocessed": "define translate $translate:begin;",
    "code": "21101321100130232101110132233",
    "parse": [
      "define",
      "translate",
      [
        -2,
        "translate:begin"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF249;&#xF145;&#xF161;&#xF24B;",
    "dt": true,
    "stanza": 822
  },
  {
    "role": "code",
    "lines": [
      "not | = 32 64;"
    ],
    "preprocessed": "not | = 32 64;",
    "code": "210131232113210000032100000032233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "32",
        "64"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF164;&#xF24A;&#xF145;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 823
  },
  {
    "role": "code",
    "lines": [
      "= (+ 32 64) 96;"
    ],
    "preprocessed": "= (+ 32 64) 96;",
    "code": "211322101032100000321000000332110000032233",
    "parse": [
      "=",
      [
        "+",
        "32",
        "64"
      ],
      "96"
    ],
    "spider": "&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF164;&#xF24A;&#xF145;&#xF144;&#xF245;&#xF145;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 824
  },
  {
    "role": "doc",
    "lines": [
      "Now let's do something useful: define a special form for lists."
    ],
    "stanza": 825
  },
  {
    "role": "code",
    "lines": [
      "intro vector;"
    ],
    "preprocessed": "intro vector;",
    "code": "210010321000032233",
    "parse": [
      "intro",
      "vector"
    ],
    "spider": "&#xF156;&#xF24A;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 826
  },
  {
    "role": "code",
    "lines": [
      "define translate | ? x |",
      "  if (not | function? $x) (translate:begin $x) |",
      "  if (not | = vector | head $x) (translate:begin $x) |",
      "  translate | prepend ((list 2) list | list-length | tail $x) | tail $x;"
    ],
    "preprocessed": "define translate | ? x |\n  if (not | function? $x) (translate:begin $x) |\n  if (not | = vector | head $x) (translate:begin $x) |\n  translate | prepend ((list 2) list | list-length | tail $x) | tail $x;",
    "code": "21101321100131232110032101001312321111322101312321011003023210100133221011101302321010013312321111322101312321132100003123210100003023210100133221011101302321010013312321100131232101011032221001100321033210011003123210100113123210100103023210100133123210100103023210100132233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "not",
            [
              -1,
              "function?",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "translate:begin",
            [
              -2,
              "x"
            ]
          ],
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "vector",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ],
            [
              "translate:begin",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "translate",
              [
                -1,
                "prepend",
                [
                  [
                    "list",
                    "2"
                  ],
                  "list",
                  [
                    -1,
                    "list-length",
                    [
                      -1,
                      "tail",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "tail",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF161;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF154;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF161;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF15D;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF146;&#xF245;&#xF145;&#xF150;&#xF248;&#xF145;&#xF157;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 827
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3) | (list 3) 1 2 3;"
    ],
    "preprocessed": "list= (vector 1 2 3) | (list 3) 1 2 3;",
    "code": "21010101322100003213210321133123221001100321133213210321132233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3"
      ],
      [
        -1,
        [
          "list",
          "3"
        ],
        "1",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF147;&#xF245;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 828
  },
  {
    "role": "file",
    "lines": [
      "== COS_List =="
    ],
    "stanza": 829
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "some more list functions",
    "section_category": "MATH",
    "section_index": 19,
    "stanza": 830
  },
  {
    "role": "code",
    "lines": [
      "intro list:find;"
    ],
    "preprocessed": "intro list:find;",
    "code": "21001032101111032233",
    "parse": [
      "intro",
      "list:find"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF162;&#xF24B;",
    "dt": false,
    "stanza": 831
  },
  {
    "role": "code",
    "lines": [
      "define list:find:0 | ? x:list | ? y | ? n |",
      "  if (= (list-length $x:list) 0) $undefined |",
      "  if (equal (head $x:list) $y) $n |",
      "  list:find:0 (tail $x:list) $y (+ $n 1);"
    ],
    "preprocessed": "define list:find:0 | ? x:list | ? y | ? n |\n  if (= (list-length $x:list) 0) $undefined |\n  if (equal (head $x:list) $y) $n |\n  list:find:0 (tail $x:list) $y (+ $n 1);",
    "code": "2110132101111131232110032101000131232110032111101312321100321001110312321111322113221010011302321010001332033023210000031232111132210003221010000302321010001330232111101330232100111031232101111132210100103023210100013302321111013221010302321001110321332233",
    "parse": [
      "define",
      "list:find:0",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "n",
            [
              -1,
              "if",
              [
                "=",
                [
                  "list-length",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                "0"
              ],
              [
                -2,
                "undefined"
              ],
              [
                -1,
                "if",
                [
                  "equal",
                  [
                    "head",
                    [
                      -2,
                      "x:list"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ]
                ],
                [
                  -2,
                  "n"
                ],
                [
                  -1,
                  "list:find:0",
                  [
                    "tail",
                    [
                      -2,
                      "x:list"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ],
                  [
                    "+",
                    [
                      -2,
                      "n"
                    ],
                    "1"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF163;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF147;&#xF246;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF144;&#xF245;&#xF249;&#xF164;&#xF248;&#xF153;&#xF246;&#xF14C;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF181;&#xF245;&#xF249;&#xF145;&#xF152;&#xF248;&#xF145;&#xF163;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF181;&#xF246;&#xF14E;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 832
  },
  {
    "role": "code",
    "lines": [
      "define list:find | ? x:list | ? y | list:find:0 $x:list $y 0;"
    ],
    "preprocessed": "define list:find | ? x:list | ? y | list:find:0 $x:list $y 0;",
    "code": "21101321011110312321100321010001312321100321111013123210111113023210100013023211110132032233",
    "parse": [
      "define",
      "list:find",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "list:find:0",
            [
              -2,
              "x:list"
            ],
            [
              -2,
              "y"
            ],
            "0"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF145;&#xF163;&#xF249;&#xF145;&#xF155;&#xF249;&#xF181;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 833
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 4) 17 4 3 0) 0) 3;"
    ],
    "preprocessed": "= (list:find ((list 4) 17 4 3 0) 0) 3;",
    "code": "211322101111032221001100321003321000132100321132033203321132233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "4"
          ],
          "17",
          "4",
          "3",
          "0"
        ],
        "0"
      ],
      "3"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF155;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF245;&#xF144;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 834
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 0 12 19 11 9 8 0 17) 9) 4;"
    ],
    "preprocessed": "= (list:find ((list 8) 0 12 19 11 9 8 0 17) 9) 4;",
    "code": "211322101111032221001100321000332032110032100113210113210013210003203210001332100133210032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "0",
          "12",
          "19",
          "11",
          "9",
          "8",
          "0",
          "17"
        ],
        "9"
      ],
      "4"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF144;&#xF24A;&#xF150;&#xF24A;&#xF157;&#xF24A;&#xF14F;&#xF24A;&#xF14D;&#xF24A;&#xF14C;&#xF24A;&#xF144;&#xF24A;&#xF155;&#xF245;&#xF14D;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 835
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 9) 9 0 17 17 10 8 5 3 1) 17) 2;"
    ],
    "preprocessed": "= (list:find ((list 9) 9 0 17 17 10 8 5 3 1) 17) 2;",
    "code": "211322101111032221001100321001332100132032100013210001321010321000321013211321332100013321032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "9"
          ],
          "9",
          "0",
          "17",
          "17",
          "10",
          "8",
          "5",
          "3",
          "1"
        ],
        "17"
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14D;&#xF245;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF155;&#xF24A;&#xF155;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF155;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 836
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 6) 17 15 10 12 4 13) 15) 1;"
    ],
    "preprocessed": "= (list:find ((list 6) 17 15 10 12 4 13) 15) 1;",
    "code": "2113221011110322210011003211033210001321111321010321100321003211013321111332132233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "6"
          ],
          "17",
          "15",
          "10",
          "12",
          "4",
          "13"
        ],
        "15"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF155;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF24A;&#xF151;&#xF245;&#xF153;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 837
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 7) 1 6 18 1 4 3 7) 1) 0;"
    ],
    "preprocessed": "= (list:find ((list 7) 1 6 18 1 4 3 7) 1) 0;",
    "code": "211322101111032221001100321113321321103210010321321003211321113321332032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "7"
          ],
          "1",
          "6",
          "18",
          "1",
          "4",
          "3",
          "7"
        ],
        "1"
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF145;&#xF24A;&#xF14A;&#xF24A;&#xF156;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF14B;&#xF245;&#xF145;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 838
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 1) 2) 2) 0;"
    ],
    "preprocessed": "= (list:find ((list 1) 2) 2) 0;",
    "code": "2113221011110322210011003213321033210332032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "1"
          ],
          "2"
        ],
        "2"
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF145;&#xF245;&#xF146;&#xF245;&#xF146;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 839
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 7) 3 7 15 3 19 16 17) 3) 0;"
    ],
    "preprocessed": "= (list:find ((list 7) 3 7 15 3 19 16 17) 3) 0;",
    "code": "211322101111032221001100321113321132111321111321132100113210000321000133211332032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "7"
          ],
          "3",
          "7",
          "15",
          "3",
          "19",
          "16",
          "17"
        ],
        "3"
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14B;&#xF245;&#xF147;&#xF24A;&#xF14B;&#xF24A;&#xF153;&#xF24A;&#xF147;&#xF24A;&#xF157;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF245;&#xF147;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 840
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 4) 8 13 9 18) 8) 0;"
    ],
    "preprocessed": "= (list:find ((list 4) 8 13 9 18) 8) 0;",
    "code": "21132210111103222100110032100332100032110132100132100103321000332032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "4"
          ],
          "8",
          "13",
          "9",
          "18"
        ],
        "8"
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF14C;&#xF24A;&#xF151;&#xF24A;&#xF14D;&#xF24A;&#xF156;&#xF245;&#xF14C;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 841
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 5 3 10 13 2 8 6 12) 12) 7;"
    ],
    "preprocessed": "= (list:find ((list 8) 5 3 10 13 2 8 6 12) 12) 7;",
    "code": "2113221011110322210011003210003321013211321010321101321032100032110321100332110033211132233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "5",
          "3",
          "10",
          "13",
          "2",
          "8",
          "6",
          "12"
        ],
        "12"
      ],
      "7"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF24A;&#xF151;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF150;&#xF245;&#xF150;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 842
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 11 18 9 9 11 3 10 16) 18) 1;"
    ],
    "preprocessed": "= (list:find ((list 8) 11 18 9 9 11 3 10 16) 18) 1;",
    "code": "211322101111032221001100321000332101132100103210013210013210113211321010321000033210010332132233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "11",
          "18",
          "9",
          "9",
          "11",
          "3",
          "10",
          "16"
        ],
        "18"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF14F;&#xF24A;&#xF156;&#xF24A;&#xF14D;&#xF24A;&#xF14D;&#xF24A;&#xF14F;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF24A;&#xF154;&#xF245;&#xF156;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 843
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 4) 19 6 15 16) 11) $undefined;"
    ],
    "preprocessed": "= (list:find ((list 4) 19 6 15 16) 11) $undefined;",
    "code": "2113221011110322210011003210033210011321103211113210000332101133023210000032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "4"
          ],
          "19",
          "6",
          "15",
          "16"
        ],
        "11"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF148;&#xF245;&#xF157;&#xF24A;&#xF14A;&#xF24A;&#xF153;&#xF24A;&#xF154;&#xF245;&#xF14F;&#xF245;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 844
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 6) 0 1 5 19 2 8) 7) $undefined;"
    ],
    "preprocessed": "= (list:find ((list 6) 0 1 5 19 2 8) 7) $undefined;",
    "code": "211322101111032221001100321103320321321013210011321032100033211133023210000032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "6"
          ],
          "0",
          "1",
          "5",
          "19",
          "2",
          "8"
        ],
        "7"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14A;&#xF245;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF157;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF245;&#xF14B;&#xF245;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 845
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 18 2 17 7 12 3 11 8) 6) $undefined;"
    ],
    "preprocessed": "= (list:find ((list 8) 18 2 17 7 12 3 11 8) 6) $undefined;",
    "code": "211322101111032221001100321000332100103210321000132111321100321132101132100033211033023210000032233",
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "18",
          "2",
          "17",
          "7",
          "12",
          "3",
          "11",
          "8"
        ],
        "6"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF162;&#xF246;&#xF246;&#xF145;&#xF150;&#xF24A;&#xF14C;&#xF245;&#xF156;&#xF24A;&#xF146;&#xF24A;&#xF155;&#xF24A;&#xF14B;&#xF24A;&#xF150;&#xF24A;&#xF147;&#xF24A;&#xF14F;&#xF24A;&#xF14C;&#xF245;&#xF14A;&#xF245;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 846
  },
  {
    "role": "code",
    "lines": [
      "intro last;"
    ],
    "preprocessed": "intro last;",
    "code": "21001032110000032233",
    "parse": [
      "intro",
      "last"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 847
  },
  {
    "role": "code",
    "lines": [
      "define last | ? x | list-ref $x | - (list-length $x) 1;"
    ],
    "preprocessed": "define last | ? x | list-ref $x | - (list-length $x) 1;",
    "code": "211013211000003123211003210100131232101010030232101001312321011322101001130232101001332132233",
    "parse": [
      "define",
      "last",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "list-ref",
          [
            -2,
            "x"
          ],
          [
            -1,
            "-",
            [
              "list-length",
              [
                -2,
                "x"
              ]
            ],
            "1"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF164;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF158;&#xF249;&#xF16D;&#xF248;&#xF14F;&#xF246;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 848
  },
  {
    "role": "code",
    "lines": [
      "intro except-last;"
    ],
    "preprocessed": "intro except-last;",
    "code": "21001032110000132233",
    "parse": [
      "intro",
      "except-last"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 849
  },
  {
    "role": "code",
    "lines": [
      "define except-last | ? x |",
      "  if (>= 1 | list-length $x) (vector) |",
      "  prepend (head $x) | except-last | tail $x;"
    ],
    "preprocessed": "define except-last | ? x |\n  if (>= 1 | list-length $x) (vector) |\n  prepend (head $x) | except-last | tail $x;",
    "code": "2110132110000131232110032101001312321111322100100032131232101001130232101001332210000331232101011032210100003023210100133123211000013123210100103023210100132233",
    "parse": [
      "define",
      "except-last",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            ">=",
            "1",
            [
              -1,
              "list-length",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "vector"
          ],
          [
            -1,
            "prepend",
            [
              "head",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "except-last",
              [
                -1,
                "tail",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF165;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF154;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF165;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 850
  },
  {
    "role": "code",
    "lines": [
      "= 15 | last | vector 4 5 15;"
    ],
    "preprocessed": "= 15 | last | vector 4 5 15;",
    "code": "2113211113123211000003123210000321003210132111132233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "last",
        [
          -1,
          "vector",
          "4",
          "5",
          "15"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF145;&#xF164;&#xF248;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 851
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 4 5) | except-last | vector 4 5 15;"
    ],
    "preprocessed": "list= (vector 4 5) | except-last | vector 4 5 15;",
    "code": "2101010132210000321003210133123211000013123210000321003210132111132233",
    "parse": [
      "list=",
      [
        "vector",
        "4",
        "5"
      ],
      [
        -1,
        "except-last",
        [
          -1,
          "vector",
          "4",
          "5",
          "15"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF145;&#xF165;&#xF248;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 852
  },
  {
    "role": "code",
    "lines": [
      "intro list:reverse;"
    ],
    "preprocessed": "intro list:reverse;",
    "code": "21001032110001032233",
    "parse": [
      "intro",
      "list:reverse"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF166;&#xF24B;",
    "dt": false,
    "stanza": 853
  },
  {
    "role": "code",
    "lines": [
      "define list:reverse | ? x:list |",
      "  if (<= (list-length $x:list) 1) $x:list |",
      "  prepend (last $x:list) | list:reverse | except-last $x:list;"
    ],
    "preprocessed": "define list:reverse | ? x:list |\n  if (<= (list-length $x:list) 1) $x:list |\n  prepend (last $x:list) | list:reverse | except-last $x:list;",
    "code": "2110132110001031232110032101000131232111132210010013221010011302321010001332133023210100013123210101103221100000302321010001331232110001031232110000130232101000132233",
    "parse": [
      "define",
      "list:reverse",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            "<=",
            [
              "list-length",
              [
                -2,
                "x:list"
              ]
            ],
            "1"
          ],
          [
            -2,
            "x:list"
          ],
          [
            -1,
            "prepend",
            [
              "last",
              [
                -2,
                "x:list"
              ]
            ],
            [
              -1,
              "list:reverse",
              [
                -1,
                "except-last",
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF166;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14D;&#xF246;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF145;&#xF245;&#xF249;&#xF145;&#xF155;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF164;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF145;&#xF166;&#xF248;&#xF145;&#xF165;&#xF249;&#xF145;&#xF155;&#xF24B;",
    "dt": true,
    "stanza": 854
  },
  {
    "role": "code",
    "lines": [
      "list= (list:reverse | vector 1 2 3) (vector 3 2 1);"
    ],
    "preprocessed": "list= (list:reverse | vector 1 2 3) (vector 3 2 1);",
    "code": "21010101322110001031232100003213210321133221000032113210321332233",
    "parse": [
      "list=",
      [
        "list:reverse",
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ],
      [
        "vector",
        "3",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF166;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 855
  },
  {
    "role": "code",
    "lines": [
      "list= (list:reverse | vector 50 1 33 99) (vector 99 33 1 50);"
    ],
    "preprocessed": "list= (list:reverse | vector 50 1 33 99) (vector 99 33 1 50);",
    "code": "210101013221100010312321000032110010321321000013211000113322100003211000113210000132132110010332233",
    "parse": [
      "list=",
      [
        "list:reverse",
        [
          -1,
          "vector",
          "50",
          "1",
          "33",
          "99"
        ]
      ],
      [
        "vector",
        "99",
        "33",
        "1",
        "50"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF145;&#xF166;&#xF248;&#xF154;&#xF24A;&#xF176;&#xF24A;&#xF145;&#xF24A;&#xF165;&#xF24A;&#xF145;&#xF167;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF167;&#xF24A;&#xF165;&#xF24A;&#xF145;&#xF24A;&#xF176;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 856
  },
  {
    "role": "code",
    "lines": [
      "intro append;"
    ],
    "preprocessed": "intro append;",
    "code": "21001032110001132233",
    "parse": [
      "intro",
      "append"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 857
  },
  {
    "role": "code",
    "lines": [
      "define append | ? x | ? lst |",
      "  if (= 0 | list-length $lst) (vector $x) |",
      "  prepend (head | $lst) | append $x | tail $lst;"
    ],
    "preprocessed": "define append | ? x | ? lst |\n  if (= 0 | list-length $lst) (vector $x) |\n  prepend (head | $lst) | append $x | tail $lst;",
    "code": "211013211000113123211003210100131232110032110010031232111132211320312321010011302321100100332210000302321010013312321010110322101000031230232110010033123211000113023210100131232101001030232110010032233",
    "parse": [
      "define",
      "append",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "lst",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "vector",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "prepend",
              [
                "head",
                [
                  -1,
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -1,
                "append",
                [
                  -2,
                  "x"
                ],
                [
                  -1,
                  "tail",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF167;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF154;&#xF248;&#xF249;&#xF145;&#xF168;&#xF245;&#xF248;&#xF145;&#xF167;&#xF249;&#xF16D;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 858
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 5) | append 5 | vector 1 2;"
    ],
    "preprocessed": "list= (vector 1 2 5) | append 5 | vector 1 2;",
    "code": "21010101322100003213210321013312321100011321013123210000321321032233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "5"
      ],
      [
        -1,
        "append",
        "5",
        [
          -1,
          "vector",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF145;&#xF167;&#xF24A;&#xF149;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 859
  },
  {
    "role": "code",
    "lines": [
      "intro select-match;"
    ],
    "preprocessed": "intro select-match;",
    "code": "21001032110010132233",
    "parse": [
      "intro",
      "select-match"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF169;&#xF24B;",
    "dt": false,
    "stanza": 860
  },
  {
    "role": "code",
    "lines": [
      "define select-match | ? test | ? lst |",
      "  if (= 0 | list-length $lst) $lst |",
      "  if (not | test | head $lst) (select-match $test | tail $lst) |",
      "  prepend (head $lst) (select-match $test | tail $lst);"
    ],
    "preprocessed": "define select-match | ? test | ? lst |\n  if (= 0 | list-length $lst) $lst |\n  if (not | test | head $lst) (select-match $test | tail $lst) |\n  prepend (head $lst) (select-match $test | tail $lst);",
    "code": "21101321100101312321100321100110312321100321100100312321111322113203123210100113023211001003302321100100312321111322101312321100110312321010000302321100100332211001013023211001103123210100103023211001003312321010110322101000030232110010033221100101302321100110312321010010302321100100332233",
    "parse": [
      "define",
      "select-match",
      [
        -1,
        "?",
        "test",
        [
          -1,
          "?",
          "lst",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              -2,
              "lst"
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "test",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "lst"
                    ]
                  ]
                ]
              ],
              [
                "select-match",
                [
                  -2,
                  "test"
                ],
                [
                  -1,
                  "tail",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -1,
                "prepend",
                [
                  "head",
                  [
                    -2,
                    "lst"
                  ]
                ],
                [
                  "select-match",
                  [
                    -2,
                    "test"
                  ],
                  [
                    -1,
                    "tail",
                    [
                      -2,
                      "lst"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF169;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF16A;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF145;&#xF168;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF145;&#xF169;&#xF249;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF145;&#xF169;&#xF249;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 861
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 14 19 13) | select-match (? x | > $x 10) | vector 1 14 19 3 13 0 4;"
    ],
    "preprocessed": "list= (vector 14 19 13) | select-match (? x | > $x 10) | vector 1 14 19 3 13 0 4;",
    "code": "210101013221000032111032100113211013312321100101322110032101001312321003023210100132101033123210000321321110321001132113211013203210032233",
    "parse": [
      "list=",
      [
        "vector",
        "14",
        "19",
        "13"
      ],
      [
        -1,
        "select-match",
        [
          "?",
          "x",
          [
            -1,
            ">",
            [
              -2,
              "x"
            ],
            "10"
          ]
        ],
        [
          -1,
          "vector",
          "1",
          "14",
          "19",
          "3",
          "13",
          "0",
          "4"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF157;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF148;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF152;&#xF24A;&#xF157;&#xF24A;&#xF147;&#xF24A;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 862
  },
  {
    "role": "file",
    "lines": [
      "== COS_Series =="
    ],
    "stanza": 863
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Just in passing, give approximate values for `pi` and `e`.",
      ""
    ],
    "section_description": "introduce pi and e",
    "section_category": "MATH",
    "section_index": 20,
    "stanza": 864
  },
  {
    "role": "code",
    "lines": [
      "intro minus;"
    ],
    "preprocessed": "intro minus;",
    "code": "21001032110011132233",
    "parse": [
      "intro",
      "minus"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF16B;&#xF24B;",
    "dt": false,
    "stanza": 865
  },
  {
    "role": "code",
    "lines": [
      "define minus | ? x | - 0 $x;"
    ],
    "preprocessed": "define minus | ? x | - 0 $x;",
    "code": "21101321100111312321100321010013123210113203023210100132233",
    "parse": [
      "define",
      "minus",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "-",
          "0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF16B;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14F;&#xF24A;&#xF144;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 866
  },
  {
    "role": "code",
    "lines": [
      "= 0 | + 4 | minus 4;"
    ],
    "preprocessed": "= 0 | + 4 | minus 4;",
    "code": "211320312321010321003123211001113210032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "+",
        "4",
        [
          -1,
          "minus",
          "4"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14E;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 867
  },
  {
    "role": "code",
    "lines": [
      "= 8 | + 10 | minus 2;"
    ],
    "preprocessed": "= 8 | + 10 | minus 2;",
    "code": "211321000312321010321010312321100111321032233",
    "parse": [
      "=",
      "8",
      [
        -1,
        "+",
        "10",
        [
          -1,
          "minus",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF14E;&#xF24A;&#xF14E;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 868
  },
  {
    "role": "code",
    "lines": [
      "intro frac;"
    ],
    "preprocessed": "intro frac;",
    "code": "2100103211000032233",
    "parse": [
      "intro",
      "frac"
    ],
    "spider": "&#xF156;&#xF24A;&#xF174;&#xF24B;",
    "dt": false,
    "stanza": 869
  },
  {
    "role": "code",
    "lines": [
      "= 40 | frac 40 1;"
    ],
    "preprocessed": "= 40 | frac 40 1;",
    "code": "21132101000312321100003210100032132233",
    "parse": [
      "=",
      "40",
      [
        -1,
        "frac",
        "40",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16C;&#xF248;&#xF174;&#xF24A;&#xF16C;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 870
  },
  {
    "role": "code",
    "lines": [
      "= 20 | frac 40 2;"
    ],
    "preprocessed": "= 20 | frac 40 2;",
    "code": "21132101003123211000032101000321032233",
    "parse": [
      "=",
      "20",
      [
        -1,
        "frac",
        "40",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF158;&#xF248;&#xF174;&#xF24A;&#xF16C;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 871
  },
  {
    "role": "code",
    "lines": [
      "= 10 | frac 40 4;"
    ],
    "preprocessed": "= 10 | frac 40 4;",
    "code": "21132101031232110000321010003210032233",
    "parse": [
      "=",
      "10",
      [
        -1,
        "frac",
        "40",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14E;&#xF248;&#xF174;&#xF24A;&#xF16C;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 872
  },
  {
    "role": "code",
    "lines": [
      "= 5 | frac 40 8;"
    ],
    "preprocessed": "= 5 | frac 40 8;",
    "code": "21132101312321100003210100032100032233",
    "parse": [
      "=",
      "5",
      [
        -1,
        "frac",
        "40",
        "8"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF174;&#xF24A;&#xF16C;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 873
  },
  {
    "role": "code",
    "lines": [
      "= 1 | + (frac 1 2) (frac 1 2);"
    ],
    "preprocessed": "= 1 | + (frac 1 2) (frac 1 2);",
    "code": "211321312321010322110000321321033221100003213210332233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "+",
        [
          "frac",
          "1",
          "2"
        ],
        [
          "frac",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 874
  },
  {
    "role": "code",
    "lines": [
      "= 2 | + (frac 3 2) (frac 1 2);"
    ],
    "preprocessed": "= 2 | + (frac 3 2) (frac 1 2);",
    "code": "21132103123210103221100003211321033221100003213210332233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "+",
        [
          "frac",
          "3",
          "2"
        ],
        [
          "frac",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF14E;&#xF246;&#xF174;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 875
  },
  {
    "role": "code",
    "lines": [
      "= 1 | + (frac 3 5) (frac 2 5);"
    ],
    "preprocessed": "= 1 | + (frac 3 5) (frac 2 5);",
    "code": "2113213123210103221100003211321013322110000321032101332233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "+",
        [
          "frac",
          "3",
          "5"
        ],
        [
          "frac",
          "2",
          "5"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF246;&#xF174;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF174;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 876
  },
  {
    "role": "code",
    "lines": [
      "intro abs;"
    ],
    "preprocessed": "intro abs;",
    "code": "21001032110100032233",
    "parse": [
      "intro",
      "abs"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF16C;&#xF24B;",
    "dt": false,
    "stanza": 877
  },
  {
    "role": "code",
    "lines": [
      "define abs | ? x | if (> $x 0) $x (- 0 $x);"
    ],
    "preprocessed": "define abs | ? x | if (> $x 0) $x (- 0 $x);",
    "code": "211013211010003123211003210100131232111132210030232101001320330232101001322101132030232101001332233",
    "parse": [
      "define",
      "abs",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            ">",
            [
              -2,
              "x"
            ],
            "0"
          ],
          [
            -2,
            "x"
          ],
          [
            "-",
            "0",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF148;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF249;&#xF16D;&#xF246;&#xF14F;&#xF24A;&#xF144;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 878
  },
  {
    "role": "code",
    "lines": [
      "= 4 | abs 4;"
    ],
    "preprocessed": "= 4 | abs 4;",
    "code": "211321003123211010003210032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "abs",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF16C;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 879
  },
  {
    "role": "code",
    "lines": [
      "= 4 | abs | minus 4;"
    ],
    "preprocessed": "= 4 | abs | minus 4;",
    "code": "211321003123211010003123211001113210032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "abs",
        [
          -1,
          "minus",
          "4"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF16C;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 880
  },
  {
    "role": "code",
    "lines": [
      "intro within;"
    ],
    "preprocessed": "intro within;",
    "code": "21001032110100132233",
    "parse": [
      "intro",
      "within"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 881
  },
  {
    "role": "code",
    "lines": [
      "define demo:epsilon | frac 1 10000;"
    ],
    "preprocessed": "define demo:epsilon | frac 1 10000;",
    "code": "2110132110101031232110000321321001110001000032233",
    "parse": [
      "define",
      "demo:epsilon",
      [
        -1,
        "frac",
        "1",
        "10000"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF16E;&#xF248;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF160;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 882
  },
  {
    "role": "code",
    "lines": [
      "define within | ? epsilon | ? x | ? y | < (abs | - $x $y) $epsilon;"
    ],
    "preprocessed": "define within | ? epsilon | ? x | ? y | < (abs | - $x $y) $epsilon;",
    "code": "211013211010013123211003211010113123211003210100131232110032111101312321032211010003123210113023210100130232111101330232110101132233",
    "parse": [
      "define",
      "within",
      [
        -1,
        "?",
        "epsilon",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "<",
              [
                "abs",
                [
                  -1,
                  "-",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -2,
                    "y"
                  ]
                ]
              ],
              [
                -2,
                "epsilon"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF16F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF146;&#xF246;&#xF145;&#xF16C;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF249;&#xF145;&#xF16F;&#xF24B;",
    "dt": true,
    "stanza": 883
  },
  {
    "role": "code",
    "lines": [
      "not | within $demo:epsilon 1 2;"
    ],
    "preprocessed": "not | within $demo:epsilon 1 2;",
    "code": "2101312321101001302321101010321321032233",
    "parse": [
      "not",
      [
        -1,
        "within",
        [
          -2,
          "demo:epsilon"
        ],
        "1",
        "2"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 884
  },
  {
    "role": "code",
    "lines": [
      "not | within $demo:epsilon 2 1;"
    ],
    "preprocessed": "not | within $demo:epsilon 2 1;",
    "code": "2101312321101001302321101010321032132233",
    "parse": [
      "not",
      [
        -1,
        "within",
        [
          -2,
          "demo:epsilon"
        ],
        "2",
        "1"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 885
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon 2 2;"
    ],
    "preprocessed": "within $demo:epsilon 2 2;",
    "code": "211010013023211010103210321032233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      "2",
      "2"
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 886
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon 2 | + 2 (frac $demo:epsilon 2);"
    ],
    "preprocessed": "within $demo:epsilon 2 | + 2 (frac $demo:epsilon 2);",
    "code": "21101001302321101010321031232101032103221100003023211010103210332233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      "2",
      [
        -1,
        "+",
        "2",
        [
          "frac",
          [
            -2,
            "demo:epsilon"
          ],
          "2"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF146;&#xF248;&#xF14E;&#xF24A;&#xF146;&#xF246;&#xF174;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 887
  },
  {
    "role": "code",
    "lines": [
      "not | within $demo:epsilon 2 | + 2 (* $demo:epsilon 2);"
    ],
    "preprocessed": "not | within $demo:epsilon 2 | + 2 (* $demo:epsilon 2);",
    "code": "21013123211010013023211010103210312321010321032210013023211010103210332233",
    "parse": [
      "not",
      [
        -1,
        "within",
        [
          -2,
          "demo:epsilon"
        ],
        "2",
        [
          -1,
          "+",
          "2",
          [
            "*",
            [
              -2,
              "demo:epsilon"
            ],
            "2"
          ]
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF146;&#xF248;&#xF14E;&#xF24A;&#xF146;&#xF246;&#xF14D;&#xF249;&#xF145;&#xF16E;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 888
  },
  {
    "role": "code",
    "lines": [
      "intro range;"
    ],
    "preprocessed": "intro range;",
    "code": "21001032110110032233",
    "parse": [
      "intro",
      "range"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF170;&#xF24B;",
    "dt": false,
    "stanza": 889
  },
  {
    "role": "code",
    "lines": [
      "define range | ? x:- | ? x:+ |",
      "  if (<= $x:+ $x:-) (vector) |",
      "  prepend $x:- | range (+ 1 $x:-) $x:+;"
    ],
    "preprocessed": "define range | ? x:- | ? x:+ |\n  if (<= $x:+ $x:-) (vector) |\n  prepend $x:- | range (+ 1 $x:-) $x:+;",
    "code": "21101321101100312321100321101101312321100321101110312321111322100100130232110111030232110110133221000033123210101103023211011013123211011003221010321302321101101330232110111032233",
    "parse": [
      "define",
      "range",
      [
        -1,
        "?",
        "x:-",
        [
          -1,
          "?",
          "x:+",
          [
            -1,
            "if",
            [
              "<=",
              [
                -2,
                "x:+"
              ],
              [
                -2,
                "x:-"
              ]
            ],
            [
              "vector"
            ],
            [
              -1,
              "prepend",
              [
                -2,
                "x:-"
              ],
              [
                -1,
                "range",
                [
                  "+",
                  "1",
                  [
                    -2,
                    "x:-"
                  ]
                ],
                [
                  -2,
                  "x:+"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF170;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF171;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF172;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14D;&#xF249;&#xF145;&#xF172;&#xF249;&#xF145;&#xF171;&#xF245;&#xF246;&#xF154;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF249;&#xF145;&#xF171;&#xF248;&#xF145;&#xF170;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF249;&#xF145;&#xF171;&#xF245;&#xF249;&#xF145;&#xF172;&#xF24B;",
    "dt": true,
    "stanza": 890
  },
  {
    "role": "code",
    "lines": [
      "= 6 | reduce $+ | range 0 4;"
    ],
    "preprocessed": "= 6 | reduce $+ | range 0 4;",
    "code": "211321103123210111003023210103123211011003203210032233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "range",
          "0",
          "4"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 891
  },
  {
    "role": "code",
    "lines": [
      "= 12 | reduce $+ | map (? x | * $x 2) | range 0 4;"
    ],
    "preprocessed": "= 12 | reduce $+ | map (? x | * $x 2) | range 0 4;",
    "code": "21132110031232101110030232101031232101101032211003210100131232100130232101001321033123211011003203210032233",
    "parse": [
      "=",
      "12",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "map",
          [
            "?",
            "x",
            [
              -1,
              "*",
              [
                -2,
                "x"
              ],
              "2"
            ]
          ],
          [
            -1,
            "range",
            "0",
            "4"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF150;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 892
  },
  {
    "role": "code",
    "lines": [
      "= 3 | reduce $+ | range 3 4;"
    ],
    "preprocessed": "= 3 | reduce $+ | range 3 4;",
    "code": "211321131232101110030232101031232110110032113210032233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "range",
          "3",
          "4"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 893
  },
  {
    "role": "code",
    "lines": [
      "intro even;"
    ],
    "preprocessed": "intro even;",
    "code": "2100103211101132233",
    "parse": [
      "intro",
      "even"
    ],
    "spider": "&#xF156;&#xF24A;&#xF17F;&#xF24B;",
    "dt": false,
    "stanza": 894
  },
  {
    "role": "code",
    "lines": [
      "not | even 1;"
    ],
    "preprocessed": "not | even 1;",
    "code": "21013123211101132132233",
    "parse": [
      "not",
      [
        -1,
        "even",
        "1"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF17F;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 895
  },
  {
    "role": "code",
    "lines": [
      "even 2;"
    ],
    "preprocessed": "even 2;",
    "code": "2111011321032233",
    "parse": [
      "even",
      "2"
    ],
    "spider": "&#xF17F;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 896
  },
  {
    "role": "code",
    "lines": [
      "not | even 3;"
    ],
    "preprocessed": "not | even 3;",
    "code": "210131232111011321132233",
    "parse": [
      "not",
      [
        -1,
        "even",
        "3"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF17F;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 897
  },
  {
    "role": "code",
    "lines": [
      "even 4;"
    ],
    "preprocessed": "even 4;",
    "code": "21110113210032233",
    "parse": [
      "even",
      "4"
    ],
    "spider": "&#xF17F;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 898
  },
  {
    "role": "code",
    "lines": [
      "not | even 5;"
    ],
    "preprocessed": "not | even 5;",
    "code": "2101312321110113210132233",
    "parse": [
      "not",
      [
        -1,
        "even",
        "5"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF17F;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 899
  },
  {
    "role": "code",
    "lines": [
      "intro odd;"
    ],
    "preprocessed": "intro odd;",
    "code": "21001032110111132233",
    "parse": [
      "intro",
      "odd"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF173;&#xF24B;",
    "dt": false,
    "stanza": 900
  },
  {
    "role": "code",
    "lines": [
      "define odd | ? x | not | even $x;"
    ],
    "preprocessed": "define odd | ? x | not | even $x;",
    "code": "211013211011113123211003210100131232101312321110113023210100132233",
    "parse": [
      "define",
      "odd",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "not",
          [
            -1,
            "even",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF173;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF149;&#xF248;&#xF17F;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 901
  },
  {
    "role": "code",
    "lines": [
      "odd 1;"
    ],
    "preprocessed": "odd 1;",
    "code": "2110111132132233",
    "parse": [
      "odd",
      "1"
    ],
    "spider": "&#xF145;&#xF173;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 902
  },
  {
    "role": "code",
    "lines": [
      "even 2;"
    ],
    "preprocessed": "even 2;",
    "code": "2111011321032233",
    "parse": [
      "even",
      "2"
    ],
    "spider": "&#xF17F;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 903
  },
  {
    "role": "code",
    "lines": [
      "odd 3;"
    ],
    "preprocessed": "odd 3;",
    "code": "21101111321132233",
    "parse": [
      "odd",
      "3"
    ],
    "spider": "&#xF145;&#xF173;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 904
  },
  {
    "role": "code",
    "lines": [
      "even 4;"
    ],
    "preprocessed": "even 4;",
    "code": "21110113210032233",
    "parse": [
      "even",
      "4"
    ],
    "spider": "&#xF17F;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 905
  },
  {
    "role": "code",
    "lines": [
      "odd 5;"
    ],
    "preprocessed": "odd 5;",
    "code": "211011113210132233",
    "parse": [
      "odd",
      "5"
    ],
    "spider": "&#xF145;&#xF173;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 906
  },
  {
    "role": "code",
    "lines": [
      "intro decimal;"
    ],
    "preprocessed": "intro decimal;",
    "code": "21001032111000032233",
    "parse": [
      "intro",
      "decimal"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF174;&#xF24B;",
    "dt": false,
    "stanza": 907
  },
  {
    "role": "code",
    "lines": [
      "define float | ? x:list | ? y | ? z |",
      "  if (= 0 | list-length | $x:list) 0 |",
      "  + (* $z | head $x:list) |",
      "  float (tail $x:list) $y (* $y $z);"
    ],
    "preprocessed": "define float | ? x:list | ? y | ? z |\n  if (= 0 | list-length | $x:list) 0 |\n  + (* $z | head $x:list) |\n  float (tail $x:list) $y (* $y $z);",
    "code": "2110132111000131232110032101000131232110032111101312321100321111103123211113221132031232101001131230232101000133203123210103221001302321111103123210100003023210100013312321110001322101001030232101000133023211110132210013023211110130232111110332233",
    "parse": [
      "define",
      "float",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "if",
              [
                "=",
                "0",
                [
                  -1,
                  "list-length",
                  [
                    -1,
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ]
              ],
              "0",
              [
                -1,
                "+",
                [
                  "*",
                  [
                    -2,
                    "z"
                  ],
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ],
                [
                  -1,
                  "float",
                  [
                    "tail",
                    [
                      -2,
                      "x:list"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ],
                  [
                    "*",
                    [
                      -2,
                      "y"
                    ],
                    [
                      -2,
                      "z"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF175;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF248;&#xF249;&#xF145;&#xF155;&#xF245;&#xF144;&#xF248;&#xF14E;&#xF246;&#xF14D;&#xF249;&#xF182;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF145;&#xF175;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF181;&#xF246;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF182;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 908
  },
  {
    "role": "code",
    "lines": [
      "define decimal | ? x | ? x:list | + $x | float $x:list (frac 1 10) (frac 1 10);"
    ],
    "preprocessed": "define decimal | ? x | ? x:list | + $x | float $x:list (frac 1 10) (frac 1 10);",
    "code": "2110132111000031232110032101001312321100321010001312321010302321010013123211100013023210100013221100003213210103322110000321321010332233",
    "parse": [
      "define",
      "decimal",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -1,
              "float",
              [
                -2,
                "x:list"
              ],
              [
                "frac",
                "1",
                "10"
              ],
              [
                "frac",
                "1",
                "10"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF174;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF248;&#xF145;&#xF175;&#xF249;&#xF145;&#xF155;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF14E;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 909
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon (frac 1 3) | decimal 0 | vector 3 3 3 3 3 3;"
    ],
    "preprocessed": "within $demo:epsilon (frac 1 3) | decimal 0 | vector 3 3 3 3 3 3;",
    "code": "2110100130232110101032211000032132113312321110000320312321000032113211321132113211321132233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        "frac",
        "1",
        "3"
      ],
      [
        -1,
        "decimal",
        "0",
        [
          -1,
          "vector",
          "3",
          "3",
          "3",
          "3",
          "3",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 910
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon (frac 9 7) | decimal 1 | vector 2 8 5 7 1 4;"
    ],
    "preprocessed": "within $demo:epsilon (frac 9 7) | decimal 1 | vector 2 8 5 7 1 4;",
    "code": "211010013023211010103221100003210013211133123211100003213123210000321032100032101321113213210032233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        "frac",
        "9",
        "7"
      ],
      [
        -1,
        "decimal",
        "1",
        [
          -1,
          "vector",
          "2",
          "8",
          "5",
          "7",
          "1",
          "4"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF246;&#xF174;&#xF24A;&#xF14D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 911
  },
  {
    "role": "code",
    "lines": [
      "intro e;"
    ],
    "preprocessed": "intro e;",
    "code": "2100103211000132233",
    "parse": [
      "intro",
      "e"
    ],
    "spider": "&#xF156;&#xF24A;&#xF175;&#xF24B;",
    "dt": false,
    "stanza": 912
  },
  {
    "role": "code",
    "lines": [
      "define e:hat | reduce $+ | map (? x | frac 1 | factorial $x) | range 0 100;"
    ],
    "preprocessed": "define e:hat | reduce $+ | map (? x | frac 1 | factorial $x) | range 0 100;",
    "code": "211013211100103123210111003023210103123210110103221100321010013123211000032131232100011130232101001331232110110032032110010032233",
    "parse": [
      "define",
      "e:hat",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "map",
          [
            "?",
            "x",
            [
              -1,
              "frac",
              "1",
              [
                -1,
                "factorial",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ],
          [
            -1,
            "range",
            "0",
            "100"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF176;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF14B;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 913
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $e $e:hat;"
    ],
    "preprocessed": "within $demo:epsilon $e $e:hat;",
    "code": "211010013023211010103023211000130232111001032233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "e"
      ],
      [
        -2,
        "e:hat"
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF249;&#xF175;&#xF249;&#xF145;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 914
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $e | decimal 2 | vector 7 1 8 2 8;"
    ],
    "preprocessed": "within $demo:epsilon $e | decimal 2 | vector 7 1 8 2 8;",
    "code": "21101001302321101010302321100013123211100003210312321000032111321321000321032100032233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "e"
      ],
      [
        -1,
        "decimal",
        "2",
        [
          -1,
          "vector",
          "7",
          "1",
          "8",
          "2",
          "8"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF249;&#xF175;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 915
  },
  {
    "role": "code",
    "lines": [
      "intro pi;"
    ],
    "preprocessed": "intro pi;",
    "code": "2100103211001032233",
    "parse": [
      "intro",
      "pi"
    ],
    "spider": "&#xF156;&#xF24A;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 916
  },
  {
    "role": "code",
    "lines": [
      "define pi:part | ? x | frac (if (even $x) (minus 1) 1) | * (* $x 2) | * (+ 1 | * $x 2) (+ 2 | * $x 2);"
    ],
    "preprocessed": "define pi:part | ? x | frac (if (even $x) (minus 1) 1) | * (* $x 2) | * (+ 1 | * $x 2) (+ 2 | * $x 2);",
    "code": "2110132111001131232110032101001312321100003221111322111011302321010013322110011132133213312321001322100130232101001321033123210013221010321312321001302321010013210332210103210312321001302321010013210332233",
    "parse": [
      "define",
      "pi:part",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "frac",
          [
            "if",
            [
              "even",
              [
                -2,
                "x"
              ]
            ],
            [
              "minus",
              "1"
            ],
            "1"
          ],
          [
            -1,
            "*",
            [
              "*",
              [
                -2,
                "x"
              ],
              "2"
            ],
            [
              -1,
              "*",
              [
                "+",
                "1",
                [
                  -1,
                  "*",
                  [
                    -2,
                    "x"
                  ],
                  "2"
                ]
              ],
              [
                "+",
                "2",
                [
                  -1,
                  "*",
                  [
                    -2,
                    "x"
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF177;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF174;&#xF246;&#xF153;&#xF246;&#xF17F;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF145;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF14E;&#xF24A;&#xF146;&#xF248;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 917
  },
  {
    "role": "code",
    "lines": [
      "define pi:hat | + 3 | * 4 | reduce $+ | map $pi:part | range 1 100;"
    ],
    "preprocessed": "define pi:hat | + 3 | * 4 | reduce $+ | map $pi:part | range 1 100;",
    "code": "2110132111010031232101032113123210013210031232101110030232101031232101101030232111001131232110110032132110010032233",
    "parse": [
      "define",
      "pi:hat",
      [
        -1,
        "+",
        "3",
        [
          -1,
          "*",
          "4",
          [
            -1,
            "reduce",
            [
              -2,
              "+"
            ],
            [
              -1,
              "map",
              [
                -2,
                "pi:part"
              ],
              [
                -1,
                "range",
                "1",
                "100"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF178;&#xF248;&#xF14E;&#xF24A;&#xF147;&#xF248;&#xF14D;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF145;&#xF15E;&#xF249;&#xF145;&#xF177;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 918
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $pi $pi:hat;"
    ],
    "preprocessed": "within $demo:epsilon $pi $pi:hat;",
    "code": "211010013023211010103023211001030232111010032233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "pi"
      ],
      [
        -2,
        "pi:hat"
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF249;&#xF176;&#xF249;&#xF145;&#xF178;&#xF24B;",
    "dt": false,
    "stanza": 919
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $pi | decimal 3 | vector 1 4 1 5 9 2 6 5 3 5;"
    ],
    "preprocessed": "within $demo:epsilon $pi | decimal 3 | vector 1 4 1 5 9 2 6 5 3 5;",
    "code": "21101001302321101010302321100103123211100003211312321000032132100321321013210013210321103210132113210132233",
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "pi"
      ],
      [
        -1,
        "decimal",
        "3",
        [
          -1,
          "vector",
          "1",
          "4",
          "1",
          "5",
          "9",
          "2",
          "6",
          "5",
          "3",
          "5"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF16D;&#xF249;&#xF145;&#xF16E;&#xF249;&#xF176;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF147;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 920
  },
  {
    "role": "code",
    "lines": [
      "intro power:10;"
    ],
    "preprocessed": "intro power:10;",
    "code": "21001032111010132233",
    "parse": [
      "intro",
      "power:10"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF179;&#xF24B;",
    "dt": false,
    "stanza": 921
  },
  {
    "role": "code",
    "lines": [
      "define power:10 | ? n |",
      "  if (= $n 0) 1 |",
      "  assign part (if (>= $n 0) 10 (frac 1 10)) |",
      "  reduce $* | map (? x $part) | range 0 (abs $n);"
    ],
    "preprocessed": "define power:10 | ? n |\n  if (= $n 0) 1 |\n  assign part (if (>= $n 0) 10 (frac 1 10)) |\n  reduce $* | map (? x $part) | range 0 (abs $n);",
    "code": "211013211101013123211003210011103123211113221130232100111032033213123211103211101103221111322100100030232100111032033210103221100003213210103331232101110030232100131232101101032211003210100130232111011033123211011003203221101000302321001110332233",
    "parse": [
      "define",
      "power:10",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "n"
            ],
            "0"
          ],
          "1",
          [
            -1,
            "assign",
            "part",
            [
              "if",
              [
                ">=",
                [
                  -2,
                  "n"
                ],
                "0"
              ],
              "10",
              [
                "frac",
                "1",
                "10"
              ]
            ],
            [
              -1,
              "reduce",
              [
                -2,
                "*"
              ],
              [
                -1,
                "map",
                [
                  "?",
                  "x",
                  [
                    -2,
                    "part"
                  ]
                ],
                [
                  -1,
                  "range",
                  "0",
                  [
                    "abs",
                    [
                      -2,
                      "n"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF145;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF17A;&#xF246;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF14E;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF14E;&#xF245;&#xF245;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14D;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF145;&#xF17A;&#xF245;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF144;&#xF246;&#xF145;&#xF16C;&#xF249;&#xF145;&#xF152;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 922
  },
  {
    "role": "code",
    "lines": [
      "define float:= | ? x | ? y |",
      "  if (= $x $y) $true |",
      "  within (frac (+ $x $y) 200000) $x $y;"
    ],
    "preprocessed": "define float:= | ? x | ? y |\n  if (= $x $y) $true |\n  within (frac (+ $x $y) 200000) $x $y;",
    "code": "2110132111011131232110032101001312321100321111013123211113221130232101001302321111013302321312321101001322110000322101030232101001302321111013321100001101010000003302321010013023211110132233",
    "parse": [
      "define",
      "float:=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              -2,
              "true"
            ],
            [
              -1,
              "within",
              [
                "frac",
                [
                  "+",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -2,
                    "y"
                  ]
                ],
                "200000"
              ],
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF17B;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF249;&#xF145;&#xF248;&#xF145;&#xF16D;&#xF246;&#xF174;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF174;&#xF179;&#xF144;&#xF245;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 923
  },
  {
    "role": "code",
    "lines": [
      "float:= 10 | power:10 1;"
    ],
    "preprocessed": "float:= 10 | power:10 1;",
    "code": "2111011132101031232111010132132233",
    "parse": [
      "float:=",
      "10",
      [
        -1,
        "power:10",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF14E;&#xF248;&#xF145;&#xF179;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 924
  },
  {
    "role": "code",
    "lines": [
      "float:= 100 | power:10 2;"
    ],
    "preprocessed": "float:= 100 | power:10 2;",
    "code": "21110111321100100312321110101321032233",
    "parse": [
      "float:=",
      "100",
      [
        -1,
        "power:10",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF145;&#xF179;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 925
  },
  {
    "role": "code",
    "lines": [
      "float:= 1000 | power:10 3;"
    ],
    "preprocessed": "float:= 1000 | power:10 3;",
    "code": "21110111321111101000312321110101321132233",
    "parse": [
      "float:=",
      "1000",
      [
        -1,
        "power:10",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF153;&#xF16C;&#xF248;&#xF145;&#xF179;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 926
  },
  {
    "role": "code",
    "lines": [
      "float:= (frac 1 10) | power:10 | minus 1;"
    ],
    "preprocessed": "float:= (frac 1 10) | power:10 | minus 1;",
    "code": "21110111322110000321321010331232111010131232110011132132233",
    "parse": [
      "float:=",
      [
        "frac",
        "1",
        "10"
      ],
      [
        -1,
        "power:10",
        [
          -1,
          "minus",
          "1"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF145;&#xF179;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 927
  },
  {
    "role": "code",
    "lines": [
      "float:= (frac 1 100) | power:10 | minus 2;"
    ],
    "preprocessed": "float:= (frac 1 100) | power:10 | minus 2;",
    "code": "211101113221100003213211001003312321110101312321100111321032233",
    "parse": [
      "float:=",
      [
        "frac",
        "1",
        "100"
      ],
      [
        -1,
        "power:10",
        [
          -1,
          "minus",
          "2"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF145;&#xF179;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 928
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | power:10 0;"
    ],
    "preprocessed": "float:= 1 | power:10 0;",
    "code": "2111011132131232111010132032233",
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "power:10",
        "0"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF179;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 929
  },
  {
    "role": "code",
    "lines": [
      "define decimal:power | ? x:power | ? x:int | ? x:list |",
      "  * (power:10 $x:power) (decimal $x:int $x:list);"
    ],
    "preprocessed": "define decimal:power | ? x:power | ? x:int | ? x:list |\n  * (power:10 $x:power) (decimal $x:int $x:list);",
    "code": "21101321111000312321100321111001312321100321111010312321100321010001312321001322111010130232111100133221110000302321111010302321010001332233",
    "parse": [
      "define",
      "decimal:power",
      [
        -1,
        "?",
        "x:power",
        [
          -1,
          "?",
          "x:int",
          [
            -1,
            "?",
            "x:list",
            [
              -1,
              "*",
              [
                "power:10",
                [
                  -2,
                  "x:power"
                ]
              ],
              [
                "decimal",
                [
                  -2,
                  "x:int"
                ],
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF17C;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF17D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF17E;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF14D;&#xF246;&#xF145;&#xF179;&#xF249;&#xF145;&#xF17D;&#xF245;&#xF246;&#xF145;&#xF174;&#xF249;&#xF145;&#xF17E;&#xF249;&#xF145;&#xF155;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 930
  },
  {
    "role": "code",
    "lines": [
      "float:= 1530 | decimal:power 3 1 | vector 5 3;"
    ],
    "preprocessed": "float:= 1530 | decimal:power 3 1 | vector 5 3;",
    "code": "2111011132101111110103123211110003211321312321000032101321132233",
    "parse": [
      "float:=",
      "1530",
      [
        -1,
        "decimal:power",
        "3",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF15B;&#xF17E;&#xF248;&#xF145;&#xF17C;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 931
  },
  {
    "role": "code",
    "lines": [
      "float:= 15300 | decimal:power 4 1 | vector 5 3;"
    ],
    "preprocessed": "float:= 15300 | decimal:power 4 1 | vector 5 3;",
    "code": "21110111321110111100010031232111100032100321312321000032101321132233",
    "parse": [
      "float:=",
      "15300",
      [
        -1,
        "decimal:power",
        "4",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF147;&#xF173;&#xF148;&#xF248;&#xF145;&#xF17C;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 932
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 5 3) | decimal:power 0 1 | vector 5 3;"
    ],
    "preprocessed": "float:= (decimal 1 | vector 5 3) | decimal:power 0 1 | vector 5 3;",
    "code": "21110111322111000032131232100003210132113312321111000320321312321000032101321132233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ],
      [
        -1,
        "decimal:power",
        "0",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF145;&#xF17C;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 933
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 0 | vector 0 0 1 5 3) | decimal:power (minus 3) 1 | vector 5 3;"
    ],
    "preprocessed": "float:= (decimal 0 | vector 0 0 1 5 3) | decimal:power (minus 3) 1 | vector 5 3;",
    "code": "21110111322111000032031232100003203203213210132113312321111000322110011132113321312321000032101321132233",
    "parse": [
      "float:=",
      [
        "decimal",
        "0",
        [
          -1,
          "vector",
          "0",
          "0",
          "1",
          "5",
          "3"
        ]
      ],
      [
        -1,
        "decimal:power",
        [
          "minus",
          "3"
        ],
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF145;&#xF17C;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 934
  },
  {
    "role": "code",
    "lines": [
      "intro pow:int;"
    ],
    "preprocessed": "intro pow:int;",
    "code": "21001032111101132233",
    "parse": [
      "intro",
      "pow:int"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF17F;&#xF24B;",
    "dt": false,
    "stanza": 935
  },
  {
    "role": "code",
    "lines": [
      "define pow:int | ? x | ? n |",
      "  if (= $n 0) 1 |",
      "  assign part (if (>= $n 0) $x (frac 1 $x)) |",
      "  reduce $* | map (? y $part) | range 0 (abs $n);"
    ],
    "preprocessed": "define pow:int | ? x | ? n |\n  if (= $n 0) 1 |\n  assign part (if (>= $n 0) $x (frac 1 $x)) |\n  reduce $* | map (? y $part) | range 0 (abs $n);",
    "code": "211013211110113123211003210100131232110032100111031232111132211302321001110320332131232111032111011032211113221001000302321001110320330232101001322110000321302321010013331232101110030232100131232101101032211003211110130232111011033123211011003203221101000302321001110332233",
    "parse": [
      "define",
      "pow:int",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "0"
            ],
            "1",
            [
              -1,
              "assign",
              "part",
              [
                "if",
                [
                  ">=",
                  [
                    -2,
                    "n"
                  ],
                  "0"
                ],
                [
                  -2,
                  "x"
                ],
                [
                  "frac",
                  "1",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -1,
                "reduce",
                [
                  -2,
                  "*"
                ],
                [
                  -1,
                  "map",
                  [
                    "?",
                    "y",
                    [
                      -2,
                      "part"
                    ]
                  ],
                  [
                    -1,
                    "range",
                    "0",
                    [
                      "abs",
                      [
                        -2,
                        "n"
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF17F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF145;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF17A;&#xF246;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF249;&#xF16D;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14D;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF249;&#xF145;&#xF17A;&#xF245;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF144;&#xF246;&#xF145;&#xF16C;&#xF249;&#xF145;&#xF152;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 936
  },
  {
    "role": "code",
    "lines": [
      "= 100 | pow:int 10 2;"
    ],
    "preprocessed": "= 100 | pow:int 10 2;",
    "code": "211321100100312321111011321010321032233",
    "parse": [
      "=",
      "100",
      [
        -1,
        "pow:int",
        "10",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 937
  },
  {
    "role": "code",
    "lines": [
      "= 25 | pow:int 5 2;"
    ],
    "preprocessed": "= 25 | pow:int 5 2;",
    "code": "211321100131232111101132101321032233",
    "parse": [
      "=",
      "25",
      [
        -1,
        "pow:int",
        "5",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 938
  },
  {
    "role": "code",
    "lines": [
      "= 4 | pow:int 2 2;"
    ],
    "preprocessed": "= 4 | pow:int 2 2;",
    "code": "211321003123211110113210321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "pow:int",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 939
  },
  {
    "role": "code",
    "lines": [
      "= 8 | pow:int 2 3;"
    ],
    "preprocessed": "= 8 | pow:int 2 3;",
    "code": "2113210003123211110113210321132233",
    "parse": [
      "=",
      "8",
      [
        -1,
        "pow:int",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 940
  },
  {
    "role": "code",
    "lines": [
      "= 16 | pow:int 2 4;"
    ],
    "preprocessed": "= 16 | pow:int 2 4;",
    "code": "211321000031232111101132103210032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        "pow:int",
        "2",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 941
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow:int 2 0;"
    ],
    "preprocessed": "= 1 | pow:int 2 0;",
    "code": "211321312321111011321032032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow:int",
        "2",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 942
  },
  {
    "role": "code",
    "lines": [
      "= (frac 1 2) | pow:int 2 | minus 1;"
    ],
    "preprocessed": "= (frac 1 2) | pow:int 2 | minus 1;",
    "code": "21132211000032132103312321111011321031232110011132132233",
    "parse": [
      "=",
      [
        "frac",
        "1",
        "2"
      ],
      [
        -1,
        "pow:int",
        "2",
        [
          -1,
          "minus",
          "1"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF174;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF145;&#xF17F;&#xF24A;&#xF146;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 943
  },
  {
    "role": "code",
    "lines": [
      "intro pow;"
    ],
    "preprocessed": "intro pow;",
    "code": "2100103210111132233",
    "parse": [
      "intro",
      "pow"
    ],
    "spider": "&#xF156;&#xF24A;&#xF173;&#xF24B;",
    "dt": false,
    "stanza": 944
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 2 0;"
    ],
    "preprocessed": "= 1 | pow 2 0;",
    "code": "21132131232101111321032032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "2",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 945
  },
  {
    "role": "code",
    "lines": [
      "= 2 | pow 2 1;"
    ],
    "preprocessed": "= 2 | pow 2 1;",
    "code": "211321031232101111321032132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "pow",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 946
  },
  {
    "role": "code",
    "lines": [
      "= 4 | pow 2 2;"
    ],
    "preprocessed": "= 4 | pow 2 2;",
    "code": "21132100312321011113210321032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "pow",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 947
  },
  {
    "role": "code",
    "lines": [
      "= 8 | pow 2 3;"
    ],
    "preprocessed": "= 8 | pow 2 3;",
    "code": "211321000312321011113210321132233",
    "parse": [
      "=",
      "8",
      [
        -1,
        "pow",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 948
  },
  {
    "role": "code",
    "lines": [
      "= 16 | pow 2 4;"
    ],
    "preprocessed": "= 16 | pow 2 4;",
    "code": "21132100003123210111132103210032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        "pow",
        "2",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 949
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 3 0;"
    ],
    "preprocessed": "= 1 | pow 3 0;",
    "code": "21132131232101111321132032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "3",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 950
  },
  {
    "role": "code",
    "lines": [
      "= 3 | pow 3 1;"
    ],
    "preprocessed": "= 3 | pow 3 1;",
    "code": "211321131232101111321132132233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "pow",
        "3",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 951
  },
  {
    "role": "code",
    "lines": [
      "= 9 | pow 3 2;"
    ],
    "preprocessed": "= 9 | pow 3 2;",
    "code": "211321001312321011113211321032233",
    "parse": [
      "=",
      "9",
      [
        -1,
        "pow",
        "3",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 952
  },
  {
    "role": "code",
    "lines": [
      "= 27 | pow 3 3;"
    ],
    "preprocessed": "= 27 | pow 3 3;",
    "code": "2113211011312321011113211321132233",
    "parse": [
      "=",
      "27",
      [
        -1,
        "pow",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15F;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 953
  },
  {
    "role": "code",
    "lines": [
      "= 81 | pow 3 4;"
    ],
    "preprocessed": "= 81 | pow 3 4;",
    "code": "2113210100013123210111132113210032233",
    "parse": [
      "=",
      "81",
      [
        -1,
        "pow",
        "3",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 954
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 4 0;"
    ],
    "preprocessed": "= 1 | pow 4 0;",
    "code": "211321312321011113210032032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "4",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 955
  },
  {
    "role": "code",
    "lines": [
      "= 4 | pow 4 1;"
    ],
    "preprocessed": "= 4 | pow 4 1;",
    "code": "21132100312321011113210032132233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "pow",
        "4",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 956
  },
  {
    "role": "code",
    "lines": [
      "= 16 | pow 4 2;"
    ],
    "preprocessed": "= 16 | pow 4 2;",
    "code": "21132100003123210111132100321032233",
    "parse": [
      "=",
      "16",
      [
        -1,
        "pow",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 957
  },
  {
    "role": "code",
    "lines": [
      "= 64 | pow 4 3;"
    ],
    "preprocessed": "= 64 | pow 4 3;",
    "code": "2113210000003123210111132100321132233",
    "parse": [
      "=",
      "64",
      [
        -1,
        "pow",
        "4",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF144;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 958
  },
  {
    "role": "code",
    "lines": [
      "= 256 | pow 4 4;"
    ],
    "preprocessed": "= 256 | pow 4 4;",
    "code": "2113210000000031232101111321003210032233",
    "parse": [
      "=",
      "256",
      [
        -1,
        "pow",
        "4",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF144;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 959
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 5 0;"
    ],
    "preprocessed": "= 1 | pow 5 0;",
    "code": "211321312321011113210132032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "5",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF149;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 960
  },
  {
    "role": "code",
    "lines": [
      "= 5 | pow 5 1;"
    ],
    "preprocessed": "= 5 | pow 5 1;",
    "code": "21132101312321011113210132132233",
    "parse": [
      "=",
      "5",
      [
        -1,
        "pow",
        "5",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF173;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 961
  },
  {
    "role": "code",
    "lines": [
      "= 25 | pow 5 2;"
    ],
    "preprocessed": "= 25 | pow 5 2;",
    "code": "21132110013123210111132101321032233",
    "parse": [
      "=",
      "25",
      [
        -1,
        "pow",
        "5",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15D;&#xF248;&#xF173;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 962
  },
  {
    "role": "code",
    "lines": [
      "= 125 | pow 5 3;"
    ],
    "preprocessed": "= 125 | pow 5 3;",
    "code": "2113211111013123210111132101321132233",
    "parse": [
      "=",
      "125",
      [
        -1,
        "pow",
        "5",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF181;&#xF248;&#xF173;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 963
  },
  {
    "role": "code",
    "lines": [
      "= 625 | pow 5 4;"
    ],
    "preprocessed": "= 625 | pow 5 4;",
    "code": "21132100111000131232101111321013210032233",
    "parse": [
      "=",
      "625",
      [
        -1,
        "pow",
        "5",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14D;&#xF175;&#xF248;&#xF173;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 964
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | pow 2 0;"
    ],
    "preprocessed": "float:= 1 | pow 2 0;",
    "code": "2111011132131232101111321032032233",
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "pow",
        "2",
        "0"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 965
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 1 8 9 2 0) | pow 2 (decimal 0 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 1 | vector 1 8 9 2 0) | pow 2 (decimal 0 | vector 2 5);",
    "code": "21110111322111000032131232100003213210003210013210320331232101111321032211100003203123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "1",
          "8",
          "9",
          "2",
          "0"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF14C;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 966
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 4 1 4 2 1) | pow 2 (decimal 0 | vector 5);"
    ],
    "preprocessed": "float:= (decimal 1 | vector 4 1 4 2 1) | pow 2 (decimal 0 | vector 5);",
    "code": "21110111322111000032131232100003210032132100321032133123210111132103221110000320312321000032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "4",
          "1",
          "4",
          "2",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 967
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 6 8 1 7 9) | pow 2 (decimal 0 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 1 | vector 6 8 1 7 9) | pow 2 (decimal 0 | vector 7 5);",
    "code": "211101113221110000321312321000032110321000321321113210013312321011113210322111000032031232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "6",
          "8",
          "1",
          "7",
          "9"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF145;&#xF24A;&#xF14B;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 968
  },
  {
    "role": "code",
    "lines": [
      "float:= 2 | pow 2 1;"
    ],
    "preprocessed": "float:= 2 | pow 2 1;",
    "code": "21110111321031232101111321032132233",
    "parse": [
      "float:=",
      "2",
      [
        -1,
        "pow",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF146;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 969
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 3 7 8 4 1) | pow 2 (decimal 1 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 2 | vector 3 7 8 4 1) | pow 2 (decimal 1 | vector 2 5);",
    "code": "2111011132211100003210312321000032113211132100032100321331232101111321032211100003213123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "3",
          "7",
          "8",
          "4",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF14B;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 970
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 8 2 8 4 2) | pow 2 (decimal 1 | vector 5);"
    ],
    "preprocessed": "float:= (decimal 2 | vector 8 2 8 4 2) | pow 2 (decimal 1 | vector 5);",
    "code": "21110111322111000032103123210000321000321032100032100321033123210111132103221110000321312321000032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "8",
          "2",
          "8",
          "4",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 971
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 3 | vector 3 6 3 5 8) | pow 2 (decimal 1 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 3 | vector 3 6 3 5 8) | pow 2 (decimal 1 | vector 7 5);",
    "code": "211101113221110000321131232100003211321103211321013210003312321011113210322111000032131232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "3",
        [
          -1,
          "vector",
          "3",
          "6",
          "3",
          "5",
          "8"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF147;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 972
  },
  {
    "role": "code",
    "lines": [
      "float:= 4 | pow 2 2;"
    ],
    "preprocessed": "float:= 4 | pow 2 2;",
    "code": "2111011132100312321011113210321032233",
    "parse": [
      "float:=",
      "4",
      [
        -1,
        "pow",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF148;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 973
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 4 | vector 7 5 6 8 2) | pow 2 (decimal 2 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 4 | vector 7 5 6 8 2) | pow 2 (decimal 2 | vector 2 5);",
    "code": "21110111322111000032100312321000032111321013211032100032103312321011113210322111000032103123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "4",
        [
          -1,
          "vector",
          "7",
          "5",
          "6",
          "8",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF148;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 974
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 5 | vector 6 5 6 8 5) | pow 2 (decimal 2 | vector 5);"
    ],
    "preprocessed": "float:= (decimal 5 | vector 6 5 6 8 5) | pow 2 (decimal 2 | vector 5);",
    "code": "21110111322111000032101312321000032110321013211032100032101331232101111321032211100003210312321000032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "5",
        [
          -1,
          "vector",
          "6",
          "5",
          "6",
          "8",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF149;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 975
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 6 | vector 7 2 7 1 7) | pow 2 (decimal 2 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 6 | vector 7 2 7 1 7) | pow 2 (decimal 2 | vector 7 5);",
    "code": "211101113221110000321103123210000321113210321113213211133123210111132103221110000321031232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "6",
        [
          -1,
          "vector",
          "7",
          "2",
          "7",
          "1",
          "7"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF14A;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF146;&#xF24A;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 976
  },
  {
    "role": "code",
    "lines": [
      "float:= 8 | pow 2 3;"
    ],
    "preprocessed": "float:= 8 | pow 2 3;",
    "code": "21110111321000312321011113210321132233",
    "parse": [
      "float:=",
      "8",
      [
        -1,
        "pow",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF14C;&#xF248;&#xF173;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 977
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | pow 3 0;"
    ],
    "preprocessed": "float:= 1 | pow 3 0;",
    "code": "2111011132131232101111321132032233",
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "pow",
        "3",
        "0"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 978
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 3 1 6 0 7) | pow 3 (decimal 0 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 1 | vector 3 1 6 0 7) | pow 3 (decimal 0 | vector 2 5);",
    "code": "211101113221110000321312321000032113213211032032111331232101111321132211100003203123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "3",
          "1",
          "6",
          "0",
          "7"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF14A;&#xF24A;&#xF144;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 979
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 7 3 2 0 5) | pow 3 (decimal 0 | vector 5);"
    ],
    "preprocessed": "float:= (decimal 1 | vector 7 3 2 0 5) | pow 3 (decimal 0 | vector 5);",
    "code": "211101113221110000321312321000032111321132103203210133123210111132113221110000320312321000032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "7",
          "3",
          "2",
          "0",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 980
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 2 7 9 5 0) | pow 3 (decimal 0 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 2 | vector 2 7 9 5 0) | pow 3 (decimal 0 | vector 7 5);",
    "code": "21110111322111000032103123210000321032111321001321013203312321011113211322111000032031232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "2",
          "7",
          "9",
          "5",
          "0"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14B;&#xF24A;&#xF14D;&#xF24A;&#xF149;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 981
  },
  {
    "role": "code",
    "lines": [
      "float:= 3 | pow 3 1;"
    ],
    "preprocessed": "float:= 3 | pow 3 1;",
    "code": "21110111321131232101111321132132233",
    "parse": [
      "float:=",
      "3",
      [
        -1,
        "pow",
        "3",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF147;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 982
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 3 | vector 9 4 8 2 2) | pow 3 (decimal 1 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 3 | vector 9 4 8 2 2) | pow 3 (decimal 1 | vector 2 5);",
    "code": "211101113221110000321131232100003210013210032100032103210331232101111321132211100003213123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "3",
        [
          -1,
          "vector",
          "9",
          "4",
          "8",
          "2",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF147;&#xF248;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 983
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 5 | vector 1 9 6 1 5) | pow 3 (decimal 1 | vector 5);"
    ],
    "preprocessed": "float:= (decimal 5 | vector 1 9 6 1 5) | pow 3 (decimal 1 | vector 5);",
    "code": "211101113221110000321013123210000321321001321103213210133123210111132113221110000321312321000032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "5",
        [
          -1,
          "vector",
          "1",
          "9",
          "6",
          "1",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF149;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF14D;&#xF24A;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 984
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 6 | vector 8 3 8 5 2) | pow 3 (decimal 1 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 6 | vector 8 3 8 5 2) | pow 3 (decimal 1 | vector 7 5);",
    "code": "21110111322111000032110312321000032100032113210003210132103312321011113211322111000032131232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "6",
        [
          -1,
          "vector",
          "8",
          "3",
          "8",
          "5",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF14A;&#xF248;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF147;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 985
  },
  {
    "role": "code",
    "lines": [
      "float:= 9 | pow 3 2;"
    ],
    "preprocessed": "float:= 9 | pow 3 2;",
    "code": "21110111321001312321011113211321032233",
    "parse": [
      "float:=",
      "9",
      [
        -1,
        "pow",
        "3",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF14D;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 986
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 11 | vector 8 4 4 6 6) | pow 3 (decimal 2 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 11 | vector 8 4 4 6 6) | pow 3 (decimal 2 | vector 2 5);",
    "code": "2111011132211100003210113123210000321000321003210032110321103312321011113211322111000032103123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "11",
        [
          -1,
          "vector",
          "8",
          "4",
          "4",
          "6",
          "6"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF14F;&#xF248;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 987
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 15 | vector 5 8 8 4 5) | pow 3 (decimal 2 | vector 5);"
    ],
    "preprocessed": "float:= (decimal 15 | vector 5 8 8 4 5) | pow 3 (decimal 2 | vector 5);",
    "code": "2111011132211100003211113123210000321013210003210003210032101331232101111321132211100003210312321000032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "15",
        [
          -1,
          "vector",
          "5",
          "8",
          "8",
          "4",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF153;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 988
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 20 | vector 5 1 5 5 6) | pow 3 (decimal 2 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 20 | vector 5 1 5 5 6) | pow 3 (decimal 2 | vector 7 5);",
    "code": "211101113221110000321010031232100003210132132101321013211033123210111132113221110000321031232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "20",
        [
          -1,
          "vector",
          "5",
          "1",
          "5",
          "5",
          "6"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF158;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 989
  },
  {
    "role": "code",
    "lines": [
      "float:= 27 | pow 3 3;"
    ],
    "preprocessed": "float:= 27 | pow 3 3;",
    "code": "211101113211011312321011113211321132233",
    "parse": [
      "float:=",
      "27",
      [
        -1,
        "pow",
        "3",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF15F;&#xF248;&#xF173;&#xF24A;&#xF147;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 990
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | pow 4 0;"
    ],
    "preprocessed": "float:= 1 | pow 4 0;",
    "code": "21110111321312321011113210032032233",
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "pow",
        "4",
        "0"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF145;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 991
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 4 1 4 2 1) | pow 4 (decimal 0 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 1 | vector 4 1 4 2 1) | pow 4 (decimal 0 | vector 2 5);",
    "code": "2111011132211100003213123210000321003213210032103213312321011113210032211100003203123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "4",
          "1",
          "4",
          "2",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 992
  },
  {
    "role": "code",
    "lines": [
      "float:= 2 | pow 4 (decimal 0 | vector 5);"
    ],
    "preprocessed": "float:= 2 | pow 4 (decimal 0 | vector 5);",
    "code": "21110111321031232101111321003221110000320312321000032101332233",
    "parse": [
      "float:=",
      "2",
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF146;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 993
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 8 2 8 4 2) | pow 4 (decimal 0 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 2 | vector 8 2 8 4 2) | pow 4 (decimal 0 | vector 7 5);",
    "code": "21110111322111000032103123210000321000321032100032100321033123210111132100322111000032031232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "8",
          "2",
          "8",
          "4",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 994
  },
  {
    "role": "code",
    "lines": [
      "float:= 4 | pow 4 1;"
    ],
    "preprocessed": "float:= 4 | pow 4 1;",
    "code": "2111011132100312321011113210032132233",
    "parse": [
      "float:=",
      "4",
      [
        -1,
        "pow",
        "4",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF148;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 995
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 5 | vector 6 5 6 8 5) | pow 4 (decimal 1 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 5 | vector 6 5 6 8 5) | pow 4 (decimal 1 | vector 2 5);",
    "code": "211101113221110000321013123210000321103210132110321000321013312321011113210032211100003213123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "5",
        [
          -1,
          "vector",
          "6",
          "5",
          "6",
          "8",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF149;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 996
  },
  {
    "role": "code",
    "lines": [
      "float:= 8 | pow 4 (decimal 1 | vector 5);"
    ],
    "preprocessed": "float:= 8 | pow 4 (decimal 1 | vector 5);",
    "code": "2111011132100031232101111321003221110000321312321000032101332233",
    "parse": [
      "float:=",
      "8",
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF14C;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 997
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 11 | vector 3 1 3 7 0) | pow 4 (decimal 1 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 11 | vector 3 1 3 7 0) | pow 4 (decimal 1 | vector 7 5);",
    "code": "2111011132211100003210113123210000321132132113211132033123210111132100322111000032131232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "11",
        [
          -1,
          "vector",
          "3",
          "1",
          "3",
          "7",
          "0"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF14F;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF14B;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 998
  },
  {
    "role": "code",
    "lines": [
      "float:= 16 | pow 4 2;"
    ],
    "preprocessed": "float:= 16 | pow 4 2;",
    "code": "2111011132100003123210111132100321032233",
    "parse": [
      "float:=",
      "16",
      [
        -1,
        "pow",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF154;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 999
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 22 | vector 6 2 7 4 1) | pow 4 (decimal 2 | vector 2 5);"
    ],
    "preprocessed": "float:= (decimal 22 | vector 6 2 7 4 1) | pow 4 (decimal 2 | vector 2 5);",
    "code": "21110111322111000032101103123210000321103210321113210032133123210111132100322111000032103123210000321032101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "22",
        [
          -1,
          "vector",
          "6",
          "2",
          "7",
          "4",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF15A;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14B;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1000
  },
  {
    "role": "code",
    "lines": [
      "float:= 32 | pow 4 (decimal 2 | vector 5);"
    ],
    "preprocessed": "float:= 32 | pow 4 (decimal 2 | vector 5);",
    "code": "2111011132100000312321011113210032211100003210312321000032101332233",
    "parse": [
      "float:=",
      "32",
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF164;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1001
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 45 | vector 2 5 4 8 3) | pow 4 (decimal 2 | vector 7 5);"
    ],
    "preprocessed": "float:= (decimal 45 | vector 2 5 4 8 3) | pow 4 (decimal 2 | vector 7 5);",
    "code": "211101113221110000321011013123210000321032101321003210003211331232101111321003221110000321031232100003211132101332233",
    "parse": [
      "float:=",
      [
        "decimal",
        "45",
        [
          -1,
          "vector",
          "2",
          "5",
          "4",
          "8",
          "3"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF171;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF246;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1002
  },
  {
    "role": "code",
    "lines": [
      "float:= 64 | pow 4 3;"
    ],
    "preprocessed": "float:= 64 | pow 4 3;",
    "code": "211101113210000003123210111132100321132233",
    "parse": [
      "float:=",
      "64",
      [
        -1,
        "pow",
        "4",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF145;&#xF144;&#xF248;&#xF173;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1003
  },
  {
    "role": "code",
    "lines": [
      "intro exp;"
    ],
    "preprocessed": "intro exp;",
    "code": "21001032111110032233",
    "parse": [
      "intro",
      "exp"
    ],
    "spider": "&#xF156;&#xF24A;&#xF145;&#xF180;&#xF24B;",
    "dt": false,
    "stanza": 1004
  },
  {
    "role": "code",
    "lines": [
      "define exp:hat | ? x |",
      "  reduce $+ | map (? n | frac (pow:int $x $n) | factorial $n) | range 0 50;"
    ],
    "preprocessed": "define exp:hat | ? x |\n  reduce $+ | map (? n | frac (pow:int $x $n) | factorial $n) | range 0 50;",
    "code": "2110132111110131232110032101001312321011100302321010312321011010322110032100111031232110000322111101130232101001302321001110331232100011130232100111033123211011003203211001032233",
    "parse": [
      "define",
      "exp:hat",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "reduce",
          [
            -2,
            "+"
          ],
          [
            -1,
            "map",
            [
              "?",
              "n",
              [
                -1,
                "frac",
                [
                  "pow:int",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -2,
                    "n"
                  ]
                ],
                [
                  -1,
                  "factorial",
                  [
                    -2,
                    "n"
                  ]
                ]
              ]
            ],
            [
              -1,
              "range",
              "0",
              "50"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF174;&#xF246;&#xF145;&#xF17F;&#xF249;&#xF16D;&#xF249;&#xF145;&#xF152;&#xF245;&#xF248;&#xF145;&#xF14B;&#xF249;&#xF145;&#xF152;&#xF245;&#xF248;&#xF145;&#xF170;&#xF24A;&#xF144;&#xF24A;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1005
  },
  {
    "role": "code",
    "lines": [
      "float:= $e | exp:hat 1;"
    ],
    "preprocessed": "float:= $e | exp:hat 1;",
    "code": "211101113023211000131232111110132132233",
    "parse": [
      "float:=",
      [
        -2,
        "e"
      ],
      [
        -1,
        "exp:hat",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF249;&#xF175;&#xF248;&#xF145;&#xF181;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1006
  },
  {
    "role": "code",
    "lines": [
      "define ln:10:hat | decimal 2 | vector 3 0 2 5 8 5 0 9 2 9 9;"
    ],
    "preprocessed": "define ln:10:hat | decimal 2 | vector 3 0 2 5 8 5 0 9 2 9 9;",
    "code": "2110132111111031232111000032103123210000321132032103210132100032101320321001321032100132100132233",
    "parse": [
      "define",
      "ln:10:hat",
      [
        -1,
        "decimal",
        "2",
        [
          -1,
          "vector",
          "3",
          "0",
          "2",
          "5",
          "8",
          "5",
          "0",
          "9",
          "2",
          "9",
          "9"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF182;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF144;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF14D;&#xF24A;&#xF14D;&#xF24B;",
    "dt": true,
    "stanza": 1007
  },
  {
    "role": "code",
    "lines": [
      "float:= (pow:int 10 2) (exp:hat | * 2 $ln:10:hat);"
    ],
    "preprocessed": "float:= (pow:int 10 2) (exp:hat | * 2 $ln:10:hat);",
    "code": "2111011132211110113210103210332211111013123210013210302321111110332233",
    "parse": [
      "float:=",
      [
        "pow:int",
        "10",
        "2"
      ],
      [
        "exp:hat",
        [
          -1,
          "*",
          "2",
          [
            -2,
            "ln:10:hat"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF17F;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF145;&#xF181;&#xF248;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF182;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1008
  },
  {
    "role": "code",
    "lines": [
      "float:= (pow:int 10 3) (exp:hat | * 3 $ln:10:hat);"
    ],
    "preprocessed": "float:= (pow:int 10 3) (exp:hat | * 3 $ln:10:hat);",
    "code": "2111011132211110113210103211332211111013123210013211302321111110332233",
    "parse": [
      "float:=",
      [
        "pow:int",
        "10",
        "3"
      ],
      [
        "exp:hat",
        [
          -1,
          "*",
          "3",
          [
            -2,
            "ln:10:hat"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF17F;&#xF24A;&#xF14E;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF145;&#xF181;&#xF248;&#xF14D;&#xF24A;&#xF147;&#xF249;&#xF145;&#xF182;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1009
  },
  {
    "role": "code",
    "lines": [
      "float:= (pow:int 10 4) (exp:hat | * 4 $ln:10:hat);"
    ],
    "preprocessed": "float:= (pow:int 10 4) (exp:hat | * 4 $ln:10:hat);",
    "code": "211101113221111011321010321003322111110131232100132100302321111110332233",
    "parse": [
      "float:=",
      [
        "pow:int",
        "10",
        "4"
      ],
      [
        "exp:hat",
        [
          -1,
          "*",
          "4",
          [
            -2,
            "ln:10:hat"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF145;&#xF17F;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF145;&#xF181;&#xF248;&#xF14D;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF182;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1010
  },
  {
    "role": "file",
    "lines": [
      "== COS_Complex =="
    ],
    "stanza": 1011
  },
  {
    "role": "doc",
    "lines": [
      "A very very abbreviated introduction of complex numbers"
    ],
    "section_description": "introduce i",
    "section_category": "MATH",
    "section_index": 21,
    "stanza": 1012
  },
  {
    "role": "code",
    "lines": [
      "define all-equal | ? x:list |",
      "  if (>= 1 | list-length $x:list) $true |",
      "  and (= (list-ref $x:list 0) (list-ref $x:list 1))",
      "      (all-equal | tail $x:list);"
    ],
    "preprocessed": "define all-equal | ? x:list |\n  if (>= 1 | list-length $x:list) $true |\n  and (= (list-ref $x:list 0) (list-ref $x:list 1))\n      (all-equal | tail $x:list);",
    "code": "21101321111111312321100321010001312321111322100100032131232101001130232101000133023213123211032211322101010030232101000132033221010100302321010001321333221111111312321010010302321010001332233",
    "parse": [
      "define",
      "all-equal",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            ">=",
            "1",
            [
              -1,
              "list-length",
              [
                -2,
                "x:list"
              ]
            ]
          ],
          [
            -2,
            "true"
          ],
          [
            -1,
            "and",
            [
              "=",
              [
                "list-ref",
                [
                  -2,
                  "x:list"
                ],
                "0"
              ],
              [
                "list-ref",
                [
                  -2,
                  "x:list"
                ],
                "1"
              ]
            ],
            [
              "all-equal",
              [
                -1,
                "tail",
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF183;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF246;&#xF145;&#xF158;&#xF249;&#xF145;&#xF155;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF158;&#xF249;&#xF145;&#xF155;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF246;&#xF145;&#xF183;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF155;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1013
  },
  {
    "role": "code",
    "lines": [
      "all-equal | vector 2 2 2;"
    ],
    "preprocessed": "all-equal | vector 2 2 2;",
    "code": "21111111312321000032103210321032233",
    "parse": [
      "all-equal",
      [
        -1,
        "vector",
        "2",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF183;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1014
  },
  {
    "role": "code",
    "lines": [
      "not | all-equal | vector 2 2 1;"
    ],
    "preprocessed": "not | all-equal | vector 2 2 1;",
    "code": "210131232111111131232100003210321032132233",
    "parse": [
      "not",
      [
        -1,
        "all-equal",
        [
          -1,
          "vector",
          "2",
          "2",
          "1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF183;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1015
  },
  {
    "role": "code",
    "lines": [
      "not | all-equal | vector 2 1 2;"
    ],
    "preprocessed": "not | all-equal | vector 2 1 2;",
    "code": "210131232111111131232100003210321321032233",
    "parse": [
      "not",
      [
        -1,
        "all-equal",
        [
          -1,
          "vector",
          "2",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF183;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1016
  },
  {
    "role": "code",
    "lines": [
      "not | all-equal | vector 1 2 2;"
    ],
    "preprocessed": "not | all-equal | vector 1 2 2;",
    "code": "210131232111111131232100003213210321032233",
    "parse": [
      "not",
      [
        -1,
        "all-equal",
        [
          -1,
          "vector",
          "1",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF145;&#xF183;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1017
  },
  {
    "role": "code",
    "lines": [
      "intro sum;"
    ],
    "preprocessed": "intro sum;",
    "code": "210010321000000032233",
    "parse": [
      "intro",
      "sum"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1018
  },
  {
    "role": "code",
    "lines": [
      "define sum | reduce $+;"
    ],
    "preprocessed": "define sum | reduce $+;",
    "code": "21101321000000031232101110030232101032233",
    "parse": [
      "define",
      "sum",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF144;&#xF248;&#xF145;&#xF160;&#xF249;&#xF14E;&#xF24B;",
    "dt": true,
    "stanza": 1019
  },
  {
    "role": "code",
    "lines": [
      "intro i;"
    ],
    "preprocessed": "intro i;",
    "code": "2100103211001132233",
    "parse": [
      "intro",
      "i"
    ],
    "spider": "&#xF156;&#xF24A;&#xF177;&#xF24B;",
    "dt": false,
    "stanza": 1020
  },
  {
    "role": "code",
    "lines": [
      "= (minus 1) | * $i $i;"
    ],
    "preprocessed": "= (minus 1) | * $i $i;",
    "code": "21132211001113213312321001302321100113023211001132233",
    "parse": [
      "=",
      [
        "minus",
        "1"
      ],
      [
        -1,
        "*",
        [
          -2,
          "i"
        ],
        [
          -2,
          "i"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14D;&#xF249;&#xF177;&#xF249;&#xF177;&#xF24B;",
    "dt": false,
    "stanza": 1021
  },
  {
    "role": "code",
    "lines": [
      "define complex | ? x | ? y | + $x | * $y $i;"
    ],
    "preprocessed": "define complex | ? x | ? y | + $x | * $y $i;",
    "code": "211013210000001312321100321010013123211003211110131232101030232101001312321001302321111013023211001132233",
    "parse": [
      "define",
      "complex",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -1,
              "*",
              [
                -2,
                "y"
              ],
              [
                -2,
                "i"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF145;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF248;&#xF14D;&#xF249;&#xF181;&#xF249;&#xF177;&#xF24B;",
    "dt": true,
    "stanza": 1022
  },
  {
    "role": "code",
    "lines": [
      "= (complex 5 6) | + (complex 3 2) (complex 2 4);"
    ],
    "preprocessed": "= (complex 5 6) | + (complex 3 2) (complex 2 4);",
    "code": "21132210000001321013211033123210103221000000132113210332210000001321032100332233",
    "parse": [
      "=",
      [
        "complex",
        "5",
        "6"
      ],
      [
        -1,
        "+",
        [
          "complex",
          "3",
          "2"
        ],
        [
          "complex",
          "2",
          "4"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14E;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1023
  },
  {
    "role": "code",
    "lines": [
      "= (complex 7 22) | * (complex 5 4) (complex 3 2);"
    ],
    "preprocessed": "= (complex 7 22) | * (complex 5 4) (complex 3 2);",
    "code": "21132210000001321113210110331232100132210000001321013210033221000000132113210332233",
    "parse": [
      "=",
      [
        "complex",
        "7",
        "22"
      ],
      [
        -1,
        "*",
        [
          "complex",
          "5",
          "4"
        ],
        [
          "complex",
          "3",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF14B;&#xF24A;&#xF15A;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1024
  },
  {
    "role": "code",
    "lines": [
      "= (complex 10 8) | * (complex 5 4) 2;"
    ],
    "preprocessed": "= (complex 10 8) | * (complex 5 4) 2;",
    "code": "2113221000000132101032100033123210013221000000132101321003321032233",
    "parse": [
      "=",
      [
        "complex",
        "10",
        "8"
      ],
      [
        -1,
        "*",
        [
          "complex",
          "5",
          "4"
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1025
  },
  {
    "role": "code",
    "lines": [
      "= (complex 10 8) | * 2 (complex 5 4);"
    ],
    "preprocessed": "= (complex 10 8) | * 2 (complex 5 4);",
    "code": "2113221000000132101032100033123210013210322100000013210132100332233",
    "parse": [
      "=",
      [
        "complex",
        "10",
        "8"
      ],
      [
        -1,
        "*",
        "2",
        [
          "complex",
          "5",
          "4"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14D;&#xF24A;&#xF146;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1026
  },
  {
    "role": "doc",
    "lines": [
      "should work through how to divide complex numbers (multiply by conjugate)"
    ],
    "stanza": 1027
  },
  {
    "role": "code",
    "lines": [
      "= (complex (frac 6 25) (frac 17 25)) | frac (complex 3 2) (complex 4 | minus 3);"
    ],
    "preprocessed": "= (complex (frac 6 25) (frac 17 25)) | frac (complex 3 2) (complex 4 | minus 3);",
    "code": "2113221000000132211000032110321100133221100003210001321100133312321100003221000000132113210332210000001321003123211001113211332233",
    "parse": [
      "=",
      [
        "complex",
        [
          "frac",
          "6",
          "25"
        ],
        [
          "frac",
          "17",
          "25"
        ]
      ],
      [
        -1,
        "frac",
        [
          "complex",
          "3",
          "2"
        ],
        [
          "complex",
          "4",
          [
            -1,
            "minus",
            "3"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF145;&#xF246;&#xF174;&#xF24A;&#xF14A;&#xF24A;&#xF15D;&#xF245;&#xF246;&#xF174;&#xF24A;&#xF155;&#xF24A;&#xF15D;&#xF245;&#xF245;&#xF248;&#xF174;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF146;&#xF145;&#xF24A;&#xF148;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1028
  },
  {
    "role": "code",
    "lines": [
      "all-equal | vector",
      "  (+ 7 | * 22 $i)",
      "  (* (+ 5 | * 4 $i) (+ 3 | * 2 $i))",
      "  (sum | vector",
      "    (* 5 3)",
      "    (* 5 (* 2 $i))",
      "    (* (* 4 $i) 3)",
      "    (* (* 4 $i) (* 2 $i)))",
      "  (sum | vector",
      "    15 (* 10 $i) (* 12 $i) (minus 8))",
      "  (sum | vector",
      "    (+ 15 (minus 8)) (* (+ 10 12) $i));"
    ],
    "preprocessed": "all-equal | vector\n  (+ 7 | * 22 $i)\n  (* (+ 5 | * 4 $i) (+ 3 | * 2 $i))\n  (sum | vector\n    (* 5 3)\n    (* 5 (* 2 $i))\n    (* (* 4 $i) 3)\n    (* (* 4 $i) (* 2 $i)))\n  (sum | vector\n    15 (* 10 $i) (* 12 $i) (minus 8))\n  (sum | vector\n    (+ 15 (minus 8)) (* (+ 10 12) $i));",
    "code": "211111113123210000322101032111312321001321011030232110011332210013221010321013123210013210030232110011332210103211312321001321030232110011333221000000031232100003221001321013211332210013210132210013210302321100113332210013221001321003023211001133211332210013221001321003023211001133221001321030232110011333322100000003123210000321111322100132101030232110011332210013211003023211001133221100111321000333221000000031232100003221010321111322110011132100033322100132210103210103211003302321100113332233",
    "parse": [
      "all-equal",
      [
        -1,
        "vector",
        [
          "+",
          "7",
          [
            -1,
            "*",
            "22",
            [
              -2,
              "i"
            ]
          ]
        ],
        [
          "*",
          [
            "+",
            "5",
            [
              -1,
              "*",
              "4",
              [
                -2,
                "i"
              ]
            ]
          ],
          [
            "+",
            "3",
            [
              -1,
              "*",
              "2",
              [
                -2,
                "i"
              ]
            ]
          ]
        ],
        [
          "sum",
          [
            -1,
            "vector",
            [
              "*",
              "5",
              "3"
            ],
            [
              "*",
              "5",
              [
                "*",
                "2",
                [
                  -2,
                  "i"
                ]
              ]
            ],
            [
              "*",
              [
                "*",
                "4",
                [
                  -2,
                  "i"
                ]
              ],
              "3"
            ],
            [
              "*",
              [
                "*",
                "4",
                [
                  -2,
                  "i"
                ]
              ],
              [
                "*",
                "2",
                [
                  -2,
                  "i"
                ]
              ]
            ]
          ]
        ],
        [
          "sum",
          [
            -1,
            "vector",
            "15",
            [
              "*",
              "10",
              [
                -2,
                "i"
              ]
            ],
            [
              "*",
              "12",
              [
                -2,
                "i"
              ]
            ],
            [
              "minus",
              "8"
            ]
          ]
        ],
        [
          "sum",
          [
            -1,
            "vector",
            [
              "+",
              "15",
              [
                "minus",
                "8"
              ]
            ],
            [
              "*",
              [
                "+",
                "10",
                "12"
              ],
              [
                -2,
                "i"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF183;&#xF248;&#xF154;&#xF246;&#xF14E;&#xF24A;&#xF14B;&#xF248;&#xF14D;&#xF24A;&#xF15A;&#xF249;&#xF177;&#xF245;&#xF246;&#xF14D;&#xF246;&#xF14E;&#xF24A;&#xF149;&#xF248;&#xF14D;&#xF24A;&#xF148;&#xF249;&#xF177;&#xF245;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF248;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF177;&#xF245;&#xF245;&#xF246;&#xF146;&#xF144;&#xF248;&#xF154;&#xF246;&#xF14D;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF14D;&#xF24A;&#xF149;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF177;&#xF245;&#xF245;&#xF246;&#xF14D;&#xF246;&#xF14D;&#xF24A;&#xF148;&#xF249;&#xF177;&#xF245;&#xF147;&#xF245;&#xF246;&#xF14D;&#xF246;&#xF14D;&#xF24A;&#xF148;&#xF249;&#xF177;&#xF245;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF177;&#xF245;&#xF245;&#xF245;&#xF246;&#xF146;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF153;&#xF246;&#xF14D;&#xF24A;&#xF14E;&#xF249;&#xF177;&#xF245;&#xF246;&#xF14D;&#xF24A;&#xF150;&#xF249;&#xF177;&#xF245;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF14C;&#xF245;&#xF245;&#xF246;&#xF146;&#xF144;&#xF248;&#xF154;&#xF246;&#xF14E;&#xF24A;&#xF153;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF14C;&#xF245;&#xF245;&#xF246;&#xF14D;&#xF246;&#xF14E;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF245;&#xF249;&#xF177;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1029
  },
  {
    "role": "doc",
    "lines": [
      "Hint at Euler's identity"
    ],
    "stanza": 1030
  },
  {
    "role": "code",
    "lines": [
      "float:= 0 | + 1 | exp:hat | * $pi $i;"
    ],
    "preprocessed": "float:= 0 | + 1 | exp:hat | * $pi $i;",
    "code": "21110111320312321010321312321111101312321001302321100103023211001132233",
    "parse": [
      "float:=",
      "0",
      [
        -1,
        "+",
        "1",
        [
          -1,
          "exp:hat",
          [
            -1,
            "*",
            [
              -2,
              "pi"
            ],
            [
              -2,
              "i"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF24A;&#xF144;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF181;&#xF248;&#xF14D;&#xF249;&#xF176;&#xF249;&#xF177;&#xF24B;",
    "dt": false,
    "stanza": 1031
  },
  {
    "role": "file",
    "lines": [
      "== COS_Let =="
    ],
    "stanza": 1032
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Sometimes it is nice to do a lot of assignments at once.",
      "We introduce `let ((k1 v1) (k2 v2)) body` which is equivalent to",
      "`assign k1 v1 | assign k2 v2 | body`.",
      ""
    ],
    "section_description": "define let expressions",
    "section_category": "SYNTAX",
    "section_index": 22,
    "stanza": 1033
  },
  {
    "role": "code",
    "lines": [
      "intro let;"
    ],
    "preprocessed": "intro let;",
    "code": "210010321000001032233",
    "parse": [
      "intro",
      "let"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1034
  },
  {
    "role": "code",
    "lines": [
      "define translate:let:begin $translate;"
    ],
    "preprocessed": "define translate:let:begin $translate;",
    "code": "211013210000011302321100132233",
    "parse": [
      "define",
      "translate:let:begin",
      [
        -2,
        "translate"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF147;&#xF249;&#xF15D;&#xF24B;",
    "dt": true,
    "stanza": 1035
  },
  {
    "role": "code",
    "lines": [
      "define translate:let | ? x | ? y |",
      "  if (= 0 | list-length $x) (translate $y) |",
      "  translate:let (tail $x) |",
      "    vector assign (head | head $x) (head | tail | head $x) $y;"
    ],
    "preprocessed": "define translate:let | ? x | ? y |\n  if (= 0 | list-length $x) (translate $y) |\n  translate:let (tail $x) |\n    vector assign (head | head $x) (head | tail | head $x) $y;",
    "code": "21101321000010031232110032101001312321100321111013123211113221132031232101001130232101001332211001302321111013312321000010032210100103023210100133123210000321110322101000031232101000030232101001332210100003123210100103123210100003023210100133023211110132233",
    "parse": [
      "define",
      "translate:let",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "translate",
              [
                -2,
                "y"
              ]
            ],
            [
              -1,
              "translate:let",
              [
                "tail",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "vector",
                "assign",
                [
                  "head",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ],
                [
                  "head",
                  [
                    -1,
                    "tail",
                    [
                      -1,
                      "head",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF148;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF15D;&#xF249;&#xF181;&#xF245;&#xF248;&#xF146;&#xF148;&#xF246;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF152;&#xF246;&#xF145;&#xF154;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1036
  },
  {
    "role": "code",
    "lines": [
      "define translate | ? x |",
      "  if (not | function? $x) (translate:let:begin $x) |",
      "  if (not | = let | head $x) (translate:let:begin $x) |",
      "  translate:let (head | tail $x) (head | tail | tail $x);"
    ],
    "preprocessed": "define translate | ? x |\n  if (not | function? $x) (translate:let:begin $x) |\n  if (not | = let | head $x) (translate:let:begin $x) |\n  translate:let (head | tail $x) (head | tail | tail $x);",
    "code": "211013211001312321100321010013123211113221013123210110030232101001332210000011302321010013312321111322101312321132100000103123210100003023210100133221000001130232101001331232100001003221010000312321010010302321010013322101000031232101001031232101001030232101001332233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "not",
            [
              -1,
              "function?",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "translate:let:begin",
            [
              -2,
              "x"
            ]
          ],
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "let",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ],
            [
              "translate:let:begin",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "translate:let",
              [
                "head",
                [
                  -1,
                  "tail",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                "head",
                [
                  -1,
                  "tail",
                  [
                    -1,
                    "tail",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF147;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF146;&#xF146;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF147;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF146;&#xF148;&#xF246;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1037
  },
  {
    "role": "code",
    "lines": [
      "let ((x 20)) | = $x 20;"
    ],
    "preprocessed": "let ((x 20)) | = $x 20;",
    "code": "2100000103222101001321010033312321130232101001321010032233",
    "parse": [
      "let",
      [
        [
          "x",
          "20"
        ]
      ],
      [
        -1,
        "=",
        [
          -2,
          "x"
        ],
        "20"
      ]
    ],
    "spider": "&#xF146;&#xF146;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF158;&#xF245;&#xF245;&#xF248;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF158;&#xF24B;",
    "dt": false,
    "stanza": 1038
  },
  {
    "role": "code",
    "lines": [
      "let ((x 50) (y 20)) | = 30 | - $x $y;"
    ],
    "preprocessed": "let ((x 50) (y 20)) | = 30 | - $x $y;",
    "code": "210000010322210100132110010332211110132101003331232113211110312321011302321010013023211110132233",
    "parse": [
      "let",
      [
        [
          "x",
          "50"
        ],
        [
          "y",
          "20"
        ]
      ],
      [
        -1,
        "=",
        "30",
        [
          -1,
          "-",
          [
            -2,
            "x"
          ],
          [
            -2,
            "y"
          ]
        ]
      ]
    ],
    "spider": "&#xF146;&#xF146;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF176;&#xF245;&#xF246;&#xF181;&#xF24A;&#xF158;&#xF245;&#xF245;&#xF248;&#xF147;&#xF24A;&#xF162;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": false,
    "stanza": 1039
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10)) | + $x 5) (assign x 10 | + $x 5);"
    ],
    "preprocessed": "= (let ((x 10)) | + $x 5) (assign x 10 | + $x 5);",
    "code": "21132210000010322210100132101033312321010302321010013210133221110321010013210103123210103023210100132101332233",
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "5"
        ]
      ],
      [
        "assign",
        "x",
        "10",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "5"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF245;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF14E;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1040
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10)) | + $x 5) ((? x | + $x 5) 10);"
    ],
    "preprocessed": "= (let ((x 10)) | + $x 5) ((? x | + $x 5) 10);",
    "code": "2113221000001032221010013210103331232101030232101001321013322211003210100131232101030232101001321013321010332233",
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "5"
        ]
      ],
      [
        [
          "?",
          "x",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            "5"
          ]
        ],
        "10"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF245;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF14E;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1041
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10) (y 5)) | + $x $y) (assign x 10 | assign y 5 | + $x $y);"
    ],
    "preprocessed": "= (let ((x 10) (y 5)) | + $x $y) (assign x 10 | assign y 5 | + $x $y);",
    "code": "211322100000103222101001321010332211110132101333123210103023210100130232111101332211103210100132101031232111032111101321013123210103023210100130232111101332233",
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ],
          [
            "y",
            "5"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          [
            -2,
            "y"
          ]
        ]
      ],
      [
        "assign",
        "x",
        "10",
        [
          -1,
          "assign",
          "y",
          "5",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF181;&#xF24A;&#xF149;&#xF245;&#xF245;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF14E;&#xF248;&#xF152;&#xF24A;&#xF181;&#xF24A;&#xF149;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1042
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10) (y 5)) | + $x $y) ((? x | ? y | + $x $y) 10 5);"
    ],
    "preprocessed": "= (let ((x 10) (y 5)) | + $x $y) ((? x | ? y | + $x $y) 10 5);",
    "code": "21132210000010322210100132101033221111013210133312321010302321010013023211110133222110032101001312321100321111013123210103023210100130232111101332101032101332233",
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ],
          [
            "y",
            "5"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          [
            -2,
            "y"
          ]
        ]
      ],
      [
        [
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "+",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ],
        "10",
        "5"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF181;&#xF24A;&#xF149;&#xF245;&#xF245;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF14E;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1043
  },
  {
    "role": "file",
    "lines": [
      "== COS_MultipleParameter =="
    ],
    "stanza": 1044
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "lambda functions",
    "section_category": "SYNTAX",
    "section_index": 23,
    "stanza": 1045
  },
  {
    "role": "code",
    "lines": [
      "intro lambda;"
    ],
    "preprocessed": "intro lambda;",
    "code": "210010321101032233",
    "parse": [
      "intro",
      "lambda"
    ],
    "spider": "&#xF156;&#xF24A;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1046
  },
  {
    "role": "code",
    "lines": [
      "define translate:lambda:begin $translate;"
    ],
    "preprocessed": "define translate:lambda:begin $translate;",
    "code": "211013210000101302321100132233",
    "parse": [
      "define",
      "translate:lambda:begin",
      [
        -2,
        "translate"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF149;&#xF249;&#xF15D;&#xF24B;",
    "dt": true,
    "stanza": 1047
  },
  {
    "role": "code",
    "lines": [
      "define translate |",
      "  let ((x:translate $translate:lambda:begin)) |",
      "  ? x |",
      "    if (not | function? $x) (x:translate $x) |",
      "    if (not | = lambda | head $x) (x:translate $x) |",
      "    let ((x:list | head | tail $x)",
      "         (y | head | tail | tail $x)) |",
      "      if (= 0 | list-length $x:list) (translate $y) |",
      "      translate | vector lambda (except-last $x:list) |",
      "        vector ? (last $x:list) $y;"
    ],
    "preprocessed": "define translate |\n  let ((x:translate $translate:lambda:begin)) |\n  ? x |\n    if (not | function? $x) (x:translate $x) |\n    if (not | = lambda | head $x) (x:translate $x) |\n    let ((x:list | head | tail $x)\n         (y | head | tail | tail $x)) |\n      if (= 0 | list-length $x:list) (translate $y) |\n      translate | vector lambda (except-last $x:list) |\n        vector ? (last $x:list) $y;",
    "code": "21101321100131232100000103222100001103023210000101333123211003210100131232111132210131232101100302321010013322100001103023210100133123211113221013123211321101031232101000030232101001332210000110302321010013312321000001032221010001312321010000312321010010302321010013322111101312321010000312321010010312321010010302321010013331232111132211320312321010011302321010001332211001302321111013312321100131232100003211010322110000130232101000133123210000321100322110000030232101000133023211110132233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "let",
        [
          [
            "x:translate",
            [
              -2,
              "translate:lambda:begin"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "x:translate",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "lambda",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "x:translate",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "x:list",
                    [
                      -1,
                      "head",
                      [
                        -1,
                        "tail",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ],
                  [
                    "y",
                    [
                      -1,
                      "head",
                      [
                        -1,
                        "tail",
                        [
                          -1,
                          "tail",
                          [
                            -2,
                            "x"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "if",
                  [
                    "=",
                    "0",
                    [
                      -1,
                      "list-length",
                      [
                        -2,
                        "x:list"
                      ]
                    ]
                  ],
                  [
                    "translate",
                    [
                      -2,
                      "y"
                    ]
                  ],
                  [
                    -1,
                    "translate",
                    [
                      -1,
                      "vector",
                      "lambda",
                      [
                        "except-last",
                        [
                          -2,
                          "x:list"
                        ]
                      ],
                      [
                        -1,
                        "vector",
                        "?",
                        [
                          "last",
                          [
                            -2,
                            "x:list"
                          ]
                        ],
                        [
                          -2,
                          "y"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF146;&#xF14A;&#xF249;&#xF146;&#xF149;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF14A;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF15E;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF14A;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF145;&#xF155;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF181;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF246;&#xF15D;&#xF249;&#xF181;&#xF245;&#xF248;&#xF15D;&#xF248;&#xF154;&#xF24A;&#xF15E;&#xF246;&#xF145;&#xF165;&#xF249;&#xF145;&#xF155;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF150;&#xF246;&#xF145;&#xF164;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1048
  },
  {
    "role": "code",
    "lines": [
      "= 8 | (lambda (x y) | - $x $y) 8 0;"
    ],
    "preprocessed": "= 8 | (lambda (x y) | - $x $y) 8 0;",
    "code": "211321000312322110103221010013211110133123210113023210100130232111101332100032032233",
    "parse": [
      "=",
      "8",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "8",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF14C;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1049
  },
  {
    "role": "code",
    "lines": [
      "= 2 | (lambda (x y) | - $x $y) 4 2;"
    ],
    "preprocessed": "= 2 | (lambda (x y) | - $x $y) 4 2;",
    "code": "2113210312322110103221010013211110133123210113023210100130232111101332100321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1050
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (lambda (x y) | - $x $y) 9 6;"
    ],
    "preprocessed": "= 3 | (lambda (x y) | - $x $y) 9 6;",
    "code": "211321131232211010322101001321111013312321011302321010013023211110133210013211032233",
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "9",
        "6"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF14D;&#xF24A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1051
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (lambda (x y) | - $x $y) 4 1;"
    ],
    "preprocessed": "= 3 | (lambda (x y) | - $x $y) 4 1;",
    "code": "211321131232211010322101001321111013312321011302321010013023211110133210032132233",
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF148;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1052
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (lambda (x y) | - $x $y) 4 4;"
    ],
    "preprocessed": "= 0 | (lambda (x y) | - $x $y) 4 4;",
    "code": "2113203123221101032210100132111101331232101130232101001302321111013321003210032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF148;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1053
  },
  {
    "role": "file",
    "lines": [
      "== COS_CommentBase =="
    ],
    "stanza": 1054
  },
  {
    "role": "comment",
    "lines": [
      "# The following parts of the message are experimental, and not",
      "# carefully integrated with the main body"
    ],
    "section_description": "end of part 1, start of part 2",
    "section_category": "NOTE",
    "section_index": 24,
    "stanza": 1055
  },
  {
    "role": "code",
    "lines": [
      "intro part2;"
    ],
    "preprocessed": "intro part2;",
    "code": "210010321000011132233",
    "parse": [
      "intro",
      "part2"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1056
  },
  {
    "role": "file",
    "lines": [
      "== COS_Pure =="
    ],
    "stanza": 1057
  },
  {
    "role": "comment",
    "lines": [
      "# these definitions are not quite what we want",
      "# since thinking of everything as a function requires headscratching",
      "# it would be better to use these as a parallel means of evaluation",
      "# ... for expressions"
    ],
    "section_description": "some pure lambda calculus definitions - optional",
    "section_category": "MATH",
    "section_index": 25,
    "stanza": 1058
  },
  {
    "role": "code",
    "lines": [
      "intro pure:if;"
    ],
    "preprocessed": "intro pure:if;",
    "code": "210010321000100032233",
    "parse": [
      "intro",
      "pure:if"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1059
  },
  {
    "role": "code",
    "lines": [
      "define pure:if | ? x | ? y | ? z | x $y $z;"
    ],
    "preprocessed": "define pure:if | ? x | ? y | ? z | x $y $z;",
    "code": "21101321000100031232110032101001312321100321111013123211003211111031232101001302321111013023211111032233",
    "parse": [
      "define",
      "pure:if",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "x",
              [
                -2,
                "y"
              ],
              [
                -2,
                "z"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF14C;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF16D;&#xF249;&#xF181;&#xF249;&#xF182;&#xF24B;",
    "dt": true,
    "stanza": 1060
  },
  {
    "role": "code",
    "lines": [
      "intro pure:true;"
    ],
    "preprocessed": "intro pure:true;",
    "code": "210010321000100132233",
    "parse": [
      "intro",
      "pure:true"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 1061
  },
  {
    "role": "code",
    "lines": [
      "define pure:true | ? y | ? z | y;"
    ],
    "preprocessed": "define pure:true | ? y | ? z | y;",
    "code": "21101321000100131232110032111101312321100321111103123211110132233",
    "parse": [
      "define",
      "pure:true",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "z",
          [
            -1,
            "y"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF14D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1062
  },
  {
    "role": "code",
    "lines": [
      "intro pure:false;"
    ],
    "preprocessed": "intro pure:false;",
    "code": "210010321000101032233",
    "parse": [
      "intro",
      "pure:false"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1063
  },
  {
    "role": "code",
    "lines": [
      "define pure:false | ? y | ? z | z;"
    ],
    "preprocessed": "define pure:false | ? y | ? z | z;",
    "code": "21101321000101031232110032111101312321100321111103123211111032233",
    "parse": [
      "define",
      "pure:false",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "z",
          [
            -1,
            "z"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF14E;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF182;&#xF24B;",
    "dt": true,
    "stanza": 1064
  },
  {
    "role": "code",
    "lines": [
      "intro pure:cons;"
    ],
    "preprocessed": "intro pure:cons;",
    "code": "210010321000101132233",
    "parse": [
      "intro",
      "pure:cons"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1065
  },
  {
    "role": "code",
    "lines": [
      "define pure:cons | ? x | ? y | ? z | pure:if $z $x $y;"
    ],
    "preprocessed": "define pure:cons | ? x | ? y | ? z | pure:if $z $x $y;",
    "code": "211013210001011312321100321010013123211003211110131232110032111110312321000100030232111110302321010013023211110132233",
    "parse": [
      "define",
      "pure:cons",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "pure:if",
              [
                -2,
                "z"
              ],
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF14F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF182;&#xF248;&#xF146;&#xF14C;&#xF249;&#xF182;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1066
  },
  {
    "role": "code",
    "lines": [
      "intro pure:car;"
    ],
    "preprocessed": "intro pure:car;",
    "code": "210010321000110032233",
    "parse": [
      "intro",
      "pure:car"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF150;&#xF24B;",
    "dt": false,
    "stanza": 1067
  },
  {
    "role": "code",
    "lines": [
      "define pure:car | ? x | x $pure:true;"
    ],
    "preprocessed": "define pure:car | ? x | x $pure:true;",
    "code": "2110132100011003123211003210100131232101001302321000100132233",
    "parse": [
      "define",
      "pure:car",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "x",
          [
            -2,
            "pure:true"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF150;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF16D;&#xF249;&#xF146;&#xF14D;&#xF24B;",
    "dt": true,
    "stanza": 1068
  },
  {
    "role": "code",
    "lines": [
      "intro pure:cdr;"
    ],
    "preprocessed": "intro pure:cdr;",
    "code": "210010321000110132233",
    "parse": [
      "intro",
      "pure:cdr"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1069
  },
  {
    "role": "code",
    "lines": [
      "define pure:cdr | ? x | x $pure:false;"
    ],
    "preprocessed": "define pure:cdr | ? x | x $pure:false;",
    "code": "2110132100011013123211003210100131232101001302321000101032233",
    "parse": [
      "define",
      "pure:cdr",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "x",
          [
            -2,
            "pure:false"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF151;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF16D;&#xF249;&#xF146;&#xF14E;&#xF24B;",
    "dt": true,
    "stanza": 1070
  },
  {
    "role": "code",
    "lines": [
      "intro pure:0;"
    ],
    "preprocessed": "intro pure:0;",
    "code": "210010321000111032233",
    "parse": [
      "intro",
      "pure:0"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF152;&#xF24B;",
    "dt": false,
    "stanza": 1071
  },
  {
    "role": "code",
    "lines": [
      "define pure:0 | ? y | ? x $x;"
    ],
    "preprocessed": "define pure:0 | ? y | ? x $x;",
    "code": "21101321000111031232110032111101312321100321010013023210100132233",
    "parse": [
      "define",
      "pure:0",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF152;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1072
  },
  {
    "role": "code",
    "lines": [
      "intro pure:1;"
    ],
    "preprocessed": "intro pure:1;",
    "code": "210010321000111132233",
    "parse": [
      "intro",
      "pure:1"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 1073
  },
  {
    "role": "code",
    "lines": [
      "define pure:1 | ? y | ? x | y $x;"
    ],
    "preprocessed": "define pure:1 | ? y | ? x | y $x;",
    "code": "2110132100011113123211003211110131232110032101001312321111013023210100132233",
    "parse": [
      "define",
      "pure:1",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "y",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF153;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF181;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1074
  },
  {
    "role": "code",
    "lines": [
      "intro pure:2;"
    ],
    "preprocessed": "intro pure:2;",
    "code": "210010321001000032233",
    "parse": [
      "intro",
      "pure:2"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 1075
  },
  {
    "role": "code",
    "lines": [
      "define pure:2 | ? y | ? x | y (y $x);"
    ],
    "preprocessed": "define pure:2 | ? y | ? x | y (y $x);",
    "code": "21101321001000031232110032111101312321100321010013123211110132211110130232101001332233",
    "parse": [
      "define",
      "pure:2",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "y",
            [
              "y",
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF154;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF181;&#xF246;&#xF181;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1076
  },
  {
    "role": "code",
    "lines": [
      "intro pure:next;"
    ],
    "preprocessed": "intro pure:next;",
    "code": "210010321001000132233",
    "parse": [
      "intro",
      "pure:next"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF155;&#xF24B;",
    "dt": false,
    "stanza": 1077
  },
  {
    "role": "code",
    "lines": [
      "define pure:next | ? n | ? y | ? x | y ((n $y) $x);"
    ],
    "preprocessed": "define pure:next | ? n | ? y | ? x | y ((n $y) $x);",
    "code": "2110132100100013123211003210011103123211003211110131232110032101001312321111013222100111030232111101330232101001332233",
    "parse": [
      "define",
      "pure:next",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "y",
              [
                [
                  "n",
                  [
                    -2,
                    "y"
                  ]
                ],
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF181;&#xF246;&#xF246;&#xF145;&#xF152;&#xF249;&#xF181;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1078
  },
  {
    "role": "code",
    "lines": [
      "intro pure:+;"
    ],
    "preprocessed": "intro pure:+;",
    "code": "210010321001001032233",
    "parse": [
      "intro",
      "pure:+"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 1079
  },
  {
    "role": "code",
    "lines": [
      "define pure:+ | ? x | ? y | (x $pure:next) $y;"
    ],
    "preprocessed": "define pure:+ | ? x | ? y | (x $pure:next) $y;",
    "code": "2110132100100103123211003210100131232110032111101312322101001302321001000133023211110132233",
    "parse": [
      "define",
      "pure:+",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            [
              "x",
              [
                -2,
                "pure:next"
              ]
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF156;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF246;&#xF16D;&#xF249;&#xF146;&#xF155;&#xF245;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1080
  },
  {
    "role": "code",
    "lines": [
      "intro pure:*;"
    ],
    "preprocessed": "intro pure:*;",
    "code": "210010321001001132233",
    "parse": [
      "intro",
      "pure:*"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1081
  },
  {
    "role": "code",
    "lines": [
      "define pure:* | ? x | ? y | (x (pure:+ $y)) $pure:0;"
    ],
    "preprocessed": "define pure:* | ? x | ? y | (x (pure:+ $y)) $pure:0;",
    "code": "2110132100100113123211003210100131232110032111101312322101001322100100103023211110133302321000111032233",
    "parse": [
      "define",
      "pure:*",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            [
              "x",
              [
                "pure:+",
                [
                  -2,
                  "y"
                ]
              ]
            ],
            [
              -2,
              "pure:0"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF157;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF246;&#xF16D;&#xF246;&#xF146;&#xF156;&#xF249;&#xF181;&#xF245;&#xF245;&#xF249;&#xF146;&#xF152;&#xF24B;",
    "dt": true,
    "stanza": 1082
  },
  {
    "role": "code",
    "lines": [
      "intro pure:prev;"
    ],
    "preprocessed": "intro pure:prev;",
    "code": "210010321001010032233",
    "parse": [
      "intro",
      "pure:prev"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF158;&#xF24B;",
    "dt": false,
    "stanza": 1083
  },
  {
    "role": "code",
    "lines": [
      "define pure:prev | ? x:pure | pure:cdr | (x:pure (? x:? | pure:cons (pure:next | pure:car $x:?) (pure:car $x:?))) (pure:cons $pure:0 $pure:0);"
    ],
    "preprocessed": "define pure:prev | ? x:pure | pure:cdr | (x:pure (? x:? | pure:cons (pure:next | pure:car $x:?) (pure:car $x:?))) (pure:cons $pure:0 $pure:0);",
    "code": "2110132100101003123211003210010101312321000110131232210010101322110032101101131232100010113221001000131232100011003023210110113322100011003023210110113333221000101130232100011103023210001110332233",
    "parse": [
      "define",
      "pure:prev",
      [
        -1,
        "?",
        "x:pure",
        [
          -1,
          "pure:cdr",
          [
            -1,
            [
              "x:pure",
              [
                "?",
                "x:?",
                [
                  -1,
                  "pure:cons",
                  [
                    "pure:next",
                    [
                      -1,
                      "pure:car",
                      [
                        -2,
                        "x:?"
                      ]
                    ]
                  ],
                  [
                    "pure:car",
                    [
                      -2,
                      "x:?"
                    ]
                  ]
                ]
              ]
            ],
            [
              "pure:cons",
              [
                -2,
                "pure:0"
              ],
              [
                -2,
                "pure:0"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF159;&#xF248;&#xF146;&#xF151;&#xF248;&#xF246;&#xF146;&#xF159;&#xF246;&#xF150;&#xF24A;&#xF145;&#xF15F;&#xF248;&#xF146;&#xF14F;&#xF246;&#xF146;&#xF155;&#xF248;&#xF146;&#xF150;&#xF249;&#xF145;&#xF15F;&#xF245;&#xF246;&#xF146;&#xF150;&#xF249;&#xF145;&#xF15F;&#xF245;&#xF245;&#xF245;&#xF246;&#xF146;&#xF14F;&#xF249;&#xF146;&#xF152;&#xF249;&#xF146;&#xF152;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1084
  },
  {
    "role": "code",
    "lines": [
      "intro pure:=:0;"
    ],
    "preprocessed": "intro pure:=:0;",
    "code": "210010321001011032233",
    "parse": [
      "intro",
      "pure:=:0"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1085
  },
  {
    "role": "code",
    "lines": [
      "define pure:=:0 | ? x:pure | (x:pure (? y $pure:false) $pure:true);"
    ],
    "preprocessed": "define pure:=:0 | ? x:pure | (x:pure (? y $pure:false) $pure:true);",
    "code": "211013210010110312321100321001010131232210010101322110032111101302321000101033023210001001332233",
    "parse": [
      "define",
      "pure:=:0",
      [
        -1,
        "?",
        "x:pure",
        [
          -1,
          [
            "x:pure",
            [
              "?",
              "y",
              [
                -2,
                "pure:false"
              ]
            ],
            [
              -2,
              "pure:true"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF15A;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF159;&#xF248;&#xF246;&#xF146;&#xF159;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF249;&#xF146;&#xF14E;&#xF245;&#xF249;&#xF146;&#xF14D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1086
  },
  {
    "role": "code",
    "lines": [
      "intro fixed-point;"
    ],
    "preprocessed": "intro fixed-point;",
    "code": "210010321001011132233",
    "parse": [
      "intro",
      "fixed-point"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 1087
  },
  {
    "role": "code",
    "lines": [
      "define fixed-point | ? x | (? y | x (y $y)) (? y | x (y $y));"
    ],
    "preprocessed": "define fixed-point | ? x | (? y | x (y $y)) (? y | x (y $y));",
    "code": "2110132100101113123211003210100131232211003211110131232101001322111101302321111013332211003211110131232101001322111101302321111013332233",
    "parse": [
      "define",
      "fixed-point",
      [
        -1,
        "?",
        "x",
        [
          -1,
          [
            "?",
            "y",
            [
              -1,
              "x",
              [
                "y",
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ],
          [
            "?",
            "y",
            [
              -1,
              "x",
              [
                "y",
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF15B;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF16D;&#xF246;&#xF181;&#xF249;&#xF181;&#xF245;&#xF245;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF16D;&#xF246;&#xF181;&#xF249;&#xF181;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1088
  },
  {
    "role": "comment",
    "lines": [
      "# .. but for rest of message will assume that define does fixed-point for us",
      "# now build a link between numbers and church number functions"
    ],
    "stanza": 1089
  },
  {
    "role": "code",
    "lines": [
      "intro pure:int:get;"
    ],
    "preprocessed": "intro pure:int:get;",
    "code": "210010321001100032233",
    "parse": [
      "intro",
      "pure:int:get"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 1090
  },
  {
    "role": "code",
    "lines": [
      "define pure:int:get | ? y | y (? x | + $x 1) 0;"
    ],
    "preprocessed": "define pure:int:get | ? y | y (? x | + $x 1) 0;",
    "code": "211013210011000312321100321111013123211110132211003210100131232101030232101001321332032233",
    "parse": [
      "define",
      "pure:int:get",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "y",
          [
            "?",
            "x",
            [
              -1,
              "+",
              [
                -2,
                "x"
              ],
              "1"
            ]
          ],
          "0"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF15C;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF181;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1091
  },
  {
    "role": "code",
    "lines": [
      "= 0 (pure:int:get $pure:0);"
    ],
    "preprocessed": "= 0 (pure:int:get $pure:0);",
    "code": "211320322100110003023210001110332233",
    "parse": [
      "=",
      "0",
      [
        "pure:int:get",
        [
          -2,
          "pure:0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF246;&#xF146;&#xF15C;&#xF249;&#xF146;&#xF152;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1092
  },
  {
    "role": "code",
    "lines": [
      "= 1 (pure:int:get $pure:1);"
    ],
    "preprocessed": "= 1 (pure:int:get $pure:1);",
    "code": "211321322100110003023210001111332233",
    "parse": [
      "=",
      "1",
      [
        "pure:int:get",
        [
          -2,
          "pure:1"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF246;&#xF146;&#xF15C;&#xF249;&#xF146;&#xF153;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1093
  },
  {
    "role": "code",
    "lines": [
      "= 2 (pure:int:get $pure:2);"
    ],
    "preprocessed": "= 2 (pure:int:get $pure:2);",
    "code": "2113210322100110003023210010000332233",
    "parse": [
      "=",
      "2",
      [
        "pure:int:get",
        [
          -2,
          "pure:2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF246;&#xF146;&#xF15C;&#xF249;&#xF146;&#xF154;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1094
  },
  {
    "role": "code",
    "lines": [
      "define int:pure:get | ? x | if (= 0 $x) $pure:0 (pure:next | int:pure:get | - $x 1);"
    ],
    "preprocessed": "define int:pure:get | ? x | if (= 0 $x) $pure:0 (pure:next | int:pure:get | - $x 1);",
    "code": "2110132100110013123211003210100131232111132211320302321010013302321000111032210010001312321001100131232101130232101001321332233",
    "parse": [
      "define",
      "int:pure:get",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -2,
              "x"
            ]
          ],
          [
            -2,
            "pure:0"
          ],
          [
            "pure:next",
            [
              -1,
              "int:pure:get",
              [
                -1,
                "-",
                [
                  -2,
                  "x"
                ],
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF146;&#xF152;&#xF246;&#xF146;&#xF155;&#xF248;&#xF146;&#xF15D;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1095
  },
  {
    "role": "file",
    "lines": [
      "== COS_Quantifier =="
    ],
    "stanza": 1096
  },
  {
    "role": "comment",
    "lines": [
      "# really need to link with sets for true correctness",
      "# and the examples here are REALLY sparse, need much more"
    ],
    "section_description": "introduce universal quantifier",
    "section_category": "MATH",
    "section_index": 26,
    "stanza": 1097
  },
  {
    "role": "code",
    "lines": [
      "intro forall;"
    ],
    "preprocessed": "intro forall;",
    "code": "210010321001132233",
    "parse": [
      "intro",
      "forall"
    ],
    "spider": "&#xF156;&#xF24A;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1098
  },
  {
    "role": "code",
    "lines": [
      "< 5 (+ 5 1);"
    ],
    "preprocessed": "< 5 (+ 5 1);",
    "code": "21032101322101032101321332233",
    "parse": [
      "<",
      "5",
      [
        "+",
        "5",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF149;&#xF246;&#xF14E;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1099
  },
  {
    "role": "code",
    "lines": [
      "< 4 (+ 4 1);"
    ],
    "preprocessed": "< 4 (+ 4 1);",
    "code": "21032100322101032100321332233",
    "parse": [
      "<",
      "4",
      [
        "+",
        "4",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF148;&#xF246;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1100
  },
  {
    "role": "code",
    "lines": [
      "< 3 (+ 3 1);"
    ],
    "preprocessed": "< 3 (+ 3 1);",
    "code": "210321132210103211321332233",
    "parse": [
      "<",
      "3",
      [
        "+",
        "3",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1101
  },
  {
    "role": "code",
    "lines": [
      "< 2 (+ 2 1);"
    ],
    "preprocessed": "< 2 (+ 2 1);",
    "code": "210321032210103210321332233",
    "parse": [
      "<",
      "2",
      [
        "+",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF146;&#xF246;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1102
  },
  {
    "role": "code",
    "lines": [
      "< 1 (+ 1 1);"
    ],
    "preprocessed": "< 1 (+ 1 1);",
    "code": "2103213221010321321332233",
    "parse": [
      "<",
      "1",
      [
        "+",
        "1",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF145;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1103
  },
  {
    "role": "code",
    "lines": [
      "< 0 (+ 0 1);"
    ],
    "preprocessed": "< 0 (+ 0 1);",
    "code": "2103203221010320321332233",
    "parse": [
      "<",
      "0",
      [
        "+",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF144;&#xF246;&#xF14E;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1104
  },
  {
    "role": "code",
    "lines": [
      "forall (? x | < $x (+ $x 1));"
    ],
    "preprocessed": "forall (? x | < $x (+ $x 1));",
    "code": "2100113221100321010013123210302321010013221010302321010013213332233",
    "parse": [
      "forall",
      [
        "?",
        "x",
        [
          -1,
          "<",
          [
            -2,
            "x"
          ],
          [
            "+",
            [
              -2,
              "x"
            ],
            "1"
          ]
        ]
      ]
    ],
    "spider": "&#xF157;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF146;&#xF249;&#xF16D;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1105
  },
  {
    "role": "code",
    "lines": [
      "< 5 (* 5 2);"
    ],
    "preprocessed": "< 5 (* 5 2);",
    "code": "210321013221001321013210332233",
    "parse": [
      "<",
      "5",
      [
        "*",
        "5",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF149;&#xF246;&#xF14D;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1106
  },
  {
    "role": "code",
    "lines": [
      "< 4 (* 4 2);"
    ],
    "preprocessed": "< 4 (* 4 2);",
    "code": "210321003221001321003210332233",
    "parse": [
      "<",
      "4",
      [
        "*",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF148;&#xF246;&#xF14D;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1107
  },
  {
    "role": "code",
    "lines": [
      "< 3 (* 3 2);"
    ],
    "preprocessed": "< 3 (* 3 2);",
    "code": "2103211322100132113210332233",
    "parse": [
      "<",
      "3",
      [
        "*",
        "3",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF147;&#xF246;&#xF14D;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1108
  },
  {
    "role": "code",
    "lines": [
      "< 2 (* 2 2);"
    ],
    "preprocessed": "< 2 (* 2 2);",
    "code": "2103210322100132103210332233",
    "parse": [
      "<",
      "2",
      [
        "*",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF146;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1109
  },
  {
    "role": "code",
    "lines": [
      "< 1 (* 1 2);"
    ],
    "preprocessed": "< 1 (* 1 2);",
    "code": "21032132210013213210332233",
    "parse": [
      "<",
      "1",
      [
        "*",
        "1",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF24A;&#xF145;&#xF246;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1110
  },
  {
    "role": "code",
    "lines": [
      "not | < 0 (* 0 2);"
    ],
    "preprocessed": "not | < 0 (* 0 2);",
    "code": "2101312321032032210013203210332233",
    "parse": [
      "not",
      [
        -1,
        "<",
        "0",
        [
          "*",
          "0",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF24A;&#xF144;&#xF246;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1111
  },
  {
    "role": "code",
    "lines": [
      "not | forall (? x | < $x (* $x 2));"
    ],
    "preprocessed": "not | forall (? x | < $x (* $x 2));",
    "code": "2101312321001132211003210100131232103023210100132210013023210100132103332233",
    "parse": [
      "not",
      [
        -1,
        "forall",
        [
          "?",
          "x",
          [
            -1,
            "<",
            [
              -2,
              "x"
            ],
            [
              "*",
              [
                -2,
                "x"
              ],
              "2"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF157;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF146;&#xF249;&#xF16D;&#xF246;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1112
  },
  {
    "role": "comment",
    "lines": [
      "# really need to link with sets for true correctness",
      "# and the examples here are REALLY sparse, need much more"
    ],
    "section_description": "introduce existential quantifier",
    "section_category": "MATH",
    "section_index": 27,
    "stanza": 1113
  },
  {
    "role": "code",
    "lines": [
      "not | = 5 (* 2 2);"
    ],
    "preprocessed": "not | = 5 (* 2 2);",
    "code": "2101312321132101322100132103210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "5",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF149;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1114
  },
  {
    "role": "code",
    "lines": [
      "= 4 (* 2 2);"
    ],
    "preprocessed": "= 4 (* 2 2);",
    "code": "21132100322100132103210332233",
    "parse": [
      "=",
      "4",
      [
        "*",
        "2",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1115
  },
  {
    "role": "code",
    "lines": [
      "not | = 3 (* 2 2);"
    ],
    "preprocessed": "not | = 3 (* 2 2);",
    "code": "210131232113211322100132103210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "3",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1116
  },
  {
    "role": "code",
    "lines": [
      "not | = 2 (* 2 2);"
    ],
    "preprocessed": "not | = 2 (* 2 2);",
    "code": "210131232113210322100132103210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "2",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF146;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1117
  },
  {
    "role": "code",
    "lines": [
      "not | = 1 (* 2 2);"
    ],
    "preprocessed": "not | = 1 (* 2 2);",
    "code": "21013123211321322100132103210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "1",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF145;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1118
  },
  {
    "role": "code",
    "lines": [
      "not | = 0 (* 2 2);"
    ],
    "preprocessed": "not | = 0 (* 2 2);",
    "code": "21013123211320322100132103210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "0",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1119
  },
  {
    "role": "code",
    "lines": [
      "intro exists;"
    ],
    "preprocessed": "intro exists;",
    "code": "210010321010032233",
    "parse": [
      "intro",
      "exists"
    ],
    "spider": "&#xF156;&#xF24A;&#xF158;&#xF24B;",
    "dt": false,
    "stanza": 1120
  },
  {
    "role": "code",
    "lines": [
      "exists (? x | = $x (* 2 2));"
    ],
    "preprocessed": "exists (? x | = $x (* 2 2));",
    "code": "2101003221100321010013123211302321010013221001321032103332233",
    "parse": [
      "exists",
      [
        "?",
        "x",
        [
          -1,
          "=",
          [
            -2,
            "x"
          ],
          [
            "*",
            "2",
            "2"
          ]
        ]
      ]
    ],
    "spider": "&#xF158;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF249;&#xF16D;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1121
  },
  {
    "role": "code",
    "lines": [
      "not | = 5 (+ 5 2);"
    ],
    "preprocessed": "not | = 5 (+ 5 2);",
    "code": "21013123211321013221010321013210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "5",
        [
          "+",
          "5",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF149;&#xF246;&#xF14E;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1122
  },
  {
    "role": "code",
    "lines": [
      "not | = 4 (+ 4 2);"
    ],
    "preprocessed": "not | = 4 (+ 4 2);",
    "code": "21013123211321003221010321003210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "4",
        [
          "+",
          "4",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF246;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1123
  },
  {
    "role": "code",
    "lines": [
      "not | = 3 (+ 3 2);"
    ],
    "preprocessed": "not | = 3 (+ 3 2);",
    "code": "210131232113211322101032113210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "3",
        [
          "+",
          "3",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF246;&#xF14E;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1124
  },
  {
    "role": "code",
    "lines": [
      "not | = 2 (+ 2 2);"
    ],
    "preprocessed": "not | = 2 (+ 2 2);",
    "code": "210131232113210322101032103210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "2",
        [
          "+",
          "2",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF146;&#xF246;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1125
  },
  {
    "role": "code",
    "lines": [
      "not | = 1 (+ 1 2);"
    ],
    "preprocessed": "not | = 1 (+ 1 2);",
    "code": "2101312321132132210103213210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "1",
        [
          "+",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF145;&#xF246;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1126
  },
  {
    "role": "code",
    "lines": [
      "not | = 0 (+ 0 2);"
    ],
    "preprocessed": "not | = 0 (+ 0 2);",
    "code": "2101312321132032210103203210332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        "0",
        [
          "+",
          "0",
          "2"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF24A;&#xF144;&#xF246;&#xF14E;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1127
  },
  {
    "role": "code",
    "lines": [
      "not (exists (? x | = $x (+ $x 2)));"
    ],
    "preprocessed": "not (exists (? x | = $x (+ $x 2)));",
    "code": "210132210100322110032101001312321130232101001322101030232101001321033332233",
    "parse": [
      "not",
      [
        "exists",
        [
          "?",
          "x",
          [
            -1,
            "=",
            [
              -2,
              "x"
            ],
            [
              "+",
              [
                -2,
                "x"
              ],
              "2"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF149;&#xF246;&#xF158;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF249;&#xF16D;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1128
  },
  {
    "role": "file",
    "lines": [
      "== COS_Implication =="
    ],
    "stanza": 1129
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "introduce logical implication",
    "section_category": "MATH",
    "section_index": 28,
    "stanza": 1130
  },
  {
    "role": "code",
    "lines": [
      "intro =>;"
    ],
    "preprocessed": "intro =>;",
    "code": "210010321001101032233",
    "parse": [
      "intro",
      "=>"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1131
  },
  {
    "role": "code",
    "lines": [
      "define => | ? x | ? y | not | and $x (not $y);"
    ],
    "preprocessed": "define => | ? x | ? y | not | and $x (not $y);",
    "code": "211013210011010312321100321010013123211003211110131232101312321103023210100132210130232111101332233",
    "parse": [
      "define",
      "=>",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "not",
            [
              -1,
              "and",
              [
                -2,
                "x"
              ],
              [
                "not",
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF15E;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF149;&#xF248;&#xF14A;&#xF249;&#xF16D;&#xF246;&#xF149;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1132
  },
  {
    "role": "code",
    "lines": [
      "=> $true $true;"
    ],
    "preprocessed": "=> $true $true;",
    "code": "21001101030232130232132233",
    "parse": [
      "=>",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF146;&#xF15E;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1133
  },
  {
    "role": "code",
    "lines": [
      "not | => $true $false;"
    ],
    "preprocessed": "not | => $true $false;",
    "code": "2101312321001101030232130232032233",
    "parse": [
      "not",
      [
        -1,
        "=>",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15E;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1134
  },
  {
    "role": "code",
    "lines": [
      "=> $false $true;"
    ],
    "preprocessed": "=> $false $true;",
    "code": "21001101030232030232132233",
    "parse": [
      "=>",
      [
        -2,
        "false"
      ],
      [
        -2,
        "true"
      ]
    ],
    "spider": "&#xF146;&#xF15E;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1135
  },
  {
    "role": "code",
    "lines": [
      "=> $false $false;"
    ],
    "preprocessed": "=> $false $false;",
    "code": "21001101030232030232032233",
    "parse": [
      "=>",
      [
        -2,
        "false"
      ],
      [
        -2,
        "false"
      ]
    ],
    "spider": "&#xF146;&#xF15E;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1136
  },
  {
    "role": "code",
    "lines": [
      "forall (? x | forall (? y | => (=> $x $y) (=> (not $y) (not $x))));"
    ],
    "preprocessed": "forall (? x | forall (? y | => (=> $x $y) (=> (not $y) (not $x))));",
    "code": "2100113221100321010013123210011322110032111101312321001101032210011010302321010013023211110133221001101032210130232111101332210130232101001333332233",
    "parse": [
      "forall",
      [
        "?",
        "x",
        [
          -1,
          "forall",
          [
            "?",
            "y",
            [
              -1,
              "=>",
              [
                "=>",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                "=>",
                [
                  "not",
                  [
                    -2,
                    "y"
                  ]
                ],
                [
                  "not",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF157;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF157;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF146;&#xF15E;&#xF246;&#xF146;&#xF15E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF146;&#xF15E;&#xF246;&#xF149;&#xF249;&#xF181;&#xF245;&#xF246;&#xF149;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1137
  },
  {
    "role": "file",
    "lines": [
      "== COS_Set =="
    ],
    "stanza": 1138
  },
  {
    "role": "doc",
    "lines": [
      ""
    ],
    "section_description": "introduce sets and set membership",
    "section_category": "MATH",
    "section_index": 29,
    "stanza": 1139
  },
  {
    "role": "code",
    "lines": [
      "intro element;"
    ],
    "preprocessed": "intro element;",
    "code": "210010321001101132233",
    "parse": [
      "intro",
      "element"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 1140
  },
  {
    "role": "code",
    "lines": [
      "define element | ? x | ? y:list | not | = $undefined | list:find $y:list $x;"
    ],
    "preprocessed": "define element | ? x | ? y:list | not | = $undefined | list:find $y:list $x;",
    "code": "2110132100110113123211003210100131232110032100111003123210131232113023210000031232101111030232100111003023210100132233",
    "parse": [
      "define",
      "element",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y:list",
          [
            -1,
            "not",
            [
              -1,
              "=",
              [
                -2,
                "undefined"
              ],
              [
                -1,
                "list:find",
                [
                  -2,
                  "y:list"
                ],
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF160;&#xF248;&#xF149;&#xF248;&#xF147;&#xF249;&#xF164;&#xF248;&#xF145;&#xF162;&#xF249;&#xF146;&#xF160;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1141
  },
  {
    "role": "code",
    "lines": [
      "element 1 | vector 3 8 2 1 0;"
    ],
    "preprocessed": "element 1 | vector 3 8 2 1 0;",
    "code": "21001101132131232100003211321000321032132032233",
    "parse": [
      "element",
      "1",
      [
        -1,
        "vector",
        "3",
        "8",
        "2",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1142
  },
  {
    "role": "code",
    "lines": [
      "element 3 | vector 3 8 2 1 0;"
    ],
    "preprocessed": "element 3 | vector 3 8 2 1 0;",
    "code": "210011011321131232100003211321000321032132032233",
    "parse": [
      "element",
      "3",
      [
        -1,
        "vector",
        "3",
        "8",
        "2",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1143
  },
  {
    "role": "code",
    "lines": [
      "element 1 | vector 3 8 2 1 0;"
    ],
    "preprocessed": "element 1 | vector 3 8 2 1 0;",
    "code": "21001101132131232100003211321000321032132032233",
    "parse": [
      "element",
      "1",
      [
        -1,
        "vector",
        "3",
        "8",
        "2",
        "1",
        "0"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1144
  },
  {
    "role": "code",
    "lines": [
      "element 4 | vector 9 5 4 0 8;"
    ],
    "preprocessed": "element 4 | vector 9 5 4 0 8;",
    "code": "210011011321003123210000321001321013210032032100032233",
    "parse": [
      "element",
      "4",
      [
        -1,
        "vector",
        "9",
        "5",
        "4",
        "0",
        "8"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF148;&#xF248;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1145
  },
  {
    "role": "code",
    "lines": [
      "element 8 | vector 9 5 4 0 8;"
    ],
    "preprocessed": "element 8 | vector 9 5 4 0 8;",
    "code": "2100110113210003123210000321001321013210032032100032233",
    "parse": [
      "element",
      "8",
      [
        -1,
        "vector",
        "9",
        "5",
        "4",
        "0",
        "8"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14C;&#xF248;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1146
  },
  {
    "role": "code",
    "lines": [
      "element 4 | vector 9 5 4 0 8;"
    ],
    "preprocessed": "element 4 | vector 9 5 4 0 8;",
    "code": "210011011321003123210000321001321013210032032100032233",
    "parse": [
      "element",
      "4",
      [
        -1,
        "vector",
        "9",
        "5",
        "4",
        "0",
        "8"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF148;&#xF248;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1147
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 8 5 4 2;"
    ],
    "preprocessed": "element 0 | vector 0 8 5 4 2;",
    "code": "21001101132031232100003203210003210132100321032233",
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "8",
        "5",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1148
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 8 5 4 2;"
    ],
    "preprocessed": "element 0 | vector 0 8 5 4 2;",
    "code": "21001101132031232100003203210003210132100321032233",
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "8",
        "5",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1149
  },
  {
    "role": "code",
    "lines": [
      "element 8 | vector 0 8 5 4 2;"
    ],
    "preprocessed": "element 8 | vector 0 8 5 4 2;",
    "code": "21001101132100031232100003203210003210132100321032233",
    "parse": [
      "element",
      "8",
      [
        -1,
        "vector",
        "0",
        "8",
        "5",
        "4",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14C;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1150
  },
  {
    "role": "code",
    "lines": [
      "element 6 | vector 5 8 7 6 2;"
    ],
    "preprocessed": "element 6 | vector 5 8 7 6 2;",
    "code": "210011011321103123210000321013210003211132110321032233",
    "parse": [
      "element",
      "6",
      [
        -1,
        "vector",
        "5",
        "8",
        "7",
        "6",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14A;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF14B;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1151
  },
  {
    "role": "code",
    "lines": [
      "element 8 | vector 5 8 7 6 2;"
    ],
    "preprocessed": "element 8 | vector 5 8 7 6 2;",
    "code": "2100110113210003123210000321013210003211132110321032233",
    "parse": [
      "element",
      "8",
      [
        -1,
        "vector",
        "5",
        "8",
        "7",
        "6",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14C;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF14B;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1152
  },
  {
    "role": "code",
    "lines": [
      "element 6 | vector 5 8 7 6 2;"
    ],
    "preprocessed": "element 6 | vector 5 8 7 6 2;",
    "code": "210011011321103123210000321013210003211132110321032233",
    "parse": [
      "element",
      "6",
      [
        -1,
        "vector",
        "5",
        "8",
        "7",
        "6",
        "2"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14A;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF14C;&#xF24A;&#xF14B;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1153
  },
  {
    "role": "code",
    "lines": [
      "element 3 | vector 0 3 9 2 1;"
    ],
    "preprocessed": "element 3 | vector 0 3 9 2 1;",
    "code": "210011011321131232100003203211321001321032132233",
    "parse": [
      "element",
      "3",
      [
        -1,
        "vector",
        "0",
        "3",
        "9",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1154
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 3 9 2 1;"
    ],
    "preprocessed": "element 0 | vector 0 3 9 2 1;",
    "code": "21001101132031232100003203211321001321032132233",
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "3",
        "9",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1155
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 3 9 2 1;"
    ],
    "preprocessed": "element 0 | vector 0 3 9 2 1;",
    "code": "21001101132031232100003203211321001321032132233",
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "3",
        "9",
        "2",
        "1"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1156
  },
  {
    "role": "code",
    "lines": [
      "not | element 1 | vector 5 6 3 7;"
    ],
    "preprocessed": "not | element 1 | vector 5 6 3 7;",
    "code": "210131232100110113213123210000321013211032113211132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "1",
        [
          -1,
          "vector",
          "5",
          "6",
          "3",
          "7"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1157
  },
  {
    "role": "code",
    "lines": [
      "not | element 1 | vector 9 8 5 3;"
    ],
    "preprocessed": "not | element 1 | vector 9 8 5 3;",
    "code": "21013123210011011321312321000032100132100032101321132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "1",
        [
          -1,
          "vector",
          "9",
          "8",
          "5",
          "3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF14C;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1158
  },
  {
    "role": "code",
    "lines": [
      "not | element 4 | vector 6 9 1 7;"
    ],
    "preprocessed": "not | element 4 | vector 6 9 1 7;",
    "code": "21013123210011011321003123210000321103210013213211132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "4",
        [
          -1,
          "vector",
          "6",
          "9",
          "1",
          "7"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF148;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1159
  },
  {
    "role": "code",
    "lines": [
      "not | element 2 | vector 1 5 6 4;"
    ],
    "preprocessed": "not | element 2 | vector 1 5 6 4;",
    "code": "210131232100110113210312321000032132101321103210032233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "2",
        [
          -1,
          "vector",
          "1",
          "5",
          "6",
          "4"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1160
  },
  {
    "role": "code",
    "lines": [
      "not | element 3 | vector 6 9 7 5;"
    ],
    "preprocessed": "not | element 3 | vector 6 9 7 5;",
    "code": "210131232100110113211312321000032110321001321113210132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "3",
        [
          -1,
          "vector",
          "6",
          "9",
          "7",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14D;&#xF24A;&#xF14B;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1161
  },
  {
    "role": "doc",
    "lines": [
      "Set some rules for set equality."
    ],
    "stanza": 1162
  },
  {
    "role": "code",
    "lines": [
      "intro set:<=;"
    ],
    "preprocessed": "intro set:<=;",
    "code": "210010321001110132233",
    "parse": [
      "intro",
      "set:<="
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 1163
  },
  {
    "role": "code",
    "lines": [
      "define set:<= | ? x | ? y |",
      "  if (= 0 | list-length $x) $true |",
      "  and (element (head $x) $y) |",
      "    set:<= (tail $x) $y;"
    ],
    "preprocessed": "define set:<= | ? x | ? y |\n  if (= 0 | list-length $x) $true |\n  and (element (head $x) $y) |\n    set:<= (tail $x) $y;",
    "code": "21101321001110131232110032101001312321100321111013123211113221132031232101001130232101001330232131232110322100110113221010000302321010013302321111013312321001110132210100103023210100133023211110132233",
    "parse": [
      "define",
      "set:<=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -2,
              "true"
            ],
            [
              -1,
              "and",
              [
                "element",
                [
                  "head",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                -1,
                "set:<=",
                [
                  "tail",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF161;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF15F;&#xF246;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF181;&#xF245;&#xF248;&#xF146;&#xF161;&#xF246;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1164
  },
  {
    "role": "code",
    "lines": [
      "intro set:=;"
    ],
    "preprocessed": "intro set:=;",
    "code": "210010321001111032233",
    "parse": [
      "intro",
      "set:="
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF162;&#xF24B;",
    "dt": false,
    "stanza": 1165
  },
  {
    "role": "code",
    "lines": [
      "define set:= | ? x | ? y |",
      "  and (set:<= $x $y) (set:<= $y $x);"
    ],
    "preprocessed": "define set:= | ? x | ? y |\n  and (set:<= $x $y) (set:<= $y $x);",
    "code": "2110132100111103123211003210100131232110032111101312321103221001110130232101001302321111013322100111013023211110130232101001332233",
    "parse": [
      "define",
      "set:=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "and",
            [
              "set:<=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              "set:<=",
              [
                -2,
                "y"
              ],
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF161;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF245;&#xF246;&#xF146;&#xF161;&#xF249;&#xF181;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1166
  },
  {
    "role": "code",
    "lines": [
      "set:= (vector 1 5 9) (vector 5 1 9);"
    ],
    "preprocessed": "set:= (vector 1 5 9) (vector 5 1 9);",
    "code": "210011110322100003213210132100133221000032101321321001332233",
    "parse": [
      "set:=",
      [
        "vector",
        "1",
        "5",
        "9"
      ],
      [
        "vector",
        "5",
        "1",
        "9"
      ]
    ],
    "spider": "&#xF146;&#xF162;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1167
  },
  {
    "role": "code",
    "lines": [
      "set:= (vector 1 5 9) (vector 9 1 5);"
    ],
    "preprocessed": "set:= (vector 1 5 9) (vector 9 1 5);",
    "code": "210011110322100003213210132100133221000032100132132101332233",
    "parse": [
      "set:=",
      [
        "vector",
        "1",
        "5",
        "9"
      ],
      [
        "vector",
        "9",
        "1",
        "5"
      ]
    ],
    "spider": "&#xF146;&#xF162;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14D;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1168
  },
  {
    "role": "code",
    "lines": [
      "not | set:= (vector 1 5 9) (vector 1 5);"
    ],
    "preprocessed": "not | set:= (vector 1 5 9) (vector 1 5);",
    "code": "21013123210011110322100003213210132100133221000032132101332233",
    "parse": [
      "not",
      [
        -1,
        "set:=",
        [
          "vector",
          "1",
          "5",
          "9"
        ],
        [
          "vector",
          "1",
          "5"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF162;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1169
  },
  {
    "role": "doc",
    "lines": [
      "let's go leave ourselves wide open to Russell's paradox",
      "  by using characteristic functions since it doesn't really matter",
      "  within the bounds of this message"
    ],
    "stanza": 1170
  },
  {
    "role": "code",
    "lines": [
      "element 5 | all | ? x | = 15 | + $x 10;"
    ],
    "preprocessed": "element 5 | all | ? x | = 15 | + $x 10;",
    "code": "2100110113210131232111103123211003210100131232113211113123210103023210100132101032233",
    "parse": [
      "element",
      "5",
      [
        -1,
        "all",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "=",
            "15",
            [
              -1,
              "+",
              [
                -2,
                "x"
              ],
              "10"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF149;&#xF248;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF24A;&#xF153;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1171
  },
  {
    "role": "code",
    "lines": [
      "element 3 | all | ? x | = (* $x 3) (+ $x 6);"
    ],
    "preprocessed": "element 3 | all | ? x | = (* $x 3) (+ $x 6);",
    "code": "210011011321131232111103123211003210100131232113221001302321010013211332210103023210100132110332233",
    "parse": [
      "element",
      "3",
      [
        -1,
        "all",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "=",
            [
              "*",
              [
                -2,
                "x"
              ],
              "3"
            ],
            [
              "+",
              [
                -2,
                "x"
              ],
              "6"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF248;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF246;&#xF14D;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1172
  },
  {
    "role": "code",
    "lines": [
      "intro set:0;"
    ],
    "preprocessed": "intro set:0;",
    "code": "210010321001111132233",
    "parse": [
      "intro",
      "set:0"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1173
  },
  {
    "role": "code",
    "lines": [
      "define set:0 | vector;"
    ],
    "preprocessed": "define set:0 | vector;",
    "code": "211013210011111312321000032233",
    "parse": [
      "define",
      "set:0",
      [
        -1,
        "vector"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF163;&#xF248;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 1174
  },
  {
    "role": "code",
    "lines": [
      "element 0 $set:int:+;"
    ],
    "preprocessed": "element 0 $set:int:+;",
    "code": "210011011320302321111132233",
    "parse": [
      "element",
      "0",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1175
  },
  {
    "role": "code",
    "lines": [
      "forall | ? x | => (element $x $set:int:+) (element (+ $x 1) $set:int:+);"
    ],
    "preprocessed": "forall | ? x | => (element $x $set:int:+) (element (+ $x 1) $set:int:+);",
    "code": "2100113123211003210100131232100110103221001101130232101001302321111133221001101132210103023210100132133023211111332233",
    "parse": [
      "forall",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "=>",
          [
            "element",
            [
              -2,
              "x"
            ],
            [
              -2,
              "set:int:+"
            ]
          ],
          [
            "element",
            [
              "+",
              [
                -2,
                "x"
              ],
              "1"
            ],
            [
              -2,
              "set:int:+"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF157;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF146;&#xF15E;&#xF246;&#xF146;&#xF15F;&#xF249;&#xF16D;&#xF249;&#xF163;&#xF245;&#xF246;&#xF146;&#xF15F;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF249;&#xF163;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1176
  },
  {
    "role": "code",
    "lines": [
      "element 1 $set:int:+;"
    ],
    "preprocessed": "element 1 $set:int:+;",
    "code": "210011011321302321111132233",
    "parse": [
      "element",
      "1",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1177
  },
  {
    "role": "code",
    "lines": [
      "element 2 $set:int:+;"
    ],
    "preprocessed": "element 2 $set:int:+;",
    "code": "2100110113210302321111132233",
    "parse": [
      "element",
      "2",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF146;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1178
  },
  {
    "role": "code",
    "lines": [
      "element 3 $set:int:+;"
    ],
    "preprocessed": "element 3 $set:int:+;",
    "code": "2100110113211302321111132233",
    "parse": [
      "element",
      "3",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1179
  },
  {
    "role": "code",
    "lines": [
      "element 4 $set:int:+;"
    ],
    "preprocessed": "element 4 $set:int:+;",
    "code": "21001101132100302321111132233",
    "parse": [
      "element",
      "4",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF148;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1180
  },
  {
    "role": "code",
    "lines": [
      "element 5 $set:int:+;"
    ],
    "preprocessed": "element 5 $set:int:+;",
    "code": "21001101132101302321111132233",
    "parse": [
      "element",
      "5",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF149;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1181
  },
  {
    "role": "code",
    "lines": [
      "element 6 $set:int:+;"
    ],
    "preprocessed": "element 6 $set:int:+;",
    "code": "21001101132110302321111132233",
    "parse": [
      "element",
      "6",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14A;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1182
  },
  {
    "role": "code",
    "lines": [
      "element 7 $set:int:+;"
    ],
    "preprocessed": "element 7 $set:int:+;",
    "code": "21001101132111302321111132233",
    "parse": [
      "element",
      "7",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14B;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1183
  },
  {
    "role": "code",
    "lines": [
      "element 8 $set:int:+;"
    ],
    "preprocessed": "element 8 $set:int:+;",
    "code": "210011011321000302321111132233",
    "parse": [
      "element",
      "8",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14C;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1184
  },
  {
    "role": "code",
    "lines": [
      "element 9 $set:int:+;"
    ],
    "preprocessed": "element 9 $set:int:+;",
    "code": "210011011321001302321111132233",
    "parse": [
      "element",
      "9",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14D;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1185
  },
  {
    "role": "code",
    "lines": [
      "define set:true:false | vector $true $false;"
    ],
    "preprocessed": "define set:true:false | vector $true $false;",
    "code": "211013210100000312321000030232130232032233",
    "parse": [
      "define",
      "set:true:false",
      [
        -1,
        "vector",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF164;&#xF248;&#xF154;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1186
  },
  {
    "role": "code",
    "lines": [
      "element $true $set:true:false;"
    ],
    "preprocessed": "element $true $set:true:false;",
    "code": "210011011302321302321010000032233",
    "parse": [
      "element",
      [
        -2,
        "true"
      ],
      [
        -2,
        "set:true:false"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF249;&#xF145;&#xF249;&#xF146;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1187
  },
  {
    "role": "code",
    "lines": [
      "element $false $set:true:false;"
    ],
    "preprocessed": "element $false $set:true:false;",
    "code": "210011011302320302321010000032233",
    "parse": [
      "element",
      [
        -2,
        "false"
      ],
      [
        -2,
        "set:true:false"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF249;&#xF144;&#xF249;&#xF146;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1188
  },
  {
    "role": "code",
    "lines": [
      "define set:even | all | ? x | exists | ? y |",
      "  and (element $y $set:int:+) (= $x | * 2 $y);"
    ],
    "preprocessed": "define set:even | all | ? x | exists | ? y |\n  and (element $y $set:int:+) (= $x | * 2 $y);",
    "code": "211013210100001312321111031232110032101001312321010031232110032111101312321103221001101130232111101302321111133221130232101001312321001321030232111101332233",
    "parse": [
      "define",
      "set:even",
      [
        -1,
        "all",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "exists",
            [
              -1,
              "?",
              "y",
              [
                -1,
                "and",
                [
                  "element",
                  [
                    -2,
                    "y"
                  ],
                  [
                    -2,
                    "set:int:+"
                  ]
                ],
                [
                  "=",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -1,
                    "*",
                    "2",
                    [
                      -2,
                      "y"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF165;&#xF248;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14A;&#xF246;&#xF146;&#xF15F;&#xF249;&#xF181;&#xF249;&#xF163;&#xF245;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF248;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1189
  },
  {
    "role": "code",
    "lines": [
      "element 0 $set:int:+;"
    ],
    "preprocessed": "element 0 $set:int:+;",
    "code": "210011011320302321111132233",
    "parse": [
      "element",
      "0",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1190
  },
  {
    "role": "code",
    "lines": [
      "element 0 $set:even;"
    ],
    "preprocessed": "element 0 $set:even;",
    "code": "210011011320302321010000132233",
    "parse": [
      "element",
      "0",
      [
        -2,
        "set:even"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF144;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1191
  },
  {
    "role": "code",
    "lines": [
      "element 1 $set:int:+;"
    ],
    "preprocessed": "element 1 $set:int:+;",
    "code": "210011011321302321111132233",
    "parse": [
      "element",
      "1",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1192
  },
  {
    "role": "code",
    "lines": [
      "not | element 1 $set:even;"
    ],
    "preprocessed": "not | element 1 $set:even;",
    "code": "21013123210011011321302321010000132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "1",
        [
          -2,
          "set:even"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF145;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1193
  },
  {
    "role": "code",
    "lines": [
      "element 2 $set:int:+;"
    ],
    "preprocessed": "element 2 $set:int:+;",
    "code": "2100110113210302321111132233",
    "parse": [
      "element",
      "2",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF146;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1194
  },
  {
    "role": "code",
    "lines": [
      "element 2 $set:even;"
    ],
    "preprocessed": "element 2 $set:even;",
    "code": "2100110113210302321010000132233",
    "parse": [
      "element",
      "2",
      [
        -2,
        "set:even"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF146;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1195
  },
  {
    "role": "code",
    "lines": [
      "element 3 $set:int:+;"
    ],
    "preprocessed": "element 3 $set:int:+;",
    "code": "2100110113211302321111132233",
    "parse": [
      "element",
      "3",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1196
  },
  {
    "role": "code",
    "lines": [
      "not | element 3 $set:even;"
    ],
    "preprocessed": "not | element 3 $set:even;",
    "code": "210131232100110113211302321010000132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "3",
        [
          -2,
          "set:even"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF147;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1197
  },
  {
    "role": "code",
    "lines": [
      "element 4 $set:int:+;"
    ],
    "preprocessed": "element 4 $set:int:+;",
    "code": "21001101132100302321111132233",
    "parse": [
      "element",
      "4",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF148;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1198
  },
  {
    "role": "code",
    "lines": [
      "element 4 $set:even;"
    ],
    "preprocessed": "element 4 $set:even;",
    "code": "21001101132100302321010000132233",
    "parse": [
      "element",
      "4",
      [
        -2,
        "set:even"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF148;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1199
  },
  {
    "role": "code",
    "lines": [
      "element 5 $set:int:+;"
    ],
    "preprocessed": "element 5 $set:int:+;",
    "code": "21001101132101302321111132233",
    "parse": [
      "element",
      "5",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF149;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1200
  },
  {
    "role": "code",
    "lines": [
      "not | element 5 $set:even;"
    ],
    "preprocessed": "not | element 5 $set:even;",
    "code": "2101312321001101132101302321010000132233",
    "parse": [
      "not",
      [
        -1,
        "element",
        "5",
        [
          -2,
          "set:even"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF15F;&#xF24A;&#xF149;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1201
  },
  {
    "role": "code",
    "lines": [
      "element 6 $set:int:+;"
    ],
    "preprocessed": "element 6 $set:int:+;",
    "code": "21001101132110302321111132233",
    "parse": [
      "element",
      "6",
      [
        -2,
        "set:int:+"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14A;&#xF249;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1202
  },
  {
    "role": "code",
    "lines": [
      "element 6 $set:even;"
    ],
    "preprocessed": "element 6 $set:even;",
    "code": "21001101132110302321010000132233",
    "parse": [
      "element",
      "6",
      [
        -2,
        "set:even"
      ]
    ],
    "spider": "&#xF146;&#xF15F;&#xF24A;&#xF14A;&#xF249;&#xF146;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1203
  },
  {
    "role": "file",
    "lines": [
      "== COS_Graph =="
    ],
    "stanza": 1204
  },
  {
    "role": "doc",
    "lines": [
      "",
      ""
    ],
    "section_description": "introduce graph structures",
    "section_category": "MATH",
    "section_index": 30,
    "stanza": 1205
  },
  {
    "role": "code",
    "lines": [
      "intro graph:make;"
    ],
    "preprocessed": "intro graph:make;",
    "code": "210010321010001032233",
    "parse": [
      "intro",
      "graph:make"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF166;&#xF24B;",
    "dt": false,
    "stanza": 1206
  },
  {
    "role": "code",
    "lines": [
      "define graph:make | lambda (x:graph:1 x:graph:2) | pair $x:graph:1 $x:graph:2;"
    ],
    "preprocessed": "define graph:make | lambda (x:graph:1 x:graph:2) | pair $x:graph:1 $x:graph:2;",
    "code": "211013210100010312321101032210100011321010010033123210101113023210100011302321010010032233",
    "parse": [
      "define",
      "graph:make",
      [
        -1,
        "lambda",
        [
          "x:graph:1",
          "x:graph:2"
        ],
        [
          -1,
          "pair",
          [
            -2,
            "x:graph:1"
          ],
          [
            -2,
            "x:graph:2"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF166;&#xF248;&#xF15E;&#xF246;&#xF146;&#xF167;&#xF24A;&#xF146;&#xF168;&#xF245;&#xF248;&#xF145;&#xF15B;&#xF249;&#xF146;&#xF167;&#xF249;&#xF146;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1207
  },
  {
    "role": "code",
    "lines": [
      "define demo:graph | graph:make",
      "  (vector 1 2 3 4)",
      "  (vector (pair 1 2) (pair 2 3) (pair 1 4));"
    ],
    "preprocessed": "define demo:graph | graph:make\n  (vector 1 2 3 4)\n  (vector (pair 1 2) (pair 2 3) (pair 1 4));",
    "code": "211013210100101312321010001032210000321321032113210033221000032210101113213210332210101113210321133221010111321321003332233",
    "parse": [
      "define",
      "demo:graph",
      [
        -1,
        "graph:make",
        [
          "vector",
          "1",
          "2",
          "3",
          "4"
        ],
        [
          "vector",
          [
            "pair",
            "1",
            "2"
          ],
          [
            "pair",
            "2",
            "3"
          ],
          [
            "pair",
            "1",
            "4"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF169;&#xF248;&#xF146;&#xF166;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1208
  },
  {
    "role": "code",
    "lines": [
      "intro exists:graph:2;"
    ],
    "preprocessed": "intro exists:graph:2;",
    "code": "210010321010011032233",
    "parse": [
      "intro",
      "exists:graph:2"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF16A;&#xF24B;",
    "dt": false,
    "stanza": 1209
  },
  {
    "role": "code",
    "lines": [
      "define exists:graph:2 | lambda (x:graph y:graph:1 z:graph:1) |",
      "  exists | ? n |",
      "    if (or (< $n 0) (>= $n | list-length | list-ref $x:graph 1)) $false |",
      "    list= (list-ref (list-ref $x:graph 1) $n) (pair $y:graph:1 $z:graph:1);"
    ],
    "preprocessed": "define exists:graph:2 | lambda (x:graph y:graph:1 z:graph:1) |\n  exists | ? n |\n    if (or (< $n 0) (>= $n | list-length | list-ref $x:graph 1)) $false |\n    list= (list-ref (list-ref $x:graph 1) $n) (pair $y:graph:1 $z:graph:1);",
    "code": "2110132101001103123211010322101001113210101000321010100133123210100312321100321001110312321111322111322103023210011103203322100100030232100111031232101001131232101010030232101001113213330232031232101010132210101003221010100302321010011132133023210011103322101011130232101010003023210101001332233",
    "parse": [
      "define",
      "exists:graph:2",
      [
        -1,
        "lambda",
        [
          "x:graph",
          "y:graph:1",
          "z:graph:1"
        ],
        [
          -1,
          "exists",
          [
            -1,
            "?",
            "n",
            [
              -1,
              "if",
              [
                "or",
                [
                  "<",
                  [
                    -2,
                    "n"
                  ],
                  "0"
                ],
                [
                  ">=",
                  [
                    -2,
                    "n"
                  ],
                  [
                    -1,
                    "list-length",
                    [
                      -1,
                      "list-ref",
                      [
                        -2,
                        "x:graph"
                      ],
                      "1"
                    ]
                  ]
                ]
              ],
              [
                -2,
                "false"
              ],
              [
                -1,
                "list=",
                [
                  "list-ref",
                  [
                    "list-ref",
                    [
                      -2,
                      "x:graph"
                    ],
                    "1"
                  ],
                  [
                    -2,
                    "n"
                  ]
                ],
                [
                  "pair",
                  [
                    -2,
                    "y:graph:1"
                  ],
                  [
                    -2,
                    "z:graph:1"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF16A;&#xF248;&#xF15E;&#xF246;&#xF146;&#xF16B;&#xF24A;&#xF146;&#xF16C;&#xF24A;&#xF146;&#xF16D;&#xF245;&#xF248;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF14B;&#xF246;&#xF146;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF14C;&#xF249;&#xF145;&#xF152;&#xF248;&#xF145;&#xF157;&#xF248;&#xF145;&#xF158;&#xF249;&#xF146;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF249;&#xF144;&#xF248;&#xF145;&#xF159;&#xF246;&#xF145;&#xF158;&#xF246;&#xF145;&#xF158;&#xF249;&#xF146;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF249;&#xF145;&#xF152;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF249;&#xF146;&#xF16C;&#xF249;&#xF146;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1210
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2 $demo:graph 1 2;"
    ],
    "preprocessed": "exists:graph:2 $demo:graph 1 2;",
    "code": "2101001103023210100101321321032233",
    "parse": [
      "exists:graph:2",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "2"
    ],
    "spider": "&#xF146;&#xF16A;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1211
  },
  {
    "role": "code",
    "lines": [
      "not | exists:graph:2 $demo:graph 1 3;"
    ],
    "preprocessed": "not | exists:graph:2 $demo:graph 1 3;",
    "code": "210131232101001103023210100101321321132233",
    "parse": [
      "not",
      [
        -1,
        "exists:graph:2",
        [
          -2,
          "demo:graph"
        ],
        "1",
        "3"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF16A;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1212
  },
  {
    "role": "code",
    "lines": [
      "not | exists:graph:2 $demo:graph 2 4;"
    ],
    "preprocessed": "not | exists:graph:2 $demo:graph 2 4;",
    "code": "21013123210100110302321010010132103210032233",
    "parse": [
      "not",
      [
        -1,
        "exists:graph:2",
        [
          -2,
          "demo:graph"
        ],
        "2",
        "4"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF16A;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1213
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2 $demo:graph 1 4;"
    ],
    "preprocessed": "exists:graph:2 $demo:graph 1 4;",
    "code": "21010011030232101001013213210032233",
    "parse": [
      "exists:graph:2",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "4"
    ],
    "spider": "&#xF146;&#xF16A;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1214
  },
  {
    "role": "code",
    "lines": [
      "intro exists:graph:2:list;"
    ],
    "preprocessed": "intro exists:graph:2:list;",
    "code": "210010321010101032233",
    "parse": [
      "intro",
      "exists:graph:2:list"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF16E;&#xF24B;",
    "dt": false,
    "stanza": 1215
  },
  {
    "role": "code",
    "lines": [
      "define exists:graph:2:list | lambda (x:graph y:graph:1 z:graph:1) |",
      "  if (= $y:graph:1 $z:graph:1) $true |",
      "  if (exists:graph:2 $x:graph $y:graph:1 $z:graph:1) $true |",
      "  exists | ? n:graph:1 |",
      "    if (not | exists:graph:2 $x:graph $y:graph:1 $n:graph:1) $false |",
      "    exists:graph:2:list $x:graph $n:graph:1 $z:graph:1;"
    ],
    "preprocessed": "define exists:graph:2:list | lambda (x:graph y:graph:1 z:graph:1) |\n  if (= $y:graph:1 $z:graph:1) $true |\n  if (exists:graph:2 $x:graph $y:graph:1 $z:graph:1) $true |\n  exists | ? n:graph:1 |\n    if (not | exists:graph:2 $x:graph $y:graph:1 $n:graph:1) $false |\n    exists:graph:2:list $x:graph $n:graph:1 $z:graph:1;",
    "code": "211013210101010312321101032210100111321010100032101010013312321111322113023210101000302321010100133023213123211113221010011030232101001113023210101000302321010100133023213123210100312321100321010101131232111132210131232101001103023210100111302321010100030232101010113302320312321010101030232101001113023210101011302321010100132233",
    "parse": [
      "define",
      "exists:graph:2:list",
      [
        -1,
        "lambda",
        [
          "x:graph",
          "y:graph:1",
          "z:graph:1"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "y:graph:1"
            ],
            [
              -2,
              "z:graph:1"
            ]
          ],
          [
            -2,
            "true"
          ],
          [
            -1,
            "if",
            [
              "exists:graph:2",
              [
                -2,
                "x:graph"
              ],
              [
                -2,
                "y:graph:1"
              ],
              [
                -2,
                "z:graph:1"
              ]
            ],
            [
              -2,
              "true"
            ],
            [
              -1,
              "exists",
              [
                -1,
                "?",
                "n:graph:1",
                [
                  -1,
                  "if",
                  [
                    "not",
                    [
                      -1,
                      "exists:graph:2",
                      [
                        -2,
                        "x:graph"
                      ],
                      [
                        -2,
                        "y:graph:1"
                      ],
                      [
                        -2,
                        "n:graph:1"
                      ]
                    ]
                  ],
                  [
                    -2,
                    "false"
                  ],
                  [
                    -1,
                    "exists:graph:2:list",
                    [
                      -2,
                      "x:graph"
                    ],
                    [
                      -2,
                      "n:graph:1"
                    ],
                    [
                      -2,
                      "z:graph:1"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF16E;&#xF248;&#xF15E;&#xF246;&#xF146;&#xF16B;&#xF24A;&#xF146;&#xF16C;&#xF24A;&#xF146;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF146;&#xF16C;&#xF249;&#xF146;&#xF16D;&#xF245;&#xF249;&#xF145;&#xF248;&#xF153;&#xF246;&#xF146;&#xF16A;&#xF249;&#xF146;&#xF16B;&#xF249;&#xF146;&#xF16C;&#xF249;&#xF146;&#xF16D;&#xF245;&#xF249;&#xF145;&#xF248;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF16F;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF146;&#xF16A;&#xF249;&#xF146;&#xF16B;&#xF249;&#xF146;&#xF16C;&#xF249;&#xF146;&#xF16F;&#xF245;&#xF249;&#xF144;&#xF248;&#xF146;&#xF16E;&#xF249;&#xF146;&#xF16B;&#xF249;&#xF146;&#xF16F;&#xF249;&#xF146;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1216
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2:list $demo:graph 1 2;"
    ],
    "preprocessed": "exists:graph:2:list $demo:graph 1 2;",
    "code": "2101010103023210100101321321032233",
    "parse": [
      "exists:graph:2:list",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "2"
    ],
    "spider": "&#xF146;&#xF16E;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1217
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2:list $demo:graph 1 3;"
    ],
    "preprocessed": "exists:graph:2:list $demo:graph 1 3;",
    "code": "2101010103023210100101321321132233",
    "parse": [
      "exists:graph:2:list",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "3"
    ],
    "spider": "&#xF146;&#xF16E;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1218
  },
  {
    "role": "code",
    "lines": [
      "not | exists:graph:2:list $demo:graph 2 4;"
    ],
    "preprocessed": "not | exists:graph:2:list $demo:graph 2 4;",
    "code": "21013123210101010302321010010132103210032233",
    "parse": [
      "not",
      [
        -1,
        "exists:graph:2:list",
        [
          -2,
          "demo:graph"
        ],
        "2",
        "4"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF146;&#xF16E;&#xF249;&#xF146;&#xF169;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1219
  },
  {
    "role": "file",
    "lines": [
      "== COS_Begin =="
    ],
    "stanza": 1220
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "show how to execute a sequence of instructions",
    "section_category": "MATH",
    "section_index": 31,
    "stanza": 1221
  },
  {
    "role": "code",
    "lines": [
      "intro begin;"
    ],
    "preprocessed": "intro begin;",
    "code": "210010321010110032233",
    "parse": [
      "intro",
      "begin"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF170;&#xF24B;",
    "dt": false,
    "stanza": 1222
  },
  {
    "role": "code",
    "lines": [
      "define translate:begin:prev $translate;"
    ],
    "preprocessed": "define translate:begin:prev $translate;",
    "code": "211013210101101302321100132233",
    "parse": [
      "define",
      "translate:begin:prev",
      [
        -2,
        "translate"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF171;&#xF249;&#xF15D;&#xF24B;",
    "dt": true,
    "stanza": 1223
  },
  {
    "role": "code",
    "lines": [
      "define translate | let ((prev $translate:begin:prev)) | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = (head $x) begin) (prev $x) |",
      "  translate | vector (vector ? x (vector last (vector x))) (prepend vector | tail $x);"
    ],
    "preprocessed": "define translate | let ((prev $translate:begin:prev)) | ? x |\n  if (not | function? $x) (prev $x) |\n  if (not | = (head $x) begin) (prev $x) |\n  translate | vector (vector ? x (vector last (vector x))) (prepend vector | tail $x);",
    "code": "21101321100131232100000103222101011103023210101101333123211003210100131232111132210131232101100302321010013322101011103023210100133123211113221013123211322101000030232101001332101011003322101011103023210100133123211001312321000032210000321100321010013221000032110000032210000321010013333221010110321000031232101001030232101001332233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "let",
        [
          [
            "prev",
            [
              -2,
              "translate:begin:prev"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  [
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  "begin"
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "translate",
                [
                  -1,
                  "vector",
                  [
                    "vector",
                    "?",
                    "x",
                    [
                      "vector",
                      "last",
                      [
                        "vector",
                        "x"
                      ]
                    ]
                  ],
                  [
                    "prepend",
                    "vector",
                    [
                      -1,
                      "tail",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF146;&#xF172;&#xF249;&#xF146;&#xF171;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF246;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF146;&#xF170;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF15D;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF16D;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF164;&#xF246;&#xF154;&#xF24A;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1224
  },
  {
    "role": "code",
    "lines": [
      "= 4 | begin 1 7 2 4;"
    ],
    "preprocessed": "= 4 | begin 1 7 2 4;",
    "code": "2113210031232101011003213211132103210032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "begin",
        "1",
        "7",
        "2",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF146;&#xF170;&#xF24A;&#xF145;&#xF24A;&#xF14B;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1225
  },
  {
    "role": "code",
    "lines": [
      "= 6 | begin (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:x);"
    ],
    "preprocessed": "= 6 | begin (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:x);",
    "code": "2113211031232101011003221110030232100101032101100033221110030232100101032110332211101302321001010332233",
    "parse": [
      "=",
      "6",
      [
        -1,
        "begin",
        [
          "set!",
          [
            -2,
            "demo:make-cell:x"
          ],
          "88"
        ],
        [
          "set!",
          [
            -2,
            "demo:make-cell:x"
          ],
          "6"
        ],
        [
          "get!",
          [
            -2,
            "demo:make-cell:x"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14A;&#xF248;&#xF146;&#xF170;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF145;&#xF15C;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1226
  },
  {
    "role": "code",
    "lines": [
      "= 88 | begin (set! $demo:make-cell:y 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:y);"
    ],
    "preprocessed": "= 88 | begin (set! $demo:make-cell:y 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:y);",
    "code": "21132101100031232101011003221110030232100101132101100033221110030232100101032110332211101302321001011332233",
    "parse": [
      "=",
      "88",
      [
        -1,
        "begin",
        [
          "set!",
          [
            -2,
            "demo:make-cell:y"
          ],
          "88"
        ],
        [
          "set!",
          [
            -2,
            "demo:make-cell:x"
          ],
          "6"
        ],
        [
          "get!",
          [
            -2,
            "demo:make-cell:y"
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF15C;&#xF248;&#xF146;&#xF170;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14F;&#xF24A;&#xF145;&#xF15C;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14F;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1227
  },
  {
    "role": "code",
    "lines": [
      "= 4 | begin (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:x) 4;"
    ],
    "preprocessed": "= 4 | begin (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:x) 4;",
    "code": "211321003123210101100322111003023210010103210110003322111003023210010103211033221110130232100101033210032233",
    "parse": [
      "=",
      "4",
      [
        -1,
        "begin",
        [
          "set!",
          [
            -2,
            "demo:make-cell:x"
          ],
          "88"
        ],
        [
          "set!",
          [
            -2,
            "demo:make-cell:x"
          ],
          "6"
        ],
        [
          "get!",
          [
            -2,
            "demo:make-cell:x"
          ]
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF148;&#xF248;&#xF146;&#xF170;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF145;&#xF15C;&#xF245;&#xF246;&#xF160;&#xF249;&#xF145;&#xF14E;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF161;&#xF249;&#xF145;&#xF14E;&#xF245;&#xF148;&#xF24B;",
    "dt": true,
    "stanza": 1228
  },
  {
    "role": "file",
    "lines": [
      "== COS_Hash =="
    ],
    "stanza": 1229
  },
  {
    "role": "comment",
    "lines": [
      "# this section needs a LOT more examples :-)",
      "# note that at the time of writing (h 1 2) is same as ((h) 1 2)"
    ],
    "section_description": "introduce environment/hashmap structure",
    "section_category": "MATH",
    "section_index": 32,
    "stanza": 1230
  },
  {
    "role": "code",
    "lines": [
      "intro hash-add;"
    ],
    "preprocessed": "intro hash-add;",
    "code": "210010321010111132233",
    "parse": [
      "intro",
      "hash-add"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF173;&#xF24B;",
    "dt": false,
    "stanza": 1231
  },
  {
    "role": "code",
    "lines": [
      "define hash-add | lambda (x:hash x y z) (if (equal $z $x) $y (x:hash $z));"
    ],
    "preprocessed": "define hash-add | lambda (x:hash x y z) (if (equal $z $x) $y (x:hash $z));",
    "code": "211013210101111312321101032210110000321010013211110132111110332211113221000302321111103023210100133023211110132210110000302321111103332233",
    "parse": [
      "define",
      "hash-add",
      [
        -1,
        "lambda",
        [
          "x:hash",
          "x",
          "y",
          "z"
        ],
        [
          "if",
          [
            "equal",
            [
              -2,
              "z"
            ],
            [
              -2,
              "x"
            ]
          ],
          [
            -2,
            "y"
          ],
          [
            "x:hash",
            [
              -2,
              "z"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF173;&#xF248;&#xF15E;&#xF246;&#xF146;&#xF174;&#xF24A;&#xF16D;&#xF24A;&#xF181;&#xF24A;&#xF182;&#xF245;&#xF246;&#xF153;&#xF246;&#xF14C;&#xF249;&#xF182;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF181;&#xF246;&#xF146;&#xF174;&#xF249;&#xF182;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1232
  },
  {
    "role": "code",
    "lines": [
      "intro hash-ref;"
    ],
    "preprocessed": "intro hash-ref;",
    "code": "210010321011000132233",
    "parse": [
      "intro",
      "hash-ref"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF175;&#xF24B;",
    "dt": false,
    "stanza": 1233
  },
  {
    "role": "code",
    "lines": [
      "define hash-ref | lambda (x:hash x) (x:hash $x);"
    ],
    "preprocessed": "define hash-ref | lambda (x:hash x) (x:hash $x);",
    "code": "2110132101100013123211010322101100003210100133221011000030232101001332233",
    "parse": [
      "define",
      "hash-ref",
      [
        -1,
        "lambda",
        [
          "x:hash",
          "x"
        ],
        [
          "x:hash",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF175;&#xF248;&#xF15E;&#xF246;&#xF146;&#xF174;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF174;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1234
  },
  {
    "role": "code",
    "lines": [
      "intro hash-null;"
    ],
    "preprocessed": "intro hash-null;",
    "code": "210010321011001032233",
    "parse": [
      "intro",
      "hash-null"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1235
  },
  {
    "role": "code",
    "lines": [
      "define hash-null | ? x $undefined;"
    ],
    "preprocessed": "define hash-null | ? x $undefined;",
    "code": "211013210110010312321100321010013023210000032233",
    "parse": [
      "define",
      "hash-null",
      [
        -1,
        "?",
        "x",
        [
          -2,
          "undefined"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF176;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF164;&#xF24B;",
    "dt": true,
    "stanza": 1236
  },
  {
    "role": "code",
    "lines": [
      "intro hash-default;"
    ],
    "preprocessed": "intro hash-default;",
    "code": "210010321011001132233",
    "parse": [
      "intro",
      "hash-default"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF177;&#xF24B;",
    "dt": false,
    "stanza": 1237
  },
  {
    "role": "code",
    "lines": [
      "define hash-default | ? default | ? x $default;"
    ],
    "preprocessed": "define hash-default | ? default | ? x $default;",
    "code": "211013210110011312321100321011010031232110032101001302321011010032233",
    "parse": [
      "define",
      "hash-default",
      [
        -1,
        "?",
        "default",
        [
          -1,
          "?",
          "x",
          [
            -2,
            "default"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF177;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF178;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF146;&#xF178;&#xF24B;",
    "dt": true,
    "stanza": 1238
  },
  {
    "role": "code",
    "lines": [
      "define demo:hash | hash-add (hash-add $hash-null 3 2) 4 9;"
    ],
    "preprocessed": "define demo:hash | hash-add (hash-add $hash-null 3 2) 4 9;",
    "code": "21101321011010131232101011113221010111130232101100103211321033210032100132233",
    "parse": [
      "define",
      "demo:hash",
      [
        -1,
        "hash-add",
        [
          "hash-add",
          [
            -2,
            "hash-null"
          ],
          "3",
          "2"
        ],
        "4",
        "9"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF179;&#xF248;&#xF146;&#xF173;&#xF246;&#xF146;&#xF173;&#xF249;&#xF146;&#xF176;&#xF24A;&#xF147;&#xF24A;&#xF146;&#xF245;&#xF148;&#xF24A;&#xF14D;&#xF24B;",
    "dt": true,
    "stanza": 1239
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 4) 9;"
    ],
    "preprocessed": "= (hash-ref $demo:hash 4) 9;",
    "code": "21132210110001302321011010132100332100132233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "4"
      ],
      "9"
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF249;&#xF146;&#xF179;&#xF24A;&#xF148;&#xF245;&#xF14D;&#xF24B;",
    "dt": false,
    "stanza": 1240
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 3) 2;"
    ],
    "preprocessed": "= (hash-ref $demo:hash 3) 2;",
    "code": "21132210110001302321011010132113321032233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "3"
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF249;&#xF146;&#xF179;&#xF24A;&#xF147;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1241
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 8) $undefined;"
    ],
    "preprocessed": "= (hash-ref $demo:hash 8) $undefined;",
    "code": "21132210110001302321011010132100033023210000032233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "8"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF249;&#xF146;&#xF179;&#xF24A;&#xF14C;&#xF245;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1242
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 15) $undefined;"
    ],
    "preprocessed": "= (hash-ref $demo:hash 15) $undefined;",
    "code": "21132210110001302321011010132111133023210000032233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "15"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF249;&#xF146;&#xF179;&#xF24A;&#xF153;&#xF245;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1243
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref (hash-add $demo:hash 15 33) 15) 33;"
    ],
    "preprocessed": "= (hash-ref (hash-add $demo:hash 15 33) 15) 33;",
    "code": "2113221011000132210101111302321011010132111132100001332111133210000132233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          "hash-add",
          [
            -2,
            "demo:hash"
          ],
          "15",
          "33"
        ],
        "15"
      ],
      "33"
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF246;&#xF146;&#xF173;&#xF249;&#xF146;&#xF179;&#xF24A;&#xF153;&#xF24A;&#xF165;&#xF245;&#xF153;&#xF245;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1244
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 15) $undefined;"
    ],
    "preprocessed": "= (hash-ref $demo:hash 15) $undefined;",
    "code": "21132210110001302321011010132111133023210000032233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "15"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF249;&#xF146;&#xF179;&#xF24A;&#xF153;&#xF245;&#xF249;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1245
  },
  {
    "role": "code",
    "lines": [
      "intro make-hash;"
    ],
    "preprocessed": "intro make-hash;",
    "code": "210010321011011032233",
    "parse": [
      "intro",
      "make-hash"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF17A;&#xF24B;",
    "dt": false,
    "stanza": 1246
  },
  {
    "role": "code",
    "lines": [
      "define make-hash | ? x | if (list= $x (vector)) $hash-null (hash-add (make-hash (tail $x)) (first | head $x) (second | head $x));"
    ],
    "preprocessed": "define make-hash | ? x | if (list= $x (vector)) $hash-null (hash-add (make-hash (tail $x)) (first | head $x) (second | head $x));",
    "code": "211013210110110312321100321010013123211113221010101302321010013221000033302321011001032210101111322101101103221010010302321010013332210110003123210100003023210100133221011001312321010000302321010013332233",
    "parse": [
      "define",
      "make-hash",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "list=",
            [
              -2,
              "x"
            ],
            [
              "vector"
            ]
          ],
          [
            -2,
            "hash-null"
          ],
          [
            "hash-add",
            [
              "make-hash",
              [
                "tail",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "first",
              [
                -1,
                "head",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "second",
              [
                -1,
                "head",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF17A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF145;&#xF159;&#xF249;&#xF16D;&#xF246;&#xF154;&#xF245;&#xF245;&#xF249;&#xF146;&#xF176;&#xF246;&#xF146;&#xF173;&#xF246;&#xF146;&#xF17A;&#xF246;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15C;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF15D;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1247
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref (make-hash | vector (pair 3 10) (pair 2 20) (pair 1 30)) 3) 10;"
    ],
    "preprocessed": "= (hash-ref (make-hash | vector (pair 3 10) (pair 2 20) (pair 1 30)) 3) 10;",
    "code": "21132210110001322101101103123210000322101011132113210103322101011132103210100332210101113213211110333211332101032233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          "make-hash",
          [
            -1,
            "vector",
            [
              "pair",
              "3",
              "10"
            ],
            [
              "pair",
              "2",
              "20"
            ],
            [
              "pair",
              "1",
              "30"
            ]
          ]
        ],
        "3"
      ],
      "10"
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF246;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF24A;&#xF158;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF24A;&#xF162;&#xF245;&#xF245;&#xF147;&#xF245;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1248
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref (make-hash | vector (pair 3 10) (pair 2 20) (pair 1 30)) 1) 30;"
    ],
    "preprocessed": "= (hash-ref (make-hash | vector (pair 3 10) (pair 2 20) (pair 1 30)) 1) 30;",
    "code": "21132210110001322101101103123210000322101011132113210103322101011132103210100332210101113213211110333213321111032233",
    "parse": [
      "=",
      [
        "hash-ref",
        [
          "make-hash",
          [
            -1,
            "vector",
            [
              "pair",
              "3",
              "10"
            ],
            [
              "pair",
              "2",
              "20"
            ],
            [
              "pair",
              "1",
              "30"
            ]
          ]
        ],
        "1"
      ],
      "30"
    ],
    "spider": "&#xF147;&#xF246;&#xF146;&#xF175;&#xF246;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF24A;&#xF158;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF24A;&#xF162;&#xF245;&#xF245;&#xF145;&#xF245;&#xF162;&#xF24B;",
    "dt": false,
    "stanza": 1249
  },
  {
    "role": "file",
    "lines": [
      "== COS_MutableStructure =="
    ],
    "stanza": 1250
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "introduce simple mutable structures",
    "section_category": "OBJECT",
    "section_index": 33,
    "stanza": 1251
  },
  {
    "role": "code",
    "lines": [
      "intro mutable-struct;"
    ],
    "preprocessed": "intro mutable-struct;",
    "code": "210010321011011132233",
    "parse": [
      "intro",
      "mutable-struct"
    ],
    "spider": "&#xF156;&#xF24A;&#xF146;&#xF17B;&#xF24B;",
    "dt": false,
    "stanza": 1252
  },
  {
    "role": "code",
    "lines": [
      "define mutable-struct | ? x:list |",
      "  let ((cell:list | map (? x | make-cell 0) $x:list)) |",
      "  ? x:find | list-ref $cell:list | list:find $x:list $x:find;"
    ],
    "preprocessed": "define mutable-struct | ? x:list |\n  let ((cell:list | map (? x | make-cell 0) $x:list)) |\n  ? x:find | list-ref $cell:list | list:find $x:list $x:find;",
    "code": "2110132101101113123211003210100013123210000010322210111000312321011010322110032101001312321101132033023210100013331232110032101110013123210101003023210111000312321011110302321010001302321011100132233",
    "parse": [
      "define",
      "mutable-struct",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "let",
          [
            [
              "cell:list",
              [
                -1,
                "map",
                [
                  "?",
                  "x",
                  [
                    -1,
                    "make-cell",
                    "0"
                  ]
                ],
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ],
          [
            -1,
            "?",
            "x:find",
            [
              -1,
              "list-ref",
              [
                -2,
                "cell:list"
              ],
              [
                -1,
                "list:find",
                [
                  -2,
                  "x:list"
                ],
                [
                  -2,
                  "x:find"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF17B;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF146;&#xF17C;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF249;&#xF145;&#xF155;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF17D;&#xF248;&#xF145;&#xF158;&#xF249;&#xF146;&#xF17C;&#xF248;&#xF145;&#xF162;&#xF249;&#xF145;&#xF155;&#xF249;&#xF146;&#xF17D;&#xF24B;",
    "dt": true,
    "stanza": 1253
  },
  {
    "role": "code",
    "lines": [
      "define demo:mutable-struct | mutable-struct | vector x:1 x:2 x:3;"
    ],
    "preprocessed": "define demo:mutable-struct | mutable-struct | vector x:1 x:2 x:3;",
    "code": "2110132101110103123210110111312321000032101110113210111100321011110132233",
    "parse": [
      "define",
      "demo:mutable-struct",
      [
        -1,
        "mutable-struct",
        [
          -1,
          "vector",
          "x:1",
          "x:2",
          "x:3"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF17E;&#xF248;&#xF146;&#xF17B;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF17F;&#xF24A;&#xF146;&#xF180;&#xF24A;&#xF146;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1254
  },
  {
    "role": "code",
    "lines": [
      "set! (demo:mutable-struct x:1) 15;"
    ],
    "preprocessed": "set! (demo:mutable-struct x:1) 15;",
    "code": "211100322101110103210111011332111132233",
    "parse": [
      "set!",
      [
        "demo:mutable-struct",
        "x:1"
      ],
      "15"
    ],
    "spider": "&#xF160;&#xF246;&#xF146;&#xF17E;&#xF24A;&#xF146;&#xF17F;&#xF245;&#xF153;&#xF24B;",
    "dt": true,
    "stanza": 1255
  },
  {
    "role": "code",
    "lines": [
      "= 15 | get! | demo:mutable-struct x:1;"
    ],
    "preprocessed": "= 15 | get! | demo:mutable-struct x:1;",
    "code": "21132111131232111013123210111010321011101132233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "get!",
        [
          -1,
          "demo:mutable-struct",
          "x:1"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF161;&#xF248;&#xF146;&#xF17E;&#xF24A;&#xF146;&#xF17F;&#xF24B;",
    "dt": false,
    "stanza": 1256
  },
  {
    "role": "file",
    "lines": [
      "== COS_Turing =="
    ],
    "stanza": 1257
  },
  {
    "role": "doc",
    "lines": [
      "",
      "This is just for fun, as an exercise.",
      ""
    ],
    "section_description": "introduce turing machine model",
    "section_category": "TURING",
    "section_index": 34,
    "stanza": 1258
  },
  {
    "role": "code",
    "lines": [
      "define tape:tail | ? x |",
      "  if (>= 1 | list-length $x) (vector | vector) |",
      "  tail $x;"
    ],
    "preprocessed": "define tape:tail | ? x |\n  if (>= 1 | list-length $x) (vector | vector) |\n  tail $x;",
    "code": "21101321011111031232110032101001312321111322100100032131232101001130232101001332210000312321000033123210100103023210100132233",
    "parse": [
      "define",
      "tape:tail",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            ">=",
            "1",
            [
              -1,
              "list-length",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "vector",
            [
              -1,
              "vector"
            ]
          ],
          [
            -1,
            "tail",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF182;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF24A;&#xF145;&#xF248;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF154;&#xF248;&#xF154;&#xF245;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1259
  },
  {
    "role": "code",
    "lines": [
      "define tape:head | ? x |",
      "  if (= 0 | list-length $x) (vector) |",
      "  head $x;"
    ],
    "preprocessed": "define tape:head | ? x |\n  if (= 0 | list-length $x) (vector) |\n  head $x;",
    "code": "21101321011111131232110032101001312321111322113203123210100113023210100133221000033123210100003023210100132233",
    "parse": [
      "define",
      "tape:head",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "vector"
          ],
          [
            -1,
            "head",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF146;&#xF183;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF154;&#xF245;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1260
  },
  {
    "role": "code",
    "lines": [
      "define tape:get | ? tape | tape:head | second $tape;"
    ],
    "preprocessed": "define tape:get | ? tape | tape:head | second $tape;",
    "code": "21101321100000031232110032110000013123210111111312321011001302321100000132233",
    "parse": [
      "define",
      "tape:get",
      [
        -1,
        "?",
        "tape",
        [
          -1,
          "tape:head",
          [
            -1,
            "second",
            [
              -2,
              "tape"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF144;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF145;&#xF248;&#xF146;&#xF183;&#xF248;&#xF145;&#xF15D;&#xF249;&#xF147;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1261
  },
  {
    "role": "code",
    "lines": [
      "define tape:next | lambda (tape n x) |",
      "  if (= $n 1) (pair (prepend $x | first $tape) (tape:tail | second $tape)) |",
      "  if (= $n 0) (pair (tape:tail | first $tape) (prepend (tape:head | first $tape) (prepend $x (tape:tail | second $tape)))) |",
      "  pair (first $tape) (prepend $x (tape:tail | second $tape));"
    ],
    "preprocessed": "define tape:next | lambda (tape n x) |\n  if (= $n 1) (pair (prepend $x | first $tape) (tape:tail | second $tape)) |\n  if (= $n 0) (pair (tape:tail | first $tape) (prepend (tape:head | first $tape) (prepend $x (tape:tail | second $tape)))) |\n  pair (first $tape) (prepend $x (tape:tail | second $tape));",
    "code": "21101321100001031232110103221100000132100111032101001331232111132211302321001110321332210101113221010110302321010013123210110003023211000001332210111110312321011001302321100000133312321111322113023210011103203322101011132210111110312321011000302321100000133221010110322101111113123210110003023211000001332210101103023210100132210111110312321011001302321100000133333123210101113221011000302321100000133221010110302321010013221011111031232101100130232110000013332233",
    "parse": [
      "define",
      "tape:next",
      [
        -1,
        "lambda",
        [
          "tape",
          "n",
          "x"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "n"
            ],
            "1"
          ],
          [
            "pair",
            [
              "prepend",
              [
                -2,
                "x"
              ],
              [
                -1,
                "first",
                [
                  -2,
                  "tape"
                ]
              ]
            ],
            [
              "tape:tail",
              [
                -1,
                "second",
                [
                  -2,
                  "tape"
                ]
              ]
            ]
          ],
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "0"
            ],
            [
              "pair",
              [
                "tape:tail",
                [
                  -1,
                  "first",
                  [
                    -2,
                    "tape"
                  ]
                ]
              ],
              [
                "prepend",
                [
                  "tape:head",
                  [
                    -1,
                    "first",
                    [
                      -2,
                      "tape"
                    ]
                  ]
                ],
                [
                  "prepend",
                  [
                    -2,
                    "x"
                  ],
                  [
                    "tape:tail",
                    [
                      -1,
                      "second",
                      [
                        -2,
                        "tape"
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              -1,
              "pair",
              [
                "first",
                [
                  -2,
                  "tape"
                ]
              ],
              [
                "prepend",
                [
                  -2,
                  "x"
                ],
                [
                  "tape:tail",
                  [
                    -1,
                    "second",
                    [
                      -2,
                      "tape"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF146;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF145;&#xF24A;&#xF145;&#xF152;&#xF24A;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF246;&#xF145;&#xF15A;&#xF249;&#xF16D;&#xF248;&#xF145;&#xF15C;&#xF249;&#xF147;&#xF145;&#xF245;&#xF246;&#xF146;&#xF182;&#xF248;&#xF145;&#xF15D;&#xF249;&#xF147;&#xF145;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF246;&#xF146;&#xF182;&#xF248;&#xF145;&#xF15C;&#xF249;&#xF147;&#xF145;&#xF245;&#xF246;&#xF145;&#xF15A;&#xF246;&#xF146;&#xF183;&#xF248;&#xF145;&#xF15C;&#xF249;&#xF147;&#xF145;&#xF245;&#xF246;&#xF145;&#xF15A;&#xF249;&#xF16D;&#xF246;&#xF146;&#xF182;&#xF248;&#xF145;&#xF15D;&#xF249;&#xF147;&#xF145;&#xF245;&#xF245;&#xF245;&#xF245;&#xF248;&#xF145;&#xF15B;&#xF246;&#xF145;&#xF15C;&#xF249;&#xF147;&#xF145;&#xF245;&#xF246;&#xF145;&#xF15A;&#xF249;&#xF16D;&#xF246;&#xF146;&#xF182;&#xF248;&#xF145;&#xF15D;&#xF249;&#xF147;&#xF145;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1262
  },
  {
    "role": "code",
    "lines": [
      "intro tape:do;"
    ],
    "preprocessed": "intro tape:do;",
    "code": "210010321100001132233",
    "parse": [
      "intro",
      "tape:do"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1263
  },
  {
    "role": "code",
    "lines": [
      "define tape:do | lambda (x:function current end tape) |",
      "  if (= $current $end) $tape |",
      "  let ((next | x:function $current | tape:get $tape)) | ",
      "    tape:do $x:function (list-ref $next 0) $end |",
      "    tape:next $tape (list-ref $next 1) (list-ref $next 2);"
    ],
    "preprocessed": "define tape:do | lambda (x:function current end tape) |\n  if (= $current $end) $tape |\n  let ((next | x:function $current | tape:get $tape)) | \n    tape:do $x:function (list-ref $next 0) $end |\n    tape:next $tape (list-ref $next 1) (list-ref $next 2);",
    "code": "2110132110000113123211010322110001003211000101321100011032110000013312321111322113023211000101302321100011033023211000001312321000001032221100011131232110001003023211000101312321100000030232110000013331232110000113023211000100322101010030232110001113203302321100011031232110000103023211000001322101010030232110001113213322101010030232110001113210332233",
    "parse": [
      "define",
      "tape:do",
      [
        -1,
        "lambda",
        [
          "x:function",
          "current",
          "end",
          "tape"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "current"
            ],
            [
              -2,
              "end"
            ]
          ],
          [
            -2,
            "tape"
          ],
          [
            -1,
            "let",
            [
              [
                "next",
                [
                  -1,
                  "x:function",
                  [
                    -2,
                    "current"
                  ],
                  [
                    -1,
                    "tape:get",
                    [
                      -2,
                      "tape"
                    ]
                  ]
                ]
              ]
            ],
            [
              -1,
              "tape:do",
              [
                -2,
                "x:function"
              ],
              [
                "list-ref",
                [
                  -2,
                  "next"
                ],
                "0"
              ],
              [
                -2,
                "end"
              ],
              [
                -1,
                "tape:next",
                [
                  -2,
                  "tape"
                ],
                [
                  "list-ref",
                  [
                    -2,
                    "next"
                  ],
                  "1"
                ],
                [
                  "list-ref",
                  [
                    -2,
                    "next"
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF147;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF148;&#xF24A;&#xF147;&#xF149;&#xF24A;&#xF147;&#xF14A;&#xF24A;&#xF147;&#xF145;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF147;&#xF149;&#xF249;&#xF147;&#xF14A;&#xF245;&#xF249;&#xF147;&#xF145;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF147;&#xF14B;&#xF248;&#xF147;&#xF148;&#xF249;&#xF147;&#xF149;&#xF248;&#xF147;&#xF144;&#xF249;&#xF147;&#xF145;&#xF245;&#xF245;&#xF248;&#xF147;&#xF147;&#xF249;&#xF147;&#xF148;&#xF246;&#xF145;&#xF158;&#xF249;&#xF147;&#xF14B;&#xF24A;&#xF144;&#xF245;&#xF249;&#xF147;&#xF14A;&#xF248;&#xF147;&#xF146;&#xF249;&#xF147;&#xF145;&#xF246;&#xF145;&#xF158;&#xF249;&#xF147;&#xF14B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF158;&#xF249;&#xF147;&#xF14B;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1264
  },
  {
    "role": "code",
    "lines": [
      "intro tape:make;"
    ],
    "preprocessed": "intro tape:make;",
    "code": "210010321100100032233",
    "parse": [
      "intro",
      "tape:make"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1265
  },
  {
    "role": "code",
    "lines": [
      "define tape:make | ? x | pair (vector) $x;"
    ],
    "preprocessed": "define tape:make | ? x | pair (vector) $x;",
    "code": "211013211001000312321100321010013123210101113221000033023210100132233",
    "parse": [
      "define",
      "tape:make",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "pair",
          [
            "vector"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF14C;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF15B;&#xF246;&#xF154;&#xF245;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1266
  },
  {
    "role": "code",
    "lines": [
      "define tape:-:tail | ? x | ? x:list |",
      "  if (= 0 | list-length $x:list) $x:list |",
      "  if (not | equal $x | last $x:list) $x:list |",
      "  tape:-:tail $x (except-last $x:list);"
    ],
    "preprocessed": "define tape:-:tail | ? x | ? x:list |\n  if (= 0 | list-length $x:list) $x:list |\n  if (not | equal $x | last $x:list) $x:list |\n  tape:-:tail $x (except-last $x:list);",
    "code": "211013211001001312321100321010013123211003210100013123211113221132031232101001130232101000133023210100013123211113221013123210003023210100131232110000030232101000133023210100013123211001001302321010013221100001302321010001332233",
    "parse": [
      "define",
      "tape:-:tail",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              -2,
              "x:list"
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "equal",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -1,
                    "last",
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ]
              ],
              [
                -2,
                "x:list"
              ],
              [
                -1,
                "tape:-:tail",
                [
                  -2,
                  "x"
                ],
                [
                  "except-last",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF14D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF145;&#xF155;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF14C;&#xF249;&#xF16D;&#xF248;&#xF145;&#xF164;&#xF249;&#xF145;&#xF155;&#xF245;&#xF249;&#xF145;&#xF155;&#xF248;&#xF147;&#xF14D;&#xF249;&#xF16D;&#xF246;&#xF145;&#xF165;&#xF249;&#xF145;&#xF155;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1267
  },
  {
    "role": "code",
    "lines": [
      "intro tape:result;"
    ],
    "preprocessed": "intro tape:result;",
    "code": "210010321100101032233",
    "parse": [
      "intro",
      "tape:result"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1268
  },
  {
    "role": "code",
    "lines": [
      "define tape:result | ? x | tape:-:tail (vector) (second $x);"
    ],
    "preprocessed": "define tape:result | ? x | tape:-:tail (vector) (second $x);",
    "code": "211013211001010312321100321010013123211001001322100003322101100130232101001332233",
    "parse": [
      "define",
      "tape:result",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "tape:-:tail",
          [
            "vector"
          ],
          [
            "second",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF14E;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF14D;&#xF246;&#xF154;&#xF245;&#xF246;&#xF145;&#xF15D;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1269
  },
  {
    "role": "code",
    "lines": [
      "intro demo:tape:function:+:1;"
    ],
    "preprocessed": "intro demo:tape:function:+:1;",
    "code": "210010321100101132233",
    "parse": [
      "intro",
      "demo:tape:function:+:1"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1270
  },
  {
    "role": "code",
    "lines": [
      "define demo:tape:function:+:1 | make-hash | vector ",
      "  (pair next (make-hash | vector",
      "    (pair 0 (vector next 1 0))",
      "    (pair 1 (vector next 1 1))",
      "    (pair (vector) (vector +:1 0 (vector)))))",
      "  (pair +:1 (make-hash | vector",
      "    (pair 0 (vector not:+:1 0 1))",
      "    (pair 1 (vector +:1 0 0))",
      "    (pair (vector) (vector end 2 1))))",
      "  (pair not:+:1 (make-hash | vector",
      "    (pair 0 (vector not:+:1 0 0))",
      "    (pair 1 (vector not:+:1 0 1))",
      "    (pair (vector) (vector end 1 (vector)))))",
      "  (pair end (make-hash | vector));"
    ],
    "preprocessed": "define demo:tape:function:+:1 | make-hash | vector \n  (pair next (make-hash | vector\n    (pair 0 (vector next 1 0))\n    (pair 1 (vector next 1 1))\n    (pair (vector) (vector +:1 0 (vector)))))\n  (pair +:1 (make-hash | vector\n    (pair 0 (vector not:+:1 0 1))\n    (pair 1 (vector +:1 0 0))\n    (pair (vector) (vector end 2 1))))\n  (pair not:+:1 (make-hash | vector\n    (pair 0 (vector not:+:1 0 0))\n    (pair 1 (vector not:+:1 0 1))\n    (pair (vector) (vector end 1 (vector)))))\n  (pair end (make-hash | vector));",
    "code
    "parse": [
      "define",
      "demo:tape:function:+:1",
      [
        -1,
        "make-hash",
        [
          -1,
          "vector",
          [
            "pair",
            "next",
            [
              "make-hash",
              [
                -1,
                "vector",
                [
                  "pair",
                  "0",
                  [
                    "vector",
                    "next",
                    "1",
                    "0"
                  ]
                ],
                [
                  "pair",
                  "1",
                  [
                    "vector",
                    "next",
                    "1",
                    "1"
                  ]
                ],
                [
                  "pair",
                  [
                    "vector"
                  ],
                  [
                    "vector",
                    "+:1",
                    "0",
                    [
                      "vector"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "pair",
            "+:1",
            [
              "make-hash",
              [
                -1,
                "vector",
                [
                  "pair",
                  "0",
                  [
                    "vector",
                    "not:+:1",
                    "0",
                    "1"
                  ]
                ],
                [
                  "pair",
                  "1",
                  [
                    "vector",
                    "+:1",
                    "0",
                    "0"
                  ]
                ],
                [
                  "pair",
                  [
                    "vector"
                  ],
                  [
                    "vector",
                    "end",
                    "2",
                    "1"
                  ]
                ]
              ]
            ]
          ],
          [
            "pair",
            "not:+:1",
            [
              "make-hash",
              [
                -1,
                "vector",
                [
                  "pair",
                  "0",
                  [
                    "vector",
                    "not:+:1",
                    "0",
                    "0"
                  ]
                ],
                [
                  "pair",
                  "1",
                  [
                    "vector",
                    "not:+:1",
                    "0",
                    "1"
                  ]
                ],
                [
                  "pair",
                  [
                    "vector"
                  ],
                  [
                    "vector",
                    "end",
                    "1",
                    [
                      "vector"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "pair",
            "end",
            [
              "make-hash",
              [
                -1,
                "vector"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF14F;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF14B;&#xF246;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF246;&#xF154;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF150;&#xF24A;&#xF144;&#xF246;&#xF154;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF150;&#xF246;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF150;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF246;&#xF154;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF151;&#xF246;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF151;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF246;&#xF154;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF14A;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF14A;&#xF246;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1271
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 0 1 0) | tape:result |",
      "  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 0 0 1);"
    ],
    "preprocessed": "list= (vector 1 0 1 0) | tape:result |\n  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 0 0 1);",
    "code": "2101010132210000321320321320331232110010103123211000011302321100101132110001113211000110322110010003123210000321320320321332233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "0",
        "1",
        "0"
      ],
      [
        -1,
        "tape:result",
        [
          -1,
          "tape:do",
          [
            -2,
            "demo:tape:function:+:1"
          ],
          "next",
          "end",
          [
            "tape:make",
            [
              -1,
              "vector",
              "1",
              "0",
              "0",
              "1"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF147;&#xF14E;&#xF248;&#xF147;&#xF147;&#xF249;&#xF147;&#xF14F;&#xF24A;&#xF147;&#xF14B;&#xF24A;&#xF147;&#xF14A;&#xF246;&#xF147;&#xF14C;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1272
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 0 0 0) | tape:result |",
      "  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 1 1);"
    ],
    "preprocessed": "list= (vector 1 0 0 0) | tape:result |\n  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 1 1);",
    "code": "2101010132210000321320320320331232110010103123211000011302321100101132110001113211000110322110010003123210000321321321332233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "0",
        "0",
        "0"
      ],
      [
        -1,
        "tape:result",
        [
          -1,
          "tape:do",
          [
            -2,
            "demo:tape:function:+:1"
          ],
          "next",
          "end",
          [
            "tape:make",
            [
              -1,
              "vector",
              "1",
              "1",
              "1"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF147;&#xF14E;&#xF248;&#xF147;&#xF147;&#xF249;&#xF147;&#xF14F;&#xF24A;&#xF147;&#xF14B;&#xF24A;&#xF147;&#xF14A;&#xF246;&#xF147;&#xF14C;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1273
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 1 1 0 0 1 0 0 0) | tape:result |",
      "  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 1 1 0 0 0 1 1 1);"
    ],
    "preprocessed": "list= (vector 1 1 1 0 0 1 0 0 0) | tape:result |\n  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 1 1 0 0 0 1 1 1);",
    "code": "2101010132210000321321321320320321320320320331232110010103123211000011302321100101132110001113211000110322110010003123210000321321321320320320321321321332233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "1",
        "1",
        "0",
        "0",
        "1",
        "0",
        "0",
        "0"
      ],
      [
        -1,
        "tape:result",
        [
          -1,
          "tape:do",
          [
            -2,
            "demo:tape:function:+:1"
          ],
          "next",
          "end",
          [
            "tape:make",
            [
              -1,
              "vector",
              "1",
              "1",
              "1",
              "0",
              "0",
              "0",
              "1",
              "1",
              "1"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF147;&#xF14E;&#xF248;&#xF147;&#xF147;&#xF249;&#xF147;&#xF14F;&#xF24A;&#xF147;&#xF14B;&#xF24A;&#xF147;&#xF14A;&#xF246;&#xF147;&#xF14C;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1274
  },
  {
    "role": "file",
    "lines": [
      "== COS_Quote =="
    ],
    "stanza": 1275
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "quoting syntax",
    "section_category": "MATH",
    "section_index": 35,
    "stanza": 1276
  },
  {
    "role": "code",
    "lines": [
      "define quote-f | ? key | ? x |",
      "  if (not | function? $x) $x |",
      "  if (= $key | list-ref $x 0) (tail $x) |",
      "  prepend vector | map (quote-f $key) $x;"
    ],
    "preprocessed": "define quote-f | ? key | ? x |\n  if (not | function? $x) $x |\n  if (= $key | list-ref $x 0) (tail $x) |\n  prepend vector | map (quote-f $key) $x;",
    "code": "21101321100111031232110032110011113123211003210100131232111132210131232101100302321010013302321010013123211113221130232110011113123210101003023210100132033221010010302321010013312321010110321000031232101101032211001110302321100111133023210100132233",
    "parse": [
      "define",
      "quote-f",
      [
        -1,
        "?",
        "key",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "key"
                ],
                [
                  -1,
                  "list-ref",
                  [
                    -2,
                    "x"
                  ],
                  "0"
                ]
              ],
              [
                "tail",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "prepend",
                "vector",
                [
                  -1,
                  "map",
                  [
                    "quote-f",
                    [
                      -2,
                      "key"
                    ]
                  ],
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF152;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF153;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF147;&#xF153;&#xF248;&#xF145;&#xF158;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF24A;&#xF154;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF147;&#xF152;&#xF249;&#xF147;&#xF153;&#xF245;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1277
  },
  {
    "role": "code",
    "lines": [
      "= (quote-f x 1) 1;"
    ],
    "preprocessed": "= (quote-f x 1) 1;",
    "code": "2113221100111032101001321332132233",
    "parse": [
      "=",
      [
        "quote-f",
        "x",
        "1"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF152;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1278
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1) | vector vector 1;"
    ],
    "preprocessed": "list= (quote-f x | vector 1) | vector vector 1;",
    "code": "210101013221100111032101001312321000032133123210000321000032132233",
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1"
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF152;&#xF24A;&#xF16D;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1279
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1 2 3) | vector vector 1 2 3;"
    ],
    "preprocessed": "list= (quote-f x | vector 1 2 3) | vector vector 1 2 3;",
    "code": "2101010132211001110321010013123210000321321032113312321000032100003213210321132233",
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF152;&#xF24A;&#xF16D;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1280
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1 (vector 5 2) 3) | vector vector 1 (vector vector 5 2) 3;"
    ],
    "preprocessed": "list= (quote-f x | vector 1 (vector 5 2) 3) | vector vector 1 (vector vector 5 2) 3;",
    "code": "210101013221100111032101001312321000032132210000321013210332113312321000032100003213221000032100003210132103321132233",
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1",
          [
            "vector",
            "5",
            "2"
          ],
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1",
        [
          "vector",
          "vector",
          "5",
          "2"
        ],
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF152;&#xF24A;&#xF16D;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF147;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1281
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1 (vector 5 2) (vector x + 5 2)) | vector vector 1 (vector vector 5 2) (vector + 5 2);"
    ],
    "preprocessed": "list= (quote-f x | vector 1 (vector 5 2) (vector x + 5 2)) | vector vector 1 (vector vector 5 2) (vector + 5 2);",
    "code": "210101013221100111032101001312321000032132210000321013210332210000321010013210103210132103331232100003210000321322100003210000321013210332210000321010321013210332233",
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1",
          [
            "vector",
            "5",
            "2"
          ],
          [
            "vector",
            "x",
            "+",
            "5",
            "2"
          ]
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1",
        [
          "vector",
          "vector",
          "5",
          "2"
        ],
        [
          "vector",
          "+",
          "5",
          "2"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF152;&#xF24A;&#xF16D;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF16D;&#xF24A;&#xF14E;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1282
  },
  {
    "role": "code",
    "lines": [
      "intro quote;"
    ],
    "preprocessed": "intro quote;",
    "code": "210010321101000032233",
    "parse": [
      "intro",
      "quote"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 1283
  },
  {
    "role": "code",
    "lines": [
      "define translate | assign prev $translate | ? x |",
      "  if (not | function? $x) $x |",
      "  if (not | = quote | head $x) (prev $x) |",
      "  translate | quote-f (list-ref $x 1) (list-ref $x 2);"
    ],
    "preprocessed": "define translate | assign prev $translate | ? x |\n  if (not | function? $x) $x |\n  if (not | = quote | head $x) (prev $x) |\n  translate | quote-f (list-ref $x 1) (list-ref $x 2);",
    "code": "2110132110013123211103210101110302321100131232110032101001312321111322101312321011003023210100133023210100131232111132210131232113211010000312321010000302321010013322101011103023210100133123211001312321100111032210101003023210100132133221010100302321010013210332233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "assign",
        "prev",
        [
          -2,
          "translate"
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "quote",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "translate",
                [
                  -1,
                  "quote-f",
                  [
                    "list-ref",
                    [
                      -2,
                      "x"
                    ],
                    "1"
                  ],
                  [
                    "list-ref",
                    [
                      -2,
                      "x"
                    ],
                    "2"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF152;&#xF24A;&#xF146;&#xF172;&#xF249;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF154;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF15D;&#xF248;&#xF147;&#xF152;&#xF246;&#xF145;&#xF158;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF158;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1284
  },
  {
    "role": "code",
    "lines": [
      "= (quote x 1) 1;"
    ],
    "preprocessed": "= (quote x 1) 1;",
    "code": "2113221101000032101001321332132233",
    "parse": [
      "=",
      [
        "quote",
        "x",
        "1"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF154;&#xF24A;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1285
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1) | vector 1;"
    ],
    "preprocessed": "list= (quote x | 1) | vector 1;",
    "code": "2101010132211010000321010013123213312321000032132233",
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1"
        ]
      ],
      [
        -1,
        "vector",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF154;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1286
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1 2 3) | vector 1 2 3;"
    ],
    "preprocessed": "list= (quote x | 1 2 3) | vector 1 2 3;",
    "code": "21010101322110100003210100131232132103211331232100003213210321132233",
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1",
          "2",
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "1",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF154;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1287
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1 (5 2) 3) | vector 1 (vector 5 2) 3;"
    ],
    "preprocessed": "list= (quote x | 1 (5 2) 3) | vector 1 (vector 5 2) 3;",
    "code": "21010101322110100003210100131232132210132103321133123210000321322100003210132103321132233",
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1",
          [
            "5",
            "2"
          ],
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "1",
        [
          "vector",
          "5",
          "2"
        ],
        "3"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF154;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF246;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF147;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1288
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1 (5 2) (x + 5 2)) | vector 1 (vector 5 2) 7;"
    ],
    "preprocessed": "list= (quote x | 1 (5 2) (x + 5 2)) | vector 1 (vector 5 2) 7;",
    "code": "210101013221101000032101001312321322101321033221010013210103210132103331232100003213221000032101321033211132233",
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1",
          [
            "5",
            "2"
          ],
          [
            "x",
            "+",
            "5",
            "2"
          ]
        ]
      ],
      [
        -1,
        "vector",
        "1",
        [
          "vector",
          "5",
          "2"
        ],
        "7"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF147;&#xF154;&#xF24A;&#xF16D;&#xF248;&#xF145;&#xF246;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF16D;&#xF24A;&#xF14E;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF246;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1289
  },
  {
    "role": "file",
    "lines": [
      "== COS_NewType =="
    ],
    "stanza": 1290
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "introduce simple form of typing, for ease of documentation.",
    "section_category": "OBJECT",
    "section_index": 36,
    "stanza": 1291
  },
  {
    "role": "doc",
    "lines": [
      "",
      "An object is simply a function that takes an argument.",
      "The argument is the method to call on the object.",
      "Types are here taken to be just the existence of a particular method,",
      "with that method returning an object of the appropriate type.",
      ""
    ],
    "stanza": 1292
  },
  {
    "role": "code",
    "lines": [
      "define make-integer | ? x | ? n |",
      "  if (= $n int) $x 0;"
    ],
    "preprocessed": "define make-integer | ? x | ? n |\n  if (= $n int) $x 0;",
    "code": "2110132110100013123211003210100131232110032100111031232111132211302321001110321101001033023210100132032233",
    "parse": [
      "define",
      "make-integer",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "int"
            ],
            [
              -2,
              "x"
            ],
            "0"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF147;&#xF156;&#xF245;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1293
  },
  {
    "role": "code",
    "lines": [
      "define objectify | ? x |",
      "  if (function? $x) $x |",
      "  make-integer $x;"
    ],
    "preprocessed": "define objectify | ? x |\n  if (function? $x) $x |\n  make-integer $x;",
    "code": "211013211010011312321100321010013123211113221011003023210100133023210100131232110100013023210100132233",
    "parse": [
      "define",
      "objectify",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "function?",
            [
              -2,
              "x"
            ]
          ],
          [
            -2,
            "x"
          ],
          [
            -1,
            "make-integer",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF157;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF155;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1294
  },
  {
    "role": "doc",
    "lines": [
      "add version of lambda that allows types to be declared"
    ],
    "stanza": 1295
  },
  {
    "role": "code",
    "lines": [
      "define translate | let ((prev $translate)) | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = lambda | head $x) (prev $x) |",
      "  let ((formals | head | tail $x)",
      "       (body | head | tail | tail $x)) |",
      "    if (= 0 | list-length $formals) (translate $body) |",
      "    if (not | function? | last $formals)",
      "      (translate | vector lambda (except-last $formals) (vector  ? (last $formals) $body)) |",
      "      let ((formal-name | first | last $formals)",
      "           (formal-type | second | last $formals)) |",
      "        translate | vector",
      "          lambda (except-last $formals) |",
      "            vector ? $formal-name |",
      "              vector let (vector (vector $formal-name (vector",
      "                (vector objectify | vector $formal-name)",
      "                $formal-type))) $body;"
    ],
    "preprocessed": "define translate | let ((prev $translate)) | ? x |\n  if (not | function? $x) (prev $x) |\n  if (not | = lambda | head $x) (prev $x) |\n  let ((formals | head | tail $x)\n       (body | head | tail | tail $x)) |\n    if (= 0 | list-length $formals) (translate $body) |\n    if (not | function? | last $formals)\n      (translate | vector lambda (except-last $formals) (vector  ? (last $formals) $body)) |\n      let ((formal-name | first | last $formals)\n           (formal-type | second | last $formals)) |\n        translate | vector\n          lambda (except-last $formals) |\n            vector ? $formal-name |\n              vector let (vector (vector $formal-name (vector\n                (vector objectify | vector $formal-name)\n                $formal-type))) $body;",
    "code
    "parse": [
      "define",
      "translate",
      [
        -1,
        "let",
        [
          [
            "prev",
            [
              -2,
              "translate"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "lambda",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "formals",
                    [
                      -1,
                      "head",
                      [
                        -1,
                        "tail",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ],
                  [
                    "body",
                    [
                      -1,
                      "head",
                      [
                        -1,
                        "tail",
                        [
                          -1,
                          "tail",
                          [
                            -2,
                            "x"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "if",
                  [
                    "=",
                    "0",
                    [
                      -1,
                      "list-length",
                      [
                        -2,
                        "formals"
                      ]
                    ]
                  ],
                  [
                    "translate",
                    [
                      -2,
                      "body"
                    ]
                  ],
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "function?",
                        [
                          -1,
                          "last",
                          [
                            -2,
                            "formals"
                          ]
                        ]
                      ]
                    ],
                    [
                      "translate",
                      [
                        -1,
                        "vector",
                        "lambda",
                        [
                          "except-last",
                          [
                            -2,
                            "formals"
                          ]
                        ],
                        [
                          "vector",
                          "?",
                          [
                            "last",
                            [
                              -2,
                              "formals"
                            ]
                          ],
                          [
                            -2,
                            "body"
                          ]
                        ]
                      ]
                    ],
                    [
                      -1,
                      "let",
                      [
                        [
                          "formal-name",
                          [
                            -1,
                            "first",
                            [
                              -1,
                              "last",
                              [
                                -2,
                                "formals"
                              ]
                            ]
                          ]
                        ],
                        [
                          "formal-type",
                          [
                            -1,
                            "second",
                            [
                              -1,
                              "last",
                              [
                                -2,
                                "formals"
                              ]
                            ]
                          ]
                        ]
                      ],
                      [
                        -1,
                        "translate",
                        [
                          -1,
                          "vector",
                          "lambda",
                          [
                            "except-last",
                            [
                              -2,
                              "formals"
                            ]
                          ],
                          [
                            -1,
                            "vector",
                            "?",
                            [
                              -2,
                              "formal-name"
                            ],
                            [
                              -1,
                              "vector",
                              "let",
                              [
                                "vector",
                                [
                                  "vector",
                                  [
                                    -2,
                                    "formal-name"
                                  ],
                                  [
                                    "vector",
                                    [
                                      "vector",
                                      "objectify",
                                      [
                                        -1,
                                        "vector",
                                        [
                                          -2,
                                          "formal-name"
                                        ]
                                      ]
                                    ],
                                    [
                                      -2,
                                      "formal-type"
                                    ]
                                  ]
                                ]
                              ],
                              [
                                -2,
                                "body"
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF146;&#xF172;&#xF249;&#xF15D;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF15E;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF147;&#xF158;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF159;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF147;&#xF158;&#xF245;&#xF246;&#xF15D;&#xF249;&#xF147;&#xF159;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF248;&#xF145;&#xF164;&#xF249;&#xF147;&#xF158;&#xF245;&#xF246;&#xF15D;&#xF248;&#xF154;&#xF24A;&#xF15E;&#xF246;&#xF145;&#xF165;&#xF249;&#xF147;&#xF158;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF246;&#xF145;&#xF164;&#xF249;&#xF147;&#xF158;&#xF245;&#xF249;&#xF147;&#xF159;&#xF245;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF147;&#xF15A;&#xF248;&#xF145;&#xF15C;&#xF248;&#xF145;&#xF164;&#xF249;&#xF147;&#xF158;&#xF245;&#xF246;&#xF147;&#xF15B;&#xF248;&#xF145;&#xF15D;&#xF248;&#xF145;&#xF164;&#xF249;&#xF147;&#xF158;&#xF245;&#xF245;&#xF248;&#xF15D;&#xF248;&#xF154;&#xF24A;&#xF15E;&#xF246;&#xF145;&#xF165;&#xF249;&#xF147;&#xF158;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF150;&#xF249;&#xF147;&#xF15A;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF146;&#xF246;&#xF154;&#xF246;&#xF154;&#xF249;&#xF147;&#xF15A;&#xF246;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF157;&#xF248;&#xF154;&#xF249;&#xF147;&#xF15A;&#xF245;&#xF249;&#xF147;&#xF15B;&#xF245;&#xF245;&#xF245;&#xF249;&#xF147;&#xF159;&#xF24B;",
    "dt": true,
    "stanza": 1296
  },
  {
    "role": "doc",
    "lines": [
      "add conditional form"
    ],
    "stanza": 1297
  },
  {
    "role": "code",
    "lines": [
      "intro cond;"
    ],
    "preprocessed": "intro cond;",
    "code": "210010321101100032233",
    "parse": [
      "intro",
      "cond"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 1298
  },
  {
    "role": "code",
    "lines": [
      "define translate | let ((prev $translate)) | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = cond | head $x) (prev $x) |",
      "  let ((cnd | head | tail $x)",
      "       (rem | tail | tail $x)) |",
      "    if (= 0 | list-length $rem) (translate $cnd) |",
      "    translate (vector if (first $cnd) (second $cnd) (prepend cond $rem));"
    ],
    "preprocessed": "define translate | let ((prev $translate)) | ? x |\n  if (not | function? $x) (prev $x) |\n  if (not | = cond | head $x) (prev $x) |\n  let ((cnd | head | tail $x)\n       (rem | tail | tail $x)) |\n    if (= 0 | list-length $rem) (translate $cnd) |\n    translate (vector if (first $cnd) (second $cnd) (prepend cond $rem));",
    "code": "211013211001312321000001032221010111030232110013331232110032101001312321111322101312321011003023210100133221010111030232101001331232111132210131232113211011000312321010000302321010013322101011103023210100133123210000010322211011001312321010000312321010010302321010013322110110103123210100103123210100103023210100133312321111322113203123210100113023211011010332211001302321101100133123211001322100003211113221011000302321101100133221011001302321101100133221010110321101100030232110110103332233",
    "parse": [
      "define",
      "translate",
      [
        -1,
        "let",
        [
          [
            "prev",
            [
              -2,
              "translate"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "cond",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "cnd",
                    [
                      -1,
                      "head",
                      [
                        -1,
                        "tail",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ],
                  [
                    "rem",
                    [
                      -1,
                      "tail",
                      [
                        -1,
                        "tail",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "if",
                  [
                    "=",
                    "0",
                    [
                      -1,
                      "list-length",
                      [
                        -2,
                        "rem"
                      ]
                    ]
                  ],
                  [
                    "translate",
                    [
                      -2,
                      "cnd"
                    ]
                  ],
                  [
                    -1,
                    "translate",
                    [
                      "vector",
                      "if",
                      [
                        "first",
                        [
                          -2,
                          "cnd"
                        ]
                      ],
                      [
                        "second",
                        [
                          -2,
                          "cnd"
                        ]
                      ],
                      [
                        "prepend",
                        "cond",
                        [
                          -2,
                          "rem"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF146;&#xF172;&#xF249;&#xF15D;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF147;&#xF15C;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF147;&#xF15D;&#xF248;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF15E;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF147;&#xF15E;&#xF245;&#xF246;&#xF15D;&#xF249;&#xF147;&#xF15D;&#xF245;&#xF248;&#xF15D;&#xF246;&#xF154;&#xF24A;&#xF153;&#xF246;&#xF145;&#xF15C;&#xF249;&#xF147;&#xF15D;&#xF245;&#xF246;&#xF145;&#xF15D;&#xF249;&#xF147;&#xF15D;&#xF245;&#xF246;&#xF145;&#xF15A;&#xF24A;&#xF147;&#xF15C;&#xF249;&#xF147;&#xF15E;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1299
  },
  {
    "role": "code",
    "lines": [
      "= 99 | cond 99;"
    ],
    "preprocessed": "= 99 | cond 99;",
    "code": "211321100011312321101100032110001132233",
    "parse": [
      "=",
      "99",
      [
        -1,
        "cond",
        "99"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF167;&#xF248;&#xF147;&#xF15C;&#xF24A;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1300
  },
  {
    "role": "code",
    "lines": [
      "= 8 | cond ($true 8) 11;"
    ],
    "preprocessed": "= 8 | cond ($true 8) 11;",
    "code": "21132100031232110110003202321321000332101132233",
    "parse": [
      "=",
      "8",
      [
        -1,
        "cond",
        [
          [
            -2,
            "true"
          ],
          "8"
        ],
        "11"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14C;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF249;&#xF145;&#xF24A;&#xF14C;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1301
  },
  {
    "role": "code",
    "lines": [
      "= 11 | cond ($false 8) 11;"
    ],
    "preprocessed": "= 11 | cond ($false 8) 11;",
    "code": "21132101131232110110003202320321000332101132233",
    "parse": [
      "=",
      "11",
      [
        -1,
        "cond",
        [
          [
            -2,
            "false"
          ],
          "8"
        ],
        "11"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF249;&#xF144;&#xF24A;&#xF14C;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1302
  },
  {
    "role": "code",
    "lines": [
      "= 7 | cond ($false 3) ($true 7) 11;"
    ],
    "preprocessed": "= 7 | cond ($false 3) ($true 7) 11;",
    "code": "211321113123211011000320232032113320232132111332101132233",
    "parse": [
      "=",
      "7",
      [
        -1,
        "cond",
        [
          [
            -2,
            "false"
          ],
          "3"
        ],
        [
          [
            -2,
            "true"
          ],
          "7"
        ],
        "11"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14B;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF249;&#xF144;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF249;&#xF145;&#xF24A;&#xF14B;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1303
  },
  {
    "role": "code",
    "lines": [
      "= 3 | cond ($true 3) ($true 7) 11;"
    ],
    "preprocessed": "= 3 | cond ($true 3) ($true 7) 11;",
    "code": "21132113123211011000320232132113320232132111332101132233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "cond",
        [
          [
            -2,
            "true"
          ],
          "3"
        ],
        [
          [
            -2,
            "true"
          ],
          "7"
        ],
        "11"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF249;&#xF145;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF249;&#xF145;&#xF24A;&#xF14B;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1304
  },
  {
    "role": "code",
    "lines": [
      "= 11 | cond ($false 3) ($false 7) 11;"
    ],
    "preprocessed": "= 11 | cond ($false 3) ($false 7) 11;",
    "code": "2113210113123211011000320232032113320232032111332101132233",
    "parse": [
      "=",
      "11",
      [
        -1,
        "cond",
        [
          [
            -2,
            "false"
          ],
          "3"
        ],
        [
          [
            -2,
            "false"
          ],
          "7"
        ],
        "11"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF249;&#xF144;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF249;&#xF144;&#xF24A;&#xF14B;&#xF245;&#xF14F;&#xF24B;",
    "dt": false,
    "stanza": 1305
  },
  {
    "role": "code",
    "lines": [
      "define remove-match | lambda (test lst) |",
      "  if (= 0 | list-length $lst) $lst |",
      "  if (test | head $lst) (remove-match $test (tail $lst)) |",
      "  prepend (head $lst) (remove-match $test (tail $lst));"
    ],
    "preprocessed": "define remove-match | lambda (test lst) |\n  if (= 0 | list-length $lst) $lst |\n  if (test | head $lst) (remove-match $test (tail $lst)) |\n  prepend (head $lst) (remove-match $test (tail $lst));",
    "code": "2110132110110113123211010322110011032110010033123211113221132031232101001130232110010033023211001003123211113221100110312321010000302321100100332211011011302321100110322101001030232110010033312321010110322101000030232110010033221101101130232110011032210100103023211001003332233",
    "parse": [
      "define",
      "remove-match",
      [
        -1,
        "lambda",
        [
          "test",
          "lst"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst"
              ]
            ]
          ],
          [
            -2,
            "lst"
          ],
          [
            -1,
            "if",
            [
              "test",
              [
                -1,
                "head",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "remove-match",
              [
                -2,
                "test"
              ],
              [
                "tail",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              -1,
              "prepend",
              [
                "head",
                [
                  -2,
                  "lst"
                ]
              ],
              [
                "remove-match",
                [
                  -2,
                  "test"
                ],
                [
                  "tail",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF15F;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF16A;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF145;&#xF168;&#xF248;&#xF153;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF147;&#xF15F;&#xF249;&#xF145;&#xF16A;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF147;&#xF15F;&#xF249;&#xF145;&#xF16A;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1306
  },
  {
    "role": "code",
    "lines": [
      "define remove-element | ? x |",
      "  remove-match (? y | = $y $x);"
    ],
    "preprocessed": "define remove-element | ? x |\n  remove-match (? y | = $y $x);",
    "code": "21101321101110031232110032101001312321101101132211003211110131232113023211110130232101001332233",
    "parse": [
      "define",
      "remove-element",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "remove-match",
          [
            "?",
            "y",
            [
              -1,
              "=",
              [
                -2,
                "y"
              ],
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15F;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF147;&#xF249;&#xF181;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1307
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3 5) | remove-element 4 | vector 1 2 3 4 5;"
    ],
    "preprocessed": "list= (vector 1 2 3 5) | remove-element 4 | vector 1 2 3 4 5;",
    "code": "210101013221000032132103211321013312321101110032100312321000032132103211321003210132233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3",
        "5"
      ],
      [
        -1,
        "remove-element",
        "4",
        [
          -1,
          "vector",
          "1",
          "2",
          "3",
          "4",
          "5"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF147;&#xF160;&#xF24A;&#xF148;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1308
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3 5) | remove-element 4 | vector 1 4 2 4 3 4 5;"
    ],
    "preprocessed": "list= (vector 1 2 3 5) | remove-element 4 | vector 1 4 2 4 3 4 5;",
    "code": "2101010132210000321321032113210133123211011100321003123210000321321003210321003211321003210132233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3",
        "5"
      ],
      [
        -1,
        "remove-element",
        "4",
        [
          -1,
          "vector",
          "1",
          "4",
          "2",
          "4",
          "3",
          "4",
          "5"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF147;&#xF160;&#xF24A;&#xF148;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1309
  },
  {
    "role": "code",
    "lines": [
      "intro instanceof;"
    ],
    "preprocessed": "intro instanceof;",
    "code": "210010321101110132233",
    "parse": [
      "intro",
      "instanceof"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 1310
  },
  {
    "role": "code",
    "lines": [
      "define instanceof | ? T | ? t |",
      "  if (not | function? $t) (= $T int) |",
      "  function? | (objectify $t) $T;"
    ],
    "preprocessed": "define instanceof | ? T | ? t |\n  if (not | function? $t) (= $T int) |\n  function? | (objectify $t) $T;",
    "code": "21101321101110131232110032110111103123211003211011111312321111322101312321011003023211011111332211302321101111032110100103312321011003123221101001130232110111113302321101111032233",
    "parse": [
      "define",
      "instanceof",
      [
        -1,
        "?",
        "T",
        [
          -1,
          "?",
          "t",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "t"
                ]
              ]
            ],
            [
              "=",
              [
                -2,
                "T"
              ],
              "int"
            ],
            [
              -1,
              "function?",
              [
                -1,
                [
                  "objectify",
                  [
                    -2,
                    "t"
                  ]
                ],
                [
                  -2,
                  "T"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF161;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF163;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF147;&#xF163;&#xF245;&#xF246;&#xF147;&#xF249;&#xF147;&#xF162;&#xF24A;&#xF147;&#xF156;&#xF245;&#xF248;&#xF170;&#xF248;&#xF246;&#xF147;&#xF157;&#xF249;&#xF147;&#xF163;&#xF245;&#xF249;&#xF147;&#xF162;&#xF24B;",
    "dt": true,
    "stanza": 1311
  },
  {
    "role": "code",
    "lines": [
      "define return | ? T | ? t |",
      "  let ((obj | objectify $t)) |",
      "    obj $T;"
    ],
    "preprocessed": "define return | ? T | ? t |\n  let ((obj | objectify $t)) |\n    obj $T;",
    "code": "21101321110000031232110032110111103123211003211011111312321000001032221110000131232110100113023211011111333123211100001302321101111032233",
    "parse": [
      "define",
      "return",
      [
        -1,
        "?",
        "T",
        [
          -1,
          "?",
          "t",
          [
            -1,
            "let",
            [
              [
                "obj",
                [
                  -1,
                  "objectify",
                  [
                    -2,
                    "t"
                  ]
                ]
              ]
            ],
            [
              -1,
              "obj",
              [
                -2,
                "T"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF164;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF162;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF163;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF147;&#xF165;&#xF248;&#xF147;&#xF157;&#xF249;&#xF147;&#xF163;&#xF245;&#xF245;&#xF248;&#xF147;&#xF165;&#xF249;&#xF147;&#xF162;&#xF24B;",
    "dt": true,
    "stanza": 1312
  },
  {
    "role": "code",
    "lines": [
      "define tester | lambda ((x int) (y int)) |",
      "  return int | + $x $y;"
    ],
    "preprocessed": "define tester | lambda ((x int) (y int)) |\n  return int | + $x $y;",
    "code": "211013211100010312321101032221010013211010010332211110132110100103331232111000003211010010312321010302321010013023211110132233",
    "parse": [
      "define",
      "tester",
      [
        -1,
        "lambda",
        [
          [
            "x",
            "int"
          ],
          [
            "y",
            "int"
          ]
        ],
        [
          -1,
          "return",
          "int",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF166;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF16D;&#xF24A;&#xF147;&#xF156;&#xF245;&#xF246;&#xF181;&#xF24A;&#xF147;&#xF156;&#xF245;&#xF245;&#xF248;&#xF147;&#xF164;&#xF24A;&#xF147;&#xF156;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1313
  },
  {
    "role": "code",
    "lines": [
      "instanceof int 10;"
    ],
    "preprocessed": "instanceof int 10;",
    "code": "211011101321101001032101032233",
    "parse": [
      "instanceof",
      "int",
      "10"
    ],
    "spider": "&#xF147;&#xF161;&#xF24A;&#xF147;&#xF156;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1314
  },
  {
    "role": "code",
    "lines": [
      "= 42 | tester (make-integer 10) (make-integer 32);"
    ],
    "preprocessed": "= 42 | tester (make-integer 10) (make-integer 32);",
    "code": "2113210101031232111000103221101000132101033221101000132100000332233",
    "parse": [
      "=",
      "42",
      [
        -1,
        "tester",
        [
          "make-integer",
          "10"
        ],
        [
          "make-integer",
          "32"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16E;&#xF248;&#xF147;&#xF166;&#xF246;&#xF147;&#xF155;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF147;&#xF155;&#xF24A;&#xF164;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1315
  },
  {
    "role": "code",
    "lines": [
      "= 42 | tester 10 32;"
    ],
    "preprocessed": "= 42 | tester 10 32;",
    "code": "2113210101031232111000103210103210000032233",
    "parse": [
      "=",
      "42",
      [
        -1,
        "tester",
        "10",
        "32"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16E;&#xF248;&#xF147;&#xF166;&#xF24A;&#xF14E;&#xF24A;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1316
  },
  {
    "role": "code",
    "lines": [
      "intro reflective;"
    ],
    "preprocessed": "intro reflective;",
    "code": "210010321110001132233",
    "parse": [
      "intro",
      "reflective"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1317
  },
  {
    "role": "code",
    "lines": [
      "define reflective | ? f |",
      "  (? x | f | ? y | (x $x) $y)",
      "  (? x | f | ? y | (x $x) $y);"
    ],
    "preprocessed": "define reflective | ? f |\n  (? x | f | ? y | (x $x) $y)\n  (? x | f | ? y | (x $x) $y);",
    "code": "211013211100011312321100321110010031232211003210100131232111001003123211003211110131232210100130232101001330232111101332211003210100131232111001003123211003211110131232210100130232101001330232111101332233",
    "parse": [
      "define",
      "reflective",
      [
        -1,
        "?",
        "f",
        [
          -1,
          [
            "?",
            "x",
            [
              -1,
              "f",
              [
                -1,
                "?",
                "y",
                [
                  -1,
                  [
                    "x",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ]
          ],
          [
            "?",
            "x",
            [
              -1,
              "f",
              [
                -1,
                "?",
                "y",
                [
                  -1,
                  [
                    "x",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF167;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF168;&#xF248;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF168;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF246;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF181;&#xF245;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF168;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF246;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF181;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1318
  },
  {
    "role": "code",
    "lines": [
      "define woop | reflective | ? self | ? x | if (= $x 10) 22 (self 10);"
    ],
    "preprocessed": "define woop | reflective | ? self | ? x | if (= $x 10) 22 (self 10);",
    "code": "211013211100101312321110001131232110032111001103123211003210100131232111132211302321010013210103321011032211100110321010332233",
    "parse": [
      "define",
      "woop",
      [
        -1,
        "reflective",
        [
          -1,
          "?",
          "self",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "x"
                ],
                "10"
              ],
              "22",
              [
                "self",
                "10"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF169;&#xF248;&#xF147;&#xF167;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF16A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF15A;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14E;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1319
  },
  {
    "role": "code",
    "lines": [
      "= (woop 1) 22;"
    ],
    "preprocessed": "= (woop 1) 22;",
    "code": "211322111001013213321011032233",
    "parse": [
      "=",
      [
        "woop",
        "1"
      ],
      "22"
    ],
    "spider": "&#xF147;&#xF246;&#xF147;&#xF169;&#xF24A;&#xF145;&#xF245;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1320
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "message passing / object example - a 2D point",
    "section_category": "OBJECT",
    "section_index": 37,
    "stanza": 1321
  },
  {
    "role": "code",
    "lines": [
      "intro point;"
    ],
    "preprocessed": "intro point;",
    "code": "210010321110011132233",
    "parse": [
      "intro",
      "point"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF16B;&#xF24B;",
    "dt": false,
    "stanza": 1322
  },
  {
    "role": "code",
    "lines": [
      "define point | lambda (x y) | reflective |",
      "  lambda (self msg) | cond",
      "    ((= $msg x) $x)",
      "    ((= $msg y) $y)",
      "    ((= $msg point) $self)",
      "    ((= $msg +) | lambda ((p point)) |",
      "                    point (+ $x | p x) (+ $y | p y))",
      "    ((= $msg =) | lambda ((p point)) |",
      "                    and (= $x | p x) (= $y | p y))",
      "    0;"
    ],
    "preprocessed": "define point | lambda (x y) | reflective |\n  lambda (self msg) | cond\n    ((= $msg x) $x)\n    ((= $msg y) $y)\n    ((= $msg point) $self)\n    ((= $msg +) | lambda ((p point)) |\n                    point (+ $x | p x) (+ $y | p y))\n    ((= $msg =) | lambda ((p point)) |\n                    and (= $x | p x) (= $y | p y))\n    0;",
    "code": "21101321110011131232110103221010013211110133123211100011312321101032211100110321110100033123211011000322211302321110100032101001330232101001332221130232111010003211110133023211110133222113023211101000321110011133023211100110332221130232111010003210103312321101032221110100132111001113331232111001113221010302321010013123211101001321010013322101030232111101312321110100132111101333222113023211101000321133123211010322211101001321110011133312321103221130232101001312321110100132101001332211302321111013123211101001321111013332032233",
    "parse": [
      "define",
      "point",
      [
        -1,
        "lambda",
        [
          "x",
          "y"
        ],
        [
          -1,
          "reflective",
          [
            -1,
            "lambda",
            [
              "self",
              "msg"
            ],
            [
              -1,
              "cond",
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "x"
                ],
                [
                  -2,
                  "x"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "y"
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "point"
                ],
                [
                  -2,
                  "self"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "+"
                ],
                [
                  -1,
                  "lambda",
                  [
                    [
                      "p",
                      "point"
                    ]
                  ],
                  [
                    -1,
                    "point",
                    [
                      "+",
                      [
                        -2,
                        "x"
                      ],
                      [
                        -1,
                        "p",
                        "x"
                      ]
                    ],
                    [
                      "+",
                      [
                        -2,
                        "y"
                      ],
                      [
                        -1,
                        "p",
                        "y"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "="
                ],
                [
                  -1,
                  "lambda",
                  [
                    [
                      "p",
                      "point"
                    ]
                  ],
                  [
                    -1,
                    "and",
                    [
                      "=",
                      [
                        -2,
                        "x"
                      ],
                      [
                        -1,
                        "p",
                        "x"
                      ]
                    ],
                    [
                      "=",
                      [
                        -2,
                        "y"
                      ],
                      [
                        -1,
                        "p",
                        "y"
                      ]
                    ]
                  ]
                ]
              ],
              "0"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF16B;&#xF248;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF147;&#xF167;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF16C;&#xF245;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF181;&#xF245;&#xF249;&#xF181;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF16B;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF147;&#xF16D;&#xF24A;&#xF147;&#xF16B;&#xF245;&#xF245;&#xF248;&#xF147;&#xF16B;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF14E;&#xF249;&#xF181;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF147;&#xF16D;&#xF24A;&#xF147;&#xF16B;&#xF245;&#xF245;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF249;&#xF181;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF245;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1323
  },
  {
    "role": "code",
    "lines": [
      "define point1 | point 1 11;"
    ],
    "preprocessed": "define point1 | point 1 11;",
    "code": "211013211101010312321110011132132101132233",
    "parse": [
      "define",
      "point1",
      [
        -1,
        "point",
        "1",
        "11"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF16E;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF145;&#xF24A;&#xF14F;&#xF24B;",
    "dt": true,
    "stanza": 1324
  },
  {
    "role": "code",
    "lines": [
      "define point2 | point 2 22;"
    ],
    "preprocessed": "define point2 | point 2 22;",
    "code": "21101321110101131232111001113210321011032233",
    "parse": [
      "define",
      "point2",
      [
        -1,
        "point",
        "2",
        "22"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF16F;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF146;&#xF24A;&#xF15A;&#xF24B;",
    "dt": true,
    "stanza": 1325
  },
  {
    "role": "code",
    "lines": [
      "= 1 | point1 x;"
    ],
    "preprocessed": "= 1 | point1 x;",
    "code": "21132131232111010103210100132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "point1",
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF16E;&#xF24A;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1326
  },
  {
    "role": "code",
    "lines": [
      "= 22 | point2 y;"
    ],
    "preprocessed": "= 22 | point2 y;",
    "code": "211321011031232111010113211110132233",
    "parse": [
      "=",
      "22",
      [
        -1,
        "point2",
        "y"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15A;&#xF248;&#xF147;&#xF16F;&#xF24A;&#xF181;&#xF24B;",
    "dt": false,
    "stanza": 1327
  },
  {
    "role": "code",
    "lines": [
      "= 11 | (point 11 12) x;"
    ],
    "preprocessed": "= 11 | (point 11 12) x;",
    "code": "2113210113123221110011132101132110033210100132233",
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          "point",
          "11",
          "12"
        ],
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF14F;&#xF24A;&#xF150;&#xF245;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1328
  },
  {
    "role": "code",
    "lines": [
      "= 11 | ((point 11 12) point) x;"
    ],
    "preprocessed": "= 11 | ((point 11 12) point) x;",
    "code": "2113210113123222111001113210113211003321110011133210100132233",
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          [
            "point",
            "11",
            "12"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF246;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF14F;&#xF24A;&#xF150;&#xF245;&#xF147;&#xF16B;&#xF245;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1329
  },
  {
    "role": "code",
    "lines": [
      "= 16 | ((point 16 17) point) x;"
    ],
    "preprocessed": "= 16 | ((point 16 17) point) x;",
    "code": "2113210000312322211100111321000032100013321110011133210100132233",
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          [
            "point",
            "16",
            "17"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF246;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF245;&#xF147;&#xF16B;&#xF245;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1330
  },
  {
    "role": "code",
    "lines": [
      "= 33 | (point1 + $point2) y;"
    ],
    "preprocessed": "= 33 | (point1 + $point2) y;",
    "code": "2113210000131232211101010321010302321110101133211110132233",
    "parse": [
      "=",
      "33",
      [
        -1,
        [
          "point1",
          "+",
          [
            -2,
            "point2"
          ]
        ],
        "y"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF165;&#xF248;&#xF246;&#xF147;&#xF16E;&#xF24A;&#xF14E;&#xF249;&#xF147;&#xF16F;&#xF245;&#xF181;&#xF24B;",
    "dt": false,
    "stanza": 1331
  },
  {
    "role": "code",
    "lines": [
      "point1 + $point2 = | point 3 33;"
    ],
    "preprocessed": "point1 + $point2 = | point 3 33;",
    "code": "21110101032101030232111010113211312321110011132113210000132233",
    "parse": [
      "point1",
      "+",
      [
        -2,
        "point2"
      ],
      "=",
      [
        -1,
        "point",
        "3",
        "33"
      ]
    ],
    "spider": "&#xF147;&#xF16E;&#xF24A;&#xF14E;&#xF249;&#xF147;&#xF16F;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF24A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1332
  },
  {
    "role": "code",
    "lines": [
      "point2 + $point1 = | point 3 33;"
    ],
    "preprocessed": "point2 + $point1 = | point 3 33;",
    "code": "21110101132101030232111010103211312321110011132113210000132233",
    "parse": [
      "point2",
      "+",
      [
        -2,
        "point1"
      ],
      "=",
      [
        -1,
        "point",
        "3",
        "33"
      ]
    ],
    "spider": "&#xF147;&#xF16F;&#xF24A;&#xF14E;&#xF249;&#xF147;&#xF16E;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF24A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1333
  },
  {
    "role": "code",
    "lines": [
      "(point 100 200) + (point 200 100) = (point 300 300);"
    ],
    "preprocessed": "(point 100 200) + (point 200 100) = (point 300 300);",
    "code": "22111001113211001003211001000332101032211100111321100100032110010033211322111001113210010110032100101100332233",
    "parse": [
      [
        "point",
        "100",
        "200"
      ],
      "+",
      [
        "point",
        "200",
        "100"
      ],
      "=",
      [
        "point",
        "300",
        "300"
      ]
    ],
    "spider": "&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF145;&#xF168;&#xF24A;&#xF147;&#xF14C;&#xF245;&#xF14E;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF14C;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF147;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF170;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1334
  },
  {
    "role": "code",
    "lines": [
      "instanceof point $point1;"
    ],
    "preprocessed": "instanceof point $point1;",
    "code": "2110111013211100111302321110101032233",
    "parse": [
      "instanceof",
      "point",
      [
        -2,
        "point1"
      ]
    ],
    "spider": "&#xF147;&#xF161;&#xF24A;&#xF147;&#xF16B;&#xF249;&#xF147;&#xF16E;&#xF24B;",
    "dt": false,
    "stanza": 1335
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof int $point1;"
    ],
    "preprocessed": "not | instanceof int $point1;",
    "code": "210131232110111013211010010302321110101032233",
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "int",
        [
          -2,
          "point1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF161;&#xF24A;&#xF147;&#xF156;&#xF249;&#xF147;&#xF16E;&#xF24B;",
    "dt": false,
    "stanza": 1336
  },
  {
    "role": "code",
    "lines": [
      "instanceof int 5;"
    ],
    "preprocessed": "instanceof int 5;",
    "code": "21101110132110100103210132233",
    "parse": [
      "instanceof",
      "int",
      "5"
    ],
    "spider": "&#xF147;&#xF161;&#xF24A;&#xF147;&#xF156;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1337
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof point 5;"
    ],
    "preprocessed": "not | instanceof point 5;",
    "code": "2101312321101110132111001113210132233",
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "point",
        "5"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF161;&#xF24A;&#xF147;&#xF16B;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1338
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "message passing / object example - a container",
    "section_category": "OBJECT",
    "section_index": 38,
    "stanza": 1339
  },
  {
    "role": "code",
    "lines": [
      "intro container;"
    ],
    "preprocessed": "intro container;",
    "code": "210010321110110032233",
    "parse": [
      "intro",
      "container"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF170;&#xF24B;",
    "dt": false,
    "stanza": 1340
  },
  {
    "role": "code",
    "lines": [
      "define container | ? x | assign contents (make-cell | vector) | reflective |",
      "  lambda (self msg) | cond",
      "    ((= $msg container) $self)",
      "    ((= $msg inventory) | get! $contents)",
      "    ((= $msg add) | ? x | if (element $x | get! $contents) $false | ",
      "                         set! $contents | prepend $x | get! $contents)",
      "    ((= $msg remove) | ? x | set! $contents | remove-element $x | get! $contents)",
      "    ((= $msg =) | lambda ((c container)) | set:= (self inventory) (c inventory))",
      "    0;"
    ],
    "preprocessed": "define container | ? x | assign contents (make-cell | vector) | reflective |\n  lambda (self msg) | cond\n    ((= $msg container) $self)\n    ((= $msg inventory) | get! $contents)\n    ((= $msg add) | ? x | if (element $x | get! $contents) $false | \n                         set! $contents | prepend $x | get! $contents)\n    ((= $msg remove) | ? x | set! $contents | remove-element $x | get! $contents)\n    ((= $msg =) | lambda ((c container)) | set:= (self inventory) (c inventory))\n    0;",
    "code
    "parse": [
      "define",
      "container",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "assign",
          "contents",
          [
            "make-cell",
            [
              -1,
              "vector"
            ]
          ],
          [
            -1,
            "reflective",
            [
              -1,
              "lambda",
              [
                "self",
                "msg"
              ],
              [
                -1,
                "cond",
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "container"
                  ],
                  [
                    -2,
                    "self"
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "inventory"
                  ],
                  [
                    -1,
                    "get!",
                    [
                      -2,
                      "contents"
                    ]
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "add"
                  ],
                  [
                    -1,
                    "?",
                    "x",
                    [
                      -1,
                      "if",
                      [
                        "element",
                        [
                          -2,
                          "x"
                        ],
                        [
                          -1,
                          "get!",
                          [
                            -2,
                            "contents"
                          ]
                        ]
                      ],
                      [
                        -2,
                        "false"
                      ],
                      [
                        -1,
                        "set!",
                        [
                          -2,
                          "contents"
                        ],
                        [
                          -1,
                          "prepend",
                          [
                            -2,
                            "x"
                          ],
                          [
                            -1,
                            "get!",
                            [
                              -2,
                              "contents"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "remove"
                  ],
                  [
                    -1,
                    "?",
                    "x",
                    [
                      -1,
                      "set!",
                      [
                        -2,
                        "contents"
                      ],
                      [
                        -1,
                        "remove-element",
                        [
                          -2,
                          "x"
                        ],
                        [
                          -1,
                          "get!",
                          [
                            -2,
                            "contents"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "="
                  ],
                  [
                    -1,
                    "lambda",
                    [
                      [
                        "c",
                        "container"
                      ]
                    ],
                    [
                      -1,
                      "set:=",
                      [
                        "self",
                        "inventory"
                      ],
                      [
                        "c",
                        "inventory"
                      ]
                    ]
                  ]
                ],
                "0"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF170;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF147;&#xF171;&#xF246;&#xF15F;&#xF248;&#xF154;&#xF245;&#xF248;&#xF147;&#xF167;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF16C;&#xF245;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF170;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF248;&#xF161;&#xF249;&#xF147;&#xF171;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF173;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF146;&#xF15F;&#xF249;&#xF16D;&#xF248;&#xF161;&#xF249;&#xF147;&#xF171;&#xF245;&#xF249;&#xF144;&#xF248;&#xF160;&#xF249;&#xF147;&#xF171;&#xF248;&#xF145;&#xF15A;&#xF249;&#xF16D;&#xF248;&#xF161;&#xF249;&#xF147;&#xF171;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF174;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF160;&#xF249;&#xF147;&#xF171;&#xF248;&#xF147;&#xF160;&#xF249;&#xF16D;&#xF248;&#xF161;&#xF249;&#xF147;&#xF171;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF145;&#xF145;&#xF24A;&#xF147;&#xF170;&#xF245;&#xF245;&#xF248;&#xF146;&#xF162;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF246;&#xF145;&#xF145;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF245;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1341
  },
  {
    "role": "code",
    "lines": [
      "define pocket | container new;"
    ],
    "preprocessed": "define pocket | container new;",
    "code": "2110132111100013123211101100321111001032233",
    "parse": [
      "define",
      "pocket",
      [
        -1,
        "container",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF175;&#xF248;&#xF147;&#xF170;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1342
  },
  {
    "role": "code",
    "lines": [
      "pocket add 77;"
    ],
    "preprocessed": "pocket add 77;",
    "code": "211110001321110111132100110132233",
    "parse": [
      "pocket",
      "add",
      "77"
    ],
    "spider": "&#xF147;&#xF175;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1343
  },
  {
    "role": "code",
    "lines": [
      "pocket add 88;"
    ],
    "preprocessed": "pocket add 88;",
    "code": "211110001321110111132101100032233",
    "parse": [
      "pocket",
      "add",
      "88"
    ],
    "spider": "&#xF147;&#xF175;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 1344
  },
  {
    "role": "code",
    "lines": [
      "pocket add 99;"
    ],
    "preprocessed": "pocket add 99;",
    "code": "211110001321110111132110001132233",
    "parse": [
      "pocket",
      "add",
      "99"
    ],
    "spider": "&#xF147;&#xF175;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1345
  },
  {
    "role": "code",
    "lines": [
      "set:= (pocket inventory) | vector 77 88 99;"
    ],
    "preprocessed": "set:= (pocket inventory) | vector 77 88 99;",
    "code": "2100111103221111000132111011103312321000032100110132101100032110001132233",
    "parse": [
      "set:=",
      [
        "pocket",
        "inventory"
      ],
      [
        -1,
        "vector",
        "77",
        "88",
        "99"
      ]
    ],
    "spider": "&#xF146;&#xF162;&#xF246;&#xF147;&#xF175;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF151;&#xF24A;&#xF145;&#xF15C;&#xF24A;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1346
  },
  {
    "role": "code",
    "lines": [
      "pocket remove 88;"
    ],
    "preprocessed": "pocket remove 88;",
    "code": "211110001321111000032101100032233",
    "parse": [
      "pocket",
      "remove",
      "88"
    ],
    "spider": "&#xF147;&#xF175;&#xF24A;&#xF147;&#xF174;&#xF24A;&#xF145;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 1347
  },
  {
    "role": "code",
    "lines": [
      "set:= (pocket inventory) | vector 77 99;"
    ],
    "preprocessed": "set:= (pocket inventory) | vector 77 99;",
    "code": "2100111103221111000132111011103312321000032100110132110001132233",
    "parse": [
      "set:=",
      [
        "pocket",
        "inventory"
      ],
      [
        -1,
        "vector",
        "77",
        "99"
      ]
    ],
    "spider": "&#xF146;&#xF162;&#xF246;&#xF147;&#xF175;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF151;&#xF24A;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1348
  },
  {
    "role": "code",
    "lines": [
      "define pocket2 | container new;"
    ],
    "preprocessed": "define pocket2 | container new;",
    "code": "2110132111100113123211101100321111001032233",
    "parse": [
      "define",
      "pocket2",
      [
        -1,
        "container",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF177;&#xF248;&#xF147;&#xF170;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1349
  },
  {
    "role": "code",
    "lines": [
      "pocket2 add 77;"
    ],
    "preprocessed": "pocket2 add 77;",
    "code": "211110011321110111132100110132233",
    "parse": [
      "pocket2",
      "add",
      "77"
    ],
    "spider": "&#xF147;&#xF177;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1350
  },
  {
    "role": "code",
    "lines": [
      "pocket2 add 99;"
    ],
    "preprocessed": "pocket2 add 99;",
    "code": "211110011321110111132110001132233",
    "parse": [
      "pocket2",
      "add",
      "99"
    ],
    "spider": "&#xF147;&#xF177;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1351
  },
  {
    "role": "code",
    "lines": [
      "pocket2 = $pocket;"
    ],
    "preprocessed": "pocket2 = $pocket;",
    "code": "2111100113211302321111000132233",
    "parse": [
      "pocket2",
      "=",
      [
        -2,
        "pocket"
      ]
    ],
    "spider": "&#xF147;&#xF177;&#xF24A;&#xF147;&#xF249;&#xF147;&#xF175;&#xF24B;",
    "dt": false,
    "stanza": 1352
  },
  {
    "role": "doc",
    "lines": [
      "a sketch of inheritance - add one method to container (count)"
    ],
    "stanza": 1353
  },
  {
    "role": "code",
    "lines": [
      "define counter-container | ? x | assign super (container new) | reflective |",
      "  lambda (self msg) | cond",
      "    ((= $msg counter-container) $self)",
      "    ((= $msg count) | list-length | super inventory)",
      "    (super $msg);"
    ],
    "preprocessed": "define counter-container | ? x | assign super (container new) | reflective |\n  lambda (self msg) | cond\n    ((= $msg counter-container) $self)\n    ((= $msg count) | list-length | super inventory)\n    (super $msg);",
    "code": "2110132111101003123211003210100131232111032111101013221110110032111100103312321110001131232110103221110011032111010003312321101100032221130232111010003211110100330232111001103322211302321110100032111101103312321010011312321111010132111011103322111101013023211101000332233",
    "parse": [
      "define",
      "counter-container",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "assign",
          "super",
          [
            "container",
            "new"
          ],
          [
            -1,
            "reflective",
            [
              -1,
              "lambda",
              [
                "self",
                "msg"
              ],
              [
                -1,
                "cond",
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "counter-container"
                  ],
                  [
                    -2,
                    "self"
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "count"
                  ],
                  [
                    -1,
                    "list-length",
                    [
                      -1,
                      "super",
                      "inventory"
                    ]
                  ]
                ],
                [
                  "super",
                  [
                    -2,
                    "msg"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF178;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF147;&#xF179;&#xF246;&#xF147;&#xF170;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF248;&#xF147;&#xF167;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF16C;&#xF245;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF178;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF147;&#xF16C;&#xF24A;&#xF147;&#xF17A;&#xF245;&#xF248;&#xF145;&#xF157;&#xF248;&#xF147;&#xF179;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF246;&#xF147;&#xF179;&#xF249;&#xF147;&#xF16C;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1354
  },
  {
    "role": "code",
    "lines": [
      "define cc1 | counter-container new;"
    ],
    "preprocessed": "define cc1 | counter-container new;",
    "code": "2110132111101113123211110100321111001032233",
    "parse": [
      "define",
      "cc1",
      [
        -1,
        "counter-container",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF17B;&#xF248;&#xF147;&#xF178;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1355
  },
  {
    "role": "code",
    "lines": [
      "= 0 | cc1 count;"
    ],
    "preprocessed": "= 0 | cc1 count;",
    "code": "2113203123211110111321111011032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "cc1",
        "count"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF147;&#xF17B;&#xF24A;&#xF147;&#xF17A;&#xF24B;",
    "dt": false,
    "stanza": 1356
  },
  {
    "role": "code",
    "lines": [
      "cc1 add 4;"
    ],
    "preprocessed": "cc1 add 4;",
    "code": "21111011132111011113210032233",
    "parse": [
      "cc1",
      "add",
      "4"
    ],
    "spider": "&#xF147;&#xF17B;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1357
  },
  {
    "role": "code",
    "lines": [
      "= 1 | cc1 count;"
    ],
    "preprocessed": "= 1 | cc1 count;",
    "code": "2113213123211110111321111011032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "cc1",
        "count"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF17B;&#xF24A;&#xF147;&#xF17A;&#xF24B;",
    "dt": false,
    "stanza": 1358
  },
  {
    "role": "code",
    "lines": [
      "cc1 add 8;"
    ],
    "preprocessed": "cc1 add 8;",
    "code": "211110111321110111132100032233",
    "parse": [
      "cc1",
      "add",
      "8"
    ],
    "spider": "&#xF147;&#xF17B;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1359
  },
  {
    "role": "code",
    "lines": [
      "= 2 | cc1 count;"
    ],
    "preprocessed": "= 2 | cc1 count;",
    "code": "21132103123211110111321111011032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "cc1",
        "count"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF147;&#xF17B;&#xF24A;&#xF147;&#xF17A;&#xF24B;",
    "dt": false,
    "stanza": 1360
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "adding a special form for classes",
    "section_category": "OBJECT",
    "section_index": 39,
    "stanza": 1361
  },
  {
    "role": "code",
    "lines": [
      "intro list-append;"
    ],
    "preprocessed": "intro list-append;",
    "code": "210010321111100032233",
    "parse": [
      "intro",
      "list-append"
    ],
    "spider": "&#xF156;&#xF24A;&#xF147;&#xF17C;&#xF24B;",
    "dt": false,
    "stanza": 1362
  },
  {
    "role": "code",
    "lines": [
      "define list-append | lambda (lst1 lst2) |",
      "  if (= 0 | list-length $lst1) $lst2 |",
      "  list-append (except-last $lst1) | prepend (last | $lst1) $lst2;"
    ],
    "preprocessed": "define list-append | lambda (lst1 lst2) |\n  if (= 0 | list-length $lst1) $lst2 |\n  list-append (except-last $lst1) | prepend (last | $lst1) $lst2;",
    "code": "21101321111100031232110103221111100132111110103312321111322113203123210100113023211111001330232111110103123211111000322110000130232111110013312321010110322110000031230232111110013302321111101032233",
    "parse": [
      "define",
      "list-append",
      [
        -1,
        "lambda",
        [
          "lst1",
          "lst2"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst1"
              ]
            ]
          ],
          [
            -2,
            "lst2"
          ],
          [
            -1,
            "list-append",
            [
              "except-last",
              [
                -2,
                "lst1"
              ]
            ],
            [
              -1,
              "prepend",
              [
                "last",
                [
                  -1,
                  [
                    -2,
                    "lst1"
                  ]
                ]
              ],
              [
                -2,
                "lst2"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF17C;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF17D;&#xF24A;&#xF147;&#xF17E;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF249;&#xF147;&#xF17E;&#xF248;&#xF147;&#xF17C;&#xF246;&#xF145;&#xF165;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF164;&#xF248;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF249;&#xF147;&#xF17E;&#xF24B;",
    "dt": true,
    "stanza": 1363
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3 4 5 6) | list-append (vector 1 2 3) (vector 4 5 6);"
    ],
    "preprocessed": "list= (vector 1 2 3 4 5 6) | list-append (vector 1 2 3) (vector 4 5 6);",
    "code": "210101013221000032132103211321003210132110331232111110003221000032132103211332210000321003210132110332233",
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ],
      [
        -1,
        "list-append",
        [
          "vector",
          "1",
          "2",
          "3"
        ],
        [
          "vector",
          "4",
          "5",
          "6"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF147;&#xF17C;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1364
  },
  {
    "role": "code",
    "lines": [
      "define unique | assign store (make-cell 0) | ? x |",
      "  assign id (get! $store) |",
      "  begin (set! $store (+ $id 1)) $id;"
    ],
    "preprocessed": "define unique | assign store (make-cell 0) | ? x |\n  assign id (get! $store) |\n  begin (set! $store (+ $id 1)) $id;",
    "code": "2110132111110113123211103211111100322110113203312321100321010013123211103211111101322111013023211111100331232101011003221110030232111111003221010302321111110132133302321111110132233",
    "parse": [
      "define",
      "unique",
      [
        -1,
        "assign",
        "store",
        [
          "make-cell",
          "0"
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "assign",
            "id",
            [
              "get!",
              [
                -2,
                "store"
              ]
            ],
            [
              -1,
              "begin",
              [
                "set!",
                [
                  -2,
                  "store"
                ],
                [
                  "+",
                  [
                    -2,
                    "id"
                  ],
                  "1"
                ]
              ],
              [
                -2,
                "id"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF17F;&#xF248;&#xF152;&#xF24A;&#xF147;&#xF180;&#xF246;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF147;&#xF181;&#xF246;&#xF161;&#xF249;&#xF147;&#xF180;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF160;&#xF249;&#xF147;&#xF180;&#xF246;&#xF14E;&#xF249;&#xF147;&#xF181;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF249;&#xF147;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1365
  },
  {
    "role": "code",
    "lines": [
      "= 0 | unique new;"
    ],
    "preprocessed": "= 0 | unique new;",
    "code": "2113203123211111011321111001032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "unique",
        "new"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF147;&#xF17F;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1366
  },
  {
    "role": "code",
    "lines": [
      "= 1 | unique new;"
    ],
    "preprocessed": "= 1 | unique new;",
    "code": "2113213123211111011321111001032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "unique",
        "new"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF17F;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1367
  },
  {
    "role": "code",
    "lines": [
      "= 2 | unique new;"
    ],
    "preprocessed": "= 2 | unique new;",
    "code": "21132103123211111011321111001032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "unique",
        "new"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF147;&#xF17F;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1368
  },
  {
    "role": "code",
    "lines": [
      "not | = (unique new) (unique new);"
    ],
    "preprocessed": "not | = (unique new) (unique new);",
    "code": "210131232113221111101132111100103322111110113211110010332233",
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unique",
          "new"
        ],
        [
          "unique",
          "new"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF246;&#xF147;&#xF17F;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF147;&#xF17F;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1369
  },
  {
    "role": "code",
    "lines": [
      "define setup-this | lambda (this self) | if (function? $this) $this $self;"
    ],
    "preprocessed": "define setup-this | lambda (this self) | if (function? $this) $this $self;",
    "code": "21101321111111031232110103221000000003211100110331232111132210110030232100000000330232100000000302321110011032233",
    "parse": [
      "define",
      "setup-this",
      [
        -1,
        "lambda",
        [
          "this",
          "self"
        ],
        [
          -1,
          "if",
          [
            "function?",
            [
              -2,
              "this"
            ]
          ],
          [
            -2,
            "this"
          ],
          [
            -2,
            "self"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF182;&#xF248;&#xF15E;&#xF246;&#xF148;&#xF144;&#xF24A;&#xF147;&#xF16A;&#xF245;&#xF248;&#xF153;&#xF246;&#xF170;&#xF249;&#xF148;&#xF144;&#xF245;&#xF249;&#xF148;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF24B;",
    "dt": true,
    "stanza": 1370
  },
  {
    "role": "code",
    "lines": [
      "define standard-class-methods | ? name | quote @@ |",
      "  ((= $method self) $self)",
      "  ((= $method (@@ name)) (self self))",
      "  ((= $method classname) (@@ name))",
      "  ((= $method unknown) | ? x 0)",
      "  ((= $method new) 0)",
      "  ((= $method unique-id) $unique-id)",
      "  ((= $method ==) | ? x | = $unique-id | x unique-id)",
      "  (self unknown $method);"
    ],
    "preprocessed": "define standard-class-methods | ? name | quote @@ |\n  ((= $method self) $self)\n  ((= $method (@@ name)) (self self))\n  ((= $method classname) (@@ name))\n  ((= $method unknown) | ? x 0)\n  ((= $method new) 0)\n  ((= $method unique-id) $unique-id)\n  ((= $method ==) | ? x | = $unique-id | x unique-id)\n  (self unknown $method);",
    "code": "21101321000000013123211003210000001031232110100003210000001131232221130232100000100321110011033023211100110332221130232100000100322100000011321000000103332211100110321110011033322211302321000001003210000010133221000000113210000001033322211302321000001003210000011033123211003210100132033222113023210000010032111100103320332221130232100000100321000001113302321000001113322211302321000001003210000100033123211003210100131232113023210000011131232101001321000001113322111001103210000011030232100000100332233",
    "parse": [
      "define",
      "standard-class-methods",
      [
        -1,
        "?",
        "name",
        [
          -1,
          "quote",
          "@@",
          [
            -1,
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "self"
              ],
              [
                -2,
                "self"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                [
                  "@@",
                  "name"
                ]
              ],
              [
                "self",
                "self"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "classname"
              ],
              [
                "@@",
                "name"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "unknown"
              ],
              [
                -1,
                "?",
                "x",
                "0"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "new"
              ],
              "0"
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "unique-id"
              ],
              [
                -2,
                "unique-id"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "=="
              ],
              [
                -1,
                "?",
                "x",
                [
                  -1,
                  "=",
                  [
                    -2,
                    "unique-id"
                  ],
                  [
                    -1,
                    "x",
                    "unique-id"
                  ]
                ]
              ]
            ],
            [
              "self",
              "unknown",
              [
                -2,
                "method"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF145;&#xF248;&#xF150;&#xF24A;&#xF148;&#xF146;&#xF248;&#xF147;&#xF154;&#xF24A;&#xF148;&#xF147;&#xF248;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF16A;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF148;&#xF146;&#xF245;&#xF245;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF149;&#xF245;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF148;&#xF146;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14B;&#xF245;&#xF249;&#xF148;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14C;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF249;&#xF148;&#xF14B;&#xF248;&#xF16D;&#xF24A;&#xF148;&#xF14B;&#xF245;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF14A;&#xF249;&#xF148;&#xF148;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1371
  },
  {
    "role": "code",
    "lines": [
      "define custom-class-methods | lambda (name args fields) | list-append",
      "  (map (? x | quote @@ | (= $method | @@ first $x) (@@ second $x))",
      "       (map $tail | select-match (? x | = method | first $x) $fields))",
      "  (map (? x | quote @@ | (= $method | @@ x) ((@@ x)))",
      "       (map $second | select-match (? x | = field | first $x) $fields));"
    ],
    "preprocessed": "define custom-class-methods | lambda (name args fields) | list-append\n  (map (? x | quote @@ | (= $method | @@ first $x) (@@ second $x))\n       (map $tail | select-match (? x | = method | first $x) $fields))\n  (map (? x | quote @@ | (= $method | @@ x) ((@@ x)))\n       (map $second | select-match (? x | = field | first $x) $fields));",
    "code": "21101321000010013123211010322100000010321000010103210000101133123211111000322101101032211003210100131232110100003210000001131232211302321000001003123210000001132101100030232101001332210000001132101100130232101001333221011010302321010010312321100101322110032101001312321132100000100312321011000302321010013302321000010113332210110103221100321010013123211010000321000000113123221130232100000100312321000000113210100133222100000011321010013333221011010302321011001312321100101322110032101001312321132100001100312321011000302321010013302321000010113332233",
    "parse": [
      "define",
      "custom-class-methods",
      [
        -1,
        "lambda",
        [
          "name",
          "args",
          "fields"
        ],
        [
          -1,
          "list-append",
          [
            "map",
            [
              "?",
              "x",
              [
                -1,
                "quote",
                "@@",
                [
                  -1,
                  [
                    "=",
                    [
                      -2,
                      "method"
                    ],
                    [
                      -1,
                      "@@",
                      "first",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ],
                  [
                    "@@",
                    "second",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ]
            ],
            [
              "map",
              [
                -2,
                "tail"
              ],
              [
                -1,
                "select-match",
                [
                  "?",
                  "x",
                  [
                    -1,
                    "=",
                    "method",
                    [
                      -1,
                      "first",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "fields"
                ]
              ]
            ]
          ],
          [
            "map",
            [
              "?",
              "x",
              [
                -1,
                "quote",
                "@@",
                [
                  -1,
                  [
                    "=",
                    [
                      -2,
                      "method"
                    ],
                    [
                      -1,
                      "@@",
                      "x"
                    ]
                  ],
                  [
                    [
                      "@@",
                      "x"
                    ]
                  ]
                ]
              ]
            ],
            [
              "map",
              [
                -2,
                "second"
              ],
              [
                -1,
                "select-match",
                [
                  "?",
                  "x",
                  [
                    -1,
                    "=",
                    "field",
                    [
                      -1,
                      "first",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "fields"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF14D;&#xF248;&#xF15E;&#xF246;&#xF148;&#xF146;&#xF24A;&#xF148;&#xF14E;&#xF24A;&#xF148;&#xF14F;&#xF245;&#xF248;&#xF147;&#xF17C;&#xF246;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF154;&#xF24A;&#xF148;&#xF147;&#xF248;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF248;&#xF148;&#xF147;&#xF24A;&#xF145;&#xF15C;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF145;&#xF15D;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15E;&#xF249;&#xF145;&#xF156;&#xF248;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF148;&#xF248;&#xF145;&#xF15C;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF148;&#xF14F;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF154;&#xF24A;&#xF148;&#xF147;&#xF248;&#xF246;&#xF147;&#xF249;&#xF148;&#xF148;&#xF248;&#xF148;&#xF147;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF246;&#xF145;&#xF15E;&#xF249;&#xF145;&#xF15D;&#xF248;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF150;&#xF248;&#xF145;&#xF15C;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF148;&#xF14F;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1372
  },
  {
    "role": "code",
    "lines": [
      "define class-cond | lambda (name args fields) | prepend cond | list-append",
      "  (custom-class-methods $name $args $fields)",
      "  (standard-class-methods $name);"
    ],
    "preprocessed": "define class-cond | lambda (name args fields) | prepend cond | list-append\n  (custom-class-methods $name $args $fields)\n  (standard-class-methods $name);",
    "code": "211013210000110131232110103221000000103210000101032100001011331232101011032110110003123211111000322100001001302321000000103023210000101030232100001011332210000000130232100000010332233",
    "parse": [
      "define",
      "class-cond",
      [
        -1,
        "lambda",
        [
          "name",
          "args",
          "fields"
        ],
        [
          -1,
          "prepend",
          "cond",
          [
            -1,
            "list-append",
            [
              "custom-class-methods",
              [
                -2,
                "name"
              ],
              [
                -2,
                "args"
              ],
              [
                -2,
                "fields"
              ]
            ],
            [
              "standard-class-methods",
              [
                -2,
                "name"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF151;&#xF248;&#xF15E;&#xF246;&#xF148;&#xF146;&#xF24A;&#xF148;&#xF14E;&#xF24A;&#xF148;&#xF14F;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF24A;&#xF147;&#xF15C;&#xF248;&#xF147;&#xF17C;&#xF246;&#xF148;&#xF14D;&#xF249;&#xF148;&#xF146;&#xF249;&#xF148;&#xF14E;&#xF249;&#xF148;&#xF14F;&#xF245;&#xF246;&#xF148;&#xF145;&#xF249;&#xF148;&#xF146;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1373
  },
  {
    "role": "code",
    "lines": [
      "intro class;"
    ],
    "preprocessed": "intro class;",
    "code": "2100103210000111032233",
    "parse": [
      "intro",
      "class"
    ],
    "spider": "&#xF156;&#xF24A;&#xF148;&#xF152;&#xF24B;",
    "dt": true,
    "stanza": 1374
  },
  {
    "role": "code",
    "lines": [
      "define translate | assign prev $translate | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = class | head $x) (prev $x) |",
      "  let ((name | list-ref $x 1)",
      "       (args | list-ref $x 2)",
      "       (fields | tail | tail | tail $x)) |",
      "    translate | quote @@ |",
      "      define (@@ name) | lambda (@@ prepend ext-this $args) |",
      "        let (@@ append (vector unique-id | vector unique new)",
      "                       (map $tail | select-match (? x | = field | first $x) $fields)) |",
      "          let ((self | reflective | lambda (self) |",
      "            let ((this | setup-this $ext-this $self)) |",
      "              lambda (method) |",
      "                 @@ class-cond $name $args $fields)) |",
      "            begin (self new) $self;"
    ],
    "preprocessed": "define translate | assign prev $translate | ? x |\n  if (not | function? $x) (prev $x) |\n  if (not | = class | head $x) (prev $x) |\n  let ((name | list-ref $x 1)\n       (args | list-ref $x 2)\n       (fields | tail | tail | tail $x)) |\n    translate | quote @@ |\n      define (@@ name) | lambda (@@ prepend ext-this $args) |\n        let (@@ append (vector unique-id | vector unique new)\n                       (map $tail | select-match (? x | = field | first $x) $fields)) |\n          let ((self | reflective | lambda (self) |\n            let ((this | setup-this $ext-this $self)) |\n              lambda (method) |\n                 @@ class-cond $name $args $fields)) |\n            begin (self new) $self;",
    "code
    "parse": [
      "define",
      "translate",
      [
        -1,
        "assign",
        "prev",
        [
          -2,
          "translate"
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "class",
                  [
                    -1,
                    "head",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "name",
                    [
                      -1,
                      "list-ref",
                      [
                        -2,
                        "x"
                      ],
                      "1"
                    ]
                  ],
                  [
                    "args",
                    [
                      -1,
                      "list-ref",
                      [
                        -2,
                        "x"
                      ],
                      "2"
                    ]
                  ],
                  [
                    "fields",
                    [
                      -1,
                      "tail",
                      [
                        -1,
                        "tail",
                        [
                          -1,
                          "tail",
                          [
                            -2,
                            "x"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "translate",
                  [
                    -1,
                    "quote",
                    "@@",
                    [
                      -1,
                      "define",
                      [
                        "@@",
                        "name"
                      ],
                      [
                        -1,
                        "lambda",
                        [
                          "@@",
                          "prepend",
                          "ext-this",
                          [
                            -2,
                            "args"
                          ]
                        ],
                        [
                          -1,
                          "let",
                          [
                            "@@",
                            "append",
                            [
                              "vector",
                              "unique-id",
                              [
                                -1,
                                "vector",
                                "unique",
                                "new"
                              ]
                            ],
                            [
                              "map",
                              [
                                -2,
                                "tail"
                              ],
                              [
                                -1,
                                "select-match",
                                [
                                  "?",
                                  "x",
                                  [
                                    -1,
                                    "=",
                                    "field",
                                    [
                                      -1,
                                      "first",
                                      [
                                        -2,
                                        "x"
                                      ]
                                    ]
                                  ]
                                ],
                                [
                                  -2,
                                  "fields"
                                ]
                              ]
                            ]
                          ],
                          [
                            -1,
                            "let",
                            [
                              [
                                "self",
                                [
                                  -1,
                                  "reflective",
                                  [
                                    -1,
                                    "lambda",
                                    [
                                      "self"
                                    ],
                                    [
                                      -1,
                                      "let",
                                      [
                                        [
                                          "this",
                                          [
                                            -1,
                                            "setup-this",
                                            [
                                              -2,
                                              "ext-this"
                                            ],
                                            [
                                              -2,
                                              "self"
                                            ]
                                          ]
                                        ]
                                      ],
                                      [
                                        -1,
                                        "lambda",
                                        [
                                          "method"
                                        ],
                                        [
                                          -1,
                                          "@@",
                                          "class-cond",
                                          [
                                            -2,
                                            "name"
                                          ],
                                          [
                                            -2,
                                            "args"
                                          ],
                                          [
                                            -2,
                                            "fields"
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ],
                            [
                              -1,
                              "begin",
                              [
                                "self",
                                "new"
                              ],
                              [
                                -2,
                                "self"
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF15D;&#xF248;&#xF152;&#xF24A;&#xF146;&#xF172;&#xF249;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF152;&#xF248;&#xF145;&#xF154;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF146;&#xF172;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF148;&#xF146;&#xF248;&#xF145;&#xF158;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF14E;&#xF248;&#xF145;&#xF158;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF148;&#xF14F;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF248;&#xF145;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF245;&#xF248;&#xF15D;&#xF248;&#xF147;&#xF154;&#xF24A;&#xF148;&#xF147;&#xF248;&#xF151;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF148;&#xF146;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF145;&#xF15A;&#xF24A;&#xF148;&#xF153;&#xF249;&#xF148;&#xF14E;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF148;&#xF147;&#xF24A;&#xF145;&#xF167;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF14B;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF17F;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF145;&#xF15E;&#xF249;&#xF145;&#xF156;&#xF248;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF24A;&#xF148;&#xF150;&#xF248;&#xF145;&#xF15C;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF148;&#xF14F;&#xF245;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF147;&#xF16A;&#xF248;&#xF147;&#xF167;&#xF248;&#xF15E;&#xF246;&#xF147;&#xF16A;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF148;&#xF144;&#xF248;&#xF147;&#xF182;&#xF249;&#xF148;&#xF153;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF148;&#xF148;&#xF245;&#xF248;&#xF148;&#xF147;&#xF24A;&#xF148;&#xF151;&#xF249;&#xF148;&#xF146;&#xF249;&#xF148;&#xF14E;&#xF249;&#xF148;&#xF14F;&#xF245;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF24B;",
    "dt": true,
    "stanza": 1375
  },
  {
    "role": "code",
    "lines": [
      "class point (x y)",
      "  (method x $x)",
      "  (method y $y)",
      "  (method + | lambda ((p point)) | point new (+ $x | p x) (+ $y | p y))",
      "  (method = | lambda ((p point)) | and (= $x | p x) (= $y | p y));"
    ],
    "preprocessed": "class point (x y)\n  (method x $x)\n  (method y $y)\n  (method + | lambda ((p point)) | point new (+ $x | p x) (+ $y | p y))\n  (method = | lambda ((p point)) | and (= $x | p x) (= $y | p y));",
    "code": "21000011103211100111322101001321111013322100000100321010013023210100133221000001003211110130232111101332210000010032101031232110103222111010013211100111333123211100111321111001032210103023210100131232111010013210100133221010302321111013123211101001321111013332210000010032113123211010322211101001321110011133312321103221130232101001312321110100132101001332211302321111013123211101001321111013332233",
    "parse": [
      "class",
      "point",
      [
        "x",
        "y"
      ],
      [
        "method",
        "x",
        [
          -2,
          "x"
        ]
      ],
      [
        "method",
        "y",
        [
          -2,
          "y"
        ]
      ],
      [
        "method",
        "+",
        [
          -1,
          "lambda",
          [
            [
              "p",
              "point"
            ]
          ],
          [
            -1,
            "point",
            "new",
            [
              "+",
              [
                -2,
                "x"
              ],
              [
                -1,
                "p",
                "x"
              ]
            ],
            [
              "+",
              [
                -2,
                "y"
              ],
              [
                -1,
                "p",
                "y"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "=",
        [
          -1,
          "lambda",
          [
            [
              "p",
              "point"
            ]
          ],
          [
            -1,
            "and",
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -1,
                "p",
                "x"
              ]
            ],
            [
              "=",
              [
                -2,
                "y"
              ],
              [
                -1,
                "p",
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF147;&#xF16B;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF181;&#xF249;&#xF181;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF147;&#xF16D;&#xF24A;&#xF147;&#xF16B;&#xF245;&#xF245;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF14E;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF14E;&#xF249;&#xF181;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF147;&#xF16D;&#xF24A;&#xF147;&#xF16B;&#xF245;&#xF245;&#xF248;&#xF14A;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF249;&#xF181;&#xF248;&#xF147;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1376
  },
  {
    "role": "code",
    "lines": [
      "define point1 | point new 1 11;"
    ],
    "preprocessed": "define point1 | point new 1 11;",
    "code": "2110132111010103123211100111321111001032132101132233",
    "parse": [
      "define",
      "point1",
      [
        -1,
        "point",
        "new",
        "1",
        "11"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF16E;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF145;&#xF24A;&#xF14F;&#xF24B;",
    "dt": true,
    "stanza": 1377
  },
  {
    "role": "code",
    "lines": [
      "define point2 | point new 2 22;"
    ],
    "preprocessed": "define point2 | point new 2 22;",
    "code": "211013211101011312321110011132111100103210321011032233",
    "parse": [
      "define",
      "point2",
      [
        -1,
        "point",
        "new",
        "2",
        "22"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF16F;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF146;&#xF24A;&#xF15A;&#xF24B;",
    "dt": true,
    "stanza": 1378
  },
  {
    "role": "code",
    "lines": [
      "= 1 | point1 x;"
    ],
    "preprocessed": "= 1 | point1 x;",
    "code": "21132131232111010103210100132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "point1",
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF147;&#xF16E;&#xF24A;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1379
  },
  {
    "role": "code",
    "lines": [
      "= 22 | point2 y;"
    ],
    "preprocessed": "= 22 | point2 y;",
    "code": "211321011031232111010113211110132233",
    "parse": [
      "=",
      "22",
      [
        -1,
        "point2",
        "y"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF15A;&#xF248;&#xF147;&#xF16F;&#xF24A;&#xF181;&#xF24B;",
    "dt": false,
    "stanza": 1380
  },
  {
    "role": "code",
    "lines": [
      "= 11 | (point new 11 12) x;"
    ],
    "preprocessed": "= 11 | (point new 11 12) x;",
    "code": "21132101131232211100111321111001032101132110033210100132233",
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          "point",
          "new",
          "11",
          "12"
        ],
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14F;&#xF24A;&#xF150;&#xF245;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1381
  },
  {
    "role": "code",
    "lines": [
      "= 11 | ((point new 11 12) point) x;"
    ],
    "preprocessed": "= 11 | ((point new 11 12) point) x;",
    "code": "21132101131232221110011132111100103210113211003321110011133210100132233",
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          [
            "point",
            "new",
            "11",
            "12"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14F;&#xF248;&#xF246;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14F;&#xF24A;&#xF150;&#xF245;&#xF147;&#xF16B;&#xF245;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1382
  },
  {
    "role": "code",
    "lines": [
      "= 16 | ((point new 16 17) point) x;"
    ],
    "preprocessed": "= 16 | ((point new 16 17) point) x;",
    "code": "21132100003123222111001113211110010321000032100013321110011133210100132233",
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          [
            "point",
            "new",
            "16",
            "17"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF154;&#xF248;&#xF246;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF245;&#xF147;&#xF16B;&#xF245;&#xF16D;&#xF24B;",
    "dt": false,
    "stanza": 1383
  },
  {
    "role": "code",
    "lines": [
      "= 33 | (point1 + $point2) y;"
    ],
    "preprocessed": "= 33 | (point1 + $point2) y;",
    "code": "2113210000131232211101010321010302321110101133211110132233",
    "parse": [
      "=",
      "33",
      [
        -1,
        [
          "point1",
          "+",
          [
            -2,
            "point2"
          ]
        ],
        "y"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF165;&#xF248;&#xF246;&#xF147;&#xF16E;&#xF24A;&#xF14E;&#xF249;&#xF147;&#xF16F;&#xF245;&#xF181;&#xF24B;",
    "dt": false,
    "stanza": 1384
  },
  {
    "role": "code",
    "lines": [
      "point1 + $point2 = | point new 3 33;"
    ],
    "preprocessed": "point1 + $point2 = | point new 3 33;",
    "code": "211101010321010302321110101132113123211100111321111001032113210000132233",
    "parse": [
      "point1",
      "+",
      [
        -2,
        "point2"
      ],
      "=",
      [
        -1,
        "point",
        "new",
        "3",
        "33"
      ]
    ],
    "spider": "&#xF147;&#xF16E;&#xF24A;&#xF14E;&#xF249;&#xF147;&#xF16F;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF147;&#xF24A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1385
  },
  {
    "role": "code",
    "lines": [
      "point2 + $point1 = | point new 3 33;"
    ],
    "preprocessed": "point2 + $point1 = | point new 3 33;",
    "code": "211101011321010302321110101032113123211100111321111001032113210000132233",
    "parse": [
      "point2",
      "+",
      [
        -2,
        "point1"
      ],
      "=",
      [
        -1,
        "point",
        "new",
        "3",
        "33"
      ]
    ],
    "spider": "&#xF147;&#xF16F;&#xF24A;&#xF14E;&#xF249;&#xF147;&#xF16E;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF147;&#xF24A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1386
  },
  {
    "role": "code",
    "lines": [
      "(point new 100 200) + (point new 200 100) = (point new 300 300);"
    ],
    "preprocessed": "(point new 100 200) + (point new 200 100) = (point new 300 300);",
    "code": "22111001113211110010321100100321100100033210103221110011132111100103211001000321100100332113221110011132111100103210010110032100101100332233",
    "parse": [
      [
        "point",
        "new",
        "100",
        "200"
      ],
      "+",
      [
        "point",
        "new",
        "200",
        "100"
      ],
      "=",
      [
        "point",
        "new",
        "300",
        "300"
      ]
    ],
    "spider": "&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF145;&#xF168;&#xF24A;&#xF147;&#xF14C;&#xF245;&#xF14E;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF147;&#xF14C;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF147;&#xF246;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF170;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1387
  },
  {
    "role": "code",
    "lines": [
      "instanceof point $point1;"
    ],
    "preprocessed": "instanceof point $point1;",
    "code": "2110111013211100111302321110101032233",
    "parse": [
      "instanceof",
      "point",
      [
        -2,
        "point1"
      ]
    ],
    "spider": "&#xF147;&#xF161;&#xF24A;&#xF147;&#xF16B;&#xF249;&#xF147;&#xF16E;&#xF24B;",
    "dt": false,
    "stanza": 1388
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof int $point1;"
    ],
    "preprocessed": "not | instanceof int $point1;",
    "code": "210131232110111013211010010302321110101032233",
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "int",
        [
          -2,
          "point1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF161;&#xF24A;&#xF147;&#xF156;&#xF249;&#xF147;&#xF16E;&#xF24B;",
    "dt": false,
    "stanza": 1389
  },
  {
    "role": "code",
    "lines": [
      "instanceof int 5;"
    ],
    "preprocessed": "instanceof int 5;",
    "code": "21101110132110100103210132233",
    "parse": [
      "instanceof",
      "int",
      "5"
    ],
    "spider": "&#xF147;&#xF161;&#xF24A;&#xF147;&#xF156;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1390
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof point 5;"
    ],
    "preprocessed": "not | instanceof point 5;",
    "code": "2101312321101110132111001113210132233",
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "point",
        "5"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF147;&#xF161;&#xF24A;&#xF147;&#xF16B;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1391
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "wrapper class for cells",
    "section_category": "OBJECT",
    "section_index": 40,
    "stanza": 1392
  },
  {
    "role": "code",
    "lines": [
      "intro cell;"
    ],
    "preprocessed": "intro cell;",
    "code": "2100103210001000032233",
    "parse": [
      "intro",
      "cell"
    ],
    "spider": "&#xF156;&#xF24A;&#xF148;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 1393
  },
  {
    "role": "code",
    "lines": [
      "class cell (initial-value)",
      "  (field content | make-cell $initial-value)",
      "  (method get | get! $content)",
      "  (method set | ? new-value | set! $content $new-value)",
      "  (method reset | self set $initial-value)",
      "  (method unknown | ? x | (objectify | self get) $x);"
    ],
    "preprocessed": "class cell (initial-value)\n  (field content | make-cell $initial-value)\n  (method get | get! $content)\n  (method set | ? new-value | set! $content $new-value)\n  (method reset | self set $initial-value)\n  (method unknown | ? x | (objectify | self get) $x);",
    "code": "2100001110321000100003221000100013322100001100321000100103123211011302321000100013322100000100321000100113123211101302321000100103322100000100321000101003123211003210001010131232111003023210001001030232100010101332210000010032100010110312321110011032100010100302321000100013322100000100321000001103123211003210100131232211010011312321110011032100010011330232101001332233",
    "parse": [
      "class",
      "cell",
      [
        "initial-value"
      ],
      [
        "field",
        "content",
        [
          -1,
          "make-cell",
          [
            -2,
            "initial-value"
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "get!",
          [
            -2,
            "content"
          ]
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "new-value",
          [
            -1,
            "set!",
            [
              -2,
              "content"
            ],
            [
              -2,
              "new-value"
            ]
          ]
        ]
      ],
      [
        "method",
        "reset",
        [
          -1,
          "self",
          "set",
          [
            -2,
            "initial-value"
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "objectify",
              [
                -1,
                "self",
                "get"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF148;&#xF154;&#xF246;&#xF148;&#xF155;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF156;&#xF248;&#xF15F;&#xF249;&#xF148;&#xF155;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF161;&#xF249;&#xF148;&#xF156;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF148;&#xF159;&#xF248;&#xF160;&#xF249;&#xF148;&#xF156;&#xF249;&#xF148;&#xF159;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF15A;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF148;&#xF155;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF147;&#xF157;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1394
  },
  {
    "role": "code",
    "lines": [
      "define cell-test1 | cell new 15;"
    ],
    "preprocessed": "define cell-test1 | cell new 15;",
    "code": "211013210001011131232100010000321111001032111132233",
    "parse": [
      "define",
      "cell-test1",
      [
        -1,
        "cell",
        "new",
        "15"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF15B;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF153;&#xF24B;",
    "dt": true,
    "stanza": 1395
  },
  {
    "role": "code",
    "lines": [
      "= 15 | cell-test1 get;"
    ],
    "preprocessed": "= 15 | cell-test1 get;",
    "code": "211321111312321000101113210001001132233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "cell-test1",
        "get"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF148;&#xF15B;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1396
  },
  {
    "role": "code",
    "lines": [
      "cell-test1 set 82;"
    ],
    "preprocessed": "cell-test1 set 82;",
    "code": "21000101113210001010032101001032233",
    "parse": [
      "cell-test1",
      "set",
      "82"
    ],
    "spider": "&#xF148;&#xF15B;&#xF24A;&#xF148;&#xF158;&#xF24A;&#xF145;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 1397
  },
  {
    "role": "code",
    "lines": [
      "= 82 | cell-test1 get;"
    ],
    "preprocessed": "= 82 | cell-test1 get;",
    "code": "211321010010312321000101113210001001132233",
    "parse": [
      "=",
      "82",
      [
        -1,
        "cell-test1",
        "get"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF156;&#xF248;&#xF148;&#xF15B;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1398
  },
  {
    "role": "code",
    "lines": [
      "= 82 | get! | cell-test1 content;"
    ],
    "preprocessed": "= 82 | get! | cell-test1 content;",
    "code": "2113210100103123211101312321000101113210001001032233",
    "parse": [
      "=",
      "82",
      [
        -1,
        "get!",
        [
          -1,
          "cell-test1",
          "content"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF156;&#xF248;&#xF161;&#xF248;&#xF148;&#xF15B;&#xF24A;&#xF148;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 1399
  },
  {
    "role": "code",
    "lines": [
      "define cell-test2 | cell new | point new 120 150;"
    ],
    "preprocessed": "define cell-test2 | cell new | point new 120 150;",
    "code": "211013210001100031232100010000321111001031232111001113211110010321111000321001011032233",
    "parse": [
      "define",
      "cell-test2",
      [
        -1,
        "cell",
        "new",
        [
          -1,
          "point",
          "new",
          "120",
          "150"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF15C;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF145;&#xF17C;&#xF24A;&#xF146;&#xF15A;&#xF24B;",
    "dt": true,
    "stanza": 1400
  },
  {
    "role": "code",
    "lines": [
      "define cell-test3 | cell new | point new 300 300;"
    ],
    "preprocessed": "define cell-test3 | cell new | point new 300 300;",
    "code": "211013210001100131232100010000321111001031232111001113211110010321001011003210010110032233",
    "parse": [
      "define",
      "cell-test3",
      [
        -1,
        "cell",
        "new",
        [
          -1,
          "point",
          "new",
          "300",
          "300"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF15D;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF170;&#xF24B;",
    "dt": true,
    "stanza": 1401
  },
  {
    "role": "code",
    "lines": [
      "cell-test2 + $cell-test3 = | point new 420 450;"
    ],
    "preprocessed": "cell-test2 + $cell-test3 = | point new 420 450;",
    "code": "210001100032101030232100011001321131232111001113211110010321101001003211100001032233",
    "parse": [
      "cell-test2",
      "+",
      [
        -2,
        "cell-test3"
      ],
      "=",
      [
        -1,
        "point",
        "new",
        "420",
        "450"
      ]
    ],
    "spider": "&#xF148;&#xF15C;&#xF24A;&#xF14E;&#xF249;&#xF148;&#xF15D;&#xF24A;&#xF147;&#xF248;&#xF147;&#xF16B;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF168;&#xF24A;&#xF14B;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1402
  },
  {
    "role": "code",
    "lines": [
      "not | cell-test2 = $cell-test3;"
    ],
    "preprocessed": "not | cell-test2 = $cell-test3;",
    "code": "21013123210001100032113023210001100132233",
    "parse": [
      "not",
      [
        -1,
        "cell-test2",
        "=",
        [
          -2,
          "cell-test3"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF148;&#xF15C;&#xF24A;&#xF147;&#xF249;&#xF148;&#xF15D;&#xF24B;",
    "dt": false,
    "stanza": 1403
  },
  {
    "role": "code",
    "lines": [
      "cell-test3 set $cell-test2;"
    ],
    "preprocessed": "cell-test3 set $cell-test2;",
    "code": "2100011001321000101003023210001100032233",
    "parse": [
      "cell-test3",
      "set",
      [
        -2,
        "cell-test2"
      ]
    ],
    "spider": "&#xF148;&#xF15D;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF148;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 1404
  },
  {
    "role": "code",
    "lines": [
      "cell-test2 = $cell-test3;"
    ],
    "preprocessed": "cell-test2 = $cell-test3;",
    "code": "210001100032113023210001100132233",
    "parse": [
      "cell-test2",
      "=",
      [
        -2,
        "cell-test3"
      ]
    ],
    "spider": "&#xF148;&#xF15C;&#xF24A;&#xF147;&#xF249;&#xF148;&#xF15D;&#xF24B;",
    "dt": false,
    "stanza": 1405
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "playing around with doors and rooms",
    "section_category": "MUD",
    "section_index": 41,
    "stanza": 1406
  },
  {
    "role": "code",
    "lines": [
      "intro door;"
    ],
    "preprocessed": "intro door;",
    "code": "2100103210001101032233",
    "parse": [
      "intro",
      "door"
    ],
    "spider": "&#xF156;&#xF24A;&#xF148;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1407
  },
  {
    "role": "code",
    "lines": [
      "class door ((src room) (dest room))",
      "  (method new | begin (src add $self) (dest add $self))",
      "  (method access-from | lambda ((current room)) |",
      "     cond ((current == $src) $dest) ((current == $dest) $src) 0)",
      "  (method is-present | lambda ((current room)) |",
      "     or (current == $src) (current == $dest));"
    ],
    "preprocessed": "class door ((src room) (dest room))\n  (method new | begin (src add $self) (dest add $self))\n  (method access-from | lambda ((current room)) |\n     cond ((current == $src) $dest) ((current == $dest) $src) 0)\n  (method is-present | lambda ((current room)) |\n     or (current == $src) (current == $dest));",
    "code": "21000011103210001101032221000110113210001110033221000111013210001110033322100000100321111001031232101011003221000110113211101111302321110011033221000111013211101111302321110011033322100000100321000111103123211010322211000101321000111003331232110110003222110001013210000100030232100011011330232100011101332221100010132100001000302321000111013302321000110113320332210000010032100011111312321101032221100010132100011100333123211132211000101321000010003023210001101133221100010132100001000302321000111013332233",
    "parse": [
      "class",
      "door",
      [
        [
          "src",
          "room"
        ],
        [
          "dest",
          "room"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "begin",
          [
            "src",
            "add",
            [
              -2,
              "self"
            ]
          ],
          [
            "dest",
            "add",
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "access-from",
        [
          -1,
          "lambda",
          [
            [
              "current",
              "room"
            ]
          ],
          [
            -1,
            "cond",
            [
              [
                "current",
                "==",
                [
                  -2,
                  "src"
                ]
              ],
              [
                -2,
                "dest"
              ]
            ],
            [
              [
                "current",
                "==",
                [
                  -2,
                  "dest"
                ]
              ],
              [
                -2,
                "src"
              ]
            ],
            "0"
          ]
        ]
      ],
      [
        "method",
        "is-present",
        [
          -1,
          "lambda",
          [
            [
              "current",
              "room"
            ]
          ],
          [
            -1,
            "or",
            [
              "current",
              "==",
              [
                -2,
                "src"
              ]
            ],
            [
              "current",
              "==",
              [
                -2,
                "dest"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF148;&#xF15E;&#xF246;&#xF246;&#xF148;&#xF15F;&#xF24A;&#xF148;&#xF160;&#xF245;&#xF246;&#xF148;&#xF161;&#xF24A;&#xF148;&#xF160;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF170;&#xF246;&#xF148;&#xF15F;&#xF24A;&#xF147;&#xF173;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF161;&#xF24A;&#xF147;&#xF173;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF162;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF147;&#xF149;&#xF24A;&#xF148;&#xF160;&#xF245;&#xF245;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF149;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF15F;&#xF245;&#xF249;&#xF148;&#xF161;&#xF245;&#xF246;&#xF246;&#xF147;&#xF149;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF161;&#xF245;&#xF249;&#xF148;&#xF15F;&#xF245;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF163;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF147;&#xF149;&#xF24A;&#xF148;&#xF160;&#xF245;&#xF245;&#xF248;&#xF14B;&#xF246;&#xF147;&#xF149;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF15F;&#xF245;&#xF246;&#xF147;&#xF149;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF161;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1408
  },
  {
    "role": "code",
    "lines": [
      "intro room;"
    ],
    "preprocessed": "intro room;",
    "code": "2100103210001110032233",
    "parse": [
      "intro",
      "room"
    ],
    "spider": "&#xF156;&#xF24A;&#xF148;&#xF160;&#xF24B;",
    "dt": false,
    "stanza": 1409
  },
  {
    "role": "code",
    "lines": [
      "class room (name)",
      "  (field content | container new)",
      "  (method name $name)",
      "  (method unknown | ? x | content $x);"
    ],
    "preprocessed": "class room (name)\n  (field content | container new)\n  (method name $name)\n  (method unknown | ? x | content $x);",
    "code": "2100001110321000111003221000000103322100001100321000100103123211101100321111001033221000001003210000001030232100000010332210000010032100000110312321100321010013123210001001030232101001332233",
    "parse": [
      "class",
      "room",
      [
        "name"
      ],
      [
        "field",
        "content",
        [
          -1,
          "container",
          "new"
        ]
      ],
      [
        "method",
        "name",
        [
          -2,
          "name"
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "content",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF148;&#xF160;&#xF246;&#xF148;&#xF146;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF156;&#xF248;&#xF147;&#xF170;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF146;&#xF249;&#xF148;&#xF146;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF148;&#xF156;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1410
  },
  {
    "role": "doc",
    "lines": [
      "need to fix up containers to use object equality"
    ],
    "stanza": 1411
  },
  {
    "role": "code",
    "lines": [
      "define object-element | lambda (n lst) |",
      "  < 0 | list-length | select-match (? x | x == $n) $lst;"
    ],
    "preprocessed": "define object-element | lambda (n lst) |\n  < 0 | list-length | select-match (? x | x == $n) $lst;",
    "code": "211013210010000031232110103221001110321100100331232103203123210100113123211001013221100321010013123210100132100001000302321001110330232110010032233",
    "parse": [
      "define",
      "object-element",
      [
        -1,
        "lambda",
        [
          "n",
          "lst"
        ],
        [
          -1,
          "<",
          "0",
          [
            -1,
            "list-length",
            [
              -1,
              "select-match",
              [
                "?",
                "x",
                [
                  -1,
                  "x",
                  "==",
                  [
                    -2,
                    "n"
                  ]
                ]
              ],
              [
                -2,
                "lst"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF164;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF146;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF248;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF16D;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF145;&#xF152;&#xF245;&#xF249;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1412
  },
  {
    "role": "code",
    "lines": [
      "class container ()",
      "  (field contents | cell new (vector))",
      "  (method inventory | contents get)",
      "  (method add | ? x |",
      "     if (object-element $x | contents get) $false |",
      "     contents set | prepend $x | contents get);"
    ],
    "preprocessed": "class container ()\n  (field contents | cell new (vector))\n  (method inventory | contents get)\n  (method add | ? x |\n     if (object-element $x | contents get) $false |\n     contents set | prepend $x | contents get);",
    "code": "2100001110321110110032322100001100321110110131232100010000321111001032210000333221000001003211101110312321110110132100010011332210000010032111011113123211003210100131232111132210010000030232101001312321110110132100010011330232031232111011013210001010031232101011030232101001312321110110132100010011332233",
    "parse": [
      "class",
      "container",
      [],
      [
        "field",
        "contents",
        [
          -1,
          "cell",
          "new",
          [
            "vector"
          ]
        ]
      ],
      [
        "method",
        "inventory",
        [
          -1,
          "contents",
          "get"
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "object-element",
              [
                -2,
                "x"
              ],
              [
                -1,
                "contents",
                "get"
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "contents",
              "set",
              [
                -1,
                "prepend",
                [
                  -2,
                  "x"
                ],
                [
                  -1,
                  "contents",
                  "get"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF147;&#xF170;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF171;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF154;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF172;&#xF248;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF173;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF148;&#xF164;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF144;&#xF248;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF145;&#xF15A;&#xF249;&#xF16D;&#xF248;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1413
  },
  {
    "role": "code",
    "lines": [
      "define hall | room new 0;"
    ],
    "preprocessed": "define hall | room new 0;",
    "code": "211013210010000131232100011100321111001032032233",
    "parse": [
      "define",
      "hall",
      [
        -1,
        "room",
        "new",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF165;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1414
  },
  {
    "role": "code",
    "lines": [
      "define kitchen | room new 1;"
    ],
    "preprocessed": "define kitchen | room new 1;",
    "code": "211013210010001031232100011100321111001032132233",
    "parse": [
      "define",
      "kitchen",
      [
        -1,
        "room",
        "new",
        "1"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF166;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1415
  },
  {
    "role": "code",
    "lines": [
      "define door1 | door new $hall $kitchen;"
    ],
    "preprocessed": "define door1 | door new $hall $kitchen;",
    "code": "2110132100100011312321000110103211110010302321001000013023210010001032233",
    "parse": [
      "define",
      "door1",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "hall"
        ],
        [
          -2,
          "kitchen"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF167;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF148;&#xF165;&#xF249;&#xF148;&#xF166;&#xF24B;",
    "dt": true,
    "stanza": 1416
  },
  {
    "role": "code",
    "lines": [
      "(first | hall inventory) == $door1;"
    ],
    "preprocessed": "(first | hall inventory) == $door1;",
    "code": "2210110003123210010000132111011103321000010003023210010001132233",
    "parse": [
      [
        "first",
        [
          -1,
          "hall",
          "inventory"
        ]
      ],
      "==",
      [
        -2,
        "door1"
      ]
    ],
    "spider": "&#xF246;&#xF145;&#xF15C;&#xF248;&#xF148;&#xF165;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1417
  },
  {
    "role": "code",
    "lines": [
      "(first | kitchen inventory) == $door1;"
    ],
    "preprocessed": "(first | kitchen inventory) == $door1;",
    "code": "2210110003123210010001032111011103321000010003023210010001132233",
    "parse": [
      [
        "first",
        [
          -1,
          "kitchen",
          "inventory"
        ]
      ],
      "==",
      [
        -2,
        "door1"
      ]
    ],
    "spider": "&#xF246;&#xF145;&#xF15C;&#xF248;&#xF148;&#xF166;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1418
  },
  {
    "role": "code",
    "lines": [
      "(door1 access-from $hall) == $kitchen;"
    ],
    "preprocessed": "(door1 access-from $hall) == $kitchen;",
    "code": "2210010001132100011110302321001000013321000010003023210010001032233",
    "parse": [
      [
        "door1",
        "access-from",
        [
          -2,
          "hall"
        ]
      ],
      "==",
      [
        -2,
        "kitchen"
      ]
    ],
    "spider": "&#xF246;&#xF148;&#xF167;&#xF24A;&#xF148;&#xF162;&#xF249;&#xF148;&#xF165;&#xF245;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF166;&#xF24B;",
    "dt": false,
    "stanza": 1419
  },
  {
    "role": "code",
    "lines": [
      "(door1 access-from $kitchen) == $hall;"
    ],
    "preprocessed": "(door1 access-from $kitchen) == $hall;",
    "code": "2210010001132100011110302321001000103321000010003023210010000132233",
    "parse": [
      [
        "door1",
        "access-from",
        [
          -2,
          "kitchen"
        ]
      ],
      "==",
      [
        -2,
        "hall"
      ]
    ],
    "spider": "&#xF246;&#xF148;&#xF167;&#xF24A;&#xF148;&#xF162;&#xF249;&#xF148;&#xF166;&#xF245;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1420
  },
  {
    "role": "code",
    "lines": [
      "define stairs | room new 2;"
    ],
    "preprocessed": "define stairs | room new 2;",
    "code": "2110132100100100312321000111003211110010321032233",
    "parse": [
      "define",
      "stairs",
      [
        -1,
        "room",
        "new",
        "2"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF168;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF146;&#xF24B;",
    "dt": true,
    "stanza": 1421
  },
  {
    "role": "code",
    "lines": [
      "define lawn | room new 3;"
    ],
    "preprocessed": "define lawn | room new 3;",
    "code": "2110132100100101312321000111003211110010321132233",
    "parse": [
      "define",
      "lawn",
      [
        -1,
        "room",
        "new",
        "3"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF169;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF147;&#xF24B;",
    "dt": true,
    "stanza": 1422
  },
  {
    "role": "code",
    "lines": [
      "define bedroom | room new 4;"
    ],
    "preprocessed": "define bedroom | room new 4;",
    "code": "21101321001001103123210001110032111100103210032233",
    "parse": [
      "define",
      "bedroom",
      [
        -1,
        "room",
        "new",
        "4"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF16A;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF148;&#xF24B;",
    "dt": true,
    "stanza": 1423
  },
  {
    "role": "code",
    "lines": [
      "define nowhere | room new 0;"
    ],
    "preprocessed": "define nowhere | room new 0;",
    "code": "211013210010011131232100011100321111001032032233",
    "parse": [
      "define",
      "nowhere",
      [
        -1,
        "room",
        "new",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF16B;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1424
  },
  {
    "role": "code",
    "lines": [
      "define door2 | door new $hall $lawn;"
    ],
    "preprocessed": "define door2 | door new $hall $lawn;",
    "code": "2110132100101000312321000110103211110010302321001000013023210010010132233",
    "parse": [
      "define",
      "door2",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "hall"
        ],
        [
          -2,
          "lawn"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF16C;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF148;&#xF165;&#xF249;&#xF148;&#xF169;&#xF24B;",
    "dt": true,
    "stanza": 1425
  },
  {
    "role": "code",
    "lines": [
      "define door3 | door new $hall $stairs;"
    ],
    "preprocessed": "define door3 | door new $hall $stairs;",
    "code": "2110132100101001312321000110103211110010302321001000013023210010010032233",
    "parse": [
      "define",
      "door3",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "hall"
        ],
        [
          -2,
          "stairs"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF16D;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF148;&#xF165;&#xF249;&#xF148;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1426
  },
  {
    "role": "code",
    "lines": [
      "define door4 | door new $stairs $bedroom;"
    ],
    "preprocessed": "define door4 | door new $stairs $bedroom;",
    "code": "2110132100101010312321000110103211110010302321001001003023210010011032233",
    "parse": [
      "define",
      "door4",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "stairs"
        ],
        [
          -2,
          "bedroom"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF16E;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF148;&#xF168;&#xF249;&#xF148;&#xF16A;&#xF24B;",
    "dt": true,
    "stanza": 1427
  },
  {
    "role": "code",
    "lines": [
      "intro character;"
    ],
    "preprocessed": "intro character;",
    "code": "2100103210010101132233",
    "parse": [
      "intro",
      "character"
    ],
    "spider": "&#xF156;&#xF24A;&#xF148;&#xF16F;&#xF24B;",
    "dt": false,
    "stanza": 1428
  },
  {
    "role": "code",
    "lines": [
      "class character ()",
      "  (field location | cell new 0)",
      "  (field name | cell new 0)",
      "  (method set-room | lambda ((r room)) | begin",
      "     (if (not | function? | location get) 0 | location get remove $self)",
      "     (r add $self)",
      "     (location set $r))",
      "  (method get-room | location get)",
      "  (method set-name | ? n | name set $n)",
      "  (method get-name | name get)",
      "  (method update 0);"
    ],
    "preprocessed": "class character ()\n  (field location | cell new 0)\n  (field name | cell new 0)\n  (method set-room | lambda ((r room)) | begin\n     (if (not | function? | location get) 0 | location get remove $self)\n     (r add $self)\n     (location set $r))\n  (method get-room | location get)\n  (method set-name | ? n | name set $n)\n  (method get-name | name get)\n  (method update 0);",
    "code
    "parse": [
      "class",
      "character",
      [],
      [
        "field",
        "location",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "name",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "set-room",
        [
          -1,
          "lambda",
          [
            [
              "r",
              "room"
            ]
          ],
          [
            -1,
            "begin",
            [
              "if",
              [
                "not",
                [
                  -1,
                  "function?",
                  [
                    -1,
                    "location",
                    "get"
                  ]
                ]
              ],
              "0",
              [
                -1,
                "location",
                "get",
                "remove",
                [
                  -2,
                  "self"
                ]
              ]
            ],
            [
              "r",
              "add",
              [
                -2,
                "self"
              ]
            ],
            [
              "location",
              "set",
              [
                -2,
                "r"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get-room",
        [
          -1,
          "location",
          "get"
        ]
      ],
      [
        "method",
        "set-name",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "name",
            "set",
            [
              -2,
              "n"
            ]
          ]
        ]
      ],
      [
        "method",
        "get-name",
        [
          -1,
          "name",
          "get"
        ]
      ],
      [
        "method",
        "update",
        "0"
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF148;&#xF16F;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF170;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF146;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF171;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF148;&#xF172;&#xF24A;&#xF148;&#xF160;&#xF245;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF153;&#xF246;&#xF149;&#xF248;&#xF170;&#xF248;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF144;&#xF248;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF147;&#xF174;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF172;&#xF24A;&#xF147;&#xF173;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF148;&#xF172;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF173;&#xF248;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF174;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF148;&#xF146;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF145;&#xF152;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF175;&#xF248;&#xF148;&#xF146;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1429
  },
  {
    "role": "code",
    "lines": [
      "define find-max-helper | lambda (test max idx n lst) |",
      "  if (= 0 | list-length $lst) $idx |",
      "  if (> (test | head $lst) $max)",
      "     (find-max-helper $test (test | head $lst) $n (+ $n 1) (tail $lst))",
      "     (find-max-helper $test $max $idx (+ $n 1) (tail $lst));"
    ],
    "preprocessed": "define find-max-helper | lambda (test max idx n lst) |\n  if (= 0 | list-length $lst) $idx |\n  if (> (test | head $lst) $max)\n     (find-max-helper $test (test | head $lst) $n (+ $n 1) (tail $lst))\n     (find-max-helper $test $max $idx (+ $n 1) (tail $lst));",
    "code": "211013210011001131232110103221100110321000101321001101003210011103211001003312321111322113203123210100113023211001003302321001101003123211113221003221100110312321010000302321100100330232100010133221001100113023211001103221100110312321010000302321100100330232100111032210103023210011103213322101001030232110010033322100110011302321100110302321000101302321001101003221010302321001110321332210100103023211001003332233",
    "parse": [
      "define",
      "find-max-helper",
      [
        -1,
        "lambda",
        [
          "test",
          "max",
          "idx",
          "n",
          "lst"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst"
              ]
            ]
          ],
          [
            -2,
            "idx"
          ],
          [
            -1,
            "if",
            [
              ">",
              [
                "test",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                "max"
              ]
            ],
            [
              "find-max-helper",
              [
                -2,
                "test"
              ],
              [
                "test",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                "n"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "tail",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "find-max-helper",
              [
                -2,
                "test"
              ],
              [
                -2,
                "max"
              ],
              [
                -2,
                "idx"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "tail",
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF177;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF16A;&#xF24A;&#xF145;&#xF149;&#xF24A;&#xF148;&#xF178;&#xF24A;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF148;&#xF178;&#xF248;&#xF153;&#xF246;&#xF148;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF145;&#xF149;&#xF245;&#xF246;&#xF148;&#xF177;&#xF249;&#xF145;&#xF16A;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF145;&#xF152;&#xF246;&#xF14E;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF246;&#xF148;&#xF177;&#xF249;&#xF145;&#xF16A;&#xF249;&#xF145;&#xF149;&#xF249;&#xF148;&#xF178;&#xF246;&#xF14E;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1430
  },
  {
    "role": "code",
    "lines": [
      "define find-max-idx | lambda (test lst) |",
      "  find-max-helper $test (test | head $lst) 0 0 $lst;"
    ],
    "preprocessed": "define find-max-idx | lambda (test lst) |\n  find-max-helper $test (test | head $lst) 0 0 $lst;",
    "code": "2110132100110101312321101032211001103211001003312321001100113023211001103221100110312321010000302321100100332032030232110010032233",
    "parse": [
      "define",
      "find-max-idx",
      [
        -1,
        "lambda",
        [
          "test",
          "lst"
        ],
        [
          -1,
          "find-max-helper",
          [
            -2,
            "test"
          ],
          [
            "test",
            [
              -1,
              "head",
              [
                -2,
                "lst"
              ]
            ]
          ],
          "0",
          "0",
          [
            -2,
            "lst"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF179;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF16A;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF148;&#xF177;&#xF249;&#xF145;&#xF16A;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF144;&#xF24A;&#xF144;&#xF249;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1431
  },
  {
    "role": "code",
    "lines": [
      "define find-min-helper | lambda (test max idx n lst) |",
      "  if (= 0 | list-length $lst) $idx |",
      "  if (< (test | head $lst) $max)",
      "     (find-min-helper $test (test | head $lst) $n (+ $n 1) (tail $lst))",
      "     (find-min-helper $test $max $idx (+ $n 1) (tail $lst));"
    ],
    "preprocessed": "define find-min-helper | lambda (test max idx n lst) |\n  if (= 0 | list-length $lst) $idx |\n  if (< (test | head $lst) $max)\n     (find-min-helper $test (test | head $lst) $n (+ $n 1) (tail $lst))\n     (find-min-helper $test $max $idx (+ $n 1) (tail $lst));",
    "code": "21101321001101103123211010322110011032100010132100110100321001110321100100331232111132211320312321010011302321100100330232100110100312321111322103221100110312321010000302321100100330232100010133221001101103023211001103221100110312321010000302321100100330232100111032210103023210011103213322101001030232110010033322100110110302321100110302321000101302321001101003221010302321001110321332210100103023211001003332233",
    "parse": [
      "define",
      "find-min-helper",
      [
        -1,
        "lambda",
        [
          "test",
          "max",
          "idx",
          "n",
          "lst"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst"
              ]
            ]
          ],
          [
            -2,
            "idx"
          ],
          [
            -1,
            "if",
            [
              "<",
              [
                "test",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                "max"
              ]
            ],
            [
              "find-min-helper",
              [
                -2,
                "test"
              ],
              [
                "test",
                [
                  -1,
                  "head",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                "n"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "tail",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "find-min-helper",
              [
                -2,
                "test"
              ],
              [
                -2,
                "max"
              ],
              [
                -2,
                "idx"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "tail",
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF17A;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF16A;&#xF24A;&#xF145;&#xF149;&#xF24A;&#xF148;&#xF178;&#xF24A;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF148;&#xF178;&#xF248;&#xF153;&#xF246;&#xF146;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF145;&#xF149;&#xF245;&#xF246;&#xF148;&#xF17A;&#xF249;&#xF145;&#xF16A;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF249;&#xF145;&#xF152;&#xF246;&#xF14E;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF246;&#xF148;&#xF17A;&#xF249;&#xF145;&#xF16A;&#xF249;&#xF145;&#xF149;&#xF249;&#xF148;&#xF178;&#xF246;&#xF14E;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1432
  },
  {
    "role": "code",
    "lines": [
      "define find-min-idx | lambda (test lst) |",
      "  find-min-helper $test (test | head $lst) 0 0 $lst;"
    ],
    "preprocessed": "define find-min-idx | lambda (test lst) |\n  find-min-helper $test (test | head $lst) 0 0 $lst;",
    "code": "2110132100110111312321101032211001103211001003312321001101103023211001103221100110312321010000302321100100332032030232110010032233",
    "parse": [
      "define",
      "find-min-idx",
      [
        -1,
        "lambda",
        [
          "test",
          "lst"
        ],
        [
          -1,
          "find-min-helper",
          [
            -2,
            "test"
          ],
          [
            "test",
            [
              -1,
              "head",
              [
                -2,
                "lst"
              ]
            ]
          ],
          "0",
          "0",
          [
            -2,
            "lst"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF148;&#xF17B;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF16A;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF148;&#xF17A;&#xF249;&#xF145;&#xF16A;&#xF246;&#xF145;&#xF16A;&#xF248;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF144;&#xF24A;&#xF144;&#xF249;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1433
  },
  {
    "role": "code",
    "lines": [
      "= 2 | find-max-idx (? x $x) | vector 3 4 5 0;"
    ],
    "preprocessed": "= 2 | find-max-idx (? x $x) | vector 3 4 5 0;",
    "code": "21132103123210011010132211003210100130232101001331232100003211321003210132032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "find-max-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "4",
          "5",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF148;&#xF179;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF149;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1434
  },
  {
    "role": "code",
    "lines": [
      "= 1 | find-max-idx (? x $x) | vector 3 5 4 0;"
    ],
    "preprocessed": "= 1 | find-max-idx (? x $x) | vector 3 5 4 0;",
    "code": "2113213123210011010132211003210100130232101001331232100003211321013210032032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "find-max-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "5",
          "4",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF148;&#xF179;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1435
  },
  {
    "role": "code",
    "lines": [
      "= 0 | find-max-idx (? x $x) | vector 5 3 4 0;"
    ],
    "preprocessed": "= 0 | find-max-idx (? x $x) | vector 5 3 4 0;",
    "code": "2113203123210011010132211003210100130232101001331232100003210132113210032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "find-max-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "5",
          "3",
          "4",
          "0"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF148;&#xF179;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1436
  },
  {
    "role": "code",
    "lines": [
      "= 2 | find-min-idx (? x $x) | vector 3 4 0 2;"
    ],
    "preprocessed": "= 2 | find-min-idx (? x $x) | vector 3 4 0 2;",
    "code": "2113210312321001101113221100321010013023210100133123210000321132100320321032233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "find-min-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "4",
          "0",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF148;&#xF17B;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1437
  },
  {
    "role": "code",
    "lines": [
      "= 1 | find-min-idx (? x $x) | vector 3 1 4 2;"
    ],
    "preprocessed": "= 1 | find-min-idx (? x $x) | vector 3 1 4 2;",
    "code": "211321312321001101113221100321010013023210100133123210000321132132100321032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "find-min-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "1",
          "4",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF148;&#xF17B;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1438
  },
  {
    "role": "code",
    "lines": [
      "= 0 | find-min-idx (? x $x) | vector 1 3 4 2;"
    ],
    "preprocessed": "= 0 | find-min-idx (? x $x) | vector 1 3 4 2;",
    "code": "211320312321001101113221100321010013023210100133123210000321321132100321032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "find-min-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "1",
          "3",
          "4",
          "2"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF148;&#xF17B;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1439
  },
  {
    "role": "doc",
    "lines": [
      "the 'robo' class makes a character that patrols from room to room"
    ],
    "stanza": 1440
  },
  {
    "role": "code",
    "lines": [
      "class robo ()",
      "  (field super | character new)",
      "  (field timestamp | cell new 1)",
      "  (field timestamp-map | cell new (? x 0))",
      "  (method unknown | ? x | super $x)",
      "  (method update |",
      "     assign exits (select-match (? x | instanceof door $x) (self location inventory)) |",
      "     assign timestamps (map (? x | timestamp-map get $x) $exits) |",
      "     assign chosen-exit (list-ref $exits | find-min-idx (? x $x) $timestamps) |",
      "     assign current-tmap (timestamp-map get) |",
      "     assign current-t (timestamp get) |",
      "     begin",
      "       (self location set | chosen-exit access-from | self location get)",
      "       (timestamp-map set | lambda ((d door)) |",
      "          if (d == $chosen-exit) $current-t (current-tmap $d))",
      "       (timestamp set | + 1 | timestamp get));"
    ],
    "preprocessed": "class robo ()\n  (field super | character new)\n  (field timestamp | cell new 1)\n  (field timestamp-map | cell new (? x 0))\n  (method unknown | ? x | super $x)\n  (method update |\n     assign exits (select-match (? x | instanceof door $x) (self location inventory)) |\n     assign timestamps (map (? x | timestamp-map get $x) $exits) |\n     assign chosen-exit (list-ref $exits | find-min-idx (? x $x) $timestamps) |\n     assign current-tmap (timestamp-map get) |\n     assign current-t (timestamp get) |\n     begin\n       (self location set | chosen-exit access-from | self location get)\n       (timestamp-map set | lambda ((d door)) |\n          if (d == $chosen-exit) $current-t (current-tmap $d))\n       (timestamp set | + 1 | timestamp get));",
    "code": "21000011103210011100032322100001100321111010131232100101011321111001033221000011003210011100131232100010000321111001032133221000011003210011101031232100010000321111001032211003210100132033322100000100321000001103123211003210100131232111101013023210100133221000001003210011001031232111032100111011322110010132211003210100131232110111013210001101030232101001332211100110321001011003211101110333123211103210011110032210110103221100321010013123210011101032100010011302321010013302321001110113312321110321001111013221010100302321001110113123210011011132211003210100130232101001330232100111100331232111032100111110322100111010321000100113312321110321001111113221001110013210001001133123210101100322111001103210010110032100010100312321001111013210001111031232111001103210010110032100010011332210011101032100010100312321101032221010000003210001101033312321111322101000000321000010003023210011110133023210011111132210011111030232101000000333221001110013210001010031232101032131232100111001321000100113332233",
    "parse": [
      "class",
      "robo",
      [],
      [
        "field",
        "super",
        [
          -1,
          "character",
          "new"
        ]
      ],
      [
        "field",
        "timestamp",
        [
          -1,
          "cell",
          "new",
          "1"
        ]
      ],
      [
        "field",
        "timestamp-map",
        [
          -1,
          "cell",
          "new",
          [
            "?",
            "x",
            "0"
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "assign",
          "exits",
          [
            "select-match",
            [
              "?",
              "x",
              [
                -1,
                "instanceof",
                "door",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "self",
              "location",
              "inventory"
            ]
          ],
          [
            -1,
            "assign",
            "timestamps",
            [
              "map",
              [
                "?",
                "x",
                [
                  -1,
                  "timestamp-map",
                  "get",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -2,
                "exits"
              ]
            ],
            [
              -1,
              "assign",
              "chosen-exit",
              [
                "list-ref",
                [
                  -2,
                  "exits"
                ],
                [
                  -1,
                  "find-min-idx",
                  [
                    "?",
                    "x",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -2,
                    "timestamps"
                  ]
                ]
              ],
              [
                -1,
                "assign",
                "current-tmap",
                [
                  "timestamp-map",
                  "get"
                ],
                [
                  -1,
                  "assign",
                  "current-t",
                  [
                    "timestamp",
                    "get"
                  ],
                  [
                    -1,
                    "begin",
                    [
                      "self",
                      "location",
                      "set",
                      [
                        -1,
                        "chosen-exit",
                        "access-from",
                        [
                          -1,
                          "self",
                          "location",
                          "get"
                        ]
                      ]
                    ],
                    [
                      "timestamp-map",
                      "set",
                      [
                        -1,
                        "lambda",
                        [
                          [
                            "d",
                            "door"
                          ]
                        ],
                        [
                          -1,
                          "if",
                          [
                            "d",
                            "==",
                            [
                              -2,
                              "chosen-exit"
                            ]
                          ],
                          [
                            -2,
                            "current-t"
                          ],
                          [
                            "current-tmap",
                            [
                              -2,
                              "d"
                            ]
                          ]
                        ]
                      ]
                    ],
                    [
                      "timestamp",
                      "set",
                      [
                        -1,
                        "+",
                        "1",
                        [
                          -1,
                          "timestamp",
                          "get"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF148;&#xF17C;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF148;&#xF16F;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF17D;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF17E;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF176;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF17F;&#xF246;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF161;&#xF24A;&#xF148;&#xF15E;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF170;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF180;&#xF246;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF148;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF148;&#xF17F;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF181;&#xF246;&#xF145;&#xF158;&#xF249;&#xF148;&#xF17F;&#xF248;&#xF148;&#xF17B;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF148;&#xF180;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF182;&#xF246;&#xF148;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF183;&#xF246;&#xF148;&#xF17D;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF148;&#xF181;&#xF24A;&#xF148;&#xF162;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF170;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF17E;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF149;&#xF144;&#xF24A;&#xF148;&#xF15E;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF144;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF148;&#xF181;&#xF245;&#xF249;&#xF148;&#xF183;&#xF246;&#xF148;&#xF182;&#xF249;&#xF149;&#xF144;&#xF245;&#xF245;&#xF246;&#xF148;&#xF17D;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF148;&#xF17D;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1441
  },
  {
    "role": "code",
    "lines": [
      "define myrobo | robo new;"
    ],
    "preprocessed": "define myrobo | robo new;",
    "code": "211013210100000131232100111000321111001032233",
    "parse": [
      "define",
      "myrobo",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF145;&#xF248;&#xF148;&#xF17C;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1442
  },
  {
    "role": "code",
    "lines": [
      "myrobo set-room $stairs;"
    ],
    "preprocessed": "myrobo set-room $stairs;",
    "code": "2101000001321001011013023210010010032233",
    "parse": [
      "myrobo",
      "set-room",
      [
        -2,
        "stairs"
      ]
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF171;&#xF249;&#xF148;&#xF168;&#xF24B;",
    "dt": false,
    "stanza": 1443
  },
  {
    "role": "code",
    "lines": [
      "define which-room | lambda ((rr robo)) |",
      "  find-max-idx",
      "    (lambda ((r room)) | if (r == | rr get-room) 1 0) |",
      "    vector $hall $kitchen $stairs $lawn $bedroom;"
    ],
    "preprocessed": "define which-room | lambda ((rr robo)) |\n  find-max-idx\n    (lambda ((r room)) | if (r == | rr get-room) 1 0) |\n    vector $hall $kitchen $stairs $lawn $bedroom;",
    "code": "2110132101000010312321101032221010000113210011100033312321001101013221101032221001011103210001110033312321111322100101110321000010003123210100001132100101111332132033123210000302321001000013023210010001030232100100100302321001001013023210010011032233",
    "parse": [
      "define",
      "which-room",
      [
        -1,
        "lambda",
        [
          [
            "rr",
            "robo"
          ]
        ],
        [
          -1,
          "find-max-idx",
          [
            "lambda",
            [
              [
                "r",
                "room"
              ]
            ],
            [
              -1,
              "if",
              [
                "r",
                "==",
                [
                  -1,
                  "rr",
                  "get-room"
                ]
              ],
              "1",
              "0"
            ]
          ],
          [
            -1,
            "vector",
            [
              -2,
              "hall"
            ],
            [
              -2,
              "kitchen"
            ],
            [
              -2,
              "stairs"
            ],
            [
              -2,
              "lawn"
            ],
            [
              -2,
              "bedroom"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF146;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF149;&#xF147;&#xF24A;&#xF148;&#xF17C;&#xF245;&#xF245;&#xF248;&#xF148;&#xF179;&#xF246;&#xF15E;&#xF246;&#xF246;&#xF148;&#xF172;&#xF24A;&#xF148;&#xF160;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF148;&#xF172;&#xF24A;&#xF148;&#xF14C;&#xF248;&#xF149;&#xF147;&#xF24A;&#xF148;&#xF173;&#xF245;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF154;&#xF249;&#xF148;&#xF165;&#xF249;&#xF148;&#xF166;&#xF249;&#xF148;&#xF168;&#xF249;&#xF148;&#xF169;&#xF249;&#xF148;&#xF16A;&#xF24B;",
    "dt": true,
    "stanza": 1444
  },
  {
    "role": "code",
    "lines": [
      "define sequencer | lambda (n current lst) |",
      "  if (>= $current $n) $lst | begin",
      "    (myrobo update)",
      "    (sequencer $n (+ $current 1) (append (which-room $myrobo) $lst));"
    ],
    "preprocessed": "define sequencer | lambda (n current lst) |\n  if (>= $current $n) $lst | begin\n    (myrobo update)\n    (sequencer $n (+ $current 1) (append (which-room $myrobo) $lst));",
    "code": "21101321010001003123211010322100111032110001013211001003312321111322100100030232110001013023210011103302321100100312321010110032210100000132100110010332210100010030232100111032210103023211000101321332211000113221010000103023210100000133023211001003332233",
    "parse": [
      "define",
      "sequencer",
      [
        -1,
        "lambda",
        [
          "n",
          "current",
          "lst"
        ],
        [
          -1,
          "if",
          [
            ">=",
            [
              -2,
              "current"
            ],
            [
              -2,
              "n"
            ]
          ],
          [
            -2,
            "lst"
          ],
          [
            -1,
            "begin",
            [
              "myrobo",
              "update"
            ],
            [
              "sequencer",
              [
                -2,
                "n"
              ],
              [
                "+",
                [
                  -2,
                  "current"
                ],
                "1"
              ],
              [
                "append",
                [
                  "which-room",
                  [
                    -2,
                    "myrobo"
                  ]
                ],
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF148;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF152;&#xF24A;&#xF147;&#xF149;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF249;&#xF147;&#xF149;&#xF249;&#xF145;&#xF152;&#xF245;&#xF249;&#xF145;&#xF168;&#xF248;&#xF146;&#xF170;&#xF246;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF245;&#xF246;&#xF149;&#xF148;&#xF249;&#xF145;&#xF152;&#xF246;&#xF14E;&#xF249;&#xF147;&#xF149;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF167;&#xF246;&#xF149;&#xF146;&#xF249;&#xF149;&#xF145;&#xF245;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1445
  },
  {
    "role": "doc",
    "lines": [
      "here is a list of the first 30 rooms the robot character visits",
      "0=hall, 1=kitchen, 2=stairs, 3=lawn, 4=bedroom"
    ],
    "stanza": 1446
  },
  {
    "role": "code",
    "lines": [
      "list= (sequencer 30 0 (vector)) |",
      "  vector 4 2 0 3 0 1 0 2 4 2 0 3 0 1 0 2 4 2 0 3 0 1 0 2 4 2 0 3 0 1;"
    ],
    "preprocessed": "list= (sequencer 30 0 (vector)) |\n  vector 4 2 0 3 0 1 0 2 4 2 0 3 0 1 0 2 4 2 0 3 0 1 0 2 4 2 0 3 0 1;",
    "code": "21010101322101000100321111032032210000333123210000321003210320321132032132032103210032103203211320321320321032100321032032113203213203210321003210320321132032132233",
    "parse": [
      "list=",
      [
        "sequencer",
        "30",
        "0",
        [
          "vector"
        ]
      ],
      [
        -1,
        "vector",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1",
        "0",
        "2",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1",
        "0",
        "2",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1",
        "0",
        "2",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF149;&#xF148;&#xF24A;&#xF162;&#xF24A;&#xF144;&#xF246;&#xF154;&#xF245;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24A;&#xF147;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1447
  },
  {
    "role": "doc",
    "lines": [
      "Now should start to introduce a language to talk about what is",
      "going on in the simulated world, and start to move away from detailed mechanism"
    ],
    "stanza": 1448
  },
  {
    "role": "file",
    "lines": [
      "== COS_Element =="
    ],
    "stanza": 1449
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Introducing the elements is done well in the [DearET message](https://web.archive.org/web/20161017192136/http://www.dearet.org/testing-a-message) by [Michael Busch](https://seti.org/our-scientists/michael-busch).  We draw inspiration from that work.",
      "",
      "The general idea here is that there are some physical ratios that should be known by",
      "anybody with a handle on what is going on at the atomic level, and may be recognizable.",
      "The pattern of how elementary particles are combined into atoms, and atoms into",
      "molecules, may also ring a bell.",
      ""
    ],
    "section_description": "introduce the elements",
    "section_category": "PHYSICS",
    "section_index": 42,
    "stanza": 1450
  },
  {
    "role": "code",
    "lines": [
      "intro proton;"
    ],
    "preprocessed": "intro proton;",
    "code": "2100103210100010132233",
    "parse": [
      "intro",
      "proton"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1451
  },
  {
    "role": "code",
    "lines": [
      "intro electron;"
    ],
    "preprocessed": "intro electron;",
    "code": "2100103210100011032233",
    "parse": [
      "intro",
      "electron"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1452
  },
  {
    "role": "code",
    "lines": [
      "intro neutron;"
    ],
    "preprocessed": "intro neutron;",
    "code": "2100103210100011132233",
    "parse": [
      "intro",
      "neutron"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1453
  },
  {
    "role": "code",
    "lines": [
      "intro mass;"
    ],
    "preprocessed": "intro mass;",
    "code": "2100103210100100032233",
    "parse": [
      "intro",
      "mass"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF14C;&#xF24B;",
    "dt": false,
    "stanza": 1454
  },
  {
    "role": "doc",
    "lines": [
      "The following definitions are not included in the message, since they are",
      "unit-specific.  The message will only present ratios."
    ],
    "stanza": 1455
  },
  {
    "role": "code",
    "lines": [
      "assume | define proton | make-hash | vector",
      "  (pair mass | decimal:power (minus 27) 1 | vector 6 7 2 6 1 9 2 3 6 9)",
      "  (pair charge 1);"
    ],
    "preprocessed": "assume | define proton | make-hash | vector\n  (pair mass | decimal:power (minus 27) 1 | vector 6 7 2 6 1 9 2 3 6 9)\n  (pair charge 1);",
    "code": "210010131232110132101000101312321011011031232100003221010111321010010003123211110003221100111321101133213123210000321103211132103211032132100132103211321103210013322101011132101001001321332233",
    "parse": [
      "assume",
      [
        -1,
        "define",
        "proton",
        [
          -1,
          "make-hash",
          [
            -1,
            "vector",
            [
              "pair",
              "mass",
              [
                -1,
                "decimal:power",
                [
                  "minus",
                  "27"
                ],
                "1",
                [
                  -1,
                  "vector",
                  "6",
                  "7",
                  "2",
                  "6",
                  "1",
                  "9",
                  "2",
                  "3",
                  "6",
                  "9"
                ]
              ]
            ],
            [
              "pair",
              "charge",
              "1"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF169;&#xF248;&#xF151;&#xF24A;&#xF149;&#xF149;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14C;&#xF248;&#xF145;&#xF17C;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF15F;&#xF245;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14B;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF14A;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14D;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "assume": true,
    "stanza": 1456
  },
  {
    "role": "code",
    "lines": [
      "assume | define electron | make-hash | vector",
      "  (pair mass | decimal:power (minus 31) 9 | vector 1 0 9 3 8 3 5 6)",
      "  (pair charge | minus 1);"
    ],
    "preprocessed": "assume | define electron | make-hash | vector\n  (pair mass | decimal:power (minus 31) 9 | vector 1 0 9 3 8 3 5 6)\n  (pair charge | minus 1);",
    "code": "2100101312321101321010001103123210110110312321000032210101113210100100031232111100032211001113211111332100131232100003213203210013211321000321132101321103322101011132101001001312321100111321332233",
    "parse": [
      "assume",
      [
        -1,
        "define",
        "electron",
        [
          -1,
          "make-hash",
          [
            -1,
            "vector",
            [
              "pair",
              "mass",
              [
                -1,
                "decimal:power",
                [
                  "minus",
                  "31"
                ],
                "9",
                [
                  -1,
                  "vector",
                  "1",
                  "0",
                  "9",
                  "3",
                  "8",
                  "3",
                  "5",
                  "6"
                ]
              ]
            ],
            [
              "pair",
              "charge",
              [
                -1,
                "minus",
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF169;&#xF248;&#xF151;&#xF24A;&#xF149;&#xF14A;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14C;&#xF248;&#xF145;&#xF17C;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF163;&#xF245;&#xF14D;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF14D;&#xF24A;&#xF147;&#xF24A;&#xF14C;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14D;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "assume": true,
    "stanza": 1457
  },
  {
    "role": "code",
    "lines": [
      "assume | define neutron | make-hash | vector",
      "  (pair mass | decimal:power (minus 27) 1 | vector 6 7 4 9 2 7 4 7 1)",
      "  (pair charge 0);"
    ],
    "preprocessed": "assume | define neutron | make-hash | vector\n  (pair mass | decimal:power (minus 27) 1 | vector 6 7 4 9 2 7 4 7 1)\n  (pair charge 0);",
    "code": "21001013123211013210100011131232101101103123210000322101011132101001000312321111000322110011132110113321312321000032110321113210032100132103211132100321113213322101011132101001001320332233",
    "parse": [
      "assume",
      [
        -1,
        "define",
        "neutron",
        [
          -1,
          "make-hash",
          [
            -1,
            "vector",
            [
              "pair",
              "mass",
              [
                -1,
                "decimal:power",
                [
                  "minus",
                  "27"
                ],
                "1",
                [
                  -1,
                  "vector",
                  "6",
                  "7",
                  "4",
                  "9",
                  "2",
                  "7",
                  "4",
                  "7",
                  "1"
                ]
              ]
            ],
            [
              "pair",
              "charge",
              "0"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF169;&#xF248;&#xF151;&#xF24A;&#xF149;&#xF14B;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14C;&#xF248;&#xF145;&#xF17C;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF15F;&#xF245;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14B;&#xF24A;&#xF148;&#xF24A;&#xF14D;&#xF24A;&#xF146;&#xF24A;&#xF14B;&#xF24A;&#xF148;&#xF24A;&#xF14B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14D;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": true,
    "assume": true,
    "stanza": 1458
  },
  {
    "role": "code",
    "lines": [
      "float:= (proton mass) | * (electron mass) | decimal 1836 | vector 1 5 2 6 7 3;"
    ],
    "preprocessed": "float:= (proton mass) | * (electron mass) | decimal 1836 | vector 1 5 2 6 7 3;",
    "code": "21110111322101000101321010010003312321001322101000110321010010003312321110000321110010110031232100003213210132103211032111321132233",
    "parse": [
      "float:=",
      [
        "proton",
        "mass"
      ],
      [
        -1,
        "*",
        [
          "electron",
          "mass"
        ],
        [
          -1,
          "decimal",
          "1836",
          [
            -1,
            "vector",
            "1",
            "5",
            "2",
            "6",
            "7",
            "3"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF149;&#xF149;&#xF24A;&#xF149;&#xF14C;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF149;&#xF14A;&#xF24A;&#xF149;&#xF14C;&#xF245;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF160;&#xF170;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF149;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF14B;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1459
  },
  {
    "role": "code",
    "lines": [
      "float:= (electron mass) | * (proton mass) | decimal 0 | vector 0 0 0 5 4 4 6 1 7;"
    ],
    "preprocessed": "float:= (electron mass) | * (proton mass) | decimal 0 | vector 0 0 0 5 4 4 6 1 7;",
    "code": "211101113221010001103210100100033123210013221010001013210100100033123211100003203123210000320320320321013210032100321103213211132233",
    "parse": [
      "float:=",
      [
        "electron",
        "mass"
      ],
      [
        -1,
        "*",
        [
          "proton",
          "mass"
        ],
        [
          -1,
          "decimal",
          "0",
          [
            -1,
            "vector",
            "0",
            "0",
            "0",
            "5",
            "4",
            "4",
            "6",
            "1",
            "7"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF149;&#xF14A;&#xF24A;&#xF149;&#xF14C;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF149;&#xF149;&#xF24A;&#xF149;&#xF14C;&#xF245;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF144;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF149;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF145;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1460
  },
  {
    "role": "code",
    "lines": [
      "float:= (neutron mass) | * (proton mass) | decimal 1 | vector 0 0 1 3 7 8 4 2;"
    ],
    "preprocessed": "float:= (neutron mass) | * (proton mass) | decimal 1 | vector 0 0 1 3 7 8 4 2;",
    "code": "21110111322101000111321010010003312321001322101000101321010010003312321110000321312321000032032032132113211132100032100321032233",
    "parse": [
      "float:=",
      [
        "neutron",
        "mass"
      ],
      [
        -1,
        "*",
        [
          "proton",
          "mass"
        ],
        [
          -1,
          "decimal",
          "1",
          [
            -1,
            "vector",
            "0",
            "0",
            "1",
            "3",
            "7",
            "8",
            "4",
            "2"
          ]
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF149;&#xF14B;&#xF24A;&#xF149;&#xF14C;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF149;&#xF149;&#xF24A;&#xF149;&#xF14C;&#xF245;&#xF248;&#xF145;&#xF174;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF147;&#xF24A;&#xF14B;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1461
  },
  {
    "role": "code",
    "lines": [
      "float:= (proton charge) | * (electron charge) (minus 1);"
    ],
    "preprocessed": "float:= (proton charge) | * (electron charge) (minus 1);",
    "code": "211101113221010001013210100100133123210013221010001103210100100133221100111321332233",
    "parse": [
      "float:=",
      [
        "proton",
        "charge"
      ],
      [
        -1,
        "*",
        [
          "electron",
          "charge"
        ],
        [
          "minus",
          "1"
        ]
      ]
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF149;&#xF149;&#xF24A;&#xF149;&#xF14D;&#xF245;&#xF248;&#xF14D;&#xF246;&#xF149;&#xF14A;&#xF24A;&#xF149;&#xF14D;&#xF245;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1462
  },
  {
    "role": "code",
    "lines": [
      "float:= (neutron charge) 0;"
    ],
    "preprocessed": "float:= (neutron charge) 0;",
    "code": "2111011132210100011132101001001332032233",
    "parse": [
      "float:=",
      [
        "neutron",
        "charge"
      ],
      "0"
    ],
    "spider": "&#xF145;&#xF17B;&#xF246;&#xF149;&#xF14B;&#xF24A;&#xF149;&#xF14D;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1463
  },
  {
    "role": "code",
    "lines": [
      "define atom | ? x:proton | ? x:proton:neutron | make-hash | vector",
      "  (pair proton $x:proton)",
      "  (pair neutron | - $x:proton:neutron $x:proton)",
      "  (pair electron $x:proton);"
    ],
    "preprocessed": "define atom | ? x:proton | ? x:proton:neutron | make-hash | vector\n  (pair proton $x:proton)\n  (pair neutron | - $x:proton:neutron $x:proton)\n  (pair electron $x:proton);",
    "code": "21101321010010103123211003210100101131232110032101001100312321011011031232100003221010111321010001013023210100101133221010111321010001113123210113023210100110030232101001011332210101113210100011030232101001011332233",
    "parse": [
      "define",
      "atom",
      [
        -1,
        "?",
        "x:proton",
        [
          -1,
          "?",
          "x:proton:neutron",
          [
            -1,
            "make-hash",
            [
              -1,
              "vector",
              [
                "pair",
                "proton",
                [
                  -2,
                  "x:proton"
                ]
              ],
              [
                "pair",
                "neutron",
                [
                  -1,
                  "-",
                  [
                    -2,
                    "x:proton:neutron"
                  ],
                  [
                    -2,
                    "x:proton"
                  ]
                ]
              ],
              [
                "pair",
                "electron",
                [
                  -2,
                  "x:proton"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF14E;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF14F;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF150;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF149;&#xF249;&#xF149;&#xF14F;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14B;&#xF248;&#xF14F;&#xF249;&#xF149;&#xF150;&#xF249;&#xF149;&#xF14F;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF149;&#xF14A;&#xF249;&#xF149;&#xF14F;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1464
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 1) proton) 1;"
    ],
    "preprocessed": "= ((atom 1 1) proton) 1;",
    "code": "2113222101001010321321332101000101332132233",
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "1"
        ],
        "proton"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF149;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF149;&#xF149;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1465
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 1) electron) 1;"
    ],
    "preprocessed": "= ((atom 1 1) electron) 1;",
    "code": "2113222101001010321321332101000110332132233",
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "1"
        ],
        "electron"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF149;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF149;&#xF14A;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1466
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 1) neutron) 0;"
    ],
    "preprocessed": "= ((atom 1 1) neutron) 0;",
    "code": "2113222101001010321321332101000111332032233",
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "1"
        ],
        "neutron"
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF149;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF149;&#xF14B;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1467
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 2) proton) 1;"
    ],
    "preprocessed": "= ((atom 1 2) proton) 1;",
    "code": "21132221010010103213210332101000101332132233",
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "2"
        ],
        "proton"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF149;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF149;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1468
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 2) electron) 1;"
    ],
    "preprocessed": "= ((atom 1 2) electron) 1;",
    "code": "21132221010010103213210332101000110332132233",
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "2"
        ],
        "electron"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF149;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF14A;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1469
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 2) neutron) 1;"
    ],
    "preprocessed": "= ((atom 1 2) neutron) 1;",
    "code": "21132221010010103213210332101000111332132233",
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "2"
        ],
        "neutron"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF149;&#xF14E;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF149;&#xF14B;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1470
  },
  {
    "role": "code",
    "lines": [
      "class elemental (proton isotope:list)",
      "  (method proton $proton)",
      "  (method isotope:list $isotope:list)",
      "  (method electron $proton)",
      "  (method neutron:list | map (? x | - $x $proton) $isotope:list);"
    ],
    "preprocessed": "class elemental (proton isotope:list)\n  (method proton $proton)\n  (method isotope:list $isotope:list)\n  (method electron $proton)\n  (method neutron:list | map (? x | - $x $proton) $isotope:list);",
    "code": "210000111032101001101322101000101321010011103322100000100321010001013023210100010133221000001003210100111030232101001110332210000010032101000110302321010001013322100000100321010011113123210110103221100321010013123210113023210100130232101000101330232101001110332233",
    "parse": [
      "class",
      "elemental",
      [
        "proton",
        "isotope:list"
      ],
      [
        "method",
        "proton",
        [
          -2,
          "proton"
        ]
      ],
      [
        "method",
        "isotope:list",
        [
          -2,
          "isotope:list"
        ]
      ],
      [
        "method",
        "electron",
        [
          -2,
          "proton"
        ]
      ],
      [
        "method",
        "neutron:list",
        [
          -1,
          "map",
          [
            "?",
            "x",
            [
              -1,
              "-",
              [
                -2,
                "x"
              ],
              [
                -2,
                "proton"
              ]
            ]
          ],
          [
            -2,
            "isotope:list"
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF149;&#xF151;&#xF246;&#xF149;&#xF149;&#xF24A;&#xF149;&#xF152;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF149;&#xF149;&#xF249;&#xF149;&#xF149;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF149;&#xF152;&#xF249;&#xF149;&#xF152;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF149;&#xF14A;&#xF249;&#xF149;&#xF149;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF149;&#xF153;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14F;&#xF249;&#xF16D;&#xF249;&#xF149;&#xF149;&#xF245;&#xF249;&#xF149;&#xF152;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1471
  },
  {
    "role": "code",
    "lines": [
      "intro hydrogen;"
    ],
    "preprocessed": "intro hydrogen;",
    "code": "2100103210101000032233",
    "parse": [
      "intro",
      "hydrogen"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 1472
  },
  {
    "role": "code",
    "lines": [
      "intro helium;"
    ],
    "preprocessed": "intro helium;",
    "code": "2100103210101000132233",
    "parse": [
      "intro",
      "helium"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF155;&#xF24B;",
    "dt": false,
    "stanza": 1473
  },
  {
    "role": "code",
    "lines": [
      "intro carbon;"
    ],
    "preprocessed": "intro carbon;",
    "code": "2100103210101001032233",
    "parse": [
      "intro",
      "carbon"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 1474
  },
  {
    "role": "code",
    "lines": [
      "intro nitrogen;"
    ],
    "preprocessed": "intro nitrogen;",
    "code": "2100103210101001132233",
    "parse": [
      "intro",
      "nitrogen"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1475
  },
  {
    "role": "code",
    "lines": [
      "intro oxygen;"
    ],
    "preprocessed": "intro oxygen;",
    "code": "2100103210101010032233",
    "parse": [
      "intro",
      "oxygen"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF158;&#xF24B;",
    "dt": false,
    "stanza": 1476
  },
  {
    "role": "code",
    "lines": [
      "define hydrogen | elemental new 1 | vector 1 2;"
    ],
    "preprocessed": "define hydrogen | elemental new 1 | vector 1 2;",
    "code": "21101321010100003123210100110132111100103213123210000321321032233",
    "parse": [
      "define",
      "hydrogen",
      [
        -1,
        "elemental",
        "new",
        "1",
        [
          -1,
          "vector",
          "1",
          "2"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF154;&#xF248;&#xF149;&#xF151;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": true,
    "stanza": 1477
  },
  {
    "role": "code",
    "lines": [
      "define helium | elemental new 2 | vector 2 4;"
    ],
    "preprocessed": "define helium | elemental new 2 | vector 2 4;",
    "code": "21101321010100013123210100110132111100103210312321000032103210032233",
    "parse": [
      "define",
      "helium",
      [
        -1,
        "elemental",
        "new",
        "2",
        [
          -1,
          "vector",
          "2",
          "4"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF155;&#xF248;&#xF149;&#xF151;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF146;&#xF248;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24B;",
    "dt": true,
    "stanza": 1478
  },
  {
    "role": "code",
    "lines": [
      "define carbon | elemental new 6 | vector 12 13;"
    ],
    "preprocessed": "define carbon | elemental new 6 | vector 12 13;",
    "code": "211013210101001031232101001101321111001032110312321000032110032110132233",
    "parse": [
      "define",
      "carbon",
      [
        -1,
        "elemental",
        "new",
        "6",
        [
          -1,
          "vector",
          "12",
          "13"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF156;&#xF248;&#xF149;&#xF151;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF248;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF151;&#xF24B;",
    "dt": true,
    "stanza": 1479
  },
  {
    "role": "code",
    "lines": [
      "define nitrogen | elemental new 7 | vector 14 15;"
    ],
    "preprocessed": "define nitrogen | elemental new 7 | vector 14 15;",
    "code": "211013210101001131232101001101321111001032111312321000032111032111132233",
    "parse": [
      "define",
      "nitrogen",
      [
        -1,
        "elemental",
        "new",
        "7",
        [
          -1,
          "vector",
          "14",
          "15"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF157;&#xF248;&#xF149;&#xF151;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14B;&#xF248;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF153;&#xF24B;",
    "dt": true,
    "stanza": 1480
  },
  {
    "role": "code",
    "lines": [
      "define oxygen | elemental new 16 | vector 16 17 18;"
    ],
    "preprocessed": "define oxygen | elemental new 16 | vector 16 17 18;",
    "code": "21101321010101003123210100110132111100103210000312321000032100003210001321001032233",
    "parse": [
      "define",
      "oxygen",
      [
        -1,
        "elemental",
        "new",
        "16",
        [
          -1,
          "vector",
          "16",
          "17",
          "18"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF158;&#xF248;&#xF149;&#xF151;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF154;&#xF248;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF24A;&#xF156;&#xF24B;",
    "dt": true,
    "stanza": 1481
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen proton) 1;"
    ],
    "preprocessed": "= (hydrogen proton) 1;",
    "code": "21132210101000032101000101332132233",
    "parse": [
      "=",
      [
        "hydrogen",
        "proton"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF154;&#xF24A;&#xF149;&#xF149;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1482
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen electron) 1;"
    ],
    "preprocessed": "= (hydrogen electron) 1;",
    "code": "21132210101000032101000110332132233",
    "parse": [
      "=",
      [
        "hydrogen",
        "electron"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF154;&#xF24A;&#xF149;&#xF14A;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1483
  },
  {
    "role": "code",
    "lines": [
      "list= (hydrogen isotope:list) | vector 1 2;"
    ],
    "preprocessed": "list= (hydrogen isotope:list) | vector 1 2;",
    "code": "210101013221010100003210100111033123210000321321032233",
    "parse": [
      "list=",
      [
        "hydrogen",
        "isotope:list"
      ],
      [
        -1,
        "vector",
        "1",
        "2"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF149;&#xF154;&#xF24A;&#xF149;&#xF152;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1484
  },
  {
    "role": "code",
    "lines": [
      "list= (hydrogen neutron:list) | vector 0 1;"
    ],
    "preprocessed": "list= (hydrogen neutron:list) | vector 0 1;",
    "code": "21010101322101010000321010011113312321000032032132233",
    "parse": [
      "list=",
      [
        "hydrogen",
        "neutron:list"
      ],
      [
        -1,
        "vector",
        "0",
        "1"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF149;&#xF154;&#xF24A;&#xF149;&#xF153;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1485
  },
  {
    "role": "code",
    "lines": [
      "= (carbon proton) 6;"
    ],
    "preprocessed": "= (carbon proton) 6;",
    "code": "2113221010100103210100010133211032233",
    "parse": [
      "=",
      [
        "carbon",
        "proton"
      ],
      "6"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF156;&#xF24A;&#xF149;&#xF149;&#xF245;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1486
  },
  {
    "role": "code",
    "lines": [
      "= (carbon electron) 6;"
    ],
    "preprocessed": "= (carbon electron) 6;",
    "code": "2113221010100103210100011033211032233",
    "parse": [
      "=",
      [
        "carbon",
        "electron"
      ],
      "6"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF156;&#xF24A;&#xF149;&#xF14A;&#xF245;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1487
  },
  {
    "role": "code",
    "lines": [
      "list= (carbon isotope:list) | vector 12 13;"
    ],
    "preprocessed": "list= (carbon isotope:list) | vector 12 13;",
    "code": "21010101322101010010321010011103312321000032110032110132233",
    "parse": [
      "list=",
      [
        "carbon",
        "isotope:list"
      ],
      [
        -1,
        "vector",
        "12",
        "13"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF149;&#xF156;&#xF24A;&#xF149;&#xF152;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1488
  },
  {
    "role": "code",
    "lines": [
      "list= (carbon neutron:list) | vector 6 7;"
    ],
    "preprocessed": "list= (carbon neutron:list) | vector 6 7;",
    "code": "210101013221010100103210100111133123210000321103211132233",
    "parse": [
      "list=",
      [
        "carbon",
        "neutron:list"
      ],
      [
        -1,
        "vector",
        "6",
        "7"
      ]
    ],
    "spider": "&#xF145;&#xF159;&#xF246;&#xF149;&#xF156;&#xF24A;&#xF149;&#xF153;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1489
  },
  {
    "role": "code",
    "lines": [
      "class molecule (elemental:list)",
      "  (method elemental:list $elemental:list)",
      "  (method count | lambda ((e elemental)) |",
      "    list-length | select-match (? x | = (x proton) (e proton)) $elemental:list);"
    ],
    "preprocessed": "class molecule (elemental:list)\n  (method elemental:list $elemental:list)\n  (method count | lambda ((e elemental)) |\n    list-length | select-match (? x | = (x proton) (e proton)) $elemental:list);",
    "code": "21000011103210101010132210101011033221000001003210101011030232101010110332210000010032111101103123211010322211000132101001101333123210100113123211001013221100321010013123211322101001321010001013322110001321010001013330232101010110332233",
    "parse": [
      "class",
      "molecule",
      [
        "elemental:list"
      ],
      [
        "method",
        "elemental:list",
        [
          -2,
          "elemental:list"
        ]
      ],
      [
        "method",
        "count",
        [
          -1,
          "lambda",
          [
            [
              "e",
              "elemental"
            ]
          ],
          [
            -1,
            "list-length",
            [
              -1,
              "select-match",
              [
                "?",
                "x",
                [
                  -1,
                  "=",
                  [
                    "x",
                    "proton"
                  ],
                  [
                    "e",
                    "proton"
                  ]
                ]
              ],
              [
                -2,
                "elemental:list"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF149;&#xF159;&#xF246;&#xF149;&#xF15A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF149;&#xF15A;&#xF249;&#xF149;&#xF15A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF17A;&#xF248;&#xF15E;&#xF246;&#xF246;&#xF175;&#xF24A;&#xF149;&#xF151;&#xF245;&#xF245;&#xF248;&#xF145;&#xF157;&#xF248;&#xF145;&#xF169;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF246;&#xF16D;&#xF24A;&#xF149;&#xF149;&#xF245;&#xF246;&#xF175;&#xF24A;&#xF149;&#xF149;&#xF245;&#xF245;&#xF249;&#xF149;&#xF15A;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1490
  },
  {
    "role": "code",
    "lines": [
      "intro hydrogen:2;"
    ],
    "preprocessed": "intro hydrogen:2;",
    "code": "2100103210101011132233",
    "parse": [
      "intro",
      "hydrogen:2"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 1491
  },
  {
    "role": "code",
    "lines": [
      "define hydrogen:2 | molecule new | vector $hydrogen $hydrogen;"
    ],
    "preprocessed": "define hydrogen:2 | molecule new | vector $hydrogen $hydrogen;",
    "code": "21101321010101113123210101010132111100103123210000302321010100003023210101000032233",
    "parse": [
      "define",
      "hydrogen:2",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF15B;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 1492
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $hydrogen) 2;"
    ],
    "preprocessed": "= (hydrogen:2 count $hydrogen) 2;",
    "code": "2113221010101113211110110302321010100003321032233",
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15B;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1493
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $carbon) 0;"
    ],
    "preprocessed": "= (hydrogen:2 count $carbon) 0;",
    "code": "211322101010111321111011030232101010010332032233",
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15B;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1494
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $nitrogen) 0;"
    ],
    "preprocessed": "= (hydrogen:2 count $nitrogen) 0;",
    "code": "211322101010111321111011030232101010011332032233",
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15B;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1495
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $oxygen) 0;"
    ],
    "preprocessed": "= (hydrogen:2 count $oxygen) 0;",
    "code": "211322101010111321111011030232101010100332032233",
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15B;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1496
  },
  {
    "role": "code",
    "lines": [
      "intro oxygen:2;"
    ],
    "preprocessed": "intro oxygen:2;",
    "code": "2100103210101100032233",
    "parse": [
      "intro",
      "oxygen:2"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF15C;&#xF24B;",
    "dt": false,
    "stanza": 1497
  },
  {
    "role": "code",
    "lines": [
      "define oxygen:2 | molecule new | vector $oxygen $oxygen;"
    ],
    "preprocessed": "define oxygen:2 | molecule new | vector $oxygen $oxygen;",
    "code": "21101321010110003123210101010132111100103123210000302321010101003023210101010032233",
    "parse": [
      "define",
      "oxygen:2",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "oxygen"
          ],
          [
            -2,
            "oxygen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF15C;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF158;&#xF249;&#xF149;&#xF158;&#xF24B;",
    "dt": true,
    "stanza": 1498
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $hydrogen) 0;"
    ],
    "preprocessed": "= (oxygen:2 count $hydrogen) 0;",
    "code": "211322101011000321111011030232101010000332032233",
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15C;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1499
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $carbon) 0;"
    ],
    "preprocessed": "= (oxygen:2 count $carbon) 0;",
    "code": "211322101011000321111011030232101010010332032233",
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15C;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1500
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $nitrogen) 0;"
    ],
    "preprocessed": "= (oxygen:2 count $nitrogen) 0;",
    "code": "211322101011000321111011030232101010011332032233",
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15C;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1501
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $oxygen) 2;"
    ],
    "preprocessed": "= (oxygen:2 count $oxygen) 2;",
    "code": "2113221010110003211110110302321010101003321032233",
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15C;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1502
  },
  {
    "role": "code",
    "lines": [
      "intro oxygen:3;"
    ],
    "preprocessed": "intro oxygen:3;",
    "code": "2100103210101100132233",
    "parse": [
      "intro",
      "oxygen:3"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF15D;&#xF24B;",
    "dt": false,
    "stanza": 1503
  },
  {
    "role": "code",
    "lines": [
      "define oxygen:3 | molecule new | vector $oxygen $oxygen $oxygen;"
    ],
    "preprocessed": "define oxygen:3 | molecule new | vector $oxygen $oxygen $oxygen;",
    "code": "2110132101011001312321010101013211110010312321000030232101010100302321010101003023210101010032233",
    "parse": [
      "define",
      "oxygen:3",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "oxygen"
          ],
          [
            -2,
            "oxygen"
          ],
          [
            -2,
            "oxygen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF15D;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF158;&#xF249;&#xF149;&#xF158;&#xF249;&#xF149;&#xF158;&#xF24B;",
    "dt": true,
    "stanza": 1504
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $hydrogen) 0;"
    ],
    "preprocessed": "= (oxygen:3 count $hydrogen) 0;",
    "code": "211322101011001321111011030232101010000332032233",
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15D;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1505
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $carbon) 0;"
    ],
    "preprocessed": "= (oxygen:3 count $carbon) 0;",
    "code": "211322101011001321111011030232101010010332032233",
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15D;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1506
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $nitrogen) 0;"
    ],
    "preprocessed": "= (oxygen:3 count $nitrogen) 0;",
    "code": "211322101011001321111011030232101010011332032233",
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15D;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1507
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $oxygen) 3;"
    ],
    "preprocessed": "= (oxygen:3 count $oxygen) 3;",
    "code": "2113221010110013211110110302321010101003321132233",
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "3"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15D;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1508
  },
  {
    "role": "code",
    "lines": [
      "intro water;"
    ],
    "preprocessed": "intro water;",
    "code": "2100103210101101032233",
    "parse": [
      "intro",
      "water"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1509
  },
  {
    "role": "code",
    "lines": [
      "define water | molecule new | vector $hydrogen $hydrogen $oxygen;"
    ],
    "preprocessed": "define water | molecule new | vector $hydrogen $hydrogen $oxygen;",
    "code": "2110132101011010312321010101013211110010312321000030232101010000302321010100003023210101010032233",
    "parse": [
      "define",
      "water",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "oxygen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF15E;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF158;&#xF24B;",
    "dt": true,
    "stanza": 1510
  },
  {
    "role": "code",
    "lines": [
      "= (water count $hydrogen) 2;"
    ],
    "preprocessed": "= (water count $hydrogen) 2;",
    "code": "2113221010110103211110110302321010100003321032233",
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15E;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1511
  },
  {
    "role": "code",
    "lines": [
      "= (water count $carbon) 0;"
    ],
    "preprocessed": "= (water count $carbon) 0;",
    "code": "211322101011010321111011030232101010010332032233",
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15E;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1512
  },
  {
    "role": "code",
    "lines": [
      "= (water count $nitrogen) 0;"
    ],
    "preprocessed": "= (water count $nitrogen) 0;",
    "code": "211322101011010321111011030232101010011332032233",
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15E;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1513
  },
  {
    "role": "code",
    "lines": [
      "= (water count $oxygen) 1;"
    ],
    "preprocessed": "= (water count $oxygen) 1;",
    "code": "211322101011010321111011030232101010100332132233",
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15E;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1514
  },
  {
    "role": "code",
    "lines": [
      "intro nitrogen:2;"
    ],
    "preprocessed": "intro nitrogen:2;",
    "code": "2100103210101101132233",
    "parse": [
      "intro",
      "nitrogen:2"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 1515
  },
  {
    "role": "code",
    "lines": [
      "define nitrogen:2 | molecule new | vector $nitrogen $nitrogen;"
    ],
    "preprocessed": "define nitrogen:2 | molecule new | vector $nitrogen $nitrogen;",
    "code": "21101321010110113123210101010132111100103123210000302321010100113023210101001132233",
    "parse": [
      "define",
      "nitrogen:2",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "nitrogen"
          ],
          [
            -2,
            "nitrogen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF15F;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF157;&#xF249;&#xF149;&#xF157;&#xF24B;",
    "dt": true,
    "stanza": 1516
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $hydrogen) 0;"
    ],
    "preprocessed": "= (nitrogen:2 count $hydrogen) 0;",
    "code": "211322101011011321111011030232101010000332032233",
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15F;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1517
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $carbon) 0;"
    ],
    "preprocessed": "= (nitrogen:2 count $carbon) 0;",
    "code": "211322101011011321111011030232101010010332032233",
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15F;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1518
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $nitrogen) 2;"
    ],
    "preprocessed": "= (nitrogen:2 count $nitrogen) 2;",
    "code": "2113221010110113211110110302321010100113321032233",
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15F;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1519
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $oxygen) 0;"
    ],
    "preprocessed": "= (nitrogen:2 count $oxygen) 0;",
    "code": "211322101011011321111011030232101010100332032233",
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF15F;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1520
  },
  {
    "role": "code",
    "lines": [
      "intro ammonia;"
    ],
    "preprocessed": "intro ammonia;",
    "code": "2100103210101110032233",
    "parse": [
      "intro",
      "ammonia"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF160;&#xF24B;",
    "dt": false,
    "stanza": 1521
  },
  {
    "role": "code",
    "lines": [
      "define ammonia | molecule new | vector",
      "  $nitrogen $hydrogen $hydrogen $hydrogen;"
    ],
    "preprocessed": "define ammonia | molecule new | vector\n  $nitrogen $hydrogen $hydrogen $hydrogen;",
    "code": "211013210101110031232101010101321111001031232100003023210101001130232101010000302321010100003023210101000032233",
    "parse": [
      "define",
      "ammonia",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "nitrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF160;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF157;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 1522
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $hydrogen) 3;"
    ],
    "preprocessed": "= (ammonia count $hydrogen) 3;",
    "code": "2113221010111003211110110302321010100003321132233",
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "3"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF160;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1523
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $carbon) 0;"
    ],
    "preprocessed": "= (ammonia count $carbon) 0;",
    "code": "211322101011100321111011030232101010010332032233",
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF160;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1524
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $nitrogen) 1;"
    ],
    "preprocessed": "= (ammonia count $nitrogen) 1;",
    "code": "211322101011100321111011030232101010011332132233",
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF160;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1525
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $oxygen) 0;"
    ],
    "preprocessed": "= (ammonia count $oxygen) 0;",
    "code": "211322101011100321111011030232101010100332032233",
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF160;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1526
  },
  {
    "role": "code",
    "lines": [
      "intro methane;"
    ],
    "preprocessed": "intro methane;",
    "code": "2100103210101110132233",
    "parse": [
      "intro",
      "methane"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 1527
  },
  {
    "role": "code",
    "lines": [
      "define methane | molecule new | vector",
      "  $carbon $hydrogen $hydrogen $hydrogen $hydrogen;"
    ],
    "preprocessed": "define methane | molecule new | vector\n  $carbon $hydrogen $hydrogen $hydrogen $hydrogen;",
    "code": "21101321010111013123210101010132111100103123210000302321010100103023210101000030232101010000302321010100003023210101000032233",
    "parse": [
      "define",
      "methane",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "carbon"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF161;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF156;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 1528
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $hydrogen) 4;"
    ],
    "preprocessed": "= (methane count $hydrogen) 4;",
    "code": "21132210101110132111101103023210101000033210032233",
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "4"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF161;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1529
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $carbon) 1;"
    ],
    "preprocessed": "= (methane count $carbon) 1;",
    "code": "211322101011101321111011030232101010010332132233",
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF161;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1530
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $nitrogen) 0;"
    ],
    "preprocessed": "= (methane count $nitrogen) 0;",
    "code": "211322101011101321111011030232101010011332032233",
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF161;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1531
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $oxygen) 0;"
    ],
    "preprocessed": "= (methane count $oxygen) 0;",
    "code": "211322101011101321111011030232101010100332032233",
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF161;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1532
  },
  {
    "role": "code",
    "lines": [
      "intro ethane;"
    ],
    "preprocessed": "intro ethane;",
    "code": "2100103210101111032233",
    "parse": [
      "intro",
      "ethane"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF162;&#xF24B;",
    "dt": false,
    "stanza": 1533
  },
  {
    "role": "code",
    "lines": [
      "define ethane | molecule new | vector",
      "  $hydrogen $hydrogen $hydrogen",
      "  $carbon $carbon",
      "  $hydrogen $hydrogen $hydrogen;"
    ],
    "preprocessed": "define ethane | molecule new | vector\n  $hydrogen $hydrogen $hydrogen\n  $carbon $carbon\n  $hydrogen $hydrogen $hydrogen;",
    "code": "21101321010111103123210101010132111100103123210000302321010100003023210101000030232101010000302321010100103023210101001030232101010000302321010100003023210101000032233",
    "parse": [
      "define",
      "ethane",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "carbon"
          ],
          [
            -2,
            "carbon"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF162;&#xF248;&#xF149;&#xF159;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF156;&#xF249;&#xF149;&#xF156;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF249;&#xF149;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 1534
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $hydrogen) 6;"
    ],
    "preprocessed": "= (ethane count $hydrogen) 6;",
    "code": "21132210101111032111101103023210101000033211032233",
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "6"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF162;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF154;&#xF245;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1535
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $carbon) 2;"
    ],
    "preprocessed": "= (ethane count $carbon) 2;",
    "code": "2113221010111103211110110302321010100103321032233",
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "2"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF162;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF156;&#xF245;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1536
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $nitrogen) 0;"
    ],
    "preprocessed": "= (ethane count $nitrogen) 0;",
    "code": "211322101011110321111011030232101010011332032233",
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF162;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF157;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1537
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $oxygen) 0;"
    ],
    "preprocessed": "= (ethane count $oxygen) 0;",
    "code": "211322101011110321111011030232101010100332032233",
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "spider": "&#xF147;&#xF246;&#xF149;&#xF162;&#xF24A;&#xF147;&#xF17A;&#xF249;&#xF149;&#xF158;&#xF245;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1538
  },
  {
    "role": "file",
    "lines": [
      "== COS_CommentBase2 =="
    ],
    "stanza": 1539
  },
  {
    "role": "comment",
    "lines": [
      "# The following parts of the message are the beginnings",
      "# of embedding an alternate visual primer"
    ],
    "section_description": "end of part 2, start of part 3",
    "section_category": "NOTE",
    "section_index": 43,
    "stanza": 1540
  },
  {
    "role": "code",
    "lines": [
      "intro part3;"
    ],
    "preprocessed": "intro part3;",
    "code": "2100103210101111132233",
    "parse": [
      "intro",
      "part3"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1541
  },
  {
    "role": "file",
    "lines": [
      "== COS_Unless =="
    ],
    "stanza": 1542
  },
  {
    "role": "comment",
    "lines": [
      "# for embedded image-and-logic-based primer"
    ],
    "section_description": "simulating unless gates",
    "section_category": "GATE",
    "section_index": 44,
    "stanza": 1543
  },
  {
    "role": "comment",
    "lines": [
      "# practice with pure logic gate"
    ],
    "stanza": 1544
  },
  {
    "role": "comment",
    "lines": [
      "# X unless Y = (X if Y=0, otherwise 0)"
    ],
    "stanza": 1545
  },
  {
    "role": "code",
    "lines": [
      "intro unless;"
    ],
    "preprocessed": "intro unless;",
    "code": "2100103210110000032233",
    "parse": [
      "intro",
      "unless"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1546
  },
  {
    "role": "code",
    "lines": [
      "define unless | ? x | ? y | and $x | not $y;"
    ],
    "preprocessed": "define unless | ? x | ? y | and $x | not $y;",
    "code": "211013210110000031232110032101001312321100321111013123211030232101001312321013023211110132233",
    "parse": [
      "define",
      "unless",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "and",
            [
              -2,
              "x"
            ],
            [
              -1,
              "not",
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF164;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF14A;&#xF249;&#xF16D;&#xF248;&#xF149;&#xF249;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1547
  },
  {
    "role": "comment",
    "lines": [
      "# if second input is true, output is blocked (false)",
      "# if second input is false, output copies first input"
    ],
    "stanza": 1548
  },
  {
    "role": "code",
    "lines": [
      "= $false | unless $false $false;"
    ],
    "preprocessed": "= $false | unless $false $false;",
    "code": "2113023203123210110000030232030232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF149;&#xF164;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1549
  },
  {
    "role": "code",
    "lines": [
      "= $true | unless $true $false;"
    ],
    "preprocessed": "= $true | unless $true $false;",
    "code": "2113023213123210110000030232130232032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF149;&#xF164;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1550
  },
  {
    "role": "code",
    "lines": [
      "= $false | unless $false $true;"
    ],
    "preprocessed": "= $false | unless $false $true;",
    "code": "2113023203123210110000030232030232132233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF149;&#xF164;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1551
  },
  {
    "role": "code",
    "lines": [
      "= $false | unless $true $true;"
    ],
    "preprocessed": "= $false | unless $true $true;",
    "code": "2113023203123210110000030232130232132233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF149;&#xF164;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1552
  },
  {
    "role": "comment",
    "lines": [
      "# To do: add a simple simulator for non-grid-based",
      "# logic -- much simpler to understand than",
      "# grid-based"
    ],
    "stanza": 1553
  },
  {
    "role": "comment",
    "lines": [
      "# On to a grid-based logic simulation",
      "# first, need unbounded, mutable matrices"
    ],
    "stanza": 1554
  },
  {
    "role": "code",
    "lines": [
      "intro make-matrix;"
    ],
    "preprocessed": "intro make-matrix;",
    "code": "2100103210110000132233",
    "parse": [
      "intro",
      "make-matrix"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1555
  },
  {
    "role": "code",
    "lines": [
      "define make-matrix | ? default |",
      "   make-cell | hash-default $default;"
    ],
    "preprocessed": "define make-matrix | ? default |\n   make-cell | hash-default $default;",
    "code": "2110132101100001312321100321011010031232110113123210110011302321011010032233",
    "parse": [
      "define",
      "make-matrix",
      [
        -1,
        "?",
        "default",
        [
          -1,
          "make-cell",
          [
            -1,
            "hash-default",
            [
              -2,
              "default"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF165;&#xF248;&#xF150;&#xF24A;&#xF146;&#xF178;&#xF248;&#xF15F;&#xF248;&#xF146;&#xF177;&#xF249;&#xF146;&#xF178;&#xF24B;",
    "dt": true,
    "stanza": 1556
  },
  {
    "role": "code",
    "lines": [
      "intro matrix-set;"
    ],
    "preprocessed": "intro matrix-set;",
    "code": "2100103210110001032233",
    "parse": [
      "intro",
      "matrix-set"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF166;&#xF24B;",
    "dt": false,
    "stanza": 1557
  },
  {
    "role": "code",
    "lines": [
      "define matrix-set | ? m | ? x | ? addr |",
      "  set! $m | hash-add (get! $m) $addr $x;"
    ],
    "preprocessed": "define matrix-set | ? m | ? x | ? addr |\n  set! $m | hash-add (get! $m) $addr $x;",
    "code": "2110132101100010312321100321011000113123211003210100131232110032101100100312321110030232101100011312321010111132211101302321011000113302321011001003023210100132233",
    "parse": [
      "define",
      "matrix-set",
      [
        -1,
        "?",
        "m",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "?",
            "addr",
            [
              -1,
              "set!",
              [
                -2,
                "m"
              ],
              [
                -1,
                "hash-add",
                [
                  "get!",
                  [
                    -2,
                    "m"
                  ]
                ],
                [
                  -2,
                  "addr"
                ],
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF166;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF167;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF168;&#xF248;&#xF160;&#xF249;&#xF149;&#xF167;&#xF248;&#xF146;&#xF173;&#xF246;&#xF161;&#xF249;&#xF149;&#xF167;&#xF245;&#xF249;&#xF149;&#xF168;&#xF249;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1558
  },
  {
    "role": "code",
    "lines": [
      "intro matrix-get;"
    ],
    "preprocessed": "intro matrix-get;",
    "code": "2100103210110010132233",
    "parse": [
      "intro",
      "matrix-get"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF169;&#xF24B;",
    "dt": false,
    "stanza": 1559
  },
  {
    "role": "code",
    "lines": [
      "define matrix-get | ? m | ? addr |",
      "  hash-ref (get! $m) $addr;"
    ],
    "preprocessed": "define matrix-get | ? m | ? addr |\n  hash-ref (get! $m) $addr;",
    "code": "211013210110010131232110032101100011312321100321011001003123210110001322111013023210110001133023210110010032233",
    "parse": [
      "define",
      "matrix-get",
      [
        -1,
        "?",
        "m",
        [
          -1,
          "?",
          "addr",
          [
            -1,
            "hash-ref",
            [
              "get!",
              [
                -2,
                "m"
              ]
            ],
            [
              -2,
              "addr"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF169;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF167;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF168;&#xF248;&#xF146;&#xF175;&#xF246;&#xF161;&#xF249;&#xF149;&#xF167;&#xF245;&#xF249;&#xF149;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1560
  },
  {
    "role": "code",
    "lines": [
      "define test-matrix | make-matrix 0;"
    ],
    "preprocessed": "define test-matrix | make-matrix 0;",
    "code": "21101321011001103123210110000132032233",
    "parse": [
      "define",
      "test-matrix",
      [
        -1,
        "make-matrix",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF16A;&#xF248;&#xF149;&#xF165;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1561
  },
  {
    "role": "code",
    "lines": [
      "= 0 | matrix-get $test-matrix | vector 1 2 3;"
    ],
    "preprocessed": "= 0 | matrix-get $test-matrix | vector 1 2 3;",
    "code": "211320312321011001013023210110011031232100003213210321132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "matrix-get",
        [
          -2,
          "test-matrix"
        ],
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16A;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1562
  },
  {
    "role": "code",
    "lines": [
      "matrix-set $test-matrix 10 | vector 1 2 3;"
    ],
    "preprocessed": "matrix-set $test-matrix 10 | vector 1 2 3;",
    "code": "21011000103023210110011032101031232100003213210321132233",
    "parse": [
      "matrix-set",
      [
        -2,
        "test-matrix"
      ],
      "10",
      [
        -1,
        "vector",
        "1",
        "2",
        "3"
      ]
    ],
    "spider": "&#xF149;&#xF166;&#xF249;&#xF149;&#xF16A;&#xF24A;&#xF14E;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1563
  },
  {
    "role": "code",
    "lines": [
      "= 10 | matrix-get $test-matrix | vector 1 2 3;"
    ],
    "preprocessed": "= 10 | matrix-get $test-matrix | vector 1 2 3;",
    "code": "211321010312321011001013023210110011031232100003213210321132233",
    "parse": [
      "=",
      "10",
      [
        -1,
        "matrix-get",
        [
          -2,
          "test-matrix"
        ],
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF14E;&#xF248;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16A;&#xF248;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1564
  },
  {
    "role": "comment",
    "lines": [
      "# go through a circuit of unless gates and analyze data flow"
    ],
    "stanza": 1565
  },
  {
    "role": "code",
    "lines": [
      "define unless-phase-1 | ? circuit |",
      "  assign state (make-matrix $false) |",
      "  begin",
      "    (map ",
      "     (? gate |",
      "    assign x1 (list-ref $gate 0) |",
      "    assign y1 (list-ref $gate 1) |",
      "    assign x2 (list-ref $gate 2) |",
      "    assign y2 (list-ref $gate 3) |",
      "    assign v (list-ref $gate 4) |",
      "    (if (= $x1 $x2)",
      "        (begin",
      "          (matrix-set $state $v | vector $x2 $y2 vert-value)",
      "          (matrix-set $state $true | vector $x2 $y2 vert-have)",
      "          (matrix-set $state $true | vector $x1 $y1 vert-want)",
      "            $gate)",
      "        (begin",
      "          (matrix-set $state $v | vector $x2 $y2 horiz-value)",
      "          (matrix-set $state $true | vector $x2 $y2 horiz-have)",
      "          (matrix-set $state $true | vector $x1 $y1 horiz-want)",
      "          $gate)))",
      "     $circuit)",
      "    $state;"
    ],
    "preprocessed": "define unless-phase-1 | ? circuit |\n  assign state (make-matrix $false) |\n  begin\n    (map \n     (? gate |\n    assign x1 (list-ref $gate 0) |\n    assign y1 (list-ref $gate 1) |\n    assign x2 (list-ref $gate 2) |\n    assign y2 (list-ref $gate 3) |\n    assign v (list-ref $gate 4) |\n    (if (= $x1 $x2)\n        (begin\n          (matrix-set $state $v | vector $x2 $y2 vert-value)\n          (matrix-set $state $true | vector $x2 $y2 vert-have)\n          (matrix-set $state $true | vector $x1 $y1 vert-want)\n            $gate)\n        (begin\n          (matrix-set $state $v | vector $x2 $y2 horiz-value)\n          (matrix-set $state $true | vector $x2 $y2 horiz-have)\n          (matrix-set $state $true | vector $x1 $y1 horiz-want)\n          $gate)))\n     $circuit)\n    $state;",
    "code
    "parse": [
      "define",
      "unless-phase-1",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "assign",
          "state",
          [
            "make-matrix",
            [
              -2,
              "false"
            ]
          ],
          [
            -1,
            "begin",
            [
              "map",
              [
                "?",
                "gate",
                [
                  -1,
                  "assign",
                  "x1",
                  [
                    "list-ref",
                    [
                      -2,
                      "gate"
                    ],
                    "0"
                  ],
                  [
                    -1,
                    "assign",
                    "y1",
                    [
                      "list-ref",
                      [
                        -2,
                        "gate"
                      ],
                      "1"
                    ],
                    [
                      -1,
                      "assign",
                      "x2",
                      [
                        "list-ref",
                        [
                          -2,
                          "gate"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "assign",
                        "y2",
                        [
                          "list-ref",
                          [
                            -2,
                            "gate"
                          ],
                          "3"
                        ],
                        [
                          -1,
                          "assign",
                          "v",
                          [
                            "list-ref",
                            [
                              -2,
                              "gate"
                            ],
                            "4"
                          ],
                          [
                            -1,
                            [
                              "if",
                              [
                                "=",
                                [
                                  -2,
                                  "x1"
                                ],
                                [
                                  -2,
                                  "x2"
                                ]
                              ],
                              [
                                "begin",
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "v"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "vert-value"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "vert-have"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-want"
                                  ]
                                ],
                                [
                                  -2,
                                  "gate"
                                ]
                              ],
                              [
                                "begin",
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "v"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "horiz-value"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "horiz-have"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-want"
                                  ]
                                ],
                                [
                                  -2,
                                  "gate"
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                -2,
                "circuit"
              ]
            ],
            [
              -2,
              "state"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF16B;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF16D;&#xF246;&#xF149;&#xF165;&#xF249;&#xF144;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF16E;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF16F;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF170;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF171;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF172;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF179;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF246;&#xF153;&#xF246;&#xF147;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF171;&#xF245;&#xF246;&#xF146;&#xF170;&#xF246;&#xF149;&#xF166;&#xF249;&#xF149;&#xF16D;&#xF249;&#xF179;&#xF248;&#xF154;&#xF249;&#xF149;&#xF171;&#xF249;&#xF149;&#xF172;&#xF24A;&#xF149;&#xF173;&#xF245;&#xF246;&#xF149;&#xF166;&#xF249;&#xF149;&#xF16D;&#xF249;&#xF145;&#xF248;&#xF154;&#xF249;&#xF149;&#xF171;&#xF249;&#xF149;&#xF172;&#xF24A;&#xF149;&#xF174;&#xF245;&#xF246;&#xF149;&#xF166;&#xF249;&#xF149;&#xF16D;&#xF249;&#xF145;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF175;&#xF245;&#xF249;&#xF149;&#xF16E;&#xF245;&#xF246;&#xF146;&#xF170;&#xF246;&#xF149;&#xF166;&#xF249;&#xF149;&#xF16D;&#xF249;&#xF179;&#xF248;&#xF154;&#xF249;&#xF149;&#xF171;&#xF249;&#xF149;&#xF172;&#xF24A;&#xF149;&#xF176;&#xF245;&#xF246;&#xF149;&#xF166;&#xF249;&#xF149;&#xF16D;&#xF249;&#xF145;&#xF248;&#xF154;&#xF249;&#xF149;&#xF171;&#xF249;&#xF149;&#xF172;&#xF24A;&#xF149;&#xF177;&#xF245;&#xF246;&#xF149;&#xF166;&#xF249;&#xF149;&#xF16D;&#xF249;&#xF145;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF178;&#xF245;&#xF249;&#xF149;&#xF16E;&#xF245;&#xF245;&#xF245;&#xF249;&#xF149;&#xF16C;&#xF245;&#xF249;&#xF149;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1566
  },
  {
    "role": "comment",
    "lines": [
      "# move forward one simulation step"
    ],
    "stanza": 1567
  },
  {
    "role": "code",
    "lines": [
      "define unless-phase-2 | ? circuit | ? state | map",
      "   (? gate |",
      "      assign x1 (list-ref $gate 0) |",
      "      assign y1 (list-ref $gate 1) |",
      "      assign x2 (list-ref $gate 2) |",
      "      assign y2 (list-ref $gate 3) |",
      "      assign v (list-ref $gate 4) |",
      "      assign nv (if (= $x1 $x2)",
      "            (if (matrix-get $state | vector $x1 $y1 vert-have)",
      "            (and (matrix-get $state | vector $x1 $y1 vert-value)",
      "                 (not | and (matrix-get $state |",
      "                           vector $x1 $y1 horiz-value)",
      "                        (not  | matrix-get $state |",
      "                            vector $x1 $y1 horiz-want)))",
      "            (if (matrix-get $state | vector $x1 $y1 horiz-have)",
      "                (matrix-get $state | vector $x1 $y1 horiz-value)",
      "                $true))",
      "            (if (matrix-get $state | vector $x1 $y1 horiz-have)",
      "            (and (matrix-get $state | vector $x1 $y1 horiz-value)",
      "                 (not | and (matrix-get $state |",
      "                           vector $x1 $y1 vert-value)",
      "                        (not | matrix-get $state |",
      "                            vector $x1 $y1 vert-want)))",
      "            (if (matrix-get $state | vector $x1 $y1 vert-have)",
      "                (matrix-get $state | vector $x1 $y1 vert-value)",
      "                $true))) |",
      "      vector $x1 $y1 $x2 $y2 $nv)",
      "   $circuit;"
    ],
    "preprocessed": "define unless-phase-2 | ? circuit | ? state | map\n   (? gate |\n      assign x1 (list-ref $gate 0) |\n      assign y1 (list-ref $gate 1) |\n      assign x2 (list-ref $gate 2) |\n      assign y2 (list-ref $gate 3) |\n      assign v (list-ref $gate 4) |\n      assign nv (if (= $x1 $x2)\n            (if (matrix-get $state | vector $x1 $y1 vert-have)\n            (and (matrix-get $state | vector $x1 $y1 vert-value)\n                 (not | and (matrix-get $state |\n                           vector $x1 $y1 horiz-value)\n                        (not  | matrix-get $state |\n                            vector $x1 $y1 horiz-want)))\n            (if (matrix-get $state | vector $x1 $y1 horiz-have)\n                (matrix-get $state | vector $x1 $y1 horiz-value)\n                $true))\n            (if (matrix-get $state | vector $x1 $y1 horiz-have)\n            (and (matrix-get $state | vector $x1 $y1 horiz-value)\n                 (not | and (matrix-get $state |\n                           vector $x1 $y1 vert-value)\n                        (not | matrix-get $state |\n                            vector $x1 $y1 vert-want)))\n            (if (matrix-get $state | vector $x1 $y1 vert-have)\n                (matrix-get $state | vector $x1 $y1 vert-value)\n                $true))) |\n      vector $x1 $y1 $x2 $y2 $nv)\n   $circuit;",
    "code
    "parse": [
      "define",
      "unless-phase-2",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "state",
          [
            -1,
            "map",
            [
              "?",
              "gate",
              [
                -1,
                "assign",
                "x1",
                [
                  "list-ref",
                  [
                    -2,
                    "gate"
                  ],
                  "0"
                ],
                [
                  -1,
                  "assign",
                  "y1",
                  [
                    "list-ref",
                    [
                      -2,
                      "gate"
                    ],
                    "1"
                  ],
                  [
                    -1,
                    "assign",
                    "x2",
                    [
                      "list-ref",
                      [
                        -2,
                        "gate"
                      ],
                      "2"
                    ],
                    [
                      -1,
                      "assign",
                      "y2",
                      [
                        "list-ref",
                        [
                          -2,
                          "gate"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "assign",
                        "v",
                        [
                          "list-ref",
                          [
                            -2,
                            "gate"
                          ],
                          "4"
                        ],
                        [
                          -1,
                          "assign",
                          "nv",
                          [
                            "if",
                            [
                              "=",
                              [
                                -2,
                                "x1"
                              ],
                              [
                                -2,
                                "x2"
                              ]
                            ],
                            [
                              "if",
                              [
                                "matrix-get",
                                [
                                  -2,
                                  "state"
                                ],
                                [
                                  -1,
                                  "vector",
                                  [
                                    -2,
                                    "x1"
                                  ],
                                  [
                                    -2,
                                    "y1"
                                  ],
                                  "vert-have"
                                ]
                              ],
                              [
                                "and",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-value"
                                  ]
                                ],
                                [
                                  "not",
                                  [
                                    -1,
                                    "and",
                                    [
                                      "matrix-get",
                                      [
                                        -2,
                                        "state"
                                      ],
                                      [
                                        -1,
                                        "vector",
                                        [
                                          -2,
                                          "x1"
                                        ],
                                        [
                                          -2,
                                          "y1"
                                        ],
                                        "horiz-value"
                                      ]
                                    ],
                                    [
                                      "not",
                                      [
                                        -1,
                                        "matrix-get",
                                        [
                                          -2,
                                          "state"
                                        ],
                                        [
                                          -1,
                                          "vector",
                                          [
                                            -2,
                                            "x1"
                                          ],
                                          [
                                            -2,
                                            "y1"
                                          ],
                                          "horiz-want"
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [
                                "if",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-have"
                                  ]
                                ],
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-value"
                                  ]
                                ],
                                [
                                  -2,
                                  "true"
                                ]
                              ]
                            ],
                            [
                              "if",
                              [
                                "matrix-get",
                                [
                                  -2,
                                  "state"
                                ],
                                [
                                  -1,
                                  "vector",
                                  [
                                    -2,
                                    "x1"
                                  ],
                                  [
                                    -2,
                                    "y1"
                                  ],
                                  "horiz-have"
                                ]
                              ],
                              [
                                "and",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-value"
                                  ]
                                ],
                                [
                                  "not",
                                  [
                                    -1,
                                    "and",
                                    [
                                      "matrix-get",
                                      [
                                        -2,
                                        "state"
                                      ],
                                      [
                                        -1,
                                        "vector",
                                        [
                                          -2,
                                          "x1"
                                        ],
                                        [
                                          -2,
                                          "y1"
                                        ],
                                        "vert-value"
                                      ]
                                    ],
                                    [
                                      "not",
                                      [
                                        -1,
                                        "matrix-get",
                                        [
                                          -2,
                                          "state"
                                        ],
                                        [
                                          -1,
                                          "vector",
                                          [
                                            -2,
                                            "x1"
                                          ],
                                          [
                                            -2,
                                            "y1"
                                          ],
                                          "vert-want"
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [
                                "if",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-have"
                                  ]
                                ],
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-value"
                                  ]
                                ],
                                [
                                  -2,
                                  "true"
                                ]
                              ]
                            ]
                          ],
                          [
                            -1,
                            "vector",
                            [
                              -2,
                              "x1"
                            ],
                            [
                              -2,
                              "y1"
                            ],
                            [
                              -2,
                              "x2"
                            ],
                            [
                              -2,
                              "y2"
                            ],
                            [
                              -2,
                              "nv"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              -2,
              "circuit"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16D;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF16E;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF16F;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF170;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF171;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF172;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF179;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16E;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF17A;&#xF246;&#xF153;&#xF246;&#xF147;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF171;&#xF245;&#xF246;&#xF153;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF174;&#xF245;&#xF246;&#xF14A;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF173;&#xF245;&#xF246;&#xF149;&#xF248;&#xF14A;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF176;&#xF245;&#xF246;&#xF149;&#xF248;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF178;&#xF245;&#xF245;&#xF245;&#xF246;&#xF153;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF177;&#xF245;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF176;&#xF245;&#xF249;&#xF145;&#xF245;&#xF245;&#xF246;&#xF153;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF177;&#xF245;&#xF246;&#xF14A;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF176;&#xF245;&#xF246;&#xF149;&#xF248;&#xF14A;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF173;&#xF245;&#xF246;&#xF149;&#xF248;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF175;&#xF245;&#xF245;&#xF245;&#xF246;&#xF153;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF174;&#xF245;&#xF246;&#xF149;&#xF169;&#xF249;&#xF149;&#xF16D;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF24A;&#xF149;&#xF173;&#xF245;&#xF249;&#xF145;&#xF245;&#xF245;&#xF245;&#xF248;&#xF154;&#xF249;&#xF149;&#xF16F;&#xF249;&#xF149;&#xF170;&#xF249;&#xF149;&#xF171;&#xF249;&#xF149;&#xF172;&#xF249;&#xF149;&#xF17A;&#xF245;&#xF249;&#xF149;&#xF16C;&#xF24B;",
    "dt": true,
    "stanza": 1568
  },
  {
    "role": "comment",
    "lines": [
      "# wrap up both phases of simulation"
    ],
    "stanza": 1569
  },
  {
    "role": "code",
    "lines": [
      "intro simulate-unless;"
    ],
    "preprocessed": "intro simulate-unless;",
    "code": "2100103210111011132233",
    "parse": [
      "intro",
      "simulate-unless"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF17B;&#xF24B;",
    "dt": false,
    "stanza": 1570
  },
  {
    "role": "code",
    "lines": [
      "define simulate-unless | ? circuit |",
      "  assign state (unless-phase-1 $circuit) |",
      "  unless-phase-2 $circuit $state;"
    ],
    "preprocessed": "define simulate-unless | ? circuit |\n  assign state (unless-phase-1 $circuit) |\n  unless-phase-2 $circuit $state;",
    "code": "2110132101110111312321100321011010003123211103210110100132210110011130232101101000331232101110101302321011010003023210110100132233",
    "parse": [
      "define",
      "simulate-unless",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "assign",
          "state",
          [
            "unless-phase-1",
            [
              -2,
              "circuit"
            ]
          ],
          [
            -1,
            "unless-phase-2",
            [
              -2,
              "circuit"
            ],
            [
              -2,
              "state"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF17B;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF16D;&#xF246;&#xF149;&#xF16B;&#xF249;&#xF149;&#xF16C;&#xF245;&#xF248;&#xF149;&#xF179;&#xF249;&#xF149;&#xF16C;&#xF249;&#xF149;&#xF16D;&#xF24B;",
    "dt": true,
    "stanza": 1571
  },
  {
    "role": "comment",
    "lines": [
      "# A circuit is a list of gates",
      "# Each gate is a list (x1 y1 x2 y2 v)",
      "# where the coordinates (x1,y1) and (x2,y2) represent",
      "# start and end points of a wire on a plane, carrying a ",
      "# logic value v.",
      "# Wires copy values from their start point.",
      "#   |  ",
      "#   | (A)",
      "#   V        ",
      "# -->-->",
      "# (B)(C)",
      "#",
      "# Wire C here copies from wire B.",
      "# If wire A is on, it blocks (sets to 0) C."
    ],
    "stanza": 1572
  },
  {
    "role": "code",
    "lines": [
      "assign circuit1",
      "    (vector",
      "     (vector 2 2 4 2 $true)",
      "     (vector 4 2 6 2 $true)",
      "     (vector 6 2 8 2 $true)",
      "     (vector 6 4 6 2 $true)) |",
      "     assign circuit2",
      "     (vector",
      "      (vector 2 2 4 2 $true)",
      "      (vector 4 2 6 2 $true)",
      "      (vector 6 2 8 2 $false)",
      "      (vector 6 4 6 2 $true)) |",
      "      equal (simulate-unless $circuit1) $circuit2;"
    ],
    "preprocessed": "assign circuit1\n    (vector\n     (vector 2 2 4 2 $true)\n     (vector 4 2 6 2 $true)\n     (vector 6 2 8 2 $true)\n     (vector 6 4 6 2 $true)) |\n     assign circuit2\n     (vector\n      (vector 2 2 4 2 $true)\n      (vector 4 2 6 2 $true)\n      (vector 6 2 8 2 $false)\n      (vector 6 4 6 2 $true)) |\n      equal (simulate-unless $circuit1) $circuit2;",
    "code": "211103210111100032210000322100003210321032100321030232133221000032100321032110321030232133221000032110321032100032103023213322100003211032100321103210302321333123211103210111100132210000322100003210321032100321030232133221000032100321032110321030232133221000032110321032100032103023203322100003211032100321103210302321333123210003221011101113023210111100033023210111100132233",
    "parse": [
      "assign",
      "circuit1",
      [
        "vector",
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "2",
          "8",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "4",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ]
      ],
      [
        -1,
        "assign",
        "circuit2",
        [
          "vector",
          [
            "vector",
            "2",
            "2",
            "4",
            "2",
            [
              -2,
              "true"
            ]
          ],
          [
            "vector",
            "4",
            "2",
            "6",
            "2",
            [
              -2,
              "true"
            ]
          ],
          [
            "vector",
            "6",
            "2",
            "8",
            "2",
            [
              -2,
              "false"
            ]
          ],
          [
            "vector",
            "6",
            "4",
            "6",
            "2",
            [
              -2,
              "true"
            ]
          ]
        ],
        [
          -1,
          "equal",
          [
            "simulate-unless",
            [
              -2,
              "circuit1"
            ]
          ],
          [
            -2,
            "circuit2"
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF149;&#xF17C;&#xF246;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF17D;&#xF246;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF246;&#xF149;&#xF17B;&#xF249;&#xF149;&#xF17C;&#xF245;&#xF249;&#xF149;&#xF17D;&#xF24B;",
    "dt": false,
    "stanza": 1573
  },
  {
    "role": "comment",
    "lines": [
      "# okay, now let us make a simple image class",
      "# we are going to encode each row as a single binary number,",
      "# rather than a vector, so that images will be pretty",
      "# obvious in the raw, uninterpreted message",
      "# TODO: introduce div somewhere!"
    ],
    "stanza": 1574
  },
  {
    "role": "code",
    "lines": [
      "intro bit-get;"
    ],
    "preprocessed": "intro bit-get;",
    "code": "2100103210111101032233",
    "parse": [
      "intro",
      "bit-get"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF17E;&#xF24B;",
    "dt": false,
    "stanza": 1575
  },
  {
    "role": "code",
    "lines": [
      "define bit-get | lambda (n offset) |",
      "  assign div2 (div $n 2) |",
      "  if (= 0 | offset) (not | = $n | * 2 $div2) |",
      "  bit-get $div2 | - $offset 1;"
    ],
    "preprocessed": "define bit-get | lambda (n offset) |\n  assign div2 (div $n 2) |\n  if (= 0 | offset) (not | = $n | * 2 $div2) |\n  bit-get $div2 | - $offset 1;",
    "code": "2110132101111010312321101032210011103210111101133123211103210111110032210001030232100111032103312321111322113203123210111101133221013123211302321001110312321001321030232101111100331232101111010302321011111003123210113023210111101132132233",
    "parse": [
      "define",
      "bit-get",
      [
        -1,
        "lambda",
        [
          "n",
          "offset"
        ],
        [
          -1,
          "assign",
          "div2",
          [
            "div",
            [
              -2,
              "n"
            ],
            "2"
          ],
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "offset"
              ]
            ],
            [
              "not",
              [
                -1,
                "=",
                [
                  -2,
                  "n"
                ],
                [
                  -1,
                  "*",
                  "2",
                  [
                    -2,
                    "div2"
                  ]
                ]
              ]
            ],
            [
              -1,
              "bit-get",
              [
                -2,
                "div2"
              ],
              [
                -1,
                "-",
                [
                  -2,
                  "offset"
                ],
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF17E;&#xF248;&#xF15E;&#xF246;&#xF145;&#xF152;&#xF24A;&#xF149;&#xF17F;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF180;&#xF246;&#xF166;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17F;&#xF245;&#xF246;&#xF149;&#xF248;&#xF147;&#xF249;&#xF145;&#xF152;&#xF248;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF149;&#xF180;&#xF245;&#xF248;&#xF149;&#xF17E;&#xF249;&#xF149;&#xF180;&#xF248;&#xF14F;&#xF249;&#xF149;&#xF17F;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1576
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::.) 0;"
    ],
    "preprocessed": "= 0 | bit-get (::.) 0;",
    "code": "211320312321011110103211032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::."
        ],
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14A;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1577
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get (::.) 1;"
    ],
    "preprocessed": "= 1 | bit-get (::.) 1;",
    "code": "211321312321011110103211032132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        [
          "::."
        ],
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14A;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1578
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get (::.) 2;"
    ],
    "preprocessed": "= 1 | bit-get (::.) 2;",
    "code": "2113213123210111101032110321032233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        [
          "::."
        ],
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1579
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::.) 3;"
    ],
    "preprocessed": "= 0 | bit-get (::.) 3;",
    "code": "2113203123210111101032110321132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::."
        ],
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14A;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1580
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::.) 4;"
    ],
    "preprocessed": "= 0 | bit-get (::.) 4;",
    "code": "21132031232101111010321103210032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::."
        ],
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1581
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get 8 0;"
    ],
    "preprocessed": "= 0 | bit-get 8 0;",
    "code": "2113203123210111101032100032032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        "8",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14C;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1582
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get 8 1;"
    ],
    "preprocessed": "= 0 | bit-get 8 1;",
    "code": "2113203123210111101032100032132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        "8",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14C;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1583
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get 8 2;"
    ],
    "preprocessed": "= 0 | bit-get 8 2;",
    "code": "21132031232101111010321000321032233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        "8",
        "2"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1584
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get 8 3;"
    ],
    "preprocessed": "= 1 | bit-get 8 3;",
    "code": "21132131232101111010321000321132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        "8",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF149;&#xF17E;&#xF24A;&#xF14C;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1585
  },
  {
    "role": "code",
    "lines": [
      "intro make-image;"
    ],
    "preprocessed": "intro make-image;",
    "code": "2100103210111110132233",
    "parse": [
      "intro",
      "make-image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF149;&#xF181;&#xF24B;",
    "dt": false,
    "stanza": 1586
  },
  {
    "role": "code",
    "lines": [
      "define make-image | lambda (h w lst) |",
      "  vector $h $w $lst;"
    ],
    "preprocessed": "define make-image | lambda (h w lst) |\n  vector $h $w $lst;",
    "code": "211013210111110131232110103221011111103210111111132110010033123210000302321011111103023210111111130232110010032233",
    "parse": [
      "define",
      "make-image",
      [
        -1,
        "lambda",
        [
          "h",
          "w",
          "lst"
        ],
        [
          -1,
          "vector",
          [
            -2,
            "h"
          ],
          [
            -2,
            "w"
          ],
          [
            -2,
            "lst"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF181;&#xF248;&#xF15E;&#xF246;&#xF149;&#xF182;&#xF24A;&#xF149;&#xF183;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF248;&#xF154;&#xF249;&#xF149;&#xF182;&#xF249;&#xF149;&#xF183;&#xF249;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1587
  },
  {
    "role": "code",
    "lines": [
      "intro image-get;"
    ],
    "preprocessed": "intro image-get;",
    "code": "2100103211000000032233",
    "parse": [
      "intro",
      "image-get"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1588
  },
  {
    "role": "code",
    "lines": [
      "define image-get | lambda (image row col) |",
      "  assign h (list-ref $image 0) |",
      "  assign w (list-ref $image 1) |",
      "  assign lst (list-ref $image 2) |",
      "  assign bits (list-ref $lst $row) |",
      "  bit-get $bits | - (- $w $col) 1;"
    ],
    "preprocessed": "define image-get | lambda (image row col) |\n  assign h (list-ref $image 0) |\n  assign w (list-ref $image 1) |\n  assign lst (list-ref $image 2) |\n  assign bits (list-ref $lst $row) |\n  bit-get $bits | - (- $w $col) 1;",
    "code": "211013211000000031232110103221100000013211000001032110000011331232111032101111110322101010030232110000001320331232111032101111111322101010030232110000001321331232111032110010032210101003023211000000132103312321110321100001003221010100302321100100302321100000103312321011110103023211000010031232101132210113023210111111130232110000011332132233",
    "parse": [
      "define",
      "image-get",
      [
        -1,
        "lambda",
        [
          "image",
          "row",
          "col"
        ],
        [
          -1,
          "assign",
          "h",
          [
            "list-ref",
            [
              -2,
              "image"
            ],
            "0"
          ],
          [
            -1,
            "assign",
            "w",
            [
              "list-ref",
              [
                -2,
                "image"
              ],
              "1"
            ],
            [
              -1,
              "assign",
              "lst",
              [
                "list-ref",
                [
                  -2,
                  "image"
                ],
                "2"
              ],
              [
                -1,
                "assign",
                "bits",
                [
                  "list-ref",
                  [
                    -2,
                    "lst"
                  ],
                  [
                    -2,
                    "row"
                  ]
                ],
                [
                  -1,
                  "bit-get",
                  [
                    -2,
                    "bits"
                  ],
                  [
                    -1,
                    "-",
                    [
                      "-",
                      [
                        -2,
                        "w"
                      ],
                      [
                        -2,
                        "col"
                      ]
                    ],
                    "1"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF144;&#xF248;&#xF15E;&#xF246;&#xF14A;&#xF145;&#xF24A;&#xF14A;&#xF146;&#xF24A;&#xF14A;&#xF147;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF182;&#xF246;&#xF145;&#xF158;&#xF249;&#xF14A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF183;&#xF246;&#xF145;&#xF158;&#xF249;&#xF14A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF168;&#xF246;&#xF145;&#xF158;&#xF249;&#xF14A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF148;&#xF246;&#xF145;&#xF158;&#xF249;&#xF145;&#xF168;&#xF249;&#xF14A;&#xF146;&#xF245;&#xF248;&#xF149;&#xF17E;&#xF249;&#xF14A;&#xF148;&#xF248;&#xF14F;&#xF246;&#xF14F;&#xF249;&#xF149;&#xF183;&#xF249;&#xF14A;&#xF147;&#xF245;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1589
  },
  {
    "role": "code",
    "lines": [
      "intro image-height;"
    ],
    "preprocessed": "intro image-height;",
    "code": "2100103211000010132233",
    "parse": [
      "intro",
      "image-height"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1590
  },
  {
    "role": "code",
    "lines": [
      "define image-height | ? image |",
      "  list-ref $image 0;"
    ],
    "preprocessed": "define image-height | ? image |\n  list-ref $image 0;",
    "code": "2110132110000101312321100321100000013123210101003023211000000132032233",
    "parse": [
      "define",
      "image-height",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "list-ref",
          [
            -2,
            "image"
          ],
          "0"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF149;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF145;&#xF248;&#xF145;&#xF158;&#xF249;&#xF14A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1591
  },
  {
    "role": "code",
    "lines": [
      "intro image-width;"
    ],
    "preprocessed": "intro image-width;",
    "code": "2100103211000011032233",
    "parse": [
      "intro",
      "image-width"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1592
  },
  {
    "role": "code",
    "lines": [
      "define image-width | ? image |",
      "  list-ref $image 1;"
    ],
    "preprocessed": "define image-width | ? image |\n  list-ref $image 1;",
    "code": "2110132110000110312321100321100000013123210101003023211000000132132233",
    "parse": [
      "define",
      "image-width",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "list-ref",
          [
            -2,
            "image"
          ],
          "1"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF145;&#xF248;&#xF145;&#xF158;&#xF249;&#xF14A;&#xF145;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1593
  },
  {
    "role": "code",
    "lines": [
      "define test-image | make-image 3 5 |",
      "  vector (:....) (:...:) (:....);"
    ],
    "preprocessed": "define test-image | make-image 3 5 |\n  vector (:....) (:...:) (:....);",
    "code": "211013211000011131232101111101321132101312321000032100003210001321000032233",
    "parse": [
      "define",
      "test-image",
      [
        -1,
        "make-image",
        "3",
        "5",
        [
          -1,
          "vector",
          [
            ":...."
          ],
          [
            ":...:"
          ],
          [
            ":...."
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF14B;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF147;&#xF24A;&#xF149;&#xF248;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF155;&#xF24A;&#xF154;&#xF24B;",
    "dt": true,
    "stanza": 1594
  },
  {
    "role": "code",
    "lines": [
      "= 3 | image-height $test-image;"
    ],
    "preprocessed": "= 3 | image-height $test-image;",
    "code": "2113211312321100001013023211000011132233",
    "parse": [
      "=",
      "3",
      [
        -1,
        "image-height",
        [
          -2,
          "test-image"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF147;&#xF248;&#xF14A;&#xF149;&#xF249;&#xF14A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1595
  },
  {
    "role": "code",
    "lines": [
      "= 5 | image-width $test-image;"
    ],
    "preprocessed": "= 5 | image-width $test-image;",
    "code": "21132101312321100001103023211000011132233",
    "parse": [
      "=",
      "5",
      [
        -1,
        "image-width",
        [
          -2,
          "test-image"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF149;&#xF248;&#xF14A;&#xF14A;&#xF249;&#xF14A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1596
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 0 0;"
    ],
    "preprocessed": "= $true | image-get $test-image 0 0;",
    "code": "211302321312321100000003023211000011132032032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "0",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF14B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1597
  },
  {
    "role": "code",
    "lines": [
      "= $false | image-get $test-image 0 1;"
    ],
    "preprocessed": "= $false | image-get $test-image 0 1;",
    "code": "211302320312321100000003023211000011132032132233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "0",
        "1"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF14B;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1598
  },
  {
    "role": "code",
    "lines": [
      "= $false | image-get $test-image 0 4;"
    ],
    "preprocessed": "= $false | image-get $test-image 0 4;",
    "code": "21130232031232110000000302321100001113203210032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "0",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF14B;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1599
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 1 0;"
    ],
    "preprocessed": "= $true | image-get $test-image 1 0;",
    "code": "211302321312321100000003023211000011132132032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "1",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1600
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 2 0;"
    ],
    "preprocessed": "= $true | image-get $test-image 2 0;",
    "code": "2113023213123211000000030232110000111321032032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "2",
        "0"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF14B;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1601
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 1 4;"
    ],
    "preprocessed": "= $true | image-get $test-image 1 4;",
    "code": "21130232131232110000000302321100001113213210032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "1",
        "4"
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF14B;&#xF24A;&#xF145;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1602
  },
  {
    "role": "comment",
    "lines": [
      "# need a way to join two lists",
      "# TODO: is this similar to \"list-append\" in NewType?"
    ],
    "stanza": 1603
  },
  {
    "role": "code",
    "lines": [
      "define merge-list | ? lst1 | ? lst2 |",
      "  if (= 0 | list-length $lst1) $lst2 |",
      "  prepend (head $lst1) | merge-list (tail $lst1) $lst2;"
    ],
    "preprocessed": "define merge-list | ? lst1 | ? lst2 |\n  if (= 0 | list-length $lst1) $lst2 |\n  prepend (head $lst1) | merge-list (tail $lst1) $lst2;",
    "code": "2110132110001000312321100321111100131232110032111110103123211113221132031232101001130232111110013302321111101031232101011032210100003023211111001331232110001000322101001030232111110013302321111101032233",
    "parse": [
      "define",
      "merge-list",
      [
        -1,
        "?",
        "lst1",
        [
          -1,
          "?",
          "lst2",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst1"
                ]
              ]
            ],
            [
              -2,
              "lst2"
            ],
            [
              -1,
              "prepend",
              [
                "head",
                [
                  -2,
                  "lst1"
                ]
              ],
              [
                -1,
                "merge-list",
                [
                  "tail",
                  [
                    -2,
                    "lst1"
                  ]
                ],
                [
                  -2,
                  "lst2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF14C;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF17D;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF17E;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF249;&#xF147;&#xF17E;&#xF248;&#xF145;&#xF15A;&#xF246;&#xF145;&#xF154;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF248;&#xF14A;&#xF14C;&#xF246;&#xF145;&#xF156;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF249;&#xF147;&#xF17E;&#xF24B;",
    "dt": true,
    "stanza": 1604
  },
  {
    "role": "code",
    "lines": [
      "define merge-lists | ? lst |",
      "   if (> (list-length $lst) 2)",
      "      (merge-list (head $lst) (merge-lists | tail $lst))",
      "      (if (= (list-length $lst) 2)",
      "      (merge-list (head $lst) | (head | tail $lst))",
      "      (if (= (list-length $lst) 1)",
      "          (head $lst)",
      "          (vector)));"
    ],
    "preprocessed": "define merge-lists | ? lst |\n   if (> (list-length $lst) 2)\n      (merge-list (head $lst) (merge-lists | tail $lst))\n      (if (= (list-length $lst) 2)\n      (merge-list (head $lst) | (head | tail $lst))\n      (if (= (list-length $lst) 1)\n          (head $lst)\n          (vector)));",
    "code": "211013211000100131232110032110010031232111132210032210100113023211001003321033221100010003221010000302321100100332211000100131232101001030232110010033322111132211322101001130232110010033210332211000100032210100003023211001003312322101000031232101001030232110010033322111132211322101001130232110010033213322101000030232110010033221000033332233",
    "parse": [
      "define",
      "merge-lists",
      [
        -1,
        "?",
        "lst",
        [
          -1,
          "if",
          [
            ">",
            [
              "list-length",
              [
                -2,
                "lst"
              ]
            ],
            "2"
          ],
          [
            "merge-list",
            [
              "head",
              [
                -2,
                "lst"
              ]
            ],
            [
              "merge-lists",
              [
                -1,
                "tail",
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ],
          [
            "if",
            [
              "=",
              [
                "list-length",
                [
                  -2,
                  "lst"
                ]
              ],
              "2"
            ],
            [
              "merge-list",
              [
                "head",
                [
                  -2,
                  "lst"
                ]
              ],
              [
                -1,
                [
                  "head",
                  [
                    -1,
                    "tail",
                    [
                      -2,
                      "lst"
                    ]
                  ]
                ]
              ]
            ],
            [
              "if",
              [
                "=",
                [
                  "list-length",
                  [
                    -2,
                    "lst"
                  ]
                ],
                "1"
              ],
              [
                "head",
                [
                  -2,
                  "lst"
                ]
              ],
              [
                "vector"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF14D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF153;&#xF246;&#xF148;&#xF246;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF146;&#xF245;&#xF246;&#xF14A;&#xF14C;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF14A;&#xF14D;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF246;&#xF153;&#xF246;&#xF147;&#xF246;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF146;&#xF245;&#xF246;&#xF14A;&#xF14C;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF248;&#xF246;&#xF145;&#xF154;&#xF248;&#xF145;&#xF156;&#xF249;&#xF145;&#xF168;&#xF245;&#xF245;&#xF246;&#xF153;&#xF246;&#xF147;&#xF246;&#xF145;&#xF157;&#xF249;&#xF145;&#xF168;&#xF245;&#xF145;&#xF245;&#xF246;&#xF145;&#xF154;&#xF249;&#xF145;&#xF168;&#xF245;&#xF246;&#xF154;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1605
  },
  {
    "role": "code",
    "lines": [
      "equal (vector 1 2 3 4) | merge-list (vector 1 2) (vector 3 4);"
    ],
    "preprocessed": "equal (vector 1 2 3 4) | merge-list (vector 1 2) (vector 3 4);",
    "code": "21000322100003213210321132100331232110001000322100003213210332210000321132100332233",
    "parse": [
      "equal",
      [
        "vector",
        "1",
        "2",
        "3",
        "4"
      ],
      [
        -1,
        "merge-list",
        [
          "vector",
          "1",
          "2"
        ],
        [
          "vector",
          "3",
          "4"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14A;&#xF14C;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1606
  },
  {
    "role": "code",
    "lines": [
      "equal (vector 1 2 3 4) | merge-lists (vector (vector 1 2) (vector 3) (vector 4));"
    ],
    "preprocessed": "equal (vector 1 2 3 4) | merge-lists (vector (vector 1 2) (vector 3) (vector 4));",
    "code": "21000322100003213210321132100331232110001001322100003221000032132103322100003211332210000321003332233",
    "parse": [
      "equal",
      [
        "vector",
        "1",
        "2",
        "3",
        "4"
      ],
      [
        -1,
        "merge-lists",
        [
          "vector",
          [
            "vector",
            "1",
            "2"
          ],
          [
            "vector",
            "3"
          ],
          [
            "vector",
            "4"
          ]
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14A;&#xF14D;&#xF246;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1607
  },
  {
    "role": "comment",
    "lines": [
      "# helper for pairing"
    ],
    "stanza": 1608
  },
  {
    "role": "code",
    "lines": [
      "define prefix | ? x | ? lst | map",
      "  (? y (vector (x) (y)))",
      "  $lst;"
    ],
    "preprocessed": "define prefix | ? x | ? lst | map\n  (? y (vector (x) (y)))\n  $lst;",
    "code": "21101321100010103123211003210100131232110032110010031232101101032211003211110132210000322101001332211110133330232110010032233",
    "parse": [
      "define",
      "prefix",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "lst",
          [
            -1,
            "map",
            [
              "?",
              "y",
              [
                "vector",
                [
                  "x"
                ],
                [
                  "y"
                ]
              ]
            ],
            [
              -2,
              "lst"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF14E;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF181;&#xF246;&#xF154;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF181;&#xF245;&#xF245;&#xF245;&#xF249;&#xF145;&#xF168;&#xF24B;",
    "dt": true,
    "stanza": 1609
  },
  {
    "role": "code",
    "lines": [
      "equal (vector (vector 1 10) (vector 1 11))",
      "       (prefix 1 | vector 10 11);"
    ],
    "preprocessed": "equal (vector (vector 1 10) (vector 1 11))\n       (prefix 1 | vector 10 11);",
    "code": "210003221000032210000321321010332210000321321011333221100010103213123210000321010321011332233",
    "parse": [
      "equal",
      [
        "vector",
        [
          "vector",
          "1",
          "10"
        ],
        [
          "vector",
          "1",
          "11"
        ]
      ],
      [
        "prefix",
        "1",
        [
          -1,
          "vector",
          "10",
          "11"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF14F;&#xF245;&#xF245;&#xF246;&#xF14A;&#xF14E;&#xF24A;&#xF145;&#xF248;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14F;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1610
  },
  {
    "role": "comment",
    "lines": [
      "# need a way to take product of domains"
    ],
    "stanza": 1611
  },
  {
    "role": "code",
    "lines": [
      "define pairing | ? lst1 | ? lst2 |",
      "   if (= 0 | list-length $lst1) (vector) |",
      "   merge-list (prefix (head $lst1) $lst2)",
      "          (pairing (tail $lst1) $lst2);"
    ],
    "preprocessed": "define pairing | ? lst1 | ? lst2 |\n   if (= 0 | list-length $lst1) (vector) |\n   merge-list (prefix (head $lst1) $lst2)\n          (pairing (tail $lst1) $lst2);",
    "code": "211013211000101131232110032111110013123211003211111010312321111322113203123210100113023211111001332210000331232110001000322110001010322101000030232111110013302321111101033221100010113221010010302321111100133023211111010332233",
    "parse": [
      "define",
      "pairing",
      [
        -1,
        "?",
        "lst1",
        [
          -1,
          "?",
          "lst2",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst1"
                ]
              ]
            ],
            [
              "vector"
            ],
            [
              -1,
              "merge-list",
              [
                "prefix",
                [
                  "head",
                  [
                    -2,
                    "lst1"
                  ]
                ],
                [
                  -2,
                  "lst2"
                ]
              ],
              [
                "pairing",
                [
                  "tail",
                  [
                    -2,
                    "lst1"
                  ]
                ],
                [
                  -2,
                  "lst2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF14F;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF17D;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF17E;&#xF248;&#xF153;&#xF246;&#xF147;&#xF24A;&#xF144;&#xF248;&#xF145;&#xF157;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF246;&#xF154;&#xF245;&#xF248;&#xF14A;&#xF14C;&#xF246;&#xF14A;&#xF14E;&#xF246;&#xF145;&#xF154;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF249;&#xF147;&#xF17E;&#xF245;&#xF246;&#xF14A;&#xF14F;&#xF246;&#xF145;&#xF156;&#xF249;&#xF147;&#xF17D;&#xF245;&#xF249;&#xF147;&#xF17E;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1612
  },
  {
    "role": "code",
    "lines": [
      "equal (vector (vector 1 10) (vector 1 11) (vector 2 10) (vector 2 11)) |",
      "   pairing (vector 1 2) (vector 10 11);"
    ],
    "preprocessed": "equal (vector (vector 1 10) (vector 1 11) (vector 2 10) (vector 2 11)) |\n   pairing (vector 1 2) (vector 10 11);",
    "code": "210003221000032210000321321010332210000321321011332210000321032101033221000032103210113331232110001011322100003213210332210000321010321011332233",
    "parse": [
      "equal",
      [
        "vector",
        [
          "vector",
          "1",
          "10"
        ],
        [
          "vector",
          "1",
          "11"
        ],
        [
          "vector",
          "2",
          "10"
        ],
        [
          "vector",
          "2",
          "11"
        ]
      ],
      [
        -1,
        "pairing",
        [
          "vector",
          "1",
          "2"
        ],
        [
          "vector",
          "10",
          "11"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF14F;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14F;&#xF245;&#xF245;&#xF248;&#xF14A;&#xF14F;&#xF246;&#xF154;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14F;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1613
  },
  {
    "role": "comment",
    "lines": [
      "# need a way to make counting sets",
      "# TODO: is this like range?"
    ],
    "stanza": 1614
  },
  {
    "role": "code",
    "lines": [
      "define count | ? lo | ? hi |",
      "  if (> $lo $hi) (vector) |",
      "  prepend $lo | count (+ $lo 1) $hi;"
    ],
    "preprocessed": "define count | ? lo | ? hi |\n  if (> $lo $hi) (vector) |\n  prepend $lo | count (+ $lo 1) $hi;",
    "code": "21101321111011031232110032110001100312321100321100011013123211113221003023211000110030232110001101332210000331232101011030232110001100312321111011032210103023211000110032133023211000110132233",
    "parse": [
      "define",
      "count",
      [
        -1,
        "?",
        "lo",
        [
          -1,
          "?",
          "hi",
          [
            -1,
            "if",
            [
              ">",
              [
                -2,
                "lo"
              ],
              [
                -2,
                "hi"
              ]
            ],
            [
              "vector"
            ],
            [
              -1,
              "prepend",
              [
                -2,
                "lo"
              ],
              [
                -1,
                "count",
                [
                  "+",
                  [
                    -2,
                    "lo"
                  ],
                  "1"
                ],
                [
                  -2,
                  "hi"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF17A;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF150;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF151;&#xF248;&#xF153;&#xF246;&#xF148;&#xF249;&#xF14A;&#xF150;&#xF249;&#xF14A;&#xF151;&#xF245;&#xF246;&#xF154;&#xF245;&#xF248;&#xF145;&#xF15A;&#xF249;&#xF14A;&#xF150;&#xF248;&#xF147;&#xF17A;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF150;&#xF24A;&#xF145;&#xF245;&#xF249;&#xF14A;&#xF151;&#xF24B;",
    "dt": true,
    "stanza": 1615
  },
  {
    "role": "code",
    "lines": [
      "equal (vector 0 1 2 3 4) (count 0 4);"
    ],
    "preprocessed": "equal (vector 0 1 2 3 4) (count 0 4);",
    "code": "2100032210000320321321032113210033221111011032032100332233",
    "parse": [
      "equal",
      [
        "vector",
        "0",
        "1",
        "2",
        "3",
        "4"
      ],
      [
        "count",
        "0",
        "4"
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF146;&#xF24A;&#xF147;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF147;&#xF17A;&#xF24A;&#xF144;&#xF24A;&#xF148;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1616
  },
  {
    "role": "comment",
    "lines": [
      "# given an image of a circuit, extract a model.",
      "# wire elements are centered on multiples of 8"
    ],
    "stanza": 1617
  },
  {
    "role": "comment",
    "lines": [
      "# individual element..."
    ],
    "stanza": 1618
  },
  {
    "role": "code",
    "lines": [
      "define distill-element |",
      "   ? image | ? xlogic | ? ylogic | ? xmid | ? ymid |",
      "   if (not | image-get $image $ymid $xmid) (vector) |",
      "   assign vert (image-get $image (+ $ymid 4) $xmid) |",
      "   assign dx (if $vert 0 1) |",
      "   assign dy (if $vert 1 0) |",
      "   assign pos (image-get $image",
      "                 (+ $ymid | + (* 4 $dy) (* 2 $dx))",
      "                 (+ $xmid | - (* 4 $dx) (* 2 $dy))) |",
      "   assign sgn (if $pos 1 (minus 1)) |",
      "   assign dx (* $sgn $dx) |",
      "   assign dy (* $sgn $dy) |",
      "   assign active (image-get $image (+ $ymid $dx) (- $xmid $dy)) |",
      "     vector | vector",
      "       (- $xlogic $dx) ",
      "       (- $ylogic $dy)",
      "       (+ $xlogic $dx)",
      "       (+ $ylogic $dy)",
      "       $active;"
    ],
    "preprocessed": "define distill-element |\n   ? image | ? xlogic | ? ylogic | ? xmid | ? ymid |\n   if (not | image-get $image $ymid $xmid) (vector) |\n   assign vert (image-get $image (+ $ymid 4) $xmid) |\n   assign dx (if $vert 0 1) |\n   assign dy (if $vert 1 0) |\n   assign pos (image-get $image\n                 (+ $ymid | + (* 4 $dy) (* 2 $dx))\n                 (+ $xmid | - (* 4 $dx) (* 2 $dy))) |\n   assign sgn (if $pos 1 (minus 1)) |\n   assign dx (* $sgn $dx) |\n   assign dy (* $sgn $dy) |\n   assign active (image-get $image (+ $ymid $dx) (- $xmid $dy)) |\n     vector | vector\n       (- $xlogic $dx) \n       (- $ylogic $dy)\n       (+ $xlogic $dx)\n       (+ $ylogic $dy)\n       $active;",
    "code
    "parse": [
      "define",
      "distill-element",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "?",
          "xlogic",
          [
            -1,
            "?",
            "ylogic",
            [
              -1,
              "?",
              "xmid",
              [
                -1,
                "?",
                "ymid",
                [
                  -1,
                  "if",
                  [
                    "not",
                    [
                      -1,
                      "image-get",
                      [
                        -2,
                        "image"
                      ],
                      [
                        -2,
                        "ymid"
                      ],
                      [
                        -2,
                        "xmid"
                      ]
                    ]
                  ],
                  [
                    "vector"
                  ],
                  [
                    -1,
                    "assign",
                    "vert",
                    [
                      "image-get",
                      [
                        -2,
                        "image"
                      ],
                      [
                        "+",
                        [
                          -2,
                          "ymid"
                        ],
                        "4"
                      ],
                      [
                        -2,
                        "xmid"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "dx",
                      [
                        "if",
                        [
                          -2,
                          "vert"
                        ],
                        "0",
                        "1"
                      ],
                      [
                        -1,
                        "assign",
                        "dy",
                        [
                          "if",
                          [
                            -2,
                            "vert"
                          ],
                          "1",
                          "0"
                        ],
                        [
                          -1,
                          "assign",
                          "pos",
                          [
                            "image-get",
                            [
                              -2,
                              "image"
                            ],
                            [
                              "+",
                              [
                                -2,
                                "ymid"
                              ],
                              [
                                -1,
                                "+",
                                [
                                  "*",
                                  "4",
                                  [
                                    -2,
                                    "dy"
                                  ]
                                ],
                                [
                                  "*",
                                  "2",
                                  [
                                    -2,
                                    "dx"
                                  ]
                                ]
                              ]
                            ],
                            [
                              "+",
                              [
                                -2,
                                "xmid"
                              ],
                              [
                                -1,
                                "-",
                                [
                                  "*",
                                  "4",
                                  [
                                    -2,
                                    "dx"
                                  ]
                                ],
                                [
                                  "*",
                                  "2",
                                  [
                                    -2,
                                    "dy"
                                  ]
                                ]
                              ]
                            ]
                          ],
                          [
                            -1,
                            "assign",
                            "sgn",
                            [
                              "if",
                              [
                                -2,
                                "pos"
                              ],
                              "1",
                              [
                                "minus",
                                "1"
                              ]
                            ],
                            [
                              -1,
                              "assign",
                              "dx",
                              [
                                "*",
                                [
                                  -2,
                                  "sgn"
                                ],
                                [
                                  -2,
                                  "dx"
                                ]
                              ],
                              [
                                -1,
                                "assign",
                                "dy",
                                [
                                  "*",
                                  [
                                    -2,
                                    "sgn"
                                  ],
                                  [
                                    -2,
                                    "dy"
                                  ]
                                ],
                                [
                                  -1,
                                  "assign",
                                  "active",
                                  [
                                    "image-get",
                                    [
                                      -2,
                                      "image"
                                    ],
                                    [
                                      "+",
                                      [
                                        -2,
                                        "ymid"
                                      ],
                                      [
                                        -2,
                                        "dx"
                                      ]
                                    ],
                                    [
                                      "-",
                                      [
                                        -2,
                                        "xmid"
                                      ],
                                      [
                                        -2,
                                        "dy"
                                      ]
                                    ]
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -1,
                                      "vector",
                                      [
                                        "-",
                                        [
                                          -2,
                                          "xlogic"
                                        ],
                                        [
                                          -2,
                                          "dx"
                                        ]
                                      ],
                                      [
                                        "-",
                                        [
                                          -2,
                                          "ylogic"
                                        ],
                                        [
                                          -2,
                                          "dy"
                                        ]
                                      ],
                                      [
                                        "+",
                                        [
                                          -2,
                                          "xlogic"
                                        ],
                                        [
                                          -2,
                                          "dx"
                                        ]
                                      ],
                                      [
                                        "+",
                                        [
                                          -2,
                                          "ylogic"
                                        ],
                                        [
                                          -2,
                                          "dy"
                                        ]
                                      ],
                                      [
                                        -2,
                                        "active"
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF152;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF145;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF153;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF154;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF156;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF145;&#xF249;&#xF14A;&#xF156;&#xF249;&#xF14A;&#xF155;&#xF245;&#xF246;&#xF154;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF157;&#xF246;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF145;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF156;&#xF24A;&#xF148;&#xF245;&#xF249;&#xF14A;&#xF155;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF158;&#xF246;&#xF153;&#xF249;&#xF14A;&#xF157;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF159;&#xF246;&#xF153;&#xF249;&#xF14A;&#xF157;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF15A;&#xF246;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF145;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF156;&#xF248;&#xF14E;&#xF246;&#xF14D;&#xF24A;&#xF148;&#xF249;&#xF14A;&#xF159;&#xF245;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF14A;&#xF158;&#xF245;&#xF245;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF155;&#xF248;&#xF14F;&#xF246;&#xF14D;&#xF24A;&#xF148;&#xF249;&#xF14A;&#xF158;&#xF245;&#xF246;&#xF14D;&#xF24A;&#xF146;&#xF249;&#xF14A;&#xF159;&#xF245;&#xF245;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF15B;&#xF246;&#xF153;&#xF249;&#xF14A;&#xF15A;&#xF24A;&#xF145;&#xF246;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF158;&#xF246;&#xF14D;&#xF249;&#xF14A;&#xF15B;&#xF249;&#xF14A;&#xF158;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF159;&#xF246;&#xF14D;&#xF249;&#xF14A;&#xF15B;&#xF249;&#xF14A;&#xF159;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF15C;&#xF246;&#xF14A;&#xF144;&#xF249;&#xF14A;&#xF145;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF156;&#xF249;&#xF14A;&#xF158;&#xF245;&#xF246;&#xF14F;&#xF249;&#xF14A;&#xF155;&#xF249;&#xF14A;&#xF159;&#xF245;&#xF245;&#xF248;&#xF154;&#xF248;&#xF154;&#xF246;&#xF14F;&#xF249;&#xF14A;&#xF153;&#xF249;&#xF14A;&#xF158;&#xF245;&#xF246;&#xF14F;&#xF249;&#xF14A;&#xF154;&#xF249;&#xF14A;&#xF159;&#xF245;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF153;&#xF249;&#xF14A;&#xF158;&#xF245;&#xF246;&#xF14E;&#xF249;&#xF14A;&#xF154;&#xF249;&#xF14A;&#xF159;&#xF245;&#xF249;&#xF14A;&#xF15C;&#xF24B;",
    "dt": true,
    "stanza": 1619
  },
  {
    "role": "comment",
    "lines": [
      "# full circuit..."
    ],
    "stanza": 1620
  },
  {
    "role": "code",
    "lines": [
      "intro distill-circuit;"
    ],
    "preprocessed": "intro distill-circuit;",
    "code": "2100103211001100132233",
    "parse": [
      "intro",
      "distill-circuit"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF15D;&#xF24B;",
    "dt": false,
    "stanza": 1621
  },
  {
    "role": "code",
    "lines": [
      "define distill-circuit | ? image |",
      "  assign h (div (image-height $image) 8) |",
      "  assign w (div (image-width $image) 8)  |",
      "  merge-lists |",
      "    map (? v |",
      "       assign xlogic (list-ref $v 0) |",
      "       assign ylogic (list-ref $v 1) |",
      "       assign xmid (* 8 $xlogic) |",
      "       assign ymid (* 8 $ylogic) |",
      "       distill-element $image $xlogic $ylogic $xmid $ymid)",
      "    (pairing (count 1 (- $w 1))",
      "         (count 1 (- $h 1)));"
    ],
    "preprocessed": "define distill-circuit | ? image |\n  assign h (div (image-height $image) 8) |\n  assign w (div (image-width $image) 8)  |\n  merge-lists |\n    map (? v |\n       assign xlogic (list-ref $v 0) |\n       assign ylogic (list-ref $v 1) |\n       assign xmid (* 8 $xlogic) |\n       assign ymid (* 8 $ylogic) |\n       distill-element $image $xlogic $ylogic $xmid $ymid)\n    (pairing (count 1 (- $w 1))\n         (count 1 (- $h 1)));",
    "code
    "parse": [
      "define",
      "distill-circuit",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "assign",
          "h",
          [
            "div",
            [
              "image-height",
              [
                -2,
                "image"
              ]
            ],
            "8"
          ],
          [
            -1,
            "assign",
            "w",
            [
              "div",
              [
                "image-width",
                [
                  -2,
                  "image"
                ]
              ],
              "8"
            ],
            [
              -1,
              "merge-lists",
              [
                -1,
                "map",
                [
                  "?",
                  "v",
                  [
                    -1,
                    "assign",
                    "xlogic",
                    [
                      "list-ref",
                      [
                        -2,
                        "v"
                      ],
                      "0"
                    ],
                    [
                      -1,
                      "assign",
                      "ylogic",
                      [
                        "list-ref",
                        [
                          -2,
                          "v"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "assign",
                        "xmid",
                        [
                          "*",
                          "8",
                          [
                            -2,
                            "xlogic"
                          ]
                        ],
                        [
                          -1,
                          "assign",
                          "ymid",
                          [
                            "*",
                            "8",
                            [
                              -2,
                              "ylogic"
                            ]
                          ],
                          [
                            -1,
                            "distill-element",
                            [
                              -2,
                              "image"
                            ],
                            [
                              -2,
                              "xlogic"
                            ],
                            [
                              -2,
                              "ylogic"
                            ],
                            [
                              -2,
                              "xmid"
                            ],
                            [
                              -2,
                              "ymid"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  "pairing",
                  [
                    "count",
                    "1",
                    [
                      "-",
                      [
                        -2,
                        "w"
                      ],
                      "1"
                    ]
                  ],
                  [
                    "count",
                    "1",
                    [
                      "-",
                      [
                        -2,
                        "h"
                      ],
                      "1"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF15D;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF145;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF182;&#xF246;&#xF166;&#xF246;&#xF14A;&#xF149;&#xF249;&#xF14A;&#xF145;&#xF245;&#xF14C;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF149;&#xF183;&#xF246;&#xF166;&#xF246;&#xF14A;&#xF14A;&#xF249;&#xF14A;&#xF145;&#xF245;&#xF14C;&#xF245;&#xF248;&#xF14A;&#xF14D;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF179;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF153;&#xF246;&#xF145;&#xF158;&#xF249;&#xF179;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF154;&#xF246;&#xF145;&#xF158;&#xF249;&#xF179;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF155;&#xF246;&#xF14D;&#xF24A;&#xF14C;&#xF249;&#xF14A;&#xF153;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF156;&#xF246;&#xF14D;&#xF24A;&#xF14C;&#xF249;&#xF14A;&#xF154;&#xF245;&#xF248;&#xF14A;&#xF152;&#xF249;&#xF14A;&#xF145;&#xF249;&#xF14A;&#xF153;&#xF249;&#xF14A;&#xF154;&#xF249;&#xF14A;&#xF155;&#xF249;&#xF14A;&#xF156;&#xF245;&#xF246;&#xF14A;&#xF14F;&#xF246;&#xF147;&#xF17A;&#xF24A;&#xF145;&#xF246;&#xF14F;&#xF249;&#xF149;&#xF183;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF246;&#xF147;&#xF17A;&#xF24A;&#xF145;&#xF246;&#xF14F;&#xF249;&#xF149;&#xF182;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1622
  },
  {
    "role": "file",
    "lines": [
      "== COS_NOT =="
    ],
    "stanza": 1623
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_not circuit",
    "section_category": "GATE",
    "section_index": 45,
    "stanza": 1624
  },
  {
    "role": "code",
    "lines": [
      "intro cos_not_gate;"
    ],
    "preprocessed": "intro cos_not_gate;",
    "code": "2100103211001101032233",
    "parse": [
      "intro",
      "cos_not_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1625
  },
  {
    "role": "code",
    "lines": [
      "intro cos_not_image;"
    ],
    "preprocessed": "intro cos_not_image;",
    "code": "2100103211001101132233",
    "parse": [
      "intro",
      "cos_not_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 1626
  },
  {
    "role": "code",
    "lines": [
      "define cos_not_gate | vector ",
      "  (vector 0 6 2 6 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 8 4 8 6 $true)",
      "  (vector 8 6 8 8 $false)",
      "  (vector 8 8 10 8 $false)",
      "  (vector 10 8 12 8 $false)",
      "  (vector 12 8 12 6 $false)",
      "  (vector 12 6 14 6 $false)",
      "  (vector 14 6 16 6 $false)",
      "  (vector 16 6 18 6 $false)",
      "  (vector 18 6 20 6 $false);"
    ],
    "preprocessed": "define cos_not_gate | vector \n  (vector 0 6 2 6 $true)\n  (vector 2 6 4 6 $true)\n  (vector 4 6 6 6 $true)\n  (vector 6 6 8 6 $true)\n  (vector 8 4 8 6 $true)\n  (vector 8 6 8 8 $false)\n  (vector 8 8 10 8 $false)\n  (vector 10 8 12 8 $false)\n  (vector 12 8 12 6 $false)\n  (vector 12 6 14 6 $false)\n  (vector 14 6 16 6 $false)\n  (vector 16 6 18 6 $false)\n  (vector 18 6 20 6 $false);",
    "code": "21101321100110103123210000322100003203211032103211030232133221000032103211032100321103023213322100003210032110321103211030232133221000032110321103210003211030232133221000032100032100321000321103023213322100003210003211032100032100030232033221000032100032100032101032100030232033221000032101032100032110032100030232033221000032110032100032110032110302320332210000321100321103211103211030232033221000032111032110321000032110302320332210000321000032110321001032110302320332210000321001032110321010032110302320332233",
    "parse": [
      "define",
      "cos_not_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "6",
          "2",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "8",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "12",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "14",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "6",
          "16",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "6",
          "18",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "18",
          "6",
          "20",
          "6",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF15E;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF24A;&#xF154;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF156;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF14A;&#xF24A;&#xF158;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1627
  },
  {
    "role": "code",
    "lines": [
      "define cos_not_image | make-image 109 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...........:...............:...............:...............:...:...........................................:...............:...............:...............:...........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:)",
      "  (:...........:...............:...............:...............:...................................:...........:...............:...............:...............:...........:)",
      "  (:...............................................................:..............................:::......................................................................:)",
      "  (:...............................................................:.............................:::::.....................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:.............................................................:::::.............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:...............................................................:...........:...............:...........................................................................:)",
      "  (:...........................................................................::..............::..........................................................................:)",
      "  (:..................................................................::::::::::::....::::::::::::.........................................................................:)",
      "  (:...........................................................................::..............::..........................................................................:)",
      "  (:...........................................................................:...............:...........................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_not_image | make-image 109 169 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:.............................................................:::::.....................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:...........:...............:...............:...............:...:...........................................:...............:...............:...............:...........:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:)\n  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:)\n  (:...........:...............:...............:...............:...................................:...........:...............:...............:...............:...........:)\n  (:...............................................................:..............................:::......................................................................:)\n  (:...............................................................:.............................:::::.....................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:.............................................................:::::.............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:...............................................................:...........:...............:...........................................................................:)\n  (:...........................................................................::..............::..........................................................................:)\n  (:..................................................................::::::::::::....::::::::::::.........................................................................:)\n  (:...........................................................................::..............::..........................................................................:)\n  (:...........................................................................:...............:...........................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code": "",
    "parse": [
      "define",
      "cos_not_image",
      [
        -1,
        "make-image",
        "109",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...:...........................................:...............:...............:...............:...........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:"
          ],
          [
            ":...........:...............:...............:...............:...................................:...........:...............:...............:...............:...........:"
          ],
          [
            ":...............................................................:..............................:::......................................................................:"
          ],
          [
            ":...............................................................:.............................:::::.....................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":.............................................................:::::.............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":...............................................................:...........:...............:...........................................................................:"
          ],
          [
            ":...........................................................................::..............::..........................................................................:"
          ],
          [
            ":..................................................................::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":...........................................................................::..............::..........................................................................:"
          ],
          [
            ":...........................................................................:...............:...........................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF15F;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF171;&#xF24A;&#xF146;&#xF16D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1628
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_not_gate | distill-circuit $cos_not_image;"
    ],
    "preprocessed": "equal $cos_not_gate | distill-circuit $cos_not_image;",
    "code": "2100030232110011010312321100110013023211001101132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_not_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_not_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF15E;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF15F;&#xF24B;",
    "dt": false,
    "stanza": 1629
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_NOT.gate",
      "5 6 1 0 1",
      "3 6 1 0 1",
      "1 6 1 0 1",
      "19 6 1 0 0",
      "17 6 1 0 0",
      "15 6 1 0 0",
      "13 6 1 0 0",
      "12 7 0 -1 0",
      "8 5 0 1 1",
      "11 8 1 0 0",
      "7 6 1 0 1",
      "8 7 0 1 0",
      "9 8 1 0 0"
    ],
    "thumbnail": "COS_NOT.gif",
    "page": "COS_NOT.html",
    "stanza": 1630
  },
  {
    "role": "file",
    "lines": [
      "== COS_AND =="
    ],
    "stanza": 1631
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_and circuit",
    "section_category": "GATE",
    "section_index": 46,
    "stanza": 1632
  },
  {
    "role": "code",
    "lines": [
      "intro cos_and_gate;"
    ],
    "preprocessed": "intro cos_and_gate;",
    "code": "2100103211001110032233",
    "parse": [
      "intro",
      "cos_and_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF160;&#xF24B;",
    "dt": false,
    "stanza": 1633
  },
  {
    "role": "code",
    "lines": [
      "intro cos_and_image;"
    ],
    "preprocessed": "intro cos_and_image;",
    "code": "2100103211001110132233",
    "parse": [
      "intro",
      "cos_and_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 1634
  },
  {
    "role": "code",
    "lines": [
      "define cos_and_gate | vector ",
      "  (vector 0 2 2 2 $true)",
      "  (vector 0 8 2 8 $true)",
      "  (vector 2 2 4 2 $true)",
      "  (vector 2 4 4 4 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 2 8 4 8 $true)",
      "  (vector 4 2 4 4 $true)",
      "  (vector 4 8 4 6 $true)",
      "  (vector 4 4 6 4 $false)",
      "  (vector 4 6 6 6 $false)",
      "  (vector 6 4 8 4 $false)",
      "  (vector 6 6 8 6 $false)",
      "  (vector 8 4 10 4 $false)",
      "  (vector 8 6 10 6 $false)",
      "  (vector 10 2 10 4 $true)",
      "  (vector 10 4 10 6 $true)",
      "  (vector 10 6 10 8 $true)",
      "  (vector 10 8 12 8 $true)",
      "  (vector 12 8 14 8 $true)",
      "  (vector 14 8 16 8 $true)",
      "  (vector 16 8 18 8 $true);"
    ],
    "preprocessed": "define cos_and_gate | vector \n  (vector 0 2 2 2 $true)\n  (vector 0 8 2 8 $true)\n  (vector 2 2 4 2 $true)\n  (vector 2 4 4 4 $true)\n  (vector 2 6 4 6 $true)\n  (vector 2 8 4 8 $true)\n  (vector 4 2 4 4 $true)\n  (vector 4 8 4 6 $true)\n  (vector 4 4 6 4 $false)\n  (vector 4 6 6 6 $false)\n  (vector 6 4 8 4 $false)\n  (vector 6 6 8 6 $false)\n  (vector 8 4 10 4 $false)\n  (vector 8 6 10 6 $false)\n  (vector 10 2 10 4 $true)\n  (vector 10 4 10 6 $true)\n  (vector 10 6 10 8 $true)\n  (vector 10 8 12 8 $true)\n  (vector 12 8 14 8 $true)\n  (vector 14 8 16 8 $true)\n  (vector 16 8 18 8 $true);",
    "code
    "parse": [
      "define",
      "cos_and_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "2",
          "2",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "8",
          "2",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "4",
          "4",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "8",
          "4",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "4",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "8",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "4",
          "6",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "6",
          "4",
          "8",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "10",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "10",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "8",
          "18",
          "8",
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF160;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1635
  },
  {
    "role": "code",
    "lines": [
      "define cos_and_image | make-image 88 153 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:...........:...............:...........................................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::..........................................................................................................................:)",
      "  (:..::::::::::::....::::::::::::.........................................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::..........................................................................................................................:)",
      "  (:...........:...............:...........................................................................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:.............................:::::...........................................:::::.....................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:...........................:...:...........:...............:...............:...:.......................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:...........................:...............:...............:...............:...........................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:.............................................................................:::::.....................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:...........................:...............:...............:...............:...:.......................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:...........................:...:...........:...............:...............:...........................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:.............................:::::............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::............................................:::::.....................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:...........:...............:...................................................:...........:...............:...............:...............:...........:)",
      "  (:..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:..::::::::::::....::::::::::::....................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:...........:...............:...............................................................:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_and_image | make-image 88 153 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:...........:...............:...........................................................................................................................:)\n  (:..:::::::::::.....:::::::::::..........................................................................................................................:)\n  (:..::::::::::::....::::::::::::.........................................................................................................................:)\n  (:..:::::::::::.....:::::::::::..........................................................................................................................:)\n  (:...........:...............:...........................................................................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:.............................:::::...........................................:::::.....................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:...........................:...:...........:...............:...............:...:.......................................................................:)\n  (:..................:::::::::::..............::..............::..............::..........................................................................:)\n  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)\n  (:..................:::::::::::..............::..............::..............::..........................................................................:)\n  (:...........................:...............:...............:...............:...........................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:.............................................................................:::::.....................................................................:)\n  (:..............................................................................:::......................................................................:)\n  (:...........................:...............:...............:...............:...:.......................................................................:)\n  (:..................:::::::::::..............::..............::..............::..........................................................................:)\n  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)\n  (:..................:::::::::::..............::..............::..............::..........................................................................:)\n  (:...........................:...:...........:...............:...............:...........................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:.............................:::::............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:..............................:::............................................:::::.....................................................................:)\n  (:..............................:::.............................................:::......................................................................:)\n  (:...........:...............:...................................................:...........:...............:...............:...............:...........:)\n  (:..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)\n  (:..::::::::::::....::::::::::::....................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)\n  (:..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)\n  (:...........:...............:...............................................................:...............:...............:...............:...........:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:.......................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code
    "parse": [
      "define",
      "cos_and_image",
      [
        -1,
        "make-image",
        "88",
        "153",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":...........:...............:...........................................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::..........................................................................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::.........................................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::..........................................................................................................................:"
          ],
          [
            ":...........:...............:...........................................................................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":.............................:::::...........................................:::::.....................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":...........................:...:...........:...............:...............:...:.......................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...........................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...:.......................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":...........................:...:...........:...............:...............:...........................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":.............................:::::............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::............................................:::::.....................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":...........:...............:...................................................:...........:...............:...............:...............:...........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":..::::::::::::....::::::::::::....................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":...........:...............:...............................................................:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF161;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF15C;&#xF24A;&#xF146;&#xF15D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1636
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_and_gate | distill-circuit $cos_and_image;"
    ],
    "preprocessed": "equal $cos_and_gate | distill-circuit $cos_and_image;",
    "code": "2100030232110011100312321100110013023211001110132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_and_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_and_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF160;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF161;&#xF24B;",
    "dt": false,
    "stanza": 1637
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_AND.gate",
      "1 2 1 0 1",
      "3 4 1 0 1",
      "5 6 1 0 0",
      "3 6 1 0 1",
      "4 7 0 -1 1",
      "3 8 1 0 1",
      "1 8 1 0 1",
      "17 8 1 0 1",
      "10 3 0 1 1",
      "15 8 1 0 1",
      "9 4 1 0 0",
      "10 5 0 1 1",
      "13 8 1 0 1",
      "7 4 1 0 0",
      "9 6 1 0 0",
      "10 7 0 1 1",
      "11 8 1 0 1",
      "3 2 1 0 1",
      "4 3 0 1 1",
      "5 4 1 0 0",
      "7 6 1 0 0"
    ],
    "thumbnail": "COS_AND.gif",
    "page": "COS_AND.html",
    "stanza": 1638
  },
  {
    "role": "file",
    "lines": [
      "== COS_OR =="
    ],
    "stanza": 1639
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_or circuit",
    "section_category": "GATE",
    "section_index": 47,
    "stanza": 1640
  },
  {
    "role": "code",
    "lines": [
      "intro cos_or_gate;"
    ],
    "preprocessed": "intro cos_or_gate;",
    "code": "2100103211001111032233",
    "parse": [
      "intro",
      "cos_or_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF162;&#xF24B;",
    "dt": false,
    "stanza": 1641
  },
  {
    "role": "code",
    "lines": [
      "intro cos_or_image;"
    ],
    "preprocessed": "intro cos_or_image;",
    "code": "2100103211001111132233",
    "parse": [
      "intro",
      "cos_or_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1642
  },
  {
    "role": "code",
    "lines": [
      "define cos_or_gate | vector ",
      "  (vector 2 4 4 4 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 4 4 6 4 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 6 4 8 4 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 8 4 10 4 $true)",
      "  (vector 8 6 10 6 $true)",
      "  (vector 8 8 10 8 $true)",
      "  (vector 10 2 10 4 $true)",
      "  (vector 10 4 10 6 $false)",
      "  (vector 10 6 10 8 $false)",
      "  (vector 10 8 12 8 $true)",
      "  (vector 12 8 14 8 $true)",
      "  (vector 14 8 16 8 $true)",
      "  (vector 16 8 18 8 $true);"
    ],
    "preprocessed": "define cos_or_gate | vector \n  (vector 2 4 4 4 $true)\n  (vector 2 6 4 6 $true)\n  (vector 4 4 6 4 $true)\n  (vector 4 6 6 6 $true)\n  (vector 6 4 8 4 $true)\n  (vector 6 6 8 6 $true)\n  (vector 8 4 10 4 $true)\n  (vector 8 6 10 6 $true)\n  (vector 8 8 10 8 $true)\n  (vector 10 2 10 4 $true)\n  (vector 10 4 10 6 $false)\n  (vector 10 6 10 8 $false)\n  (vector 10 8 12 8 $true)\n  (vector 12 8 14 8 $true)\n  (vector 14 8 16 8 $true)\n  (vector 16 8 18 8 $true);",
    "code
    "parse": [
      "define",
      "cos_or_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "2",
          "4",
          "4",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "4",
          "6",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "4",
          "8",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "10",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "8",
          "18",
          "8",
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF162;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1643
  },
  {
    "role": "code",
    "lines": [
      "define cos_or_image | make-image 93 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:.............................................................................:::::.....................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:...........................:...............:...............:...............:...:.......................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:...........................:...............:...............:...............:...........................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:.............................................................................:::::.....................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:...........................:...............:...............:...............:...:.......................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:...........................:...............:...............:...............:...........................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:.............................................................................:::::.....................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:...........................................................................:...:...........:...............:...............:...............:...........................:)",
      "  (:..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:)",
      "  (:..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................:)",
      "  (:..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:)",
      "  (:...........................................................................:...............:...............:...............:...............:...........................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_or_image | make-image 93 169 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:.............................................................................:::::.....................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:...........................:...............:...............:...............:...:.......................................................................................:)\n  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)\n  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:)\n  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)\n  (:...........................:...............:...............:...............:...........................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:.............................................................................:::::.....................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:...........................:...............:...............:...............:...:.......................................................................................:)\n  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)\n  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:)\n  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)\n  (:...........................:...............:...............:...............:...........................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:...............................................................................:.......................................................................................:)\n  (:.............................................................................:::::.....................................................................................:)\n  (:..............................................................................:::......................................................................................:)\n  (:...........................................................................:...:...........:...............:...............:...............:...........................:)\n  (:..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:)\n  (:..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................:)\n  (:..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:)\n  (:...........................................................................:...............:...............:...............:...............:...........................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code": "",
    "parse": [
      "define",
      "cos_or_image",
      [
        -1,
        "make-image",
        "93",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...:.......................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...........................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...:.......................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...........................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":...........................................................................:...:...........:...............:...............:...............:...........................:"
          ],
          [
            ":..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:"
          ],
          [
            ":..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................:"
          ],
          [
            ":..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:"
          ],
          [
            ":...........................................................................:...............:...............:...............:...............:...........................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF163;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF161;&#xF24A;&#xF146;&#xF16D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1644
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_or_gate | distill-circuit $cos_or_image;"
    ],
    "preprocessed": "equal $cos_or_gate | distill-circuit $cos_or_image;",
    "code": "2100030232110011110312321100110013023211001111132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_or_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_or_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF162;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF163;&#xF24B;",
    "dt": false,
    "stanza": 1645
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_OR.gate",
      "3 4 1 0 1",
      "5 6 1 0 1",
      "3 6 1 0 1",
      "17 8 1 0 1",
      "10 3 0 1 1",
      "15 8 1 0 1",
      "9 4 1 0 1",
      "10 5 0 1 0",
      "13 8 1 0 1",
      "7 4 1 0 1",
      "9 6 1 0 1",
      "10 7 0 1 0",
      "11 8 1 0 1",
      "5 4 1 0 1",
      "7 6 1 0 1",
      "9 8 1 0 1"
    ],
    "thumbnail": "COS_OR.gif",
    "page": "COS_OR.html",
    "stanza": 1646
  },
  {
    "role": "file",
    "lines": [
      "== COS_NOR =="
    ],
    "stanza": 1647
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_nor circuit",
    "section_category": "GATE",
    "section_index": 48,
    "stanza": 1648
  },
  {
    "role": "code",
    "lines": [
      "intro cos_nor_gate;"
    ],
    "preprocessed": "intro cos_nor_gate;",
    "code": "2100103211010000032233",
    "parse": [
      "intro",
      "cos_nor_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF164;&#xF24B;",
    "dt": false,
    "stanza": 1649
  },
  {
    "role": "code",
    "lines": [
      "intro cos_nor_image;"
    ],
    "preprocessed": "intro cos_nor_image;",
    "code": "2100103211010000132233",
    "parse": [
      "intro",
      "cos_nor_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1650
  },
  {
    "role": "code",
    "lines": [
      "define cos_nor_gate | vector ",
      "  (vector 0 6 2 6 $true)",
      "  (vector 0 8 2 8 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 2 8 4 8 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 4 8 6 8 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 6 8 8 8 $true)",
      "  (vector 8 4 8 6 $true)",
      "  (vector 8 6 8 8 $false)",
      "  (vector 8 8 8 10 $false)",
      "  (vector 8 10 10 10 $false)",
      "  (vector 10 10 12 10 $false)",
      "  (vector 12 10 14 10 $false)",
      "  (vector 14 10 16 10 $false)",
      "  (vector 16 10 18 10 $false)",
      "  (vector 18 10 20 10 $false);"
    ],
    "preprocessed": "define cos_nor_gate | vector \n  (vector 0 6 2 6 $true)\n  (vector 0 8 2 8 $true)\n  (vector 2 6 4 6 $true)\n  (vector 2 8 4 8 $true)\n  (vector 4 6 6 6 $true)\n  (vector 4 8 6 8 $true)\n  (vector 6 6 8 6 $true)\n  (vector 6 8 8 8 $true)\n  (vector 8 4 8 6 $true)\n  (vector 8 6 8 8 $false)\n  (vector 8 8 8 10 $false)\n  (vector 8 10 10 10 $false)\n  (vector 10 10 12 10 $false)\n  (vector 12 10 14 10 $false)\n  (vector 14 10 16 10 $false)\n  (vector 16 10 18 10 $false)\n  (vector 18 10 20 10 $false);",
    "code": "211013211010000031232100003221000032032110321032110302321332210000320321000321032100030232133221000032103211032100321103023213322100003210321000321003210003023213322100003210032110321103211030232133221000032100321000321103210003023213322100003211032110321000321103023213322100003211032100032100032100030232133221000032100032100321000321103023213322100003210003211032100032100030232033221000032100032100032100032101030232033221000032100032101032101032101030232033221000032101032101032110032101030232033221000032110032101032111032101030232033221000032111032101032100003210103023203322100003210000321010321001032101030232033221000032100103210103210100321010302320332233",
    "parse": [
      "define",
      "cos_nor_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "6",
          "2",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "8",
          "2",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "8",
          "4",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "8",
          "6",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "8",
          "8",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "8",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "8",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "10",
          "10",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "10",
          "12",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "10",
          "14",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "10",
          "16",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "10",
          "18",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "18",
          "10",
          "20",
          "10",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF164;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14E;&#xF24A;&#xF152;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14E;&#xF24A;&#xF154;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF156;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF14E;&#xF24A;&#xF158;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1651
  },
  {
    "role": "code",
    "lines": [
      "define cos_nor_image | make-image 125 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...........:...............:...............:...............:...:.......................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:...........:...............:...............:...............:...........................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...........:...............:...............:...............:...:.......................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:...........:...............:...............:...............:...........................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...............................................................:...........:...............:...............:...............:...............:...............:...........:)",
      "  (:...........................................................................::..............::..............::..............::..............::..............::..........:)",
      "  (:..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:...........................................................................::..............::..............::..............::..............::..............::..........:)",
      "  (:...........................................................................:...............:...............:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_nor_image | make-image 125 169 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:.............................................................:::::.....................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:...........:...............:...............:...............:...:.......................................................................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)\n  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)\n  (:...........:...............:...............:...............:...........................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:.............................................................:::::.....................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:...........:...............:...............:...............:...:.......................................................................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)\n  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)\n  (:...........:...............:...............:...............:...........................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:...............................................................:.......................................................................................................:)\n  (:.............................................................:::::.....................................................................................................:)\n  (:..............................................................:::......................................................................................................:)\n  (:...............................................................:...........:...............:...............:...............:...............:...............:...........:)\n  (:...........................................................................::..............::..............::..............::..............::..............::..........:)\n  (:..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)\n  (:...........................................................................::..............::..............::..............::..............::..............::..........:)\n  (:...........................................................................:...............:...............:...............:...............:...............:...........:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code": "2110132110100001312321011111013211111013210101001312321000032111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100111111111111000011111111111100001111111111110000111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100111111111111000011111111111100001111111111110000111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000010000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000132100000000000000000000000000000000000000000000000000000000000000000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000132100000000000000000000000000000000000000000000000000000000000000000011111111111100001111111111110000111111111111000011111111111100001111111111110000111111111111000000000132100000000000000000000000000000000000000000000000000000000000000000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000132100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111132233",
    "parse": [
      "define",
      "cos_nor_image",
      [
        -1,
        "make-image",
        "125",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...:.......................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...........................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...:.......................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...........................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...............................................................:...........:...............:...............:...............:...............:...............:...........:"
          ],
          [
            ":...........................................................................::..............::..............::..............::..............::..............::..........:"
          ],
          [
            ":..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":...........................................................................::..............::..............::..............::..............::..............::..........:"
          ],
          [
            ":...........................................................................:...............:...............:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF165;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF181;&#xF24A;&#xF146;&#xF16D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1652
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_nor_gate | distill-circuit $cos_nor_image;"
    ],
    "preprocessed": "equal $cos_nor_gate | distill-circuit $cos_nor_image;",
    "code": "2100030232110100000312321100110013023211010000132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_nor_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_nor_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF164;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1653
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_NOR.gate",
      "5 6 1 0 1",
      "7 8 1 0 1",
      "8 9 0 1 0",
      "9 10 1 0 0",
      "3 6 1 0 1",
      "5 8 1 0 1",
      "1 6 1 0 1",
      "3 8 1 0 1",
      "1 8 1 0 1",
      "19 10 1 0 0",
      "17 10 1 0 0",
      "15 10 1 0 0",
      "8 5 0 1 1",
      "13 10 1 0 0",
      "7 6 1 0 1",
      "8 7 0 1 0",
      "11 10 1 0 0"
    ],
    "thumbnail": "COS_NOR.gif",
    "page": "COS_NOR.html",
    "stanza": 1654
  },
  {
    "role": "file",
    "lines": [
      "== COS_OSC =="
    ],
    "stanza": 1655
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_osc circuit",
    "section_category": "GATE",
    "section_index": 49,
    "stanza": 1656
  },
  {
    "role": "code",
    "lines": [
      "intro cos_osc_gate;"
    ],
    "preprocessed": "intro cos_osc_gate;",
    "code": "2100103211010001032233",
    "parse": [
      "intro",
      "cos_osc_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF166;&#xF24B;",
    "dt": false,
    "stanza": 1657
  },
  {
    "role": "code",
    "lines": [
      "intro cos_osc_image;"
    ],
    "preprocessed": "intro cos_osc_image;",
    "code": "2100103211010001132233",
    "parse": [
      "intro",
      "cos_osc_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1658
  },
  {
    "role": "code",
    "lines": [
      "define cos_osc_gate | vector ",
      "  (vector 4 8 6 8 $true)",
      "  (vector 6 8 8 8 $true)",
      "  (vector 8 6 8 8 $true)",
      "  (vector 10 6 8 6 $true)",
      "  (vector 8 8 10 8 $false)",
      "  (vector 12 6 10 6 $false)",
      "  (vector 10 8 12 8 $false)",
      "  (vector 12 8 12 6 $false)",
      "  (vector 12 8 14 8 $false)",
      "  (vector 14 8 16 8 $false);"
    ],
    "preprocessed": "define cos_osc_gate | vector \n  (vector 4 8 6 8 $true)\n  (vector 6 8 8 8 $true)\n  (vector 8 6 8 8 $true)\n  (vector 10 6 8 6 $true)\n  (vector 8 8 10 8 $false)\n  (vector 12 6 10 6 $false)\n  (vector 10 8 12 8 $false)\n  (vector 12 8 12 6 $false)\n  (vector 12 8 14 8 $false)\n  (vector 14 8 16 8 $false);",
    "code": "21101321101000103123210000322100003210032100032110321000302321332210000321103210003210003210003023213322100003210003211032100032100030232133221000032101032110321000321103023213322100003210003210003210103210003023203322100003211003211032101032110302320332210000321010321000321100321000302320332210000321100321000321100321103023203322100003211003210003211103210003023203322100003211103210003210000321000302320332233",
    "parse": [
      "define",
      "cos_osc_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "4",
          "8",
          "6",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "8",
          "8",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "8",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "12",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF166;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14C;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1659
  },
  {
    "role": "code",
    "lines": [
      "define cos_osc_image | make-image 120 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:...................................................................:...............:...................................................................................:)",
      "  (:..................................................................:::::::::::.....::...................................................................................:)",
      "  (:.................................................................::::::::::::....::::::::::::..........................................................................:)",
      "  (:..................................................................:::::::::::.....::...................................................................................:)",
      "  (:...................................................................:...............:...........:.......................................................................:)",
      "  (:..............................................................:::.............................:::......................................................................:)",
      "  (:..............................................................:::............................:::::.....................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:.............................................................:::::.............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:...........................................:...............:...:...........:...............:...............:...............:...........................................:)",
      "  (:..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:)",
      "  (:..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................:)",
      "  (:..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:)",
      "  (:...........................................:...............:...............:...............:...............:...............:...........................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_osc_image | make-image 120 169 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:...................................................................:...............:...................................................................................:)\n  (:..................................................................:::::::::::.....::...................................................................................:)\n  (:.................................................................::::::::::::....::::::::::::..........................................................................:)\n  (:..................................................................:::::::::::.....::...................................................................................:)\n  (:...................................................................:...............:...........:.......................................................................:)\n  (:..............................................................:::.............................:::......................................................................:)\n  (:..............................................................:::............................:::::.....................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:.............................................................:::::.............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:...........................................:...............:...:...........:...............:...............:...............:...........................................:)\n  (:..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:)\n  (:..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................:)\n  (:..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:)\n  (:...........................................:...............:...............:...............:...............:...............:...........................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code
    "parse": [
      "define",
      "cos_osc_image",
      [
        -1,
        "make-image",
        "120",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":...................................................................:...............:...................................................................................:"
          ],
          [
            ":..................................................................:::::::::::.....::...................................................................................:"
          ],
          [
            ":.................................................................::::::::::::....::::::::::::..........................................................................:"
          ],
          [
            ":..................................................................:::::::::::.....::...................................................................................:"
          ],
          [
            ":...................................................................:...............:...........:.......................................................................:"
          ],
          [
            ":..............................................................:::.............................:::......................................................................:"
          ],
          [
            ":..............................................................:::............................:::::.....................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":.............................................................:::::.............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":...........................................:...............:...:...........:...............:...............:...............:...........................................:"
          ],
          [
            ":..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:"
          ],
          [
            ":..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................:"
          ],
          [
            ":..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:"
          ],
          [
            ":...........................................:...............:...............:...............:...............:...............:...........................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF167;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF17C;&#xF24A;&#xF146;&#xF16D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1660
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_osc_gate | distill-circuit $cos_osc_image;"
    ],
    "preprocessed": "equal $cos_osc_gate | distill-circuit $cos_osc_image;",
    "code": "2100030232110100010312321100110013023211010001132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_osc_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_osc_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF166;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1661
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_OSC.gate",
      "7 8 1 0 1",
      "5 8 1 0 1",
      "15 8 1 0 0",
      "11 6 -1 0 0",
      "12 7 0 -1 0",
      "13 8 1 0 0",
      "9 6 -1 0 1",
      "11 8 1 0 0",
      "8 7 0 1 1",
      "9 8 1 0 0"
    ],
    "thumbnail": "COS_OSC.gif",
    "page": "COS_OSC.html",
    "stanza": 1662
  },
  {
    "role": "file",
    "lines": [
      "== COS_SR =="
    ],
    "stanza": 1663
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_sr circuit",
    "section_category": "GATE",
    "section_index": 50,
    "stanza": 1664
  },
  {
    "role": "code",
    "lines": [
      "intro cos_sr_gate;"
    ],
    "preprocessed": "intro cos_sr_gate;",
    "code": "2100103211010010032233",
    "parse": [
      "intro",
      "cos_sr_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF168;&#xF24B;",
    "dt": false,
    "stanza": 1665
  },
  {
    "role": "code",
    "lines": [
      "intro cos_sr_image;"
    ],
    "preprocessed": "intro cos_sr_image;",
    "code": "2100103211010010132233",
    "parse": [
      "intro",
      "cos_sr_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF169;&#xF24B;",
    "dt": false,
    "stanza": 1666
  },
  {
    "role": "code",
    "lines": [
      "define cos_sr_gate | vector ",
      "  (vector 0 2 2 2 $true)",
      "  (vector 0 8 2 8 $true)",
      "  (vector 2 2 4 2 $true)",
      "  (vector 2 8 4 8 $true)",
      "  (vector 4 2 6 2 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 4 8 6 8 $true)",
      "  (vector 6 8 6 6 $true)",
      "  (vector 6 2 8 2 $true)",
      "  (vector 6 6 8 6 $false)",
      "  (vector 8 4 8 6 $false)",
      "  (vector 8 2 10 2 $true)",
      "  (vector 10 4 8 4 $false)",
      "  (vector 8 6 10 6 $false)",
      "  (vector 10 6 10 8 $false)",
      "  (vector 10 2 12 2 $true)",
      "  (vector 12 4 10 4 $false)",
      "  (vector 10 6 12 6 $false)",
      "  (vector 10 8 12 8 $false)",
      "  (vector 12 6 12 4 $false)",
      "  (vector 12 2 14 2 $true)",
      "  (vector 14 4 12 4 $false)",
      "  (vector 12 8 14 8 $false)",
      "  (vector 14 2 14 4 $true)",
      "  (vector 16 4 14 4 $true)",
      "  (vector 14 8 16 8 $false)",
      "  (vector 16 8 18 8 $false)",
      "  (vector 18 8 20 8 $false);"
    ],
    "preprocessed": "define cos_sr_gate | vector \n  (vector 0 2 2 2 $true)\n  (vector 0 8 2 8 $true)\n  (vector 2 2 4 2 $true)\n  (vector 2 8 4 8 $true)\n  (vector 4 2 6 2 $true)\n  (vector 4 6 6 6 $true)\n  (vector 4 8 6 8 $true)\n  (vector 6 8 6 6 $true)\n  (vector 6 2 8 2 $true)\n  (vector 6 6 8 6 $false)\n  (vector 8 4 8 6 $false)\n  (vector 8 2 10 2 $true)\n  (vector 10 4 8 4 $false)\n  (vector 8 6 10 6 $false)\n  (vector 10 6 10 8 $false)\n  (vector 10 2 12 2 $true)\n  (vector 12 4 10 4 $false)\n  (vector 10 6 12 6 $false)\n  (vector 10 8 12 8 $false)\n  (vector 12 6 12 4 $false)\n  (vector 12 2 14 2 $true)\n  (vector 14 4 12 4 $false)\n  (vector 12 8 14 8 $false)\n  (vector 14 2 14 4 $true)\n  (vector 16 4 14 4 $true)\n  (vector 14 8 16 8 $false)\n  (vector 16 8 18 8 $false)\n  (vector 18 8 20 8 $false);",
    "code
    "parse": [
      "define",
      "cos_sr_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "2",
          "2",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "8",
          "2",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "8",
          "4",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "8",
          "6",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "8",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "2",
          "8",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "8",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "2",
          "10",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "8",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "12",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "4",
          "10",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "12",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "12",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "2",
          "14",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "4",
          "12",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "2",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "4",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "8",
          "18",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "18",
          "8",
          "20",
          "8",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF168;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF14C;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF24A;&#xF152;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF148;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF146;&#xF24A;&#xF152;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF152;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF14C;&#xF24A;&#xF158;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1667
  },
  {
    "role": "code",
    "lines": [
      "define cos_sr_image | make-image 88 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...............:...........................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...............:...........................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:.............................................................................................................:::::.....................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:...................................................................:...............:...............:...........:...:...................................................:)",
      "  (:..................................................................::..............::..............::..............:::::::::::..........................................:)",
      "  (:.................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::..........................................:)",
      "  (:..................................................................::..............::..............::..............:::::::::::..........................................:)",
      "  (:...................................................................:...............:...........:...:...............:...................................................:)",
      "  (:...............................................................:..............................:::......................................................................:)",
      "  (:...............................................................:.............................:::::.....................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:.............................................................:::::.............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:...........................................:...............:...:...........:...............:...........................................................................:)",
      "  (:..................................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..................................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:...........................................:...:...........:...............:...............:...........................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:.............................................:::::.............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::............................:::::.....................................................................................:)",
      "  (:..............................................:::.............................:::......................................................................................:)",
      "  (:...........:...............:...............:...................................:...........:...............:...............:...............:...............:...........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:)",
      "  (:...........:...............:...............:...............................................:...............:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_sr_image | make-image 88 169 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:...........:...............:...............:...............:...............:...............:...............:...........................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:)\n  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:)\n  (:...........:...............:...............:...............:...............:...............:...............:...........................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:.............................................................................................................:::::.....................................................:)\n  (:..............................................................................................................:::......................................................:)\n  (:...................................................................:...............:...............:...........:...:...................................................:)\n  (:..................................................................::..............::..............::..............:::::::::::..........................................:)\n  (:.................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::..........................................:)\n  (:..................................................................::..............::..............::..............:::::::::::..........................................:)\n  (:...................................................................:...............:...........:...:...............:...................................................:)\n  (:...............................................................:..............................:::......................................................................:)\n  (:...............................................................:.............................:::::.....................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:...............................................................:...............................:.......................................................................:)\n  (:.............................................................:::::.............................:.......................................................................:)\n  (:..............................................................:::..............................:.......................................................................:)\n  (:...........................................:...............:...:...........:...............:...........................................................................:)\n  (:..................................:::::::::::..............::..............::..............::..........................................................................:)\n  (:..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)\n  (:..................................:::::::::::..............::..............::..............::..........................................................................:)\n  (:...........................................:...:...........:...............:...............:...........................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:.............................................:::::.............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::..............................:.......................................................................................:)\n  (:..............................................:::............................:::::.....................................................................................:)\n  (:..............................................:::.............................:::......................................................................................:)\n  (:...........:...............:...............:...................................:...........:...............:...............:...............:...............:...........:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:)\n  (:..::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:)\n  (:...........:...............:...............:...............................................:...............:...............:...............:...............:...........:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code
    "parse": [
      "define",
      "cos_sr_image",
      [
        -1,
        "make-image",
        "88",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...............:...........................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...............:...........................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":.............................................................................................................:::::.....................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":...................................................................:...............:...............:...........:...:...................................................:"
          ],
          [
            ":..................................................................::..............::..............::..............:::::::::::..........................................:"
          ],
          [
            ":.................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::..........................................:"
          ],
          [
            ":..................................................................::..............::..............::..............:::::::::::..........................................:"
          ],
          [
            ":...................................................................:...............:...........:...:...............:...................................................:"
          ],
          [
            ":...............................................................:..............................:::......................................................................:"
          ],
          [
            ":...............................................................:.............................:::::.....................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":.............................................................:::::.............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":...........................................:...............:...:...........:...............:...........................................................................:"
          ],
          [
            ":..................................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..................................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":...........................................:...:...........:...............:...............:...........................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":.............................................:::::.............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::............................:::::.....................................................................................:"
          ],
          [
            ":..............................................:::.............................:::......................................................................................:"
          ],
          [
            ":...........:...............:...............:...................................:...........:...............:...............:...............:...............:...........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:"
          ],
          [
            ":...........:...............:...............:...............................................:...............:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF169;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF15C;&#xF24A;&#xF146;&#xF16D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1668
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_sr_gate | distill-circuit $cos_sr_image;"
    ],
    "preprocessed": "equal $cos_sr_gate | distill-circuit $cos_sr_image;",
    "code": "2100030232110100100312321100110013023211010010132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_sr_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_sr_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF168;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF169;&#xF24B;",
    "dt": false,
    "stanza": 1669
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_SR.gate",
      "6 7 0 -1 1",
      "13 2 1 0 1",
      "15 4 -1 0 1",
      "19 8 1 0 0",
      "11 2 1 0 1",
      "13 4 -1 0 0",
      "17 8 1 0 0",
      "9 2 1 0 1",
      "11 4 -1 0 0",
      "15 8 1 0 0",
      "7 2 1 0 1",
      "9 4 -1 0 0",
      "11 6 1 0 0",
      "13 8 1 0 0",
      "5 2 1 0 1",
      "9 6 1 0 0",
      "11 8 1 0 0",
      "3 2 1 0 1",
      "7 6 1 0 0",
      "1 2 1 0 1",
      "5 6 1 0 1",
      "5 8 1 0 1",
      "3 8 1 0 1",
      "1 8 1 0 1",
      "14 3 0 1 1",
      "12 5 0 -1 0",
      "8 5 0 1 0",
      "10 7 0 1 0"
    ],
    "thumbnail": "COS_SR.gif",
    "page": "COS_SR.html",
    "stanza": 1670
  },
  {
    "role": "file",
    "lines": [
      "== COS_D =="
    ],
    "stanza": 1671
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_d circuit",
    "section_category": "GATE",
    "section_index": 51,
    "stanza": 1672
  },
  {
    "role": "code",
    "lines": [
      "intro cos_d_gate;"
    ],
    "preprocessed": "intro cos_d_gate;",
    "code": "2100103211010011032233",
    "parse": [
      "intro",
      "cos_d_gate"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF16A;&#xF24B;",
    "dt": false,
    "stanza": 1673
  },
  {
    "role": "code",
    "lines": [
      "intro cos_d_image;"
    ],
    "preprocessed": "intro cos_d_image;",
    "code": "2100103211010011132233",
    "parse": [
      "intro",
      "cos_d_image"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF16B;&#xF24B;",
    "dt": false,
    "stanza": 1674
  },
  {
    "role": "code",
    "lines": [
      "define cos_d_gate | vector ",
      "  (vector 0 2 2 2 $true)",
      "  (vector 0 6 2 6 $true)",
      "  (vector 2 2 4 2 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 4 2 6 2 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 6 2 8 2 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 8 2 10 2 $true)",
      "  (vector 8 6 10 6 $true)",
      "  (vector 10 6 10 4 $true)",
      "  (vector 10 10 10 8 $true)",
      "  (vector 10 2 12 2 $true)",
      "  (vector 10 4 12 4 $true)",
      "  (vector 10 6 12 6 $true)",
      "  (vector 10 8 12 8 $true)",
      "  (vector 12 10 10 10 $true)",
      "  (vector 12 0 12 2 $true)",
      "  (vector 12 2 12 4 $false)",
      "  (vector 12 6 12 8 $true)",
      "  (vector 12 10 12 12 $true)",
      "  (vector 12 4 14 4 $true)",
      "  (vector 12 8 14 8 $false)",
      "  (vector 14 10 12 10 $true)",
      "  (vector 12 12 14 12 $true)",
      "  (vector 14 0 14 2 $true)",
      "  (vector 14 2 14 4 $true)",
      "  (vector 14 4 14 6 $false)",
      "  (vector 14 6 14 8 $false)",
      "  (vector 14 8 14 10 $false)",
      "  (vector 16 10 14 10 $true)",
      "  (vector 14 12 16 12 $true)",
      "  (vector 16 12 18 12 $true)",
      "  (vector 18 12 20 12 $true);"
    ],
    "preprocessed": "define cos_d_gate | vector \n  (vector 0 2 2 2 $true)\n  (vector 0 6 2 6 $true)\n  (vector 2 2 4 2 $true)\n  (vector 2 6 4 6 $true)\n  (vector 4 2 6 2 $true)\n  (vector 4 6 6 6 $true)\n  (vector 6 2 8 2 $true)\n  (vector 6 6 8 6 $true)\n  (vector 8 2 10 2 $true)\n  (vector 8 6 10 6 $true)\n  (vector 10 6 10 4 $true)\n  (vector 10 10 10 8 $true)\n  (vector 10 2 12 2 $true)\n  (vector 10 4 12 4 $true)\n  (vector 10 6 12 6 $true)\n  (vector 10 8 12 8 $true)\n  (vector 12 10 10 10 $true)\n  (vector 12 0 12 2 $true)\n  (vector 12 2 12 4 $false)\n  (vector 12 6 12 8 $true)\n  (vector 12 10 12 12 $true)\n  (vector 12 4 14 4 $true)\n  (vector 12 8 14 8 $false)\n  (vector 14 10 12 10 $true)\n  (vector 12 12 14 12 $true)\n  (vector 14 0 14 2 $true)\n  (vector 14 2 14 4 $true)\n  (vector 14 4 14 6 $false)\n  (vector 14 6 14 8 $false)\n  (vector 14 8 14 10 $false)\n  (vector 16 10 14 10 $true)\n  (vector 14 12 16 12 $true)\n  (vector 16 12 18 12 $true)\n  (vector 18 12 20 12 $true);",
    "code
    "parse": [
      "define",
      "cos_d_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "2",
          "2",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "6",
          "2",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "2",
          "8",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "2",
          "10",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "10",
          "10",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "12",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "12",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "12",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "10",
          "10",
          "10",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "0",
          "12",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "2",
          "12",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "10",
          "12",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "4",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "10",
          "12",
          "10",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "12",
          "14",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "0",
          "14",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "2",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "4",
          "14",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "6",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "14",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "10",
          "14",
          "10",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "12",
          "16",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "12",
          "18",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "18",
          "12",
          "20",
          "12",
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF16A;&#xF248;&#xF154;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF144;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF146;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF146;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF148;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF146;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14A;&#xF24A;&#xF14A;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF146;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14C;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF146;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF148;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14A;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF14C;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF24A;&#xF14E;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF144;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF146;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14A;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF150;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF148;&#xF24A;&#xF152;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF14C;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14E;&#xF24A;&#xF150;&#xF24A;&#xF14E;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF150;&#xF24A;&#xF152;&#xF24A;&#xF150;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF144;&#xF24A;&#xF152;&#xF24A;&#xF146;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF146;&#xF24A;&#xF152;&#xF24A;&#xF148;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF148;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14A;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF14C;&#xF24A;&#xF152;&#xF24A;&#xF14E;&#xF249;&#xF144;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF14E;&#xF24A;&#xF152;&#xF24A;&#xF14E;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF152;&#xF24A;&#xF150;&#xF24A;&#xF154;&#xF24A;&#xF150;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF154;&#xF24A;&#xF150;&#xF24A;&#xF156;&#xF24A;&#xF150;&#xF249;&#xF145;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF150;&#xF24A;&#xF158;&#xF24A;&#xF150;&#xF249;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1675
  },
  {
    "role": "code",
    "lines": [
      "define cos_d_image | make-image 109 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:.............................................................................................:::::...........:::::.....................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...:...............:.......................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...........................................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:.............................................................................................:::::...........:::::.....................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:...........................................................................................:...:...........:...:.......................................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::..........................................................:)",
      "  (:..................................................................................::::::::::::....::::::::::::.........................................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::..........................................................:)",
      "  (:...............................................................................:...........:...............:...........................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:.............................................................................:::::.............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::............................:::::.....................................................:)",
      "  (:..............................................................................:::.............................:::......................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...................:.......................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...........................................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:.............................................................................................:::::...........:::::.....................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:...........................................................................................:...:...........:...:.......................................................:)",
      "  (:..................................................................................:::::::::::..............::..........................................................:)",
      "  (:..................................................................................::::::::::::....::::::::::::.........................................................:)",
      "  (:..................................................................................:::::::::::..............::..........................................................:)",
      "  (:...............................................................................:...........:...............:...........................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:.............................................................................:::::.............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::............................:::::.....................................................:)",
      "  (:..............................................................................:::.............................:::......................................................:)",
      "  (:...................................................................................:...............:...........:...:...................................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:)",
      "  (:.................................................................................::::::::::::....::::::::::::....::::::::::::..........................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:)",
      "  (:...................................................................................:...............:...............:...................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:.............................................................................................:::::.....................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:...............................................................................................:...........:...............:...............:...............:...........:)",
      "  (:..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:..................................................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:...........................................................................................................:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "preprocessed": "define cos_d_image | make-image 109 169 | vector \n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:.............................................................................................:::::...........:::::.....................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:...........:...............:...............:...............:...............:...............:...:...............:.......................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)\n  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)\n  (:...........:...............:...............:...............:...............:...............:...........................................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:...............................................................................................:..............:::......................................................:)\n  (:.............................................................................................:::::...........:::::.....................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:...........................................................................................:...:...........:...:.......................................................:)\n  (:..................................................................................:::::::::::.....:::::::::::..........................................................:)\n  (:..................................................................................::::::::::::....::::::::::::.........................................................:)\n  (:..................................................................................:::::::::::.....:::::::::::..........................................................:)\n  (:...............................................................................:...........:...............:...........................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:.............................................................................:::::.............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::............................:::::.....................................................:)\n  (:..............................................................................:::.............................:::......................................................:)\n  (:...........:...............:...............:...............:...............:...............:...................:.......................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)\n  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)\n  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)\n  (:...........:...............:...............:...............:...............:...............:...........................................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:..............................................................................................:::..............:.......................................................:)\n  (:.............................................................................................:::::...........:::::.....................................................:)\n  (:..............................................................................................:::.............:::......................................................:)\n  (:...........................................................................................:...:...........:...:.......................................................:)\n  (:..................................................................................:::::::::::..............::..........................................................:)\n  (:..................................................................................::::::::::::....::::::::::::.........................................................:)\n  (:..................................................................................:::::::::::..............::..........................................................:)\n  (:...............................................................................:...........:...............:...........................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:.............................................................................:::::.............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::..............................:.......................................................:)\n  (:..............................................................................:::............................:::::.....................................................:)\n  (:..............................................................................:::.............................:::......................................................:)\n  (:...................................................................................:...............:...........:...:...................................................:)\n  (:..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:)\n  (:.................................................................................::::::::::::....::::::::::::....::::::::::::..........................................:)\n  (:..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:)\n  (:...................................................................................:...............:...............:...................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:.............................................................................................:::::.....................................................................:)\n  (:..............................................................................................:::......................................................................:)\n  (:...............................................................................................:...........:...............:...............:...............:...........:)\n  (:..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)\n  (:..................................................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)\n  (:..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)\n  (:...........................................................................................................:...............:...............:...............:...........:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:.......................................................................................................................................................................:)\n  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);",
    "code": "2110132110100111312321011111013211011013210101001312321000032111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000001111100000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000100000000000000010000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000011111111111000001111111111100000000000000000000000000000000000000000000000000000000000000000000000000132100111111111111000011111111111100001111111111110000111111111111000011111111111100001111111111110000000000000000000000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000011111111111000001111111111100000000000000000000000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000001111100000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100000000000100010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000111111111110000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111110000111111111111000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000111111111110000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000000100000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000111110000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000001111100000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000111000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000000010000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000011111111111000001111111111100000000000000000000000000000000000000000000000000000000000000000000000000132100111111111111000011111111111100001111111111110000111111111111000011111111111100001111111111110000000000000000000000000000000000000000000000000000000000000000000000000132100111111111110000011111111111000001111111111100000111111111110000011111111111000001111111111100000000000000000000000000000000000000000000000000000000000000000000000000132100000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000001111100000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100000000000100010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000000000000110000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111110000111111111111000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000000000000110000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000000100000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000111110000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000010000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000001111100000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000111000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010000000000010001000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000111111111110000011111111111000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111100001111111111110000111111111111000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111100000111111111110000011111111111000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010000000000000001000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000100000000000000010000000000000001000000000000000100000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111110000011111111111000001111111111100000111111111110000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111000011111111111100001111111111110000111111111111000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111110000011111111111000001111111111100000111111111110000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010000000000000001000000000000000100000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111132233",
    "parse": [
      "define",
      "cos_d_image",
      [
        -1,
        "make-image",
        "109",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":.............................................................................................:::::...........:::::.....................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...:...............:.......................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...........................................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":.............................................................................................:::::...........:::::.....................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":...........................................................................................:...:...........:...:.......................................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":..................................................................................::::::::::::....::::::::::::.........................................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":...............................................................................:...........:...............:...........................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":.............................................................................:::::.............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::............................:::::.....................................................:"
          ],
          [
            ":..............................................................................:::.............................:::......................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...................:.......................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...........................................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":.............................................................................................:::::...........:::::.....................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":...........................................................................................:...:...........:...:.......................................................:"
          ],
          [
            ":..................................................................................:::::::::::..............::..........................................................:"
          ],
          [
            ":..................................................................................::::::::::::....::::::::::::.........................................................:"
          ],
          [
            ":..................................................................................:::::::::::..............::..........................................................:"
          ],
          [
            ":...............................................................................:...........:...............:...........................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":.............................................................................:::::.............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::............................:::::.....................................................:"
          ],
          [
            ":..............................................................................:::.............................:::......................................................:"
          ],
          [
            ":...................................................................................:...............:...........:...:...................................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:"
          ],
          [
            ":.................................................................................::::::::::::....::::::::::::....::::::::::::..........................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:"
          ],
          [
            ":...................................................................................:...............:...............:...................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":.............................................................................................:::::.....................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":...............................................................................................:...........:...............:...............:...............:...........:"
          ],
          [
            ":..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":..................................................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":...........................................................................................................:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF16B;&#xF248;&#xF149;&#xF181;&#xF24A;&#xF145;&#xF171;&#xF24A;&#xF146;&#xF16D;&#xF248;&#xF154;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF144;&#xF145;&#xF245;&#xF246;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1676
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_d_gate | distill-circuit $cos_d_image;"
    ],
    "preprocessed": "equal $cos_d_gate | distill-circuit $cos_d_image;",
    "code": "2100030232110100110312321100110013023211010011132233",
    "parse": [
      "equal",
      [
        -2,
        "cos_d_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_d_image"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF249;&#xF14A;&#xF16A;&#xF248;&#xF14A;&#xF15D;&#xF249;&#xF14A;&#xF16B;&#xF24B;",
    "dt": false,
    "stanza": 1677
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_D.gate",
      "11 2 1 0 1",
      "13 4 1 0 1",
      "9 2 1 0 1",
      "11 4 1 0 1",
      "19 12 1 0 1",
      "7 2 1 0 1",
      "11 6 1 0 1",
      "13 8 1 0 0",
      "15 10 -1 0 1",
      "17 12 1 0 1",
      "5 2 1 0 1",
      "9 6 1 0 1",
      "11 8 1 0 1",
      "13 10 -1 0 1",
      "15 12 1 0 1",
      "3 2 1 0 1",
      "7 6 1 0 1",
      "11 10 -1 0 1",
      "13 12 1 0 1",
      "1 2 1 0 1",
      "5 6 1 0 1",
      "3 6 1 0 1",
      "1 6 1 0 1",
      "14 1 0 1 1",
      "12 1 0 1 1",
      "14 3 0 1 1",
      "12 3 0 1 0",
      "14 5 0 1 0",
      "14 7 0 1 0",
      "10 5 0 -1 1",
      "12 7 0 1 1",
      "14 9 0 1 0",
      "10 9 0 -1 1",
      "12 11 0 1 1"
    ],
    "thumbnail": "COS_D.gif",
    "page": "COS_D.html",
    "stanza": 1678
  },
  {
    "role": "file",
    "lines": [
      "== COS_UnlessProbe =="
    ],
    "stanza": 1679
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "probing networks of unless gates",
    "section_category": "GATE",
    "section_index": 52,
    "stanza": 1680
  },
  {
    "role": "code",
    "lines": [
      "define set-input | ? circuit | ? index | ? value |",
      "  assign wire (list-ref $circuit $index) |",
      "  map (? w | if (not | equal $w $wire) $w |",
      "         vector (list-ref $w 0)",
      "             (list-ref $w 1)",
      "                (list-ref $w 2)    ",
      "            (list-ref $w 3)",
      "            $value)",
      "      $circuit;"
    ],
    "preprocessed": "define set-input | ? circuit | ? index | ? value |\n  assign wire (list-ref $circuit $index) |\n  map (? w | if (not | equal $w $wire) $w |\n         vector (list-ref $w 0)\n             (list-ref $w 1)\n                (list-ref $w 2)    \n            (list-ref $w 3)\n            $value)\n      $circuit;",
    "code": "211013211010100031232110032101101000312321100321101010013123211003211010101031232111032110101011322101010030232101101000302321101010013312321011010322110032101111111312321111322101312321000302321011111113023211010101133023210111111131232100003221010100302321011111113203322101010030232101111111321332210101003023210111111132103322101010030232101111111321133023211010101033023210110100032233",
    "parse": [
      "define",
      "set-input",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "index",
          [
            -1,
            "?",
            "value",
            [
              -1,
              "assign",
              "wire",
              [
                "list-ref",
                [
                  -2,
                  "circuit"
                ],
                [
                  -2,
                  "index"
                ]
              ],
              [
                -1,
                "map",
                [
                  "?",
                  "w",
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "equal",
                        [
                          -2,
                          "w"
                        ],
                        [
                          -2,
                          "wire"
                        ]
                      ]
                    ],
                    [
                      -2,
                      "w"
                    ],
                    [
                      -1,
                      "vector",
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "0"
                      ],
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "1"
                      ],
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "2"
                      ],
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "3"
                      ],
                      [
                        -2,
                        "value"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "circuit"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF16E;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF16F;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16C;&#xF249;&#xF14A;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF149;&#xF183;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF14C;&#xF249;&#xF149;&#xF183;&#xF249;&#xF14A;&#xF16F;&#xF245;&#xF249;&#xF149;&#xF183;&#xF248;&#xF154;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF183;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF183;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF183;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF183;&#xF24A;&#xF147;&#xF245;&#xF249;&#xF14A;&#xF16E;&#xF245;&#xF249;&#xF149;&#xF16C;&#xF24B;",
    "dt": true,
    "stanza": 1681
  },
  {
    "role": "code",
    "lines": [
      "define read-output | ? circuit | ? index |",
      "  assign len (list-length $circuit) |",
      "  assign wire (list-ref $circuit | - (- $len 1) $index) |",
      "  list-ref $wire 4;"
    ],
    "preprocessed": "define read-output | ? circuit | ? index |\n  assign len (list-length $circuit) |\n  assign wire (list-ref $circuit | - (- $len 1) $index) |\n  list-ref $wire 4;",
    "code": "21101321101011003123211003210110100031232110032110101001312321110321101011013221010011302321011010003312321110321101010113221010100302321011010003123210113221011302321101011013213302321101010013312321010100302321101010113210032233",
    "parse": [
      "define",
      "read-output",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "index",
          [
            -1,
            "assign",
            "len",
            [
              "list-length",
              [
                -2,
                "circuit"
              ]
            ],
            [
              -1,
              "assign",
              "wire",
              [
                "list-ref",
                [
                  -2,
                  "circuit"
                ],
                [
                  -1,
                  "-",
                  [
                    "-",
                    [
                      -2,
                      "len"
                    ],
                    "1"
                  ],
                  [
                    -2,
                    "index"
                  ]
                ]
              ],
              [
                -1,
                "list-ref",
                [
                  -2,
                  "wire"
                ],
                "4"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF170;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF171;&#xF246;&#xF145;&#xF157;&#xF249;&#xF149;&#xF16C;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14A;&#xF16F;&#xF246;&#xF145;&#xF158;&#xF249;&#xF149;&#xF16C;&#xF248;&#xF14F;&#xF246;&#xF14F;&#xF249;&#xF14A;&#xF171;&#xF24A;&#xF145;&#xF245;&#xF249;&#xF14A;&#xF16D;&#xF245;&#xF248;&#xF145;&#xF158;&#xF249;&#xF14A;&#xF16F;&#xF24A;&#xF148;&#xF24B;",
    "dt": true,
    "stanza": 1682
  },
  {
    "role": "code",
    "lines": [
      "define sim | ? circuit | ? steps | ? setter |",
      "  if (= $steps 0) $circuit |",
      "  sim (simulate-unless | setter $circuit) (- $steps 1) $setter;"
    ],
    "preprocessed": "define sim | ? circuit | ? steps | ? setter |\n  if (= $steps 0) $circuit |\n  sim (simulate-unless | setter $circuit) (- $steps 1) $setter;",
    "code": "21101321101011103123211003210110100031232110032110101111312321100321101100003123211113221130232110101111320330232101101000312321101011103221011101113123211011000030232101101000332210113023211010111132133023211011000032233",
    "parse": [
      "define",
      "sim",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "steps",
          [
            -1,
            "?",
            "setter",
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "steps"
                ],
                "0"
              ],
              [
                -2,
                "circuit"
              ],
              [
                -1,
                "sim",
                [
                  "simulate-unless",
                  [
                    -1,
                    "setter",
                    [
                      -2,
                      "circuit"
                    ]
                  ]
                ],
                [
                  "-",
                  [
                    -2,
                    "steps"
                  ],
                  "1"
                ],
                [
                  -2,
                  "setter"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF172;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF173;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF174;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF14A;&#xF173;&#xF24A;&#xF144;&#xF245;&#xF249;&#xF149;&#xF16C;&#xF248;&#xF14A;&#xF172;&#xF246;&#xF149;&#xF17B;&#xF248;&#xF14A;&#xF174;&#xF249;&#xF149;&#xF16C;&#xF245;&#xF246;&#xF14F;&#xF249;&#xF14A;&#xF173;&#xF24A;&#xF145;&#xF245;&#xF249;&#xF14A;&#xF174;&#xF24B;",
    "dt": true,
    "stanza": 1683
  },
  {
    "role": "code",
    "lines": [
      "define smart-sim | ? circuit | ? setter |",
      "  sim $circuit (list-length $circuit) $setter;"
    ],
    "preprocessed": "define smart-sim | ? circuit | ? setter |\n  sim $circuit (list-length $circuit) $setter;",
    "code": "21101321101100013123211003210110100031232110032110110000312321101011103023210110100032210100113023210110100033023211011000032233",
    "parse": [
      "define",
      "smart-sim",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "setter",
          [
            -1,
            "sim",
            [
              -2,
              "circuit"
            ],
            [
              "list-length",
              [
                -2,
                "circuit"
              ]
            ],
            [
              -2,
              "setter"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF175;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF16C;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF174;&#xF248;&#xF14A;&#xF172;&#xF249;&#xF149;&#xF16C;&#xF246;&#xF145;&#xF157;&#xF249;&#xF149;&#xF16C;&#xF245;&#xF249;&#xF14A;&#xF174;&#xF24B;",
    "dt": true,
    "stanza": 1684
  },
  {
    "role": "comment",
    "lines": [
      "# test cos_not gate"
    ],
    "stanza": 1685
  },
  {
    "role": "code",
    "lines": [
      "define cos_not_harness | ? x |",
      "  assign c $cos_not_gate | ",
      "  assign c (smart-sim $c | ? c | set-input $c 0 $x) |",
      "  read-output $c 0;"
    ],
    "preprocessed": "define cos_not_harness | ? x |\n  assign c $cos_not_gate | \n  assign c (smart-sim $c | ? c | set-input $c 0 $x) |\n  read-output $c 0;",
    "code": "21101321101100103123211003210100131232111032100000130232110011010312321110321000001322110110001302321000001312321100321000001312321101010003023210000013203023210100133123211010110030232100000132032233",
    "parse": [
      "define",
      "cos_not_harness",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "assign",
          "c",
          [
            -2,
            "cos_not_gate"
          ],
          [
            -1,
            "assign",
            "c",
            [
              "smart-sim",
              [
                -2,
                "c"
              ],
              [
                -1,
                "?",
                "c",
                [
                  -1,
                  "set-input",
                  [
                    -2,
                    "c"
                  ],
                  "0",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ],
            [
              -1,
              "read-output",
              [
                -2,
                "c"
              ],
              "0"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF176;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF145;&#xF249;&#xF14A;&#xF15E;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF145;&#xF246;&#xF14A;&#xF175;&#xF249;&#xF145;&#xF145;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF145;&#xF248;&#xF14A;&#xF16C;&#xF249;&#xF145;&#xF145;&#xF24A;&#xF144;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF14A;&#xF170;&#xF249;&#xF145;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1686
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_not_harness $true;"
    ],
    "preprocessed": "= $false | cos_not_harness $true;",
    "code": "2113023203123211011001030232132233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_not_harness",
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF176;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1687
  },
  {
    "role": "code",
    "lines": [
      "= $true | cos_not_harness $false;"
    ],
    "preprocessed": "= $true | cos_not_harness $false;",
    "code": "2113023213123211011001030232032233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "cos_not_harness",
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF176;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1688
  },
  {
    "role": "comment",
    "lines": [
      "# test cos_and gate"
    ],
    "stanza": 1689
  },
  {
    "role": "code",
    "lines": [
      "define cos_and_harness | ? x | ? y |",
      "  assign c $cos_and_gate | ",
      "  assign c (smart-sim $c | ? c | set-input (set-input $c 0 $x) 1 $y) |",
      "  read-output $c 0;"
    ],
    "preprocessed": "define cos_and_harness | ? x | ? y |\n  assign c $cos_and_gate | \n  assign c (smart-sim $c | ? c | set-input (set-input $c 0 $x) 1 $y) |\n  read-output $c 0;",
    "code": "2110132110110011312321100321010013123211003211110131232111032100000130232110011100312321110321000001322110110001302321000001312321100321000001312321101010003221101010003023210000013203023210100133213023211110133123211010110030232100000132032233",
    "parse": [
      "define",
      "cos_and_harness",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "assign",
            "c",
            [
              -2,
              "cos_and_gate"
            ],
            [
              -1,
              "assign",
              "c",
              [
                "smart-sim",
                [
                  -2,
                  "c"
                ],
                [
                  -1,
                  "?",
                  "c",
                  [
                    -1,
                    "set-input",
                    [
                      "set-input",
                      [
                        -2,
                        "c"
                      ],
                      "0",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "1",
                    [
                      -2,
                      "y"
                    ]
                  ]
                ]
              ],
              [
                -1,
                "read-output",
                [
                  -2,
                  "c"
                ],
                "0"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF177;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF145;&#xF249;&#xF14A;&#xF160;&#xF248;&#xF152;&#xF24A;&#xF145;&#xF145;&#xF246;&#xF14A;&#xF175;&#xF249;&#xF145;&#xF145;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF145;&#xF248;&#xF14A;&#xF16C;&#xF246;&#xF14A;&#xF16C;&#xF249;&#xF145;&#xF145;&#xF24A;&#xF144;&#xF249;&#xF16D;&#xF245;&#xF145;&#xF249;&#xF181;&#xF245;&#xF248;&#xF14A;&#xF170;&#xF249;&#xF145;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1690
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_and_harness $false $false;"
    ],
    "preprocessed": "= $false | cos_and_harness $false $false;",
    "code": "2113023203123211011001130232030232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_and_harness",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF177;&#xF249;&#xF144;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1691
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_and_harness $false $true;"
    ],
    "preprocessed": "= $false | cos_and_harness $false $true;",
    "code": "2113023203123211011001130232030232132233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_and_harness",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF177;&#xF249;&#xF144;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1692
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_and_harness $true $false;"
    ],
    "preprocessed": "= $false | cos_and_harness $true $false;",
    "code": "2113023203123211011001130232130232032233",
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_and_harness",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF144;&#xF248;&#xF14A;&#xF177;&#xF249;&#xF145;&#xF249;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1693
  },
  {
    "role": "code",
    "lines": [
      "= $true | cos_and_harness $true $true;"
    ],
    "preprocessed": "= $true | cos_and_harness $true $true;",
    "code": "2113023213123211011001130232130232132233",
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "cos_and_harness",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF147;&#xF249;&#xF145;&#xF248;&#xF14A;&#xF177;&#xF249;&#xF145;&#xF249;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1694
  },
  {
    "role": "comment",
    "lines": [
      "# this code is more awkward than it needs to be -",
      "# should make circuits mutable"
    ],
    "stanza": 1695
  },
  {
    "role": "file",
    "lines": [
      "== COS_CommentBase3 =="
    ],
    "stanza": 1696
  },
  {
    "role": "comment",
    "lines": [
      "# The following parts of the message start",
      "# to introduce some self-reference into the message"
    ],
    "section_description": "end of part 3, start of part 4",
    "section_category": "NOTE",
    "section_index": 53,
    "stanza": 1697
  },
  {
    "role": "code",
    "lines": [
      "intro part4;"
    ],
    "preprocessed": "intro part4;",
    "code": "2100103211011010032233",
    "parse": [
      "intro",
      "part4"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF178;&#xF24B;",
    "dt": false,
    "stanza": 1698
  },
  {
    "role": "file",
    "lines": [
      "== COS_Message =="
    ],
    "stanza": 1699
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "a mechanism for referring to parts of the message",
    "section_category": "SELF",
    "section_index": 54,
    "stanza": 1700
  },
  {
    "role": "comment",
    "lines": [
      "# Many choices for how to do this.",
      "# Could do it without special machinery by using the",
      "# standard A-B trick for giving e.g. a Turing machine",
      "# access to its own description.",
      "# Instead, will simply introduce a \"primer\" function",
      "# that gives access to every statement made so far",
      "# (question: should future statements be included?",
      "# tentatively assume YES: will simplify",
      "# discussion of creating modified copies of the",
      "# complete message)."
    ],
    "stanza": 1701
  },
  {
    "role": "comment",
    "lines": [
      "# For now, assume primer is a list of statements,",
      "# with each statement being a list in the same",
      "# form as \"translate\" functions expect.",
      "# This means that there is, for now, no",
      "# distinction between unary or binary,",
      "# and the \"|\" structure is expanded."
    ],
    "stanza": 1702
  },
  {
    "role": "code",
    "lines": [
      "intro primer;"
    ],
    "preprocessed": "intro primer;",
    "code": "2100103210001132233",
    "parse": [
      "intro",
      "primer"
    ],
    "spider": "&#xF156;&#xF24A;&#xF167;&#xF24B;",
    "dt": false,
    "stanza": 1703
  },
  {
    "role": "comment",
    "lines": [
      "# this line is referred to later - change/move carefully"
    ],
    "stanza": 1704
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 0) | vector intro unary;"
    ],
    "preprocessed": "equal (list-ref $primer 0) | vector intro unary;",
    "code": "21000322101010030232100011320331232100003210010321111111132233",
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "0"
      ],
      [
        -1,
        "vector",
        "intro",
        "unary"
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF145;&#xF158;&#xF249;&#xF167;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF147;&#xF183;&#xF24B;",
    "dt": false,
    "stanza": 1705
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 1) | vector intro is:int;"
    ],
    "preprocessed": "equal (list-ref $primer 1) | vector intro is:int;",
    "code": "210003221010100302321000113213312321000032100103210100032233",
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "1"
      ],
      [
        -1,
        "vector",
        "intro",
        "is:int"
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF145;&#xF158;&#xF249;&#xF167;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF16C;&#xF24B;",
    "dt": false,
    "stanza": 1706
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 2) | vector is:int | vector unary 0;"
    ],
    "preprocessed": "equal (list-ref $primer 2) | vector is:int | vector unary 0;",
    "code": "21000322101010030232100011321033123210000321010003123210000321111111132032233",
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "2"
      ],
      [
        -1,
        "vector",
        "is:int",
        [
          -1,
          "vector",
          "unary",
          "0"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF145;&#xF158;&#xF249;&#xF167;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF16C;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF183;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1707
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 3) | vector is:int | vector unary 1 0;"
    ],
    "preprocessed": "equal (list-ref $primer 3) | vector is:int | vector unary 1 0;",
    "code": "21000322101010030232100011321133123210000321010003123210000321111111132132032233",
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "3"
      ],
      [
        -1,
        "vector",
        "is:int",
        [
          -1,
          "vector",
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF145;&#xF158;&#xF249;&#xF167;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF16C;&#xF248;&#xF154;&#xF24A;&#xF147;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1708
  },
  {
    "role": "code",
    "lines": [
      "assign idx (list:find $primer | vector intro primer) |",
      "  equal (list-ref $primer | + $idx 1) |",
      "    quote @@ | equal (list-ref $primer 0) | vector intro unary;"
    ],
    "preprocessed": "assign idx (list:find $primer | vector intro primer) |\n  equal (list-ref $primer | + $idx 1) |\n    quote @@ | equal (list-ref $primer 0) | vector intro unary;",
    "code": "211103210011010032210111103023210001131232100003210010321000113312321000322101010030232100011312321010302321001101003213312321101000032100000011312321000322101010030232100011320331232100003210010321111111132233",
    "parse": [
      "assign",
      "idx",
      [
        "list:find",
        [
          -2,
          "primer"
        ],
        [
          -1,
          "vector",
          "intro",
          "primer"
        ]
      ],
      [
        -1,
        "equal",
        [
          "list-ref",
          [
            -2,
            "primer"
          ],
          [
            -1,
            "+",
            [
              -2,
              "idx"
            ],
            "1"
          ]
        ],
        [
          -1,
          "quote",
          "@@",
          [
            -1,
            "equal",
            [
              "list-ref",
              [
                -2,
                "primer"
              ],
              "0"
            ],
            [
              -1,
              "vector",
              "intro",
              "unary"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF152;&#xF24A;&#xF148;&#xF178;&#xF246;&#xF145;&#xF162;&#xF249;&#xF167;&#xF248;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF167;&#xF245;&#xF248;&#xF14C;&#xF246;&#xF145;&#xF158;&#xF249;&#xF167;&#xF248;&#xF14E;&#xF249;&#xF148;&#xF178;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF147;&#xF154;&#xF24A;&#xF148;&#xF147;&#xF248;&#xF14C;&#xF246;&#xF145;&#xF158;&#xF249;&#xF167;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF154;&#xF24A;&#xF156;&#xF24A;&#xF147;&#xF183;&#xF24B;",
    "dt": false,
    "stanza": 1709
  },
  {
    "role": "comment",
    "lines": [
      "# Now, we could return to the MUD, simulate an agent A",
      "# transferring a copy of the primer to another agent B,",
      "# and then show B making a modified copy of that primer",
      "# and passing it back to A."
    ],
    "stanza": 1710
  },
  {
    "role": "comment",
    "lines": [
      "# We could also show agents experimenting with the",
      "# primer in various ways."
    ],
    "stanza": 1711
  },
  {
    "role": "file",
    "lines": [
      "== COS_MARK =="
    ],
    "stanza": 1712
  },
  {
    "role": "comment",
    "lines": [
      "# Message is pretty solid up to this point.",
      "# For testing purposes, useful to save state here to disk,",
      "# command: DISK-SAVE base"
    ],
    "stanza": 1713
  },
  {
    "role": "file",
    "lines": [
      "== COS_JavaPrep =="
    ],
    "stanza": 1714
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "some preparatory work for integrating with Java code",
    "section_category": "JAVA",
    "section_index": 55,
    "stanza": 1715
  },
  {
    "role": "code",
    "lines": [
      "intro Object;"
    ],
    "preprocessed": "intro Object;",
    "code": "2100103211011010132233",
    "parse": [
      "intro",
      "Object"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF179;&#xF24B;",
    "dt": false,
    "stanza": 1716
  },
  {
    "role": "code",
    "lines": [
      "class Object ()",
      "   (method add-one | ? x | + $x 1)",
      "   (method unknown | ? x $x)",
      "   (method <init>-V $self)",
      "   (method <init> $self)",
      "   (method classname Object)",
      "   (method equals-Object-Z | this ==)",
      "   (method equals | self equals-Object-Z)",
      "   (method act $true)",
      "   (method isobj $true);"
    ],
    "preprocessed": "class Object ()\n   (method add-one | ? x | + $x 1)\n   (method unknown | ? x $x)\n   (method <init>-V $self)\n   (method <init> $self)\n   (method classname Object)\n   (method equals-Object-Z | this ==)\n   (method equals | self equals-Object-Z)\n   (method act $true)\n   (method isobj $true);",
    "code": "21000011103211011010132322100000100321101101103123211003210100131232101030232101001321332210000010032100000110312321100321010013023210100133221000001003211011011130232111001103322100000100321101110003023211100110332210000010032100000101321101101013322100000100321101110013123210000000032100001000332210000010032110111010312321110011032110111001332210000010032110111011302321332210000010032110111100302321332233",
    "parse": [
      "class",
      "Object",
      [],
      [
        "method",
        "add-one",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            "1"
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "classname",
        "Object"
      ],
      [
        "method",
        "equals-Object-Z",
        [
          -1,
          "this",
          "=="
        ]
      ],
      [
        "method",
        "equals",
        [
          -1,
          "self",
          "equals-Object-Z"
        ]
      ],
      [
        "method",
        "act",
        [
          -2,
          "true"
        ]
      ],
      [
        "method",
        "isobj",
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14A;&#xF179;&#xF247;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF149;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17D;&#xF248;&#xF148;&#xF144;&#xF24A;&#xF148;&#xF14C;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17E;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17F;&#xF249;&#xF145;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF180;&#xF249;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1717
  },
  {
    "role": "code",
    "lines": [
      "define java-object $Object;"
    ],
    "preprocessed": "define java-object $Object;",
    "code": "21101321101111013023211011010132233",
    "parse": [
      "define",
      "java-object",
      [
        -2,
        "Object"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF181;&#xF249;&#xF14A;&#xF179;&#xF24B;",
    "dt": true,
    "stanza": 1718
  },
  {
    "role": "code",
    "lines": [
      "define act | ? x $true;"
    ],
    "preprocessed": "define act | ? x $true;",
    "code": "21101321101110113123211003210100130232132233",
    "parse": [
      "define",
      "act",
      [
        -1,
        "?",
        "x",
        [
          -2,
          "true"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14A;&#xF17F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF249;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1719
  },
  {
    "role": "comment",
    "lines": [
      "# inconsistency of various kinds of equality throughout message",
      "# needs to be cleaned up"
    ],
    "stanza": 1720
  },
  {
    "role": "code",
    "lines": [
      "intro Integer;"
    ],
    "preprocessed": "intro Integer;",
    "code": "2100103211011111032233",
    "parse": [
      "intro",
      "Integer"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14A;&#xF182;&#xF24B;",
    "dt": false,
    "stanza": 1721
  },
  {
    "role": "code",
    "lines": [
      "class Integer ()",
      "   (field super | java-object new)",
      "   (field value | cell new 0)",
      "   (method <init> $self)",
      "   (method <init>-V $self)",
      "   (method <init>-I-V | ? v | begin (value set $v) $self)",
      "   (method intValue-V | value get)",
      "   (method intValue | self intValue-V)",
      "   (method equals-Object-Z | ? o |",
      "      if (not | = Integer | o classname) $false |",
      "      = (value get) (o value get))",
      "   (method equals | self equals-Object-Z)",
      "   (method get | value get)",
      "   (method set | ? x | value set | if (number? $x) $x | x intValue)",
      "   (method classname Integer)",
      "   (method unknown | ? x | super $x);"
    ],
    "preprocessed": "class Integer ()\n   (field super | java-object new)\n   (field value | cell new 0)\n   (method <init> $self)\n   (method <init>-V $self)\n   (method <init>-I-V | ? v | begin (value set $v) $self)\n   (method intValue-V | value get)\n   (method intValue | self intValue-V)\n   (method equals-Object-Z | ? o |\n      if (not | = Integer | o classname) $false |\n      = (value get) (o value get))\n   (method equals | self equals-Object-Z)\n   (method get | value get)\n   (method set | ? x | value set | if (number? $x) $x | x intValue)\n   (method classname Integer)\n   (method unknown | ? x | super $x);",
    "code
    "parse": [
      "class",
      "Integer",
      [],
      [
        "field",
        "super",
        [
          -1,
          "java-object",
          "new"
        ]
      ],
      [
        "field",
        "value",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-I-V",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "begin",
            [
              "value",
              "set",
              [
                -2,
                "v"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "intValue-V",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "intValue",
        [
          -1,
          "self",
          "intValue-V"
        ]
      ],
      [
        "method",
        "equals-Object-Z",
        [
          -1,
          "?",
          "o",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "Integer",
                [
                  -1,
                  "o",
                  "classname"
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "=",
              [
                "value",
                "get"
              ],
              [
                "o",
                "value",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "equals",
        [
          -1,
          "self",
          "equals-Object-Z"
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "value",
            "set",
            [
              -1,
              "if",
              [
                "number?",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -2,
                "x"
              ],
              [
                -1,
                "x",
                "intValue"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "classname",
        "Integer"
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14A;&#xF182;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF14A;&#xF181;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14A;&#xF16E;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF183;&#xF248;&#xF150;&#xF24A;&#xF179;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF179;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF144;&#xF248;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF145;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14B;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17D;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF146;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF14A;&#xF182;&#xF248;&#xF14B;&#xF146;&#xF24A;&#xF148;&#xF149;&#xF245;&#xF249;&#xF144;&#xF248;&#xF147;&#xF246;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF14B;&#xF146;&#xF24A;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17E;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF153;&#xF246;&#xF15C;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF248;&#xF16D;&#xF24A;&#xF14B;&#xF145;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF149;&#xF24A;&#xF14A;&#xF182;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1722
  },
  {
    "role": "comment",
    "lines": [
      "# string is basically the same as an integer"
    ],
    "stanza": 1723
  },
  {
    "role": "code",
    "lines": [
      "intro String;"
    ],
    "preprocessed": "intro String;",
    "code": "2100103211100001132233",
    "parse": [
      "intro",
      "String"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14B;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1724
  },
  {
    "role": "code",
    "lines": [
      "class String ()",
      "   (field super | java-object new)",
      "   (field value | cell new 0)",
      "   (method <init> $self)",
      "   (method <init>-V $self)",
      "   (method <init>-String-V | ? v | begin (value set | v value get) $self)",
      "   (method int-init | ? x | begin (value set $x) $self)",
      "   (method intValue-V | value get)",
      "   (method intValue | self intValue-V)",
      "   (method equals-Object-Z | ? o |",
      "      if (not | = String | o classname) $false |",
      "      = (value get) (o value get))",
      "   (method equals | self equals-Object-Z)",
      "   (method get | value get)",
      "   (method set | ? x | value set | if (number? $x) $x | x intValue)",
      "   (method classname String)",
      "   (method unknown | ? x | super $x);"
    ],
    "preprocessed": "class String ()\n   (field super | java-object new)\n   (field value | cell new 0)\n   (method <init> $self)\n   (method <init>-V $self)\n   (method <init>-String-V | ? v | begin (value set | v value get) $self)\n   (method int-init | ? x | begin (value set $x) $self)\n   (method intValue-V | value get)\n   (method intValue | self intValue-V)\n   (method equals-Object-Z | ? o |\n      if (not | = String | o classname) $false |\n      = (value get) (o value get))\n   (method equals | self equals-Object-Z)\n   (method get | value get)\n   (method set | ? x | value set | if (number? $x) $x | x intValue)\n   (method classname String)\n   (method unknown | ? x | super $x);",
    "code
    "parse": [
      "class",
      "String",
      [],
      [
        "field",
        "super",
        [
          -1,
          "java-object",
          "new"
        ]
      ],
      [
        "field",
        "value",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-String-V",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "begin",
            [
              "value",
              "set",
              [
                -1,
                "v",
                "value",
                "get"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "int-init",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "begin",
            [
              "value",
              "set",
              [
                -2,
                "x"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "intValue-V",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "intValue",
        [
          -1,
          "self",
          "intValue-V"
        ]
      ],
      [
        "method",
        "equals-Object-Z",
        [
          -1,
          "?",
          "o",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "String",
                [
                  -1,
                  "o",
                  "classname"
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "=",
              [
                "value",
                "get"
              ],
              [
                "o",
                "value",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "equals",
        [
          -1,
          "self",
          "equals-Object-Z"
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "value",
            "set",
            [
              -1,
              "if",
              [
                "number?",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -2,
                "x"
              ],
              [
                -1,
                "x",
                "intValue"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "classname",
        "String"
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14B;&#xF147;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF14A;&#xF181;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14A;&#xF16E;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF148;&#xF248;&#xF150;&#xF24A;&#xF179;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF179;&#xF24A;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF149;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF144;&#xF248;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF145;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14B;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17D;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF146;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF24A;&#xF14B;&#xF147;&#xF248;&#xF14B;&#xF146;&#xF24A;&#xF148;&#xF149;&#xF245;&#xF249;&#xF144;&#xF248;&#xF147;&#xF246;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF14B;&#xF146;&#xF24A;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17E;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14A;&#xF16E;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF153;&#xF246;&#xF15C;&#xF249;&#xF16D;&#xF245;&#xF249;&#xF16D;&#xF248;&#xF16D;&#xF24A;&#xF14B;&#xF145;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF149;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1725
  },
  {
    "role": "comment",
    "lines": [
      "# will need to install class hierarchy, just hardcode a few things for now"
    ],
    "stanza": 1726
  },
  {
    "role": "code",
    "lines": [
      "intro java;"
    ],
    "preprocessed": "intro java;",
    "code": "2100103211100011032233",
    "parse": [
      "intro",
      "java"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14B;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1727
  },
  {
    "role": "code",
    "lines": [
      "define java | ? x | ? y |",
      "  cond ((= $y String) $String)",
      "       ((= $y Object) $java-object)",
      "       ((= $y Integer) $Integer)",
      "       $java-object;"
    ],
    "preprocessed": "define java | ? x | ? y |\n  cond ((= $y String) $String)\n       ((= $y Object) $java-object)\n       ((= $y Integer) $Integer)\n       $java-object;",
    "code": "2110132111000110312321100321010013123211003211110131232110110003222113023211110132111000011330232111000011332221130232111101321101101013302321101111013322211302321111013211011111033023211011111033023211011110132233",
    "parse": [
      "define",
      "java",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "cond",
            [
              [
                "=",
                [
                  -2,
                  "y"
                ],
                "String"
              ],
              [
                -2,
                "String"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "y"
                ],
                "Object"
              ],
              [
                -2,
                "java-object"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "y"
                ],
                "Integer"
              ],
              [
                -2,
                "Integer"
              ]
            ],
            [
              -2,
              "java-object"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF181;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF249;&#xF14B;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF181;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF249;&#xF14A;&#xF181;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF181;&#xF24A;&#xF14A;&#xF182;&#xF245;&#xF249;&#xF14A;&#xF182;&#xF245;&#xF249;&#xF14A;&#xF181;&#xF24B;",
    "dt": true,
    "stanza": 1728
  },
  {
    "role": "code",
    "lines": [
      "(java util String) new isobj;"
    ],
    "preprocessed": "(java util String) new isobj;",
    "code": "221110001103211100011132111000011332111100103211011110032233",
    "parse": [
      [
        "java",
        "util",
        "String"
      ],
      "new",
      "isobj"
    ],
    "spider": "&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14B;&#xF14B;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF180;&#xF24B;",
    "dt": false,
    "stanza": 1729
  },
  {
    "role": "code",
    "lines": [
      "= ((java util String) new add-one 15) 16;"
    ],
    "preprocessed": "= ((java util String) new add-one 15) 16;",
    "code": "2113222111000110321110001113211100001133211110010321101101103211113321000032233",
    "parse": [
      "=",
      [
        [
          "java",
          "util",
          "String"
        ],
        "new",
        "add-one",
        "15"
      ],
      "16"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14B;&#xF14B;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17A;&#xF24A;&#xF153;&#xF245;&#xF154;&#xF24B;",
    "dt": false,
    "stanza": 1730
  },
  {
    "role": "code",
    "lines": [
      "class java-numeric ()",
      "   (field super (java-object new))",
      "   (method unknown | ? x | super $x)",
      "   (field java-content | cell new 0)",
      "   (method get | java-content get)",
      "   (method init | ? v | begin (self set $v) $self)",
      "   (method set | ? v | java-content set $v);"
    ],
    "preprocessed": "class java-numeric ()\n   (field super (java-object new))\n   (method unknown | ? x | super $x)\n   (field java-content | cell new 0)\n   (method get | java-content get)\n   (method init | ? v | begin (self set $v) $self)\n   (method set | ? v | java-content set $v);",
    "code": "210000111032111001000323221000011003211110101322110111101321111001033322100000100321000001103123211003210100131232111101013023210100133221000011003211100100131232100010000321111001032033221000001003210001001131232111001001321000100113322100000100321110010103123211003211010131232101011003221110011032100010100302321101013302321110011033221000001003210001010031232110032110101312321110010013210001010030232110101332233",
    "parse": [
      "class",
      "java-numeric",
      [],
      [
        "field",
        "super",
        [
          "java-object",
          "new"
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "java-content",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "java-content",
          "get"
        ]
      ],
      [
        "method",
        "init",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "begin",
            [
              "self",
              "set",
              [
                -2,
                "v"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "java-content",
            "set",
            [
              -2,
              "v"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14B;&#xF14C;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF179;&#xF246;&#xF14A;&#xF181;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14B;&#xF14D;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF14B;&#xF14D;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14B;&#xF14E;&#xF248;&#xF150;&#xF24A;&#xF179;&#xF248;&#xF146;&#xF170;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF179;&#xF245;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF179;&#xF248;&#xF14B;&#xF14D;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF179;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1731
  },
  {
    "role": "code",
    "lines": [
      "define byte $java-numeric;"
    ],
    "preprocessed": "define byte $java-numeric;",
    "code": "21101321110010113023211100100032233",
    "parse": [
      "define",
      "byte",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF14F;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1732
  },
  {
    "role": "code",
    "lines": [
      "define char $java-numeric;"
    ],
    "preprocessed": "define char $java-numeric;",
    "code": "21101321110011003023211100100032233",
    "parse": [
      "define",
      "char",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF150;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1733
  },
  {
    "role": "code",
    "lines": [
      "define double $java-numeric;"
    ],
    "preprocessed": "define double $java-numeric;",
    "code": "21101321110011013023211100100032233",
    "parse": [
      "define",
      "double",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF151;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1734
  },
  {
    "role": "code",
    "lines": [
      "define float $java-numeric;"
    ],
    "preprocessed": "define float $java-numeric;",
    "code": "211013211100013023211100100032233",
    "parse": [
      "define",
      "float",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF145;&#xF175;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1735
  },
  {
    "role": "code",
    "lines": [
      "define int $java-numeric;"
    ],
    "preprocessed": "define int $java-numeric;",
    "code": "2110132110100103023211100100032233",
    "parse": [
      "define",
      "int",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF147;&#xF156;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1736
  },
  {
    "role": "code",
    "lines": [
      "define long $java-numeric;"
    ],
    "preprocessed": "define long $java-numeric;",
    "code": "21101321110011103023211100100032233",
    "parse": [
      "define",
      "long",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF152;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1737
  },
  {
    "role": "code",
    "lines": [
      "define short $java-numeric;"
    ],
    "preprocessed": "define short $java-numeric;",
    "code": "21101321110011113023211100100032233",
    "parse": [
      "define",
      "short",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF153;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1738
  },
  {
    "role": "code",
    "lines": [
      "define boolean $java-numeric;"
    ],
    "preprocessed": "define boolean $java-numeric;",
    "code": "21101321110100003023211100100032233",
    "parse": [
      "define",
      "boolean",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF154;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1739
  },
  {
    "role": "code",
    "lines": [
      "define void $java-numeric;"
    ],
    "preprocessed": "define void $java-numeric;",
    "code": "21101321110100013023211100100032233",
    "parse": [
      "define",
      "void",
      [
        -2,
        "java-numeric"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF155;&#xF249;&#xF14B;&#xF14C;&#xF24B;",
    "dt": true,
    "stanza": 1740
  },
  {
    "role": "code",
    "lines": [
      "define java-test1 | int new;"
    ],
    "preprocessed": "define java-test1 | int new;",
    "code": "21101321110100103123211010010321111001032233",
    "parse": [
      "define",
      "java-test1",
      [
        -1,
        "int",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF156;&#xF248;&#xF147;&#xF156;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1741
  },
  {
    "role": "code",
    "lines": [
      "java-test1 set 15;"
    ],
    "preprocessed": "java-test1 set 15;",
    "code": "21110100103210001010032111132233",
    "parse": [
      "java-test1",
      "set",
      "15"
    ],
    "spider": "&#xF14B;&#xF156;&#xF24A;&#xF148;&#xF158;&#xF24A;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 1742
  },
  {
    "role": "code",
    "lines": [
      "= 15 | java-test1 get;"
    ],
    "preprocessed": "= 15 | java-test1 get;",
    "code": "211321111312321110100103210001001132233",
    "parse": [
      "=",
      "15",
      [
        -1,
        "java-test1",
        "get"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF153;&#xF248;&#xF14B;&#xF156;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1743
  },
  {
    "role": "code",
    "lines": [
      "define java-test2 | int new init 17;"
    ],
    "preprocessed": "define java-test2 | int new init 17;",
    "code": "21101321110100113123211010010321111001032111001010321000132233",
    "parse": [
      "define",
      "java-test2",
      [
        -1,
        "int",
        "new",
        "init",
        "17"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF157;&#xF248;&#xF147;&#xF156;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14B;&#xF14E;&#xF24A;&#xF155;&#xF24B;",
    "dt": true,
    "stanza": 1744
  },
  {
    "role": "code",
    "lines": [
      "= 17 | java-test2 get;"
    ],
    "preprocessed": "= 17 | java-test2 get;",
    "code": "2113210001312321110100113210001001132233",
    "parse": [
      "=",
      "17",
      [
        -1,
        "java-test2",
        "get"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF155;&#xF248;&#xF14B;&#xF157;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1745
  },
  {
    "role": "code",
    "lines": [
      "define state-machine-test1 | ? x | cond",
      "  ((= $x 1) 20)",
      "  ((= $x 2) 40)",
      "  ((= $x 3) 60)",
      "  0;"
    ],
    "preprocessed": "define state-machine-test1 | ? x | cond\n  ((= $x 1) 20)\n  ((= $x 2) 40)\n  ((= $x 3) 60)\n  0;",
    "code": "2110132111010100312321100321010013123211011000322211302321010013213321010033222113023210100132103321010003322211302321010013211332111100332032233",
    "parse": [
      "define",
      "state-machine-test1",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "cond",
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "1"
            ],
            "20"
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "2"
            ],
            "40"
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "3"
            ],
            "60"
          ],
          "0"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF158;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF158;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF16C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF180;&#xF245;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1746
  },
  {
    "role": "code",
    "lines": [
      "= 60 | state-machine-test1 3;"
    ],
    "preprocessed": "= 60 | state-machine-test1 3;",
    "code": "2113211110031232111010100321132233",
    "parse": [
      "=",
      "60",
      [
        -1,
        "state-machine-test1",
        "3"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF180;&#xF248;&#xF14B;&#xF158;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1747
  },
  {
    "role": "code",
    "lines": [
      "define state-machine-test2 | ? x | cond",
      "  ((= $x 1) | java-test1 set 20)",
      "  ((= $x 2) | java-test1 set 40)",
      "  ((= $x 3) | java-test1 set 60)",
      "  0;"
    ],
    "preprocessed": "define state-machine-test2 | ? x | cond\n  ((= $x 1) | java-test1 set 20)\n  ((= $x 2) | java-test1 set 40)\n  ((= $x 3) | java-test1 set 60)\n  0;",
    "code": "2110132111010101312321100321010013123211011000322211302321010013213312321110100103210001010032101003322211302321010013210331232111010010321000101003210100033222113023210100132113312321110100103210001010032111100332032233",
    "parse": [
      "define",
      "state-machine-test2",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "cond",
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "1"
            ],
            [
              -1,
              "java-test1",
              "set",
              "20"
            ]
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "2"
            ],
            [
              -1,
              "java-test1",
              "set",
              "40"
            ]
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "3"
            ],
            [
              -1,
              "java-test1",
              "set",
              "60"
            ]
          ],
          "0"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF159;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14B;&#xF156;&#xF24A;&#xF148;&#xF158;&#xF24A;&#xF158;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14B;&#xF156;&#xF24A;&#xF148;&#xF158;&#xF24A;&#xF16C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14B;&#xF156;&#xF24A;&#xF148;&#xF158;&#xF24A;&#xF180;&#xF245;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1748
  },
  {
    "role": "code",
    "lines": [
      "state-machine-test2 2;"
    ],
    "preprocessed": "state-machine-test2 2;",
    "code": "2111010101321032233",
    "parse": [
      "state-machine-test2",
      "2"
    ],
    "spider": "&#xF14B;&#xF159;&#xF24A;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1749
  },
  {
    "role": "code",
    "lines": [
      "= 40 | java-test1 get;"
    ],
    "preprocessed": "= 40 | java-test1 get;",
    "code": "21132101000312321110100103210001001132233",
    "parse": [
      "=",
      "40",
      [
        -1,
        "java-test1",
        "get"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF16C;&#xF248;&#xF14B;&#xF156;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": false,
    "stanza": 1750
  },
  {
    "role": "code",
    "lines": [
      "define compare-object-reference | ? o1 | ? o2 |",
      "   if (number? $o1) (number? $o2) |",
      "   = (o1 unique-id) (o2 unique-id);"
    ],
    "preprocessed": "define compare-object-reference | ? o1 | ? o2 |\n   if (number? $o1) (number? $o2) |\n   = (o1 unique-id) (o2 unique-id);",
    "code": "211013211101011031232110032111010111312321100321110110003123211113221100030232111010111332211000302321110110003312321132211101011132100000111332211101100032100000111332233",
    "parse": [
      "define",
      "compare-object-reference",
      [
        -1,
        "?",
        "o1",
        [
          -1,
          "?",
          "o2",
          [
            -1,
            "if",
            [
              "number?",
              [
                -2,
                "o1"
              ]
            ],
            [
              "number?",
              [
                -2,
                "o2"
              ]
            ],
            [
              -1,
              "=",
              [
                "o1",
                "unique-id"
              ],
              [
                "o2",
                "unique-id"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF15A;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF15B;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF15C;&#xF248;&#xF153;&#xF246;&#xF15C;&#xF249;&#xF14B;&#xF15B;&#xF245;&#xF246;&#xF15C;&#xF249;&#xF14B;&#xF15C;&#xF245;&#xF248;&#xF147;&#xF246;&#xF14B;&#xF15B;&#xF24A;&#xF148;&#xF14B;&#xF245;&#xF246;&#xF14B;&#xF15C;&#xF24A;&#xF148;&#xF14B;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1751
  },
  {
    "role": "code",
    "lines": [
      "define minus-one | minus 1;"
    ],
    "preprocessed": "define minus-one | minus 1;",
    "code": "211013211101100131232110011132132233",
    "parse": [
      "define",
      "minus-one",
      [
        -1,
        "minus",
        "1"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF15D;&#xF248;&#xF145;&#xF16B;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1752
  },
  {
    "role": "code",
    "lines": [
      "intro jvm-maker;"
    ],
    "preprocessed": "intro jvm-maker;",
    "code": "2100103211101101032233",
    "parse": [
      "intro",
      "jvm-maker"
    ],
    "spider": "&#xF156;&#xF24A;&#xF14B;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1753
  },
  {
    "role": "code",
    "lines": [
      "define jvm-maker | lambda (vars stack pc ret) | ? op | begin",
      "   (pc set | + (pc get) 1) |",
      "   cond",
      "     ((= $op new) | ? type | stack-push $stack | $type new)",
      "     ((= $op dup) | stack-push $stack | stack-peek $stack)",
      "     ((= $op checkcast) | ? t 1)",
      "     ((or (= $op astore) (= $op istore)) | ? index |",
      "        vars set | hash-add (vars get) $index | stack-pop $stack)",
      "     ((or (= $op aload) (= $op iload)) | ? index |",
      "        stack-push $stack | hash-ref (vars get) $index)",
      "     ((or (= $op iconst) (= $op ldc)) | ? val | stack-push $stack $val)",
      "     ((= $op aconst_null) | stack-push $stack 0)",
      "     ((= $op instanceof) | ? t |",
      "        stack-push $stack | not | number? | (stack-pop $stack) (t new classname))",
      "     ((= $op getfield) | ? key | ? ignore |",
      "    stack-push $stack | (stack-pop $stack) $key get)",
      "     ((= $op putfield) | ? key | ? ignore |",
      "        assign val (stack-pop $stack) |",
      "        (stack-pop $stack) $key set $val)",
      "     ((= $op imul) |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        stack-push $stack | * $v1 $v2)",
      "     ((= $op iadd) |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        stack-push $stack | + $v1 $v2)",
      "     ((= $op isub) |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        stack-push $stack | - $v1 $v2)",
      "     ((= $op goto) | ? x | pc set $x)",
      "     ((= $op iflt) | ? x |",
      "        if (< (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifle) | ? x |",
      "        if (<= (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifgt) | ? x |",
      "        if (> (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifge) | ? x |",
      "        if (>= (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifne) | ? x |",
      "        if (not | = (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifeq) | ? x |",
      "        if (= (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op if_icmpne) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (not | = $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmpeq) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (= $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_acmpne) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (not | compare-object-reference $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_acmpeq) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (compare-object-reference $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmpge) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (>= $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmpgt) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (> $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmple) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (<= $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmplt) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (< $v1 $v2) (pc set $x) 0)",
      "     ((= $op ifnull) | ? x |",
      "    if (number? | stack-pop $stack) (pc set $x) 0)",
      "     ((= $op ifnonnull) | ? x |",
      "    if (not | number? | stack-pop $stack) (pc set $x) 0)",
      "     ((= $op return) | begin",
      "    (ret set | hash-ref (vars get) 0)",
      "        (pc set $minus-one))",
      "     ((= $op ireturn) | begin",
      "    (ret set | stack-pop $stack)",
      "        (pc set $minus-one))",
      "     ((= $op areturn) | begin",
      "    (ret set | stack-pop $stack)",
      "        (pc set $minus-one))",
      "     ((= $op invokevirtual) | lambda (target m n) |",
      "         assign result (stack-call $stack $target $m) |",
      "         if (not | = $n 1) 0 |",
      "         stack-push $stack $result)",
      "     ((= $op invokeinterface) | lambda (target m n ignore) |",
      "         assign result (stack-call $stack $target $m) |",
      "         if (not | = $n 1) 0 |",
      "         stack-push $stack $result)",
      "     ((= $op invokespecial) | lambda (target m n) |",
      "         assign result (stack-call-special $stack (hash-ref (vars get) 0) $target $m) |",
      "         if (not | = $n 1) 0 |",
      "         stack-push $stack $result)",
      "     0;"
    ],
    "preprocessed": "define jvm-maker | lambda (vars stack pc ret) | ? op | begin\n   (pc set | + (pc get) 1) |\n   cond\n     ((= $op new) | ? type | stack-push $stack | $type new)\n     ((= $op dup) | stack-push $stack | stack-peek $stack)\n     ((= $op checkcast) | ? t 1)\n     ((or (= $op astore) (= $op istore)) | ? index |\n        vars set | hash-add (vars get) $index | stack-pop $stack)\n     ((or (= $op aload) (= $op iload)) | ? index |\n        stack-push $stack | hash-ref (vars get) $index)\n     ((or (= $op iconst) (= $op ldc)) | ? val | stack-push $stack $val)\n     ((= $op aconst_null) | stack-push $stack 0)\n     ((= $op instanceof) | ? t |\n        stack-push $stack | not | number? | (stack-pop $stack) (t new classname))\n     ((= $op getfield) | ? key | ? ignore |\n    stack-push $stack | (stack-pop $stack) $key get)\n     ((= $op putfield) | ? key | ? ignore |\n        assign val (stack-pop $stack) |\n        (stack-pop $stack) $key set $val)\n     ((= $op imul) |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        stack-push $stack | * $v1 $v2)\n     ((= $op iadd) |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        stack-push $stack | + $v1 $v2)\n     ((= $op isub) |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        stack-push $stack | - $v1 $v2)\n     ((= $op goto) | ? x | pc set $x)\n     ((= $op iflt) | ? x |\n        if (< (stack-pop $stack) 0) (pc set $x) 0)\n     ((= $op ifle) | ? x |\n        if (<= (stack-pop $stack) 0) (pc set $x) 0)\n     ((= $op ifgt) | ? x |\n        if (> (stack-pop $stack) 0) (pc set $x) 0)\n     ((= $op ifge) | ? x |\n        if (>= (stack-pop $stack) 0) (pc set $x) 0)\n     ((= $op ifne) | ? x |\n        if (not | = (stack-pop $stack) 0) (pc set $x) 0)\n     ((= $op ifeq) | ? x |\n        if (= (stack-pop $stack) 0) (pc set $x) 0)\n     ((= $op if_icmpne) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (not | = $v1 $v2) (pc set $x) 0)\n     ((= $op if_icmpeq) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (= $v1 $v2) (pc set $x) 0)\n     ((= $op if_acmpne) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (not | compare-object-reference $v1 $v2) (pc set $x) 0)\n     ((= $op if_acmpeq) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (compare-object-reference $v1 $v2) (pc set $x) 0)\n     ((= $op if_icmpge) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (>= $v1 $v2) (pc set $x) 0)\n     ((= $op if_icmpgt) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (> $v1 $v2) (pc set $x) 0)\n     ((= $op if_icmple) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (<= $v1 $v2) (pc set $x) 0)\n     ((= $op if_icmplt) | ? x |\n        assign v2 (stack-pop $stack) |\n        assign v1 (stack-pop $stack) |\n        if (< $v1 $v2) (pc set $x) 0)\n     ((= $op ifnull) | ? x |\n    if (number? | stack-pop $stack) (pc set $x) 0)\n     ((= $op ifnonnull) | ? x |\n    if (not | number? | stack-pop $stack) (pc set $x) 0)\n     ((= $op return) | begin\n    (ret set | hash-ref (vars get) 0)\n        (pc set $minus-one))\n     ((= $op ireturn) | begin\n    (ret set | stack-pop $stack)\n        (pc set $minus-one))\n     ((= $op areturn) | begin\n    (ret set | stack-pop $stack)\n        (pc set $minus-one))\n     ((= $op invokevirtual) | lambda (target m n) |\n         assign result (stack-call $stack $target $m) |\n         if (not | = $n 1) 0 |\n         stack-push $stack $result)\n     ((= $op invokeinterface) | lambda (target m n ignore) |\n         assign result (stack-call $stack $target $m) |\n         if (not | = $n 1) 0 |\n         stack-push $stack $result)\n     ((= $op invokespecial) | lambda (target m n) |\n         assign result (stack-call-special $stack (hash-ref (vars get) 0) $target $m) |\n         if (not | = $n 1) 0 |\n         stack-push $stack $result)\n     0;",
    "code
    "parse": [
      "define",
      "jvm-maker",
      [
        -1,
        "lambda",
        [
          "vars",
          "stack",
          "pc",
          "ret"
        ],
        [
          -1,
          "?",
          "op",
          [
            -1,
            "begin",
            [
              "pc",
              "set",
              [
                -1,
                "+",
                [
                  "pc",
                  "get"
                ],
                "1"
              ]
            ],
            [
              -1,
              "cond",
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "new"
                ],
                [
                  -1,
                  "?",
                  "type",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -1,
                      [
                        -2,
                        "type"
                      ],
                      "new"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "dup"
                ],
                [
                  -1,
                  "stack-push",
                  [
                    -2,
                    "stack"
                  ],
                  [
                    -1,
                    "stack-peek",
                    [
                      -2,
                      "stack"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "checkcast"
                ],
                [
                  -1,
                  "?",
                  "t",
                  "1"
                ]
              ],
              [
                [
                  "or",
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "astore"
                  ],
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "istore"
                  ]
                ],
                [
                  -1,
                  "?",
                  "index",
                  [
                    -1,
                    "vars",
                    "set",
                    [
                      -1,
                      "hash-add",
                      [
                        "vars",
                        "get"
                      ],
                      [
                        -2,
                        "index"
                      ],
                      [
                        -1,
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "or",
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "aload"
                  ],
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "iload"
                  ]
                ],
                [
                  -1,
                  "?",
                  "index",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -1,
                      "hash-ref",
                      [
                        "vars",
                        "get"
                      ],
                      [
                        -2,
                        "index"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "or",
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "iconst"
                  ],
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "ldc"
                  ]
                ],
                [
                  -1,
                  "?",
                  "val",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -2,
                      "val"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "aconst_null"
                ],
                [
                  -1,
                  "stack-push",
                  [
                    -2,
                    "stack"
                  ],
                  "0"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "instanceof"
                ],
                [
                  -1,
                  "?",
                  "t",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -1,
                      "not",
                      [
                        -1,
                        "number?",
                        [
                          -1,
                          [
                            "stack-pop",
                            [
                              -2,
                              "stack"
                            ]
                          ],
                          [
                            "t",
                            "new",
                            "classname"
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "getfield"
                ],
                [
                  -1,
                  "?",
                  "key",
                  [
                    -1,
                    "?",
                    "ignore",
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        [
                          -2,
                          "key"
                        ],
                        "get"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "putfield"
                ],
                [
                  -1,
                  "?",
                  "key",
                  [
                    -1,
                    "?",
                    "ignore",
                    [
                      -1,
                      "assign",
                      "val",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        [
                          -2,
                          "key"
                        ],
                        "set",
                        [
                          -2,
                          "val"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "imul"
                ],
                [
                  -1,
                  "assign",
                  "v2",
                  [
                    "stack-pop",
                    [
                      -2,
                      "stack"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "v1",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        "*",
                        [
                          -2,
                          "v1"
                        ],
                        [
                          -2,
                          "v2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "iadd"
                ],
                [
                  -1,
                  "assign",
                  "v2",
                  [
                    "stack-pop",
                    [
                      -2,
                      "stack"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "v1",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        "+",
                        [
                          -2,
                          "v1"
                        ],
                        [
                          -2,
                          "v2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "isub"
                ],
                [
                  -1,
                  "assign",
                  "v2",
                  [
                    "stack-pop",
                    [
                      -2,
                      "stack"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "v1",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        "-",
                        [
                          -2,
                          "v1"
                        ],
                        [
                          -2,
                          "v2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "goto"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "pc",
                    "set",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "iflt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "<",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifle"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "<=",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifgt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      ">",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifge"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      ">=",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifne"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "=",
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        "0"
                      ]
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifeq"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "=",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpne"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "not",
                          [
                            -1,
                            "=",
                            [
                              -2,
                              "v1"
                            ],
                            [
                              -2,
                              "v2"
                            ]
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpeq"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "=",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_acmpne"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "not",
                          [
                            -1,
                            "compare-object-reference",
                            [
                              -2,
                              "v1"
                            ],
                            [
                              -2,
                              "v2"
                            ]
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_acmpeq"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "compare-object-reference",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpge"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          ">=",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpgt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          ">",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmple"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "<=",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmplt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "<",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifnull"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "number?",
                      [
                        -1,
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ]
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifnonnull"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "number?",
                        [
                          -1,
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ]
                      ]
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "return"
                ],
                [
                  -1,
                  "begin",
                  [
                    "ret",
                    "set",
                    [
                      -1,
                      "hash-ref",
                      [
                        "vars",
                        "get"
                      ],
                      "0"
                    ]
                  ],
                  [
                    "pc",
                    "set",
                    [
                      -2,
                      "minus-one"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ireturn"
                ],
                [
                  -1,
                  "begin",
                  [
                    "ret",
                    "set",
                    [
                      -1,
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ]
                  ],
                  [
                    "pc",
                    "set",
                    [
                      -2,
                      "minus-one"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "areturn"
                ],
                [
                  -1,
                  "begin",
                  [
                    "ret",
                    "set",
                    [
                      -1,
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ]
                  ],
                  [
                    "pc",
                    "set",
                    [
                      -2,
                      "minus-one"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "invokevirtual"
                ],
                [
                  -1,
                  "lambda",
                  [
                    "target",
                    "m",
                    "n"
                  ],
                  [
                    -1,
                    "assign",
                    "result",
                    [
                      "stack-call",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -2,
                        "target"
                      ],
                      [
                        -2,
                        "m"
                      ]
                    ],
                    [
                      -1,
                      "if",
                      [
                        "not",
                        [
                          -1,
                          "=",
                          [
                            -2,
                            "n"
                          ],
                          "1"
                        ]
                      ],
                      "0",
                      [
                        -1,
                        "stack-push",
                        [
                          -2,
                          "stack"
                        ],
                        [
                          -2,
                          "result"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "invokeinterface"
                ],
                [
                  -1,
                  "lambda",
                  [
                    "target",
                    "m",
                    "n",
                    "ignore"
                  ],
                  [
                    -1,
                    "assign",
                    "result",
                    [
                      "stack-call",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -2,
                        "target"
                      ],
                      [
                        -2,
                        "m"
                      ]
                    ],
                    [
                      -1,
                      "if",
                      [
                        "not",
                        [
                          -1,
                          "=",
                          [
                            -2,
                            "n"
                          ],
                          "1"
                        ]
                      ],
                      "0",
                      [
                        -1,
                        "stack-push",
                        [
                          -2,
                          "stack"
                        ],
                        [
                          -2,
                          "result"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "invokespecial"
                ],
                [
                  -1,
                  "lambda",
                  [
                    "target",
                    "m",
                    "n"
                  ],
                  [
                    -1,
                    "assign",
                    "result",
                    [
                      "stack-call-special",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        "hash-ref",
                        [
                          "vars",
                          "get"
                        ],
                        "0"
                      ],
                      [
                        -2,
                        "target"
                      ],
                      [
                        -2,
                        "m"
                      ]
                    ],
                    [
                      -1,
                      "if",
                      [
                        "not",
                        [
                          -1,
                          "=",
                          [
                            -2,
                            "n"
                          ],
                          "1"
                        ]
                      ],
                      "0",
                      [
                        -1,
                        "stack-push",
                        [
                          -2,
                          "stack"
                        ],
                        [
                          -2,
                          "result"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              "0"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF15E;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF15F;&#xF24A;&#xF14B;&#xF160;&#xF24A;&#xF14B;&#xF161;&#xF24A;&#xF145;&#xF153;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF162;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF14E;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF145;&#xF245;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF163;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF249;&#xF14B;&#xF163;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF14B;&#xF166;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF167;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF163;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF14B;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF168;&#xF245;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF169;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF16D;&#xF248;&#xF14B;&#xF15F;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF146;&#xF173;&#xF246;&#xF14B;&#xF15F;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF14A;&#xF16D;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF246;&#xF14B;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF16B;&#xF245;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF16C;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF14A;&#xF16D;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF146;&#xF175;&#xF246;&#xF14B;&#xF15F;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF14A;&#xF16D;&#xF245;&#xF246;&#xF246;&#xF14B;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF16E;&#xF245;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF16F;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14B;&#xF16F;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF170;&#xF245;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF147;&#xF161;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF163;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF149;&#xF248;&#xF15C;&#xF248;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF147;&#xF163;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF148;&#xF149;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF171;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF153;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF172;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF249;&#xF147;&#xF153;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF173;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF147;&#xF153;&#xF248;&#xF150;&#xF24A;&#xF14B;&#xF172;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF16F;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF249;&#xF147;&#xF153;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF14B;&#xF16F;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF174;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF14D;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF177;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF14E;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF178;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF14F;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF179;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF17A;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF146;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF17B;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14D;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF17C;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF148;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF17D;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF17E;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF17F;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF180;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF181;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF182;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF14B;&#xF15A;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14B;&#xF183;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF14B;&#xF15A;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF144;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14C;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF145;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF148;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF146;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF145;&#xF14D;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF147;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF175;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14B;&#xF176;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF153;&#xF246;&#xF146;&#xF249;&#xF14B;&#xF176;&#xF249;&#xF14B;&#xF175;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF148;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF15C;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF149;&#xF245;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF15C;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF145;&#xF153;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF146;&#xF175;&#xF246;&#xF14B;&#xF15F;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF144;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF14B;&#xF15D;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF145;&#xF153;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF14B;&#xF15D;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF145;&#xF153;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF158;&#xF249;&#xF14B;&#xF15D;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF14C;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF14C;&#xF14D;&#xF24A;&#xF149;&#xF167;&#xF24A;&#xF145;&#xF152;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14C;&#xF14E;&#xF246;&#xF14C;&#xF14F;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF14D;&#xF249;&#xF149;&#xF167;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF144;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF14E;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF150;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF14C;&#xF14D;&#xF24A;&#xF149;&#xF167;&#xF24A;&#xF145;&#xF152;&#xF24A;&#xF14B;&#xF172;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14C;&#xF14E;&#xF246;&#xF14C;&#xF14F;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF14D;&#xF249;&#xF149;&#xF167;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF144;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF14E;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF14B;&#xF162;&#xF24A;&#xF14C;&#xF151;&#xF245;&#xF248;&#xF15E;&#xF246;&#xF14C;&#xF14D;&#xF24A;&#xF149;&#xF167;&#xF24A;&#xF145;&#xF152;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF14C;&#xF14E;&#xF246;&#xF14C;&#xF152;&#xF249;&#xF14B;&#xF160;&#xF246;&#xF146;&#xF175;&#xF246;&#xF14B;&#xF15F;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF144;&#xF245;&#xF249;&#xF14C;&#xF14D;&#xF249;&#xF149;&#xF167;&#xF245;&#xF248;&#xF153;&#xF246;&#xF149;&#xF248;&#xF147;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF145;&#xF245;&#xF144;&#xF248;&#xF14B;&#xF164;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF14E;&#xF245;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1754
  },
  {
    "role": "code",
    "lines": [
      "define stack-call | lambda (stack target ct) |",
      "  if (= $ct 0)",
      "     ((stack-pop $stack) $target)",
      "     (assign arg (stack-pop $stack) |",
      "      (stack-call $stack $target (- $ct 1)) $arg);"
    ],
    "preprocessed": "define stack-call | lambda (stack target ct) |\n  if (= $ct 0)\n     ((stack-pop $stack) $target)\n     (assign arg (stack-pop $stack) |\n      (stack-call $stack $target (- $ct 1)) $arg);",
    "code": "2110132100000101131232110103221110111003210000010013210000011113312321111322113023210000011113203322211110011030232111011100330232100000100133221110321000010000322111100110302321110111003312322100000101130232111011100302321000001001322101130232100000111132133302321000010000332233",
    "parse": [
      "define",
      "stack-call",
      [
        -1,
        "lambda",
        [
          "stack",
          "target",
          "ct"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "ct"
            ],
            "0"
          ],
          [
            [
              "stack-pop",
              [
                -2,
                "stack"
              ]
            ],
            [
              -2,
              "target"
            ]
          ],
          [
            "assign",
            "arg",
            [
              "stack-pop",
              [
                -2,
                "stack"
              ]
            ],
            [
              -1,
              [
                "stack-call",
                [
                  -2,
                  "stack"
                ],
                [
                  -2,
                  "target"
                ],
                [
                  "-",
                  [
                    -2,
                    "ct"
                  ],
                  "1"
                ]
              ],
              [
                -2,
                "arg"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF14F;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF160;&#xF24A;&#xF14C;&#xF14D;&#xF24A;&#xF14C;&#xF153;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF249;&#xF14C;&#xF153;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF249;&#xF14C;&#xF14D;&#xF245;&#xF246;&#xF152;&#xF24A;&#xF14C;&#xF154;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF246;&#xF14C;&#xF14F;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF14D;&#xF246;&#xF14F;&#xF249;&#xF14C;&#xF153;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF249;&#xF14C;&#xF154;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1755
  },
  {
    "role": "code",
    "lines": [
      "define stack-call-special |",
      "  lambda (stack self target ct) |",
      "    if (= (ct) 0)",
      "    (let ((act | stack-pop $stack)) |",
      "       if (act == $self)",
      "          (act super $target)",
      "          (act $target))",
      "    (let ((arg | stack-pop $stack)) |",
      "       (stack-call-special $stack $self $target (- $ct 1)) $arg);"
    ],
    "preprocessed": "define stack-call-special |\n  lambda (stack self target ct) |\n    if (= (ct) 0)\n    (let ((act | stack-pop $stack)) |\n       if (act == $self)\n          (act super $target)\n          (act $target))\n    (let ((arg | stack-pop $stack)) |\n       (stack-call-special $stack $self $target (- $ct 1)) $arg);",
    "code": "21101321000001110312321101032211101110032111001103210000010013210000011113312321111322113221000001111332033221000001032221101110113123211110011030232111011100333123211113221101110113210000100030232111001103322110111011321111010130232100000100133221101110113023210000010013332210000010322210000100003123211110011030232111011100333123221000001110302321110111003023211100110302321000001001322101130232100000111132133302321000010000332233",
    "parse": [
      "define",
      "stack-call-special",
      [
        -1,
        "lambda",
        [
          "stack",
          "self",
          "target",
          "ct"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              "ct"
            ],
            "0"
          ],
          [
            "let",
            [
              [
                "act",
                [
                  -1,
                  "stack-pop",
                  [
                    -2,
                    "stack"
                  ]
                ]
              ]
            ],
            [
              -1,
              "if",
              [
                "act",
                "==",
                [
                  -2,
                  "self"
                ]
              ],
              [
                "act",
                "super",
                [
                  -2,
                  "target"
                ]
              ],
              [
                "act",
                [
                  -2,
                  "target"
                ]
              ]
            ]
          ],
          [
            "let",
            [
              [
                "arg",
                [
                  -1,
                  "stack-pop",
                  [
                    -2,
                    "stack"
                  ]
                ]
              ]
            ],
            [
              -1,
              [
                "stack-call-special",
                [
                  -2,
                  "stack"
                ],
                [
                  -2,
                  "self"
                ],
                [
                  -2,
                  "target"
                ],
                [
                  "-",
                  [
                    -2,
                    "ct"
                  ],
                  "1"
                ]
              ],
              [
                -2,
                "arg"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF152;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF160;&#xF24A;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF14D;&#xF24A;&#xF14C;&#xF153;&#xF245;&#xF248;&#xF153;&#xF246;&#xF147;&#xF246;&#xF14C;&#xF153;&#xF245;&#xF144;&#xF245;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14A;&#xF17F;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF245;&#xF248;&#xF153;&#xF246;&#xF14A;&#xF17F;&#xF24A;&#xF148;&#xF14C;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF14A;&#xF17F;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF14C;&#xF14D;&#xF245;&#xF246;&#xF14A;&#xF17F;&#xF249;&#xF14C;&#xF14D;&#xF245;&#xF245;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14C;&#xF154;&#xF248;&#xF14B;&#xF16A;&#xF249;&#xF14B;&#xF160;&#xF245;&#xF245;&#xF248;&#xF246;&#xF14C;&#xF152;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF147;&#xF16A;&#xF249;&#xF14C;&#xF14D;&#xF246;&#xF14F;&#xF249;&#xF14C;&#xF153;&#xF24A;&#xF145;&#xF245;&#xF245;&#xF249;&#xF14C;&#xF154;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1756
  },
  {
    "role": "code",
    "lines": [
      "define stack-push | lambda (stack x) |",
      "   stack set | prepend $x | stack get;"
    ],
    "preprocessed": "define stack-push | lambda (stack x) |\n   stack set | prepend $x | stack get;",
    "code": "21101321111000003123211010322111011100321010013312321110111003210001010031232101011030232101001312321110111003210001001132233",
    "parse": [
      "define",
      "stack-push",
      [
        -1,
        "lambda",
        [
          "stack",
          "x"
        ],
        [
          -1,
          "stack",
          "set",
          [
            -1,
            "prepend",
            [
              -2,
              "x"
            ],
            [
              -1,
              "stack",
              "get"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF164;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF160;&#xF24A;&#xF16D;&#xF245;&#xF248;&#xF14B;&#xF160;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF145;&#xF15A;&#xF249;&#xF16D;&#xF248;&#xF14B;&#xF160;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": true,
    "stanza": 1757
  },
  {
    "role": "code",
    "lines": [
      "define stack-pop | lambda (stack) |",
      "   let ((v | head | stack get)) |",
      "     begin",
      "    (stack set | tail | stack get)",
      "        $v;"
    ],
    "preprocessed": "define stack-pop | lambda (stack) |\n   let ((v | head | stack get)) |\n     begin\n    (stack set | tail | stack get)\n        $v;",
    "code": "21101321111001103123211010322111011100331232100000103222110101312321010000312321110111003210001001133312321010110032211101110032100010100312321010010312321110111003210001001133023211010132233",
    "parse": [
      "define",
      "stack-pop",
      [
        -1,
        "lambda",
        [
          "stack"
        ],
        [
          -1,
          "let",
          [
            [
              "v",
              [
                -1,
                "head",
                [
                  -1,
                  "stack",
                  "get"
                ]
              ]
            ]
          ],
          [
            -1,
            "begin",
            [
              "stack",
              "set",
              [
                -1,
                "tail",
                [
                  -1,
                  "stack",
                  "get"
                ]
              ]
            ],
            [
              -2,
              "v"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF16A;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF179;&#xF248;&#xF145;&#xF154;&#xF248;&#xF14B;&#xF160;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14B;&#xF160;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF145;&#xF156;&#xF248;&#xF14B;&#xF160;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF179;&#xF24B;",
    "dt": true,
    "stanza": 1758
  },
  {
    "role": "code",
    "lines": [
      "define stack-peek | lambda (stack) |",
      "   head | stack get;"
    ],
    "preprocessed": "define stack-peek | lambda (stack) |\n   head | stack get;",
    "code": "211013211110001031232110103221110111003312321010000312321110111003210001001132233",
    "parse": [
      "define",
      "stack-peek",
      [
        -1,
        "lambda",
        [
          "stack"
        ],
        [
          -1,
          "head",
          [
            -1,
            "stack",
            "get"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF166;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF160;&#xF245;&#xF248;&#xF145;&#xF154;&#xF248;&#xF14B;&#xF160;&#xF24A;&#xF148;&#xF157;&#xF24B;",
    "dt": true,
    "stanza": 1759
  },
  {
    "role": "code",
    "lines": [
      "define stack-test1 | cell new | vector 5 3 1;"
    ],
    "preprocessed": "define stack-test1 | cell new | vector 5 3 1;",
    "code": "21101321000010001312321000100003211110010312321000032101321132132233",
    "parse": [
      "define",
      "stack-test1",
      [
        -1,
        "cell",
        "new",
        [
          -1,
          "vector",
          "5",
          "3",
          "1"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF155;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF24A;&#xF149;&#xF24A;&#xF147;&#xF24A;&#xF145;&#xF24B;",
    "dt": true,
    "stanza": 1760
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 5;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 5;",
    "code": "21132211110011030232100001000133210132233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1761
  },
  {
    "role": "code",
    "lines": [
      "= (stack-peek $stack-test1) 3;"
    ],
    "preprocessed": "= (stack-peek $stack-test1) 3;",
    "code": "2113221111000103023210000100013321132233",
    "parse": [
      "=",
      [
        "stack-peek",
        [
          -2,
          "stack-test1"
        ]
      ],
      "3"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF166;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1762
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 3;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 3;",
    "code": "2113221111001103023210000100013321132233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "3"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1763
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 7;"
    ],
    "preprocessed": "stack-push $stack-test1 7;",
    "code": "21111000003023210000100013211132233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "7"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1764
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 7;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 7;",
    "code": "21132211110011030232100001000133211132233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "7"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1765
  },
  {
    "role": "code",
    "lines": [
      "define vars-test1 | cell new $hash-null;"
    ],
    "preprocessed": "define vars-test1 | cell new $hash-null;",
    "code": "21101321000010010312321000100003211110010302321011001032233",
    "parse": [
      "define",
      "vars-test1",
      [
        -1,
        "cell",
        "new",
        [
          -2,
          "hash-null"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF156;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF146;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1766
  },
  {
    "role": "code",
    "lines": [
      "define pc-test1 | cell new 0;"
    ],
    "preprocessed": "define pc-test1 | cell new 0;",
    "code": "2110132100001001131232100010000321111001032032233",
    "parse": [
      "define",
      "pc-test1",
      [
        -1,
        "cell",
        "new",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF157;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1767
  },
  {
    "role": "code",
    "lines": [
      "define ret-test1 | cell new 0;"
    ],
    "preprocessed": "define ret-test1 | cell new 0;",
    "code": "2110132100001010031232100010000321111001032032233",
    "parse": [
      "define",
      "ret-test1",
      [
        -1,
        "cell",
        "new",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF158;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1768
  },
  {
    "role": "code",
    "lines": [
      "define test-jvm | jvm-maker $vars-test1 $stack-test1 $pc-test1 $ret-test1;"
    ],
    "preprocessed": "define test-jvm | jvm-maker $vars-test1 $stack-test1 $pc-test1 $ret-test1;",
    "code": "211013210000101013123211101101030232100001001030232100001000130232100001001130232100001010032233",
    "parse": [
      "define",
      "test-jvm",
      [
        -1,
        "jvm-maker",
        [
          -2,
          "vars-test1"
        ],
        [
          -2,
          "stack-test1"
        ],
        [
          -2,
          "pc-test1"
        ],
        [
          -2,
          "ret-test1"
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF159;&#xF248;&#xF14B;&#xF15E;&#xF249;&#xF14C;&#xF156;&#xF249;&#xF14C;&#xF155;&#xF249;&#xF14C;&#xF157;&#xF249;&#xF14C;&#xF158;&#xF24B;",
    "dt": true,
    "stanza": 1769
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 4;"
    ],
    "preprocessed": "stack-push $stack-test1 4;",
    "code": "21111000003023210000100013210032233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "4"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1770
  },
  {
    "role": "code",
    "lines": [
      "test-jvm dup;"
    ],
    "preprocessed": "test-jvm dup;",
    "code": "210000101013211110000132233",
    "parse": [
      "test-jvm",
      "dup"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1771
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 4;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 4;",
    "code": "21132211110011030232100001000133210032233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "4"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1772
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 4;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 4;",
    "code": "21132211110011030232100001000133210032233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "4"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF148;&#xF24B;",
    "dt": false,
    "stanza": 1773
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 66;"
    ],
    "preprocessed": "stack-push $stack-test1 66;",
    "code": "211110000030232100001000132100001032233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "66"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF145;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1774
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 77;"
    ],
    "preprocessed": "stack-push $stack-test1 77;",
    "code": "211110000030232100001000132100110132233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "77"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF145;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1775
  },
  {
    "role": "code",
    "lines": [
      "test-jvm astore 3;"
    ],
    "preprocessed": "test-jvm astore 3;",
    "code": "2100001010132111100100321132233",
    "parse": [
      "test-jvm",
      "astore",
      "3"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1776
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 66;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 66;",
    "code": "211322111100110302321000010001332100001032233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "66"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF145;&#xF146;&#xF24B;",
    "dt": false,
    "stanza": 1777
  },
  {
    "role": "code",
    "lines": [
      "test-jvm aload 3;"
    ],
    "preprocessed": "test-jvm aload 3;",
    "code": "2100001010132111100111321132233",
    "parse": [
      "test-jvm",
      "aload",
      "3"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF147;&#xF24B;",
    "dt": false,
    "stanza": 1778
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 77;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 77;",
    "code": "211322111100110302321000010001332100110132233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "77"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF145;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1779
  },
  {
    "role": "code",
    "lines": [
      "class test-class ()",
      "   (field x | int new)",
      "   (field y | int new);"
    ],
    "preprocessed": "class test-class ()\n   (field x | int new)\n   (field y | int new);",
    "code": "210000111032100001011032322100001100321010013123211010010321111001033221000011003211110131232110100103211110010332233",
    "parse": [
      "class",
      "test-class",
      [],
      [
        "field",
        "x",
        [
          -1,
          "int",
          "new"
        ]
      ],
      [
        "field",
        "y",
        [
          -1,
          "int",
          "new"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14C;&#xF15A;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF156;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF181;&#xF248;&#xF147;&#xF156;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1780
  },
  {
    "role": "code",
    "lines": [
      "define test-this | test-class new;"
    ],
    "preprocessed": "define test-this | test-class new;",
    "code": "21101321000010111312321000010110321111001032233",
    "parse": [
      "define",
      "test-this",
      [
        -1,
        "test-class",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF15B;&#xF248;&#xF14C;&#xF15A;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1781
  },
  {
    "role": "code",
    "lines": [
      "test-this x set 5;"
    ],
    "preprocessed": "test-this x set 5;",
    "code": "2100001011132101001321000101003210132233",
    "parse": [
      "test-this",
      "x",
      "set",
      "5"
    ],
    "spider": "&#xF14C;&#xF15B;&#xF24A;&#xF16D;&#xF24A;&#xF148;&#xF158;&#xF24A;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1782
  },
  {
    "role": "code",
    "lines": [
      "= (test-this x get) 5;"
    ],
    "preprocessed": "= (test-this x get) 5;",
    "code": "2113221000010111321010013210001001133210132233",
    "parse": [
      "=",
      [
        "test-this",
        "x",
        "get"
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF15B;&#xF24A;&#xF16D;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1783
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 $test-this;"
    ],
    "preprocessed": "stack-push $stack-test1 $test-this;",
    "code": "211110000030232100001000130232100001011132233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      [
        -2,
        "test-this"
      ]
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF249;&#xF14C;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 1784
  },
  {
    "role": "code",
    "lines": [
      "= ((stack-pop $stack-test1) x get) 5;"
    ],
    "preprocessed": "= ((stack-pop $stack-test1) x get) 5;",
    "code": "21132221111001103023210000100013321010013210001001133210132233",
    "parse": [
      "=",
      [
        [
          "stack-pop",
          [
            -2,
            "stack-test1"
          ]
        ],
        "x",
        "get"
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF16D;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1785
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 $test-this;"
    ],
    "preprocessed": "stack-push $stack-test1 $test-this;",
    "code": "211110000030232100001000130232100001011132233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      [
        -2,
        "test-this"
      ]
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF249;&#xF14C;&#xF15B;&#xF24B;",
    "dt": false,
    "stanza": 1786
  },
  {
    "role": "code",
    "lines": [
      "test-jvm astore 0;"
    ],
    "preprocessed": "test-jvm astore 0;",
    "code": "210000101013211110010032032233",
    "parse": [
      "test-jvm",
      "astore",
      "0"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1787
  },
  {
    "role": "code",
    "lines": [
      "test-jvm aload 0;"
    ],
    "preprocessed": "test-jvm aload 0;",
    "code": "210000101013211110011132032233",
    "parse": [
      "test-jvm",
      "aload",
      "0"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1788
  },
  {
    "role": "code",
    "lines": [
      "test-jvm getfield x $int;"
    ],
    "preprocessed": "test-jvm getfield x $int;",
    "code": "210000101013211110110132101001302321101001032233",
    "parse": [
      "test-jvm",
      "getfield",
      "x",
      [
        -2,
        "int"
      ]
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF16D;&#xF249;&#xF147;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 1789
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 5;"
    ],
    "preprocessed": "= (stack-pop $stack-test1) 5;",
    "code": "21132211110011030232100001000133210132233",
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "5"
    ],
    "spider": "&#xF147;&#xF246;&#xF14B;&#xF16A;&#xF249;&#xF14C;&#xF155;&#xF245;&#xF149;&#xF24B;",
    "dt": false,
    "stanza": 1790
  },
  {
    "role": "code",
    "lines": [
      "test-jvm aload 0;"
    ],
    "preprocessed": "test-jvm aload 0;",
    "code": "210000101013211110011132032233",
    "parse": [
      "test-jvm",
      "aload",
      "0"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF24B;",
    "dt": false,
    "stanza": 1791
  },
  {
    "role": "code",
    "lines": [
      "test-jvm iconst 15;"
    ],
    "preprocessed": "test-jvm iconst 15;",
    "code": "210000101013211110100132111132233",
    "parse": [
      "test-jvm",
      "iconst",
      "15"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 1792
  },
  {
    "role": "code",
    "lines": [
      "test-jvm putfield y $int;"
    ],
    "preprocessed": "test-jvm putfield y $int;",
    "code": "210000101013211110111132111101302321101001032233",
    "parse": [
      "test-jvm",
      "putfield",
      "y",
      [
        -2,
        "int"
      ]
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF181;&#xF249;&#xF147;&#xF156;&#xF24B;",
    "dt": false,
    "stanza": 1793
  },
  {
    "role": "code",
    "lines": [
      "= (test-this y get) 15;"
    ],
    "preprocessed": "= (test-this y get) 15;",
    "code": "21132210000101113211110132100010011332111132233",
    "parse": [
      "=",
      [
        "test-this",
        "y",
        "get"
      ],
      "15"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF15B;&#xF24A;&#xF181;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF153;&#xF24B;",
    "dt": false,
    "stanza": 1794
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 7;"
    ],
    "preprocessed": "stack-push $stack-test1 7;",
    "code": "21111000003023210000100013211132233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "7"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF14B;&#xF24B;",
    "dt": false,
    "stanza": 1795
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 10;"
    ],
    "preprocessed": "stack-push $stack-test1 10;",
    "code": "211110000030232100001000132101032233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "10"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1796
  },
  {
    "role": "code",
    "lines": [
      "test-jvm imul;"
    ],
    "preprocessed": "test-jvm imul;",
    "code": "210000101013211111000032233",
    "parse": [
      "test-jvm",
      "imul"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14B;&#xF174;&#xF24B;",
    "dt": false,
    "stanza": 1797
  },
  {
    "role": "code",
    "lines": [
      "test-jvm ireturn;"
    ],
    "preprocessed": "test-jvm ireturn;",
    "code": "2100001010132100000011032233",
    "parse": [
      "test-jvm",
      "ireturn"
    ],
    "spider": "&#xF14C;&#xF159;&#xF24A;&#xF14C;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1798
  },
  {
    "role": "code",
    "lines": [
      "= (ret-test1 get) 70;"
    ],
    "preprocessed": "= (ret-test1 get) 70;",
    "code": "211322100001010032100010011332100011032233",
    "parse": [
      "=",
      [
        "ret-test1",
        "get"
      ],
      "70"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF158;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF145;&#xF14A;&#xF24B;",
    "dt": false,
    "stanza": 1799
  },
  {
    "role": "code",
    "lines": [
      "define state-machine-helper | ? at |",
      "  lambda (vars stack machine) |",
      "  let ((pc | cell new $at)",
      "       (ret | cell new $true)) |",
      "  let ((jvm | jvm-maker $vars $stack $pc $ret)) |",
      "  begin",
      "    (machine $jvm | pc get)",
      "    (if (= (pc get) $minus-one) (ret get) |",
      "      state-machine-helper (pc get) $vars $stack $machine);"
    ],
    "preprocessed": "define state-machine-helper | ? at |\n  lambda (vars stack machine) |\n  let ((pc | cell new $at)\n       (ret | cell new $true)) |\n  let ((jvm | jvm-maker $vars $stack $pc $ret)) |\n  begin\n    (machine $jvm | pc get)\n    (if (= (pc get) $minus-one) (ret get) |\n      state-machine-helper (pc get) $vars $stack $machine);",
    "code": "2110132100001100031232110032100001100131232110103221110110113211101110032100001101033123210000010322211101110131232100010000321111001030232100001100133221001111312321000100003211110010302321333123210000010322210000110113123211101101030232111011011302321110111003023211101110130232100111133312321010110032210000110103023210000110113123211101110132100010011332211113221132211101110132100010011330232111011001332210011113210001001133123210000110003221110111013210001001133023211101101130232111011100302321000011010332233",
    "parse": [
      "define",
      "state-machine-helper",
      [
        -1,
        "?",
        "at",
        [
          -1,
          "lambda",
          [
            "vars",
            "stack",
            "machine"
          ],
          [
            -1,
            "let",
            [
              [
                "pc",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -2,
                    "at"
                  ]
                ]
              ],
              [
                "ret",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -2,
                    "true"
                  ]
                ]
              ]
            ],
            [
              -1,
              "let",
              [
                [
                  "jvm",
                  [
                    -1,
                    "jvm-maker",
                    [
                      -2,
                      "vars"
                    ],
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -2,
                      "pc"
                    ],
                    [
                      -2,
                      "ret"
                    ]
                  ]
                ]
              ],
              [
                -1,
                "begin",
                [
                  "machine",
                  [
                    -2,
                    "jvm"
                  ],
                  [
                    -1,
                    "pc",
                    "get"
                  ]
                ],
                [
                  "if",
                  [
                    "=",
                    [
                      "pc",
                      "get"
                    ],
                    [
                      -2,
                      "minus-one"
                    ]
                  ],
                  [
                    "ret",
                    "get"
                  ],
                  [
                    -1,
                    "state-machine-helper",
                    [
                      "pc",
                      "get"
                    ],
                    [
                      -2,
                      "vars"
                    ],
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -2,
                      "machine"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF15C;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15D;&#xF248;&#xF15E;&#xF246;&#xF14B;&#xF15F;&#xF24A;&#xF14B;&#xF160;&#xF24A;&#xF14C;&#xF15E;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF161;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF14C;&#xF15D;&#xF245;&#xF246;&#xF145;&#xF153;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF145;&#xF245;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14C;&#xF15F;&#xF248;&#xF14B;&#xF15E;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14B;&#xF161;&#xF249;&#xF145;&#xF153;&#xF245;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14C;&#xF15E;&#xF249;&#xF14C;&#xF15F;&#xF248;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF153;&#xF246;&#xF147;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF14B;&#xF15D;&#xF245;&#xF246;&#xF145;&#xF153;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF248;&#xF14C;&#xF15C;&#xF246;&#xF14B;&#xF161;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF249;&#xF14C;&#xF15E;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1800
  },
  {
    "role": "code",
    "lines": [
      "define state-machine | state-machine-helper 0;"
    ],
    "preprocessed": "define state-machine | state-machine-helper 0;",
    "code": "2110132100001110031232100001100032032233",
    "parse": [
      "define",
      "state-machine",
      [
        -1,
        "state-machine-helper",
        "0"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF160;&#xF248;&#xF14C;&#xF15C;&#xF24A;&#xF144;&#xF24B;",
    "dt": true,
    "stanza": 1801
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 10;"
    ],
    "preprocessed": "stack-push $stack-test1 10;",
    "code": "211110000030232100001000132101032233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "10"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1802
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 33;"
    ],
    "preprocessed": "stack-push $stack-test1 33;",
    "code": "21111000003023210000100013210000132233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "33"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF165;&#xF24B;",
    "dt": false,
    "stanza": 1803
  },
  {
    "role": "code",
    "lines": [
      "= 33 | state-machine $vars-test1 $stack-test1 | ? jvm | ? x |",
      "  cond",
      "    ((= $x 0) | jvm istore 4)",
      "    ((= $x 1) | jvm iload 4)",
      "    (jvm ireturn);"
    ],
    "preprocessed": "= 33 | state-machine $vars-test1 $stack-test1 | ? jvm | ? x |\n  cond\n    ((= $x 0) | jvm istore 4)\n    ((= $x 1) | jvm iload 4)\n    (jvm ireturn);",
    "code": "2113210000131232100001110030232100001001030232100001000131232110032100001101131232110032101001312321101100032221130232101001320331232100001101132111100101321003322211302321010013213312321000011011321111010003210033221000011011321000000110332233",
    "parse": [
      "=",
      "33",
      [
        -1,
        "state-machine",
        [
          -2,
          "vars-test1"
        ],
        [
          -2,
          "stack-test1"
        ],
        [
          -1,
          "?",
          "jvm",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "cond",
              [
                [
                  "=",
                  [
                    -2,
                    "x"
                  ],
                  "0"
                ],
                [
                  -1,
                  "jvm",
                  "istore",
                  "4"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "x"
                  ],
                  "1"
                ],
                [
                  -1,
                  "jvm",
                  "iload",
                  "4"
                ]
              ],
              [
                "jvm",
                "ireturn"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF165;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14C;&#xF156;&#xF249;&#xF14C;&#xF155;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF169;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1804
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 10;"
    ],
    "preprocessed": "stack-push $stack-test1 10;",
    "code": "211110000030232100001000132101032233",
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "10"
    ],
    "spider": "&#xF14B;&#xF164;&#xF249;&#xF14C;&#xF155;&#xF24A;&#xF14E;&#xF24B;",
    "dt": false,
    "stanza": 1805
  },
  {
    "role": "code",
    "lines": [
      "define bytecode-test-mul | lambda (arg0 arg1) |",
      "  let ((vars | cell new | make-hash | vector (pair 0 0) (pair 1 $arg0) (pair 2 $arg1))",
      "       (stack | cell new | vector)) |",
      "  state-machine $vars $stack | ? jvm | ? x | cond",
      "    ((= (x) 0) | jvm iload 1)",
      "    ((= (x) 1) | jvm iload 2)",
      "    ((= (x) 2) | jvm imul)",
      "    ((= (x) 3) | jvm ireturn)",
      "    (jvm return);"
    ],
    "preprocessed": "define bytecode-test-mul | lambda (arg0 arg1) |\n  let ((vars | cell new | make-hash | vector (pair 0 0) (pair 1 $arg0) (pair 2 $arg1))\n       (stack | cell new | vector)) |\n  state-machine $vars $stack | ? jvm | ? x | cond\n    ((= (x) 0) | jvm iload 1)\n    ((= (x) 1) | jvm iload 2)\n    ((= (x) 2) | jvm imul)\n    ((= (x) 3) | jvm ireturn)\n    (jvm return);",
    "code
    "parse": [
      "define",
      "bytecode-test-mul",
      [
        -1,
        "lambda",
        [
          "arg0",
          "arg1"
        ],
        [
          -1,
          "let",
          [
            [
              "vars",
              [
                -1,
                "cell",
                "new",
                [
                  -1,
                  "make-hash",
                  [
                    -1,
                    "vector",
                    [
                      "pair",
                      "0",
                      "0"
                    ],
                    [
                      "pair",
                      "1",
                      [
                        -2,
                        "arg0"
                      ]
                    ],
                    [
                      "pair",
                      "2",
                      [
                        -2,
                        "arg1"
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              "stack",
              [
                -1,
                "cell",
                "new",
                [
                  -1,
                  "vector"
                ]
              ]
            ]
          ],
          [
            -1,
            "state-machine",
            [
              -2,
              "vars"
            ],
            [
              -2,
              "stack"
            ],
            [
              -1,
              "?",
              "jvm",
              [
                -1,
                "?",
                "x",
                [
                  -1,
                  "cond",
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "0"
                    ],
                    [
                      -1,
                      "jvm",
                      "iload",
                      "1"
                    ]
                  ],
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "1"
                    ],
                    [
                      -1,
                      "jvm",
                      "iload",
                      "2"
                    ]
                  ],
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "2"
                    ],
                    [
                      -1,
                      "jvm",
                      "imul"
                    ]
                  ],
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "3"
                    ],
                    [
                      -1,
                      "jvm",
                      "ireturn"
                    ]
                  ],
                  [
                    "jvm",
                    "return"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF161;&#xF248;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF174;&#xF245;&#xF246;&#xF246;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1806
  },
  {
    "role": "code",
    "lines": [
      "= (bytecode-test-mul 5 9) 45;"
    ],
    "preprocessed": "= (bytecode-test-mul 5 9) 45;",
    "code": "21132210000111013210132100133210110132233",
    "parse": [
      "=",
      [
        "bytecode-test-mul",
        "5",
        "9"
      ],
      "45"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF161;&#xF24A;&#xF149;&#xF24A;&#xF14D;&#xF245;&#xF171;&#xF24B;",
    "dt": false,
    "stanza": 1807
  },
  {
    "role": "file",
    "lines": [
      "== COS_JavaTest =="
    ],
    "stanza": 1808
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# public class COS_JavaTest {",
      "#     private int q = 0;",
      "#     public int add(int x, int y) {",
      "#     return x + y;",
      "#     }",
      "#     public int sub(int x, int y) {",
      "#     return x - y;",
      "#     }",
      "#     public int mult(int x, int y) {",
      "#     return x * y;",
      "#     }",
      "#     public int addmult(int x, int y, int z) {",
      "#     return add(x, mult(y, z));",
      "#     }",
      "#     public void set(int x) {",
      "#     q = x;",
      "#     }",
      "#     public int get() {",
      "#     return q;",
      "#     }",
      "#     public int fact(int x) {",
      "#     return ( x> 0) ? (x * fact(sub(x, 1))) : 1;",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JavaTest'",
    "section_category": "JAVA",
    "section_index": 56,
    "stanza": 1809
  },
  {
    "role": "code",
    "lines": [
      "class COS_JavaTest ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field q | (int) new)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm iconst 0)",
      "         ((= $x 4) | jvm putfield q $int)",
      "         ((= $x 5) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method add-I-I-I",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm iload 2)",
      "         ((= $x 2) | jvm iadd)",
      "         ((= $x 3) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method add | self add-I-I-I)",
      "",
      "   (method sub-I-I-I",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm iload 2)",
      "         ((= $x 2) | jvm isub)",
      "         ((= $x 3) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method sub | self sub-I-I-I)",
      "",
      "   (method mult-I-I-I",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm iload 2)",
      "         ((= $x 2) | jvm imul)",
      "         ((= $x 3) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method mult | self mult-I-I-I)",
      "",
      "   (method addmult-I-I-I-I",
      "     (lambda (arg0 arg1 arg2) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1) (pair 3 $arg2))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm iload 1)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm iload 2)",
      "         ((= $x 4) | jvm iload 3)",
      "         ((= $x 5) | jvm invokevirtual mult-I-I-I 2 1)",
      "         ((= $x 6) | jvm invokevirtual add-I-I-I 2 1)",
      "         ((= $x 7) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method addmult | self addmult-I-I-I-I)",
      "",
      "   (method set-I-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm iload 1)",
      "         ((= $x 2) | jvm putfield q $int)",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method set | self set-I-V)",
      "",
      "   (method get-I",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield q $int)",
      "         ((= $x 2) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method get | self get-I)",
      "",
      "   (method fact-I-I",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm ifle 11)",
      "         ((= $x 2) | jvm iload 1)",
      "         ((= $x 3) | jvm aload 0)",
      "         ((= $x 4) | jvm aload 0)",
      "         ((= $x 5) | jvm iload 1)",
      "         ((= $x 6) | jvm iconst 1)",
      "         ((= $x 7) | jvm invokevirtual sub-I-I-I 2 1)",
      "         ((= $x 8) | jvm invokevirtual fact-I-I 1 1)",
      "         ((= $x 9) | jvm imul)",
      "         ((= $x 10) | jvm goto 12)",
      "         ((= $x 11) | jvm iconst 1)",
      "         ((= $x 12) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method fact | self fact-I-I)",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JavaTest ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (java lang Object) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field q | (int) new)\n   (method <init>-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm iconst 0)\n         ((= $x 4) | jvm putfield q $int)\n         ((= $x 5) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-V)\n\n   (method add-I-I-I\n     (lambda (arg0 arg1) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm iload 1)\n         ((= $x 1) | jvm iload 2)\n         ((= $x 2) | jvm iadd)\n         ((= $x 3) | jvm ireturn)\n         (jvm return))\n   )\n\n   (method add | self add-I-I-I)\n\n   (method sub-I-I-I\n     (lambda (arg0 arg1) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm iload 1)\n         ((= $x 1) | jvm iload 2)\n         ((= $x 2) | jvm isub)\n         ((= $x 3) | jvm ireturn)\n         (jvm return))\n   )\n\n   (method sub | self sub-I-I-I)\n\n   (method mult-I-I-I\n     (lambda (arg0 arg1) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm iload 1)\n         ((= $x 1) | jvm iload 2)\n         ((= $x 2) | jvm imul)\n         ((= $x 3) | jvm ireturn)\n         (jvm return))\n   )\n\n   (method mult | self mult-I-I-I)\n\n   (method addmult-I-I-I-I\n     (lambda (arg0 arg1 arg2) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1) (pair 3 $arg2))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm iload 1)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm iload 2)\n         ((= $x 4) | jvm iload 3)\n         ((= $x 5) | jvm invokevirtual mult-I-I-I 2 1)\n         ((= $x 6) | jvm invokevirtual add-I-I-I 2 1)\n         ((= $x 7) | jvm ireturn)\n         (jvm return))\n   )\n\n   (method addmult | self addmult-I-I-I-I)\n\n   (method set-I-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm iload 1)\n         ((= $x 2) | jvm putfield q $int)\n         ((= $x 3) | jvm return)\n         (jvm return))\n   )\n\n   (method set | self set-I-V)\n\n   (method get-I\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield q $int)\n         ((= $x 2) | jvm ireturn)\n         (jvm return))\n   )\n\n   (method get | self get-I)\n\n   (method fact-I-I\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm iload 1)\n         ((= $x 1) | jvm ifle 11)\n         ((= $x 2) | jvm iload 1)\n         ((= $x 3) | jvm aload 0)\n         ((= $x 4) | jvm aload 0)\n         ((= $x 5) | jvm iload 1)\n         ((= $x 6) | jvm iconst 1)\n         ((= $x 7) | jvm invokevirtual sub-I-I-I 2 1)\n         ((= $x 8) | jvm invokevirtual fact-I-I 1 1)\n         ((= $x 9) | jvm imul)\n         ((= $x 10) | jvm goto 12)\n         ((= $x 11) | jvm iconst 1)\n         ((= $x 12) | jvm ireturn)\n         (jvm return))\n   )\n\n   (method fact | self fact-I-I)\n\n ;",
    "code": "21000011103210001000003232210000110032100010000131232110113203322100000100321111001031232111003023210001000013123221110001103210001000103211011010133023210000000033221000001003211110101312321100321010013123221110130232100010000133023210100133221000001003210000011031232110032101001312321110011032111101013023210100133221000011003210001000113123221101001033211110010332210000010032110110111322110103231232100000103222111011011312321000100003211110010312321011011031232100003221010111320302321110011033322111011100312321000100003211110010312321000033312321000011100302321110110113023211101110031232110032100001101131232110032101001312321101100032221130232101001320331232100001101132111100111320332221130232101001321331232100001101132100000110132110110111320320332221130232101001321033123210000110113211110011132033222113023210100132113312321000011011321111010013203322211302321010013210033123210000110113211110111132100010001130232110100103322211302321010013210133123210000110113211100000332210000110113211100000333322100000100321101110003123211100110321101101113322100000100321000100100322110103221000011110321000011111331232100000103222111011011312321000100003211110010312321011011031232100003221010111320302321110011033221010111321302321000011110332210101113210302321000011111333221110111003123210001000032111100103123210000333123210000111003023211101101130232111011100312321100321000011011312321100321010013123211011000322211302321010013203312321000011011321111010003213322211302321010013213312321000011011321111010003210332221130232101001321033123210000110113211111001133222113023210100132113312321000011011321000000110332210000110113211100000333322100000100321110111131232111001103210001001003322100000100321000100101322110103221000011110321000011111331232100000103222111011011312321000100003211110010312321011011031232100003221010111320302321110011033221010111321302321000011110332210101113210302321000011111333221110111003123210001000032111100103123210000333123210000111003023211101101130232111011100312321100321000011011312321100321010013123211011000322211302321010013203312321000011011321111010003213322211302321010013213312321000011011321111010003210332221130232101001321033123210000110113211111010033222113023210100132113312321000011011321000000110332210000110113211100000333322100000100321000100110312321110011032100010010133221000001003210001001113221101032210000111103210000111113312321000001032221110110113123210001000032111100103123210110110312321000032210101113203023211100110332210101113213023210000111103322101011132103023210000111113332211101110031232100010000321111001031232100003331232100001110030232111011011302321110111003123211003210000110113123211003210100131232110110003222113023210100132033123210000110113211110100032133222113023210100132133123210000110113211110100032103322211302321010013210331232100001101132111110000332221130232101001321133123210000110113210000001103322100001101132111000003333221000001003210001010003123211100110321000100111332210000010032100010100132211010322100001111032100001111132100010101033123210000010322211101101131232100010000321111001031232101101103123210000322101011132030232111001103322101011132130232100001111033221010111321030232100001111133221010111321130232100010101033322111011100312321000100003211110010312321000033312321000011100302321110110113023211101110031232110032100001101131232110032101001312321101100032221130232101001320331232100001101132111100111320332221130232101001321331232100001101132111101000321332221130232101001321033123210000110113211110011132033222113023210100132113312321000011011321111010003210332221130232101001321003312321000011011321111010003211332221130232101001321013312321000011011321000001000321000100111321032133222113023210100132110331232100001101132100000100032100010010032103213322211302321010013211133123210000110113210000001103322100001101132111000003333221000001003210001010113123211100110321000101001332210000010032100010110032211010322100001111033123210000010322211101101131232100010000321111001031232101101103123210000322101011132030232111001103322101011132130232100001111033322111011100312321000100003211110010312321000033312321000011100302321110110113023211101110031232110032100001101131232110032101001312321101100032221130232101001320331232100001101132111100111320332221130232101001321331232100001101132111101000321332221130232101001321033123210000110113211110111132100010001130232110100103322211302321010013211331232100001101132111000003322100001101132111000003333221000001003210001010031232111001103210001011003322100000100321000101101322110103231232100000103222111011011312321000100003211110010312321011011031232100003221010111320302321110011033322111011100312321000100003211110010312321000033312321000011100302321110110113023211101110031232110032100001101131232110032101001312321101100032221130232101001320331232100001101132111100111320332221130232101001321331232100001101132111101101321000100011302321101001033222113023210100132103312321000011011321000000110332210000110113211100000333322100000100321000100113123211100110321000101101332210000010032100010111032211010322100001111033123210000010322211101101131232100010000321111001031232101101103123210000322101011132030232111001103322101011132130232100001111033322111011100312321000100003211110010312321000033312321000011100302321110110113023211101110031232110032100001101131232110032101001312321101100032221130232101001320331232100001101132111101000321332221130232101001321331232100001101132111110111321011332221130232101001321033123210000110113211110100032133222113023210100132113312321000011011321111001113203322211302321010013210033123210000110113211110011132033222113023210100132101331232100001101132111101000321332221130232101001321103312321000011011321111010013213322211302321010013211133123210000110113210000010003210001001013210321332221130232101001321000331232100001101132100000100032100010111032132133222113023210100132100133123210000110113211111000033222113023210100132101033123210000110113211111010132110033222113023210100132101133123210000110113211110100132133222113023210100132110033123210000110113210000001103322100001101132111000003333221000001003210001011113123211100110321000101110332233",
    "parse": [
      "class",
      "COS_JavaTest",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "q",
        [
          -1,
          [
            "int"
          ],
          "new"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "q",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "add-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "iadd"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "self",
          "add-I-I-I"
        ]
      ],
      [
        "method",
        "sub-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "isub"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "sub",
        [
          -1,
          "self",
          "sub-I-I-I"
        ]
      ],
      [
        "method",
        "mult-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "imul"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "mult",
        [
          -1,
          "self",
          "mult-I-I-I"
        ]
      ],
      [
        "method",
        "addmult-I-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1",
            "arg2"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ],
                      [
                        "pair",
                        "3",
                        [
                          -2,
                          "arg2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "mult-I-I-I",
                        "2",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-I-I-I",
                        "2",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "addmult",
        [
          -1,
          "self",
          "addmult-I-I-I-I"
        ]
      ],
      [
        "method",
        "set-I-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "q",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "self",
          "set-I-V"
        ]
      ],
      [
        "method",
        "get-I",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "q",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "self",
          "get-I"
        ]
      ],
      [
        "method",
        "fact-I-I",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifle",
                        "11"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "sub-I-I-I",
                        "2",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "fact-I-I",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "imul"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "12"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "fact",
        [
          -1,
          "self",
          "fact-I-I"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14C;&#xF164;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF167;&#xF248;&#xF246;&#xF147;&#xF156;&#xF245;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14C;&#xF167;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF168;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF177;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF173;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF168;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF169;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF178;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF16A;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF169;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF16B;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF174;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF16C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF16B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF16D;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF24A;&#xF14C;&#xF16E;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF249;&#xF14C;&#xF16E;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14C;&#xF16B;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14C;&#xF168;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF16F;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF170;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14C;&#xF167;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF170;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF171;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14C;&#xF167;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF171;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF172;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF17B;&#xF24A;&#xF14F;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14C;&#xF169;&#xF24A;&#xF146;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14C;&#xF172;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF174;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF179;&#xF24A;&#xF150;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14A;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF173;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14C;&#xF172;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1810
  },
  {
    "role": "file",
    "lines": [
      "== COS_JavaValidate =="
    ],
    "stanza": 1811
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "check that automatic conversion is workable",
    "section_category": "JAVA",
    "section_index": 57,
    "stanza": 1812
  },
  {
    "role": "code",
    "lines": [
      "define test1 | COS_JavaTest new;"
    ],
    "preprocessed": "define test1 | COS_JavaTest new;",
    "code": "21101321000110000312321000100000321111001032233",
    "parse": [
      "define",
      "test1",
      [
        -1,
        "COS_JavaTest",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF174;&#xF248;&#xF14C;&#xF164;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1813
  },
  {
    "role": "comment",
    "lines": [
      "# Note that the names of methods include type information.",
      "# This could easily be removed, but is retained so that overloading",
      "# is possible in the Java code.",
      "# I is integer, V is void.  The last type in the name is the return type."
    ],
    "stanza": 1814
  },
  {
    "role": "code",
    "lines": [
      "= (test1 mult-I-I-I 15 10) 150;"
    ],
    "preprocessed": "= (test1 mult-I-I-I 15 10) 150;",
    "code": "21132210001100003210001001113211113210103321001011032233",
    "parse": [
      "=",
      [
        "test1",
        "mult-I-I-I",
        "15",
        "10"
      ],
      "150"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF16B;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF245;&#xF146;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1815
  },
  {
    "role": "comment",
    "lines": [
      "# The type information can be safely omitted if there is no ambiguity"
    ],
    "stanza": 1816
  },
  {
    "role": "code",
    "lines": [
      "= (test1 mult 15 10) 150;"
    ],
    "preprocessed": "= (test1 mult 15 10) 150;",
    "code": "21132210001100003210001010003211113210103321001011032233",
    "parse": [
      "=",
      [
        "test1",
        "mult",
        "15",
        "10"
      ],
      "150"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF16C;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF245;&#xF146;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1817
  },
  {
    "role": "code",
    "lines": [
      "= (test1 addmult-I-I-I-I 4 15 10) 154;"
    ],
    "preprocessed": "= (test1 addmult-I-I-I-I 4 15 10) 154;",
    "code": "2113221000110000321000101001321003211113210103321001101032233",
    "parse": [
      "=",
      [
        "test1",
        "addmult-I-I-I-I",
        "4",
        "15",
        "10"
      ],
      "154"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF16D;&#xF24A;&#xF148;&#xF24A;&#xF153;&#xF24A;&#xF14E;&#xF245;&#xF146;&#xF15E;&#xF24B;",
    "dt": false,
    "stanza": 1818
  },
  {
    "role": "code",
    "lines": [
      "begin",
      "  (test1 set-I-V 87)",
      "  (= (test1 get-I) 87);"
    ],
    "preprocessed": "begin\n  (test1 set-I-V 87)\n  (= (test1 get-I) 87);",
    "code": "210101100322100011000032100010110032101011133221132210001100003210001011013321010111332233",
    "parse": [
      "begin",
      [
        "test1",
        "set-I-V",
        "87"
      ],
      [
        "=",
        [
          "test1",
          "get-I"
        ],
        "87"
      ]
    ],
    "spider": "&#xF146;&#xF170;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF170;&#xF24A;&#xF145;&#xF15B;&#xF245;&#xF246;&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF171;&#xF245;&#xF145;&#xF15B;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1819
  },
  {
    "role": "code",
    "lines": [
      "= (test1 fact-I-I 0) 1;"
    ],
    "preprocessed": "= (test1 fact-I-I 0) 1;",
    "code": "2113221000110000321000101110320332132233",
    "parse": [
      "=",
      [
        "test1",
        "fact-I-I",
        "0"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF172;&#xF24A;&#xF144;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1820
  },
  {
    "role": "code",
    "lines": [
      "= (test1 fact-I-I 1) 1;"
    ],
    "preprocessed": "= (test1 fact-I-I 1) 1;",
    "code": "2113221000110000321000101110321332132233",
    "parse": [
      "=",
      [
        "test1",
        "fact-I-I",
        "1"
      ],
      "1"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF172;&#xF24A;&#xF145;&#xF245;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1821
  },
  {
    "role": "code",
    "lines": [
      "= (test1 fact-I-I 5) 120;"
    ],
    "preprocessed": "= (test1 fact-I-I 5) 120;",
    "code": "211322100011000032100010111032101332111100032233",
    "parse": [
      "=",
      [
        "test1",
        "fact-I-I",
        "5"
      ],
      "120"
    ],
    "spider": "&#xF147;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14C;&#xF172;&#xF24A;&#xF149;&#xF245;&#xF145;&#xF17C;&#xF24B;",
    "dt": false,
    "stanza": 1822
  },
  {
    "role": "comment",
    "lines": [
      "# Yay! testing says this works.",
      "# So structure for bytecode interpretation is in place.",
      "# Very few opcodes actually implemented yet though."
    ],
    "stanza": 1823
  },
  {
    "role": "file",
    "lines": [
      "== COS_Geo =="
    ],
    "stanza": 1824
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "another simple little text-adventure space",
    "section_category": "MUD",
    "section_index": 58,
    "stanza": 1825
  },
  {
    "role": "comment",
    "lines": [
      "# let us try to make a slightly more interesting world"
    ],
    "stanza": 1826
  },
  {
    "role": "code",
    "lines": [
      "define make-table | ? lst |",
      "   reduce",
      "     (? x | ? h |",
      "        assign name (car $x) |",
      "    assign obj (cdr $x) |",
      "    hash-add $h $name $obj)",
      "     (append $hash-null $lst);"
    ],
    "preprocessed": "define make-table | ? lst |\n   reduce\n     (? x | ? h |\n        assign name (car $x) |\n    assign obj (cdr $x) |\n    hash-add $h $name $obj)\n     (append $hash-null $lst);",
    "code": "21101321000110001312321100321100100312321011100322110032101001312321100321011111103123211103210000001032210110302321010013312321110321110000132210111302321010013312321010111130232101111110302321000000103023211100001332211000113023210110010302321100100332233",
    "parse": [
      "define",
      "make-table",
      [
        -1,
        "?",
        "lst",
        [
          -1,
          "reduce",
          [
            "?",
            "x",
            [
              -1,
              "?",
              "h",
              [
                -1,
                "assign",
                "name",
                [
                  "car",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  -1,
                  "assign",
                  "obj",
                  [
                    "cdr",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -1,
                    "hash-add",
                    [
                      -2,
                      "h"
                    ],
                    [
                      -2,
                      "name"
                    ],
                    [
                      -2,
                      "obj"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "append",
            [
              -2,
              "hash-null"
            ],
            [
              -2,
              "lst"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF175;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF168;&#xF248;&#xF145;&#xF160;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF150;&#xF24A;&#xF149;&#xF182;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF146;&#xF246;&#xF15A;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF147;&#xF165;&#xF246;&#xF15B;&#xF249;&#xF16D;&#xF245;&#xF248;&#xF146;&#xF173;&#xF249;&#xF149;&#xF182;&#xF249;&#xF148;&#xF146;&#xF249;&#xF147;&#xF165;&#xF245;&#xF246;&#xF145;&#xF167;&#xF249;&#xF146;&#xF176;&#xF249;&#xF145;&#xF168;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1827
  },
  {
    "role": "comment",
    "lines": [
      "# note, the quoted strings below are just represented as a big number,",
      "# nothing special"
    ],
    "stanza": 1828
  },
  {
    "role": "code",
    "lines": [
      "define geo-map | make-table | map",
      "   (? name | cons $name | room new $name)",
      "   (vector \"boston\" \"dublin\" \"paris\" \"genoa\");"
    ],
    "preprocessed": "define geo-map | make-table | map\n   (? name | cons $name | room new $name)\n   (vector \"boston\" \"dublin\" \"paris\" \"genoa\");",
    "code": "2110132100011001031232100011000131232101101032211003210000001031232101013023210000001031232100011100321111001030232100000010332210000321100010011011110111001101110100011011110110111032110010001110101011000100110110001101001011011103211100000110000101110010011010010111001132110011101100101011011100110111101100001332233",
    "parse": [
      "define",
      "geo-map",
      [
        -1,
        "make-table",
        [
          -1,
          "map",
          [
            "?",
            "name",
            [
              -1,
              "cons",
              [
                -2,
                "name"
              ],
              [
                -1,
                "room",
                "new",
                [
                  -2,
                  "name"
                ]
              ]
            ]
          ],
          [
            "vector",
            "\"boston\"",
            "\"dublin\"",
            "\"paris\"",
            "\"genoa\""
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF176;&#xF248;&#xF14C;&#xF175;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF148;&#xF146;&#xF248;&#xF159;&#xF249;&#xF148;&#xF146;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF148;&#xF146;&#xF245;&#xF246;&#xF154;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1829
  },
  {
    "role": "code",
    "lines": [
      "define my-links | map",
      "   (? entry |",
      "     assign src (car $entry) |",
      "     assign dest (cdr $entry) |",
      "     door new (geo-map $src) (geo-map $dest))",
      "   (vector",
      "    (cons \"boston\" \"dublin\")",
      "    (cons \"dublin\" \"paris\")",
      "    (cons \"boston\" \"paris\")",
      "    (cons \"paris\" \"genoa\"));"
    ],
    "preprocessed": "define my-links | map\n   (? entry |\n     assign src (car $entry) |\n     assign dest (cdr $entry) |\n     door new (geo-map $src) (geo-map $dest))\n   (vector\n    (cons \"boston\" \"dublin\")\n    (cons \"dublin\" \"paris\")\n    (cons \"boston\" \"paris\")\n    (cons \"paris\" \"genoa\"));",
    "code
    "parse": [
      "define",
      "my-links",
      [
        -1,
        "map",
        [
          "?",
          "entry",
          [
            -1,
            "assign",
            "src",
            [
              "car",
              [
                -2,
                "entry"
              ]
            ],
            [
              -1,
              "assign",
              "dest",
              [
                "cdr",
                [
                  -2,
                  "entry"
                ]
              ],
              [
                -1,
                "door",
                "new",
                [
                  "geo-map",
                  [
                    -2,
                    "src"
                  ]
                ],
                [
                  "geo-map",
                  [
                    -2,
                    "dest"
                  ]
                ]
              ]
            ]
          ]
        ],
        [
          "vector",
          [
            "cons",
            "\"boston\"",
            "\"dublin\""
          ],
          [
            "cons",
            "\"dublin\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"boston\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"paris\"",
            "\"genoa\""
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF177;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF14C;&#xF178;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF15F;&#xF246;&#xF15A;&#xF249;&#xF14C;&#xF178;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF161;&#xF246;&#xF15B;&#xF249;&#xF14C;&#xF178;&#xF245;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF14C;&#xF176;&#xF249;&#xF148;&#xF15F;&#xF245;&#xF246;&#xF14C;&#xF176;&#xF249;&#xF148;&#xF161;&#xF245;&#xF245;&#xF246;&#xF154;&#xF246;&#xF159;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1830
  },
  {
    "role": "code",
    "lines": [
      "define myrobo | robo new;"
    ],
    "preprocessed": "define myrobo | robo new;",
    "code": "211013210100000131232100111000321111001032233",
    "parse": [
      "define",
      "myrobo",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF149;&#xF145;&#xF248;&#xF148;&#xF17C;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1831
  },
  {
    "role": "code",
    "lines": [
      "myrobo set-room | geo-map \"dublin\";"
    ],
    "preprocessed": "myrobo set-room | geo-map \"dublin\";",
    "code": "210100000132100101101312321000110010321100100011101010110001001101100011010010110111032233",
    "parse": [
      "myrobo",
      "set-room",
      [
        -1,
        "geo-map",
        "\"dublin\""
      ]
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF171;&#xF248;&#xF14C;&#xF176;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF24B;",
    "dt": false,
    "stanza": 1832
  },
  {
    "role": "code",
    "lines": [
      "equal \"dublin\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"dublin\" | myrobo get-room name;",
    "code": "21000321100100011101010110001001101100011010010110111031232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"dublin\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1833
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "preprocessed": "myrobo update;",
    "code": "21010000013210011001032233",
    "parse": [
      "myrobo",
      "update"
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1834
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"paris\" | myrobo get-room name;",
    "code": "210003211100000110000101110010011010010111001131232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1835
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "preprocessed": "myrobo update;",
    "code": "21010000013210011001032233",
    "parse": [
      "myrobo",
      "update"
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1836
  },
  {
    "role": "code",
    "lines": [
      "equal \"genoa\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"genoa\" | myrobo get-room name;",
    "code": "210003211001110110010101101110011011110110000131232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"genoa\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1837
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "preprocessed": "myrobo update;",
    "code": "21010000013210011001032233",
    "parse": [
      "myrobo",
      "update"
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1838
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"paris\" | myrobo get-room name;",
    "code": "210003211100000110000101110010011010010111001131232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1839
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "preprocessed": "myrobo update;",
    "code": "21010000013210011001032233",
    "parse": [
      "myrobo",
      "update"
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1840
  },
  {
    "role": "code",
    "lines": [
      "equal \"boston\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"boston\" | myrobo get-room name;",
    "code": "21000321100010011011110111001101110100011011110110111031232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"boston\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1841
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "preprocessed": "myrobo update;",
    "code": "21010000013210011001032233",
    "parse": [
      "myrobo",
      "update"
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1842
  },
  {
    "role": "code",
    "lines": [
      "equal \"dublin\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"dublin\" | myrobo get-room name;",
    "code": "21000321100100011101010110001001101100011010010110111031232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"dublin\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1843
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "preprocessed": "myrobo update;",
    "code": "21010000013210011001032233",
    "parse": [
      "myrobo",
      "update"
    ],
    "spider": "&#xF149;&#xF145;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1844
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | myrobo get-room name;"
    ],
    "preprocessed": "equal \"paris\" | myrobo get-room name;",
    "code": "210003211100000110000101110010011010010111001131232101000001321001011113210000001032233",
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF248;&#xF149;&#xF145;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1845
  },
  {
    "role": "comment",
    "lines": [
      "# all characters should update together"
    ],
    "stanza": 1846
  },
  {
    "role": "code",
    "lines": [
      "class world (the-places the-links)",
      "   (field things | container new)",
      "   (field names | cell new $hash-null)",
      "   (field places | cell new 0)",
      "   (field links | cell new 0)",
      "   (method new | begin",
      "     (places set | make-table | map",
      "        (? name | cons $name | room new $name)",
      "    $the-places)",
      "     (links set | map",
      "        (? entry |",
      "          assign src (car $entry) |",
      "          assign dest (cdr $entry) |",
      "          door new (places get $src) (places get $dest))",
      "        $the-links))",
      "   (method add | lambda (place name val) | begin",
      "     (val set-room | places get $place)",
      "     (val set-name $name)",
      "     (names set | hash-add (names get) $name $val)",
      "     (things add $val))",
      "   (method find | ? n  | names get $n get-room name)",
      "   (method reachable | ? place |",
      "     assign exits (select-match (instanceof door) | places get $place inventory) |",
      "     map (? door | door access-from (places get $place) name) $exits)",
      "   (method update | begin ",
      "     (map (? x | x update) | things inventory)",
      "     $true);"
    ],
    "preprocessed": "class world (the-places the-links)\n   (field things | container new)\n   (field names | cell new $hash-null)\n   (field places | cell new 0)\n   (field links | cell new 0)\n   (method new | begin\n     (places set | make-table | map\n        (? name | cons $name | room new $name)\n    $the-places)\n     (links set | map\n        (? entry |\n          assign src (car $entry) |\n          assign dest (cdr $entry) |\n          door new (places get $src) (places get $dest))\n        $the-links))\n   (method add | lambda (place name val) | begin\n     (val set-room | places get $place)\n     (val set-name $name)\n     (names set | hash-add (names get) $name $val)\n     (things add $val))\n   (method find | ? n  | names get $n get-room name)\n   (method reachable | ? place |\n     assign exits (select-match (instanceof door) | places get $place inventory) |\n     map (? door | door access-from (places get $place) name) $exits)\n   (method update | begin \n     (map (? x | x update) | things inventory)\n     $true);",
    "code
    "parse": [
      "class",
      "world",
      [
        "the-places",
        "the-links"
      ],
      [
        "field",
        "things",
        [
          -1,
          "container",
          "new"
        ]
      ],
      [
        "field",
        "names",
        [
          -1,
          "cell",
          "new",
          [
            -2,
            "hash-null"
          ]
        ]
      ],
      [
        "field",
        "places",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "links",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "begin",
          [
            "places",
            "set",
            [
              -1,
              "make-table",
              [
                -1,
                "map",
                [
                  "?",
                  "name",
                  [
                    -1,
                    "cons",
                    [
                      -2,
                      "name"
                    ],
                    [
                      -1,
                      "room",
                      "new",
                      [
                        -2,
                        "name"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "the-places"
                ]
              ]
            ]
          ],
          [
            "links",
            "set",
            [
              -1,
              "map",
              [
                "?",
                "entry",
                [
                  -1,
                  "assign",
                  "src",
                  [
                    "car",
                    [
                      -2,
                      "entry"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "dest",
                    [
                      "cdr",
                      [
                        -2,
                        "entry"
                      ]
                    ],
                    [
                      -1,
                      "door",
                      "new",
                      [
                        "places",
                        "get",
                        [
                          -2,
                          "src"
                        ]
                      ],
                      [
                        "places",
                        "get",
                        [
                          -2,
                          "dest"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                -2,
                "the-links"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "lambda",
          [
            "place",
            "name",
            "val"
          ],
          [
            -1,
            "begin",
            [
              "val",
              "set-room",
              [
                -1,
                "places",
                "get",
                [
                  -2,
                  "place"
                ]
              ]
            ],
            [
              "val",
              "set-name",
              [
                -2,
                "name"
              ]
            ],
            [
              "names",
              "set",
              [
                -1,
                "hash-add",
                [
                  "names",
                  "get"
                ],
                [
                  -2,
                  "name"
                ],
                [
                  -2,
                  "val"
                ]
              ]
            ],
            [
              "things",
              "add",
              [
                -2,
                "val"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "find",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "names",
            "get",
            [
              -2,
              "n"
            ],
            "get-room",
            "name"
          ]
        ]
      ],
      [
        "method",
        "reachable",
        [
          -1,
          "?",
          "place",
          [
            -1,
            "assign",
            "exits",
            [
              "select-match",
              [
                "instanceof",
                "door"
              ],
              [
                -1,
                "places",
                "get",
                [
                  -2,
                  "place"
                ],
                "inventory"
              ]
            ],
            [
              -1,
              "map",
              [
                "?",
                "door",
                [
                  -1,
                  "door",
                  "access-from",
                  [
                    "places",
                    "get",
                    [
                      -2,
                      "place"
                    ]
                  ],
                  "name"
                ]
              ],
              [
                -2,
                "exits"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "begin",
          [
            "map",
            [
              "?",
              "x",
              [
                -1,
                "x",
                "update"
              ]
            ],
            [
              -1,
              "things",
              "inventory"
            ]
          ],
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14C;&#xF179;&#xF246;&#xF14C;&#xF17A;&#xF24A;&#xF14C;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF17C;&#xF248;&#xF147;&#xF170;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF17D;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF146;&#xF176;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF17E;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF17F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14C;&#xF17E;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF14C;&#xF175;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF148;&#xF146;&#xF248;&#xF159;&#xF249;&#xF148;&#xF146;&#xF248;&#xF148;&#xF160;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF148;&#xF146;&#xF245;&#xF249;&#xF14C;&#xF17A;&#xF245;&#xF246;&#xF14C;&#xF17F;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF14C;&#xF178;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF15F;&#xF246;&#xF15A;&#xF249;&#xF14C;&#xF178;&#xF245;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF161;&#xF246;&#xF15B;&#xF249;&#xF14C;&#xF178;&#xF245;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF14C;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF148;&#xF15F;&#xF245;&#xF246;&#xF14C;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF148;&#xF161;&#xF245;&#xF245;&#xF249;&#xF14C;&#xF17B;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF173;&#xF248;&#xF15E;&#xF246;&#xF14C;&#xF180;&#xF24A;&#xF148;&#xF146;&#xF24A;&#xF14B;&#xF16F;&#xF245;&#xF248;&#xF146;&#xF170;&#xF246;&#xF14B;&#xF16F;&#xF24A;&#xF148;&#xF171;&#xF248;&#xF14C;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF14C;&#xF180;&#xF245;&#xF246;&#xF14B;&#xF16F;&#xF24A;&#xF148;&#xF174;&#xF249;&#xF148;&#xF146;&#xF245;&#xF246;&#xF14C;&#xF17D;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF146;&#xF173;&#xF246;&#xF14C;&#xF17D;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF249;&#xF148;&#xF146;&#xF249;&#xF14B;&#xF16F;&#xF245;&#xF246;&#xF14C;&#xF17C;&#xF24A;&#xF147;&#xF173;&#xF249;&#xF14B;&#xF16F;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF181;&#xF248;&#xF150;&#xF24A;&#xF145;&#xF152;&#xF248;&#xF14C;&#xF17D;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF145;&#xF152;&#xF24A;&#xF148;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14C;&#xF182;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF180;&#xF248;&#xF152;&#xF24A;&#xF148;&#xF17F;&#xF246;&#xF145;&#xF169;&#xF246;&#xF147;&#xF161;&#xF24A;&#xF148;&#xF15E;&#xF245;&#xF248;&#xF14C;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF14C;&#xF180;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF248;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF148;&#xF15E;&#xF248;&#xF148;&#xF15E;&#xF24A;&#xF148;&#xF162;&#xF246;&#xF14C;&#xF17E;&#xF24A;&#xF148;&#xF157;&#xF249;&#xF14C;&#xF180;&#xF245;&#xF148;&#xF146;&#xF245;&#xF249;&#xF148;&#xF17F;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF176;&#xF248;&#xF146;&#xF170;&#xF246;&#xF145;&#xF15E;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF16D;&#xF24A;&#xF148;&#xF176;&#xF245;&#xF248;&#xF14C;&#xF17C;&#xF24A;&#xF147;&#xF172;&#xF245;&#xF249;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1847
  },
  {
    "role": "code",
    "lines": [
      "define geo-world | world new",
      "   (vector \"boston\" \"dublin\" \"paris\" \"genoa\")",
      "     (vector",
      "       (cons \"boston\" \"dublin\")",
      "       (cons \"dublin\" \"paris\")",
      "       (cons \"boston\" \"paris\")",
      "       (cons \"paris\" \"genoa\"));"
    ],
    "preprocessed": "define geo-world | world new\n   (vector \"boston\" \"dublin\" \"paris\" \"genoa\")\n     (vector\n       (cons \"boston\" \"dublin\")\n       (cons \"dublin\" \"paris\")\n       (cons \"boston\" \"paris\")\n       (cons \"paris\" \"genoa\"));",
    "code
    "parse": [
      "define",
      "geo-world",
      [
        -1,
        "world",
        "new",
        [
          "vector",
          "\"boston\"",
          "\"dublin\"",
          "\"paris\"",
          "\"genoa\""
        ],
        [
          "vector",
          [
            "cons",
            "\"boston\"",
            "\"dublin\""
          ],
          [
            "cons",
            "\"dublin\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"boston\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"paris\"",
            "\"genoa\""
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF183;&#xF248;&#xF14C;&#xF179;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF154;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF245;&#xF246;&#xF154;&#xF246;&#xF159;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF245;&#xF246;&#xF159;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1848
  },
  {
    "role": "code",
    "lines": [
      "geo-world add \"dublin\" \"robo1\" | robo new;"
    ],
    "preprocessed": "geo-world add \"dublin\" \"robo1\" | robo new;",
    "code": "21000111111321110111132110010001110101011000100110110001101001011011103211100100110111101100010011011110011000131232100111000321111001032233",
    "parse": [
      "geo-world",
      "add",
      "\"dublin\"",
      "\"robo1\"",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "spider": "&#xF14C;&#xF183;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF24A;&#xF14B;&#xF14D;&#xF173;&#xF15C;&#xF16A;&#xF180;&#xF175;&#xF248;&#xF148;&#xF17C;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1849
  },
  {
    "role": "code",
    "lines": [
      "geo-world add \"genoa\" \"robo2\" | robo new;"
    ],
    "preprocessed": "geo-world add \"genoa\" \"robo2\" | robo new;",
    "code": "210001111113211101111321100111011001010110111001101111011000013211100100110111101100010011011110011001031232100111000321111001032233",
    "parse": [
      "geo-world",
      "add",
      "\"genoa\"",
      "\"robo2\"",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "spider": "&#xF14C;&#xF183;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF24A;&#xF14B;&#xF14D;&#xF173;&#xF15C;&#xF16A;&#xF180;&#xF176;&#xF248;&#xF148;&#xF17C;&#xF24A;&#xF147;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1850
  },
  {
    "role": "code",
    "lines": [
      "equal \"dublin\" | geo-world find \"robo1\";"
    ],
    "preprocessed": "equal \"dublin\" | geo-world find \"robo1\";",
    "code": "2100032110010001110101011000100110110001101001011011103123210001111113210001111013211100100110111101100010011011110011000132233",
    "parse": [
      "equal",
      "\"dublin\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo1\""
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF248;&#xF14C;&#xF183;&#xF24A;&#xF14C;&#xF181;&#xF24A;&#xF14B;&#xF14D;&#xF173;&#xF15C;&#xF16A;&#xF180;&#xF175;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | geo-world find \"robo1\";"
    ],
    "stanza": 1851
  },
  {
    "role": "code",
    "lines": [
      "equal \"genoa\" | geo-world find \"robo2\";"
    ],
    "preprocessed": "equal \"genoa\" | geo-world find \"robo2\";",
    "code": "21000321100111011001010110111001101111011000013123210001111113210001111013211100100110111101100010011011110011001032233",
    "parse": [
      "equal",
      "\"genoa\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo2\""
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF248;&#xF14C;&#xF183;&#xF24A;&#xF14C;&#xF181;&#xF24A;&#xF14B;&#xF14D;&#xF173;&#xF15C;&#xF16A;&#xF180;&#xF176;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | geo-world find \"robo2\";"
    ],
    "stanza": 1852
  },
  {
    "role": "code",
    "lines": [
      "geo-world update;"
    ],
    "preprocessed": "geo-world update;",
    "code": "210001111113210011001032233",
    "parse": [
      "geo-world",
      "update"
    ],
    "spider": "&#xF14C;&#xF183;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": false,
    "stanza": 1853
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | geo-world find \"robo1\";"
    ],
    "preprocessed": "equal \"paris\" | geo-world find \"robo1\";",
    "code": "21000321110000011000010111001001101001011100113123210001111113210001111013211100100110111101100010011011110011000132233",
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo1\""
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF248;&#xF14C;&#xF183;&#xF24A;&#xF14C;&#xF181;&#xF24A;&#xF14B;&#xF14D;&#xF173;&#xF15C;&#xF16A;&#xF180;&#xF175;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | geo-world find \"robo1\";"
    ],
    "stanza": 1854
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | geo-world find \"robo2\";"
    ],
    "preprocessed": "equal \"paris\" | geo-world find \"robo2\";",
    "code": "21000321110000011000010111001001101001011100113123210001111113210001111013211100100110111101100010011011110011001032233",
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo2\""
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF248;&#xF14C;&#xF183;&#xF24A;&#xF14C;&#xF181;&#xF24A;&#xF14B;&#xF14D;&#xF173;&#xF15C;&#xF16A;&#xF180;&#xF176;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | geo-world find \"robo2\";"
    ],
    "stanza": 1855
  },
  {
    "role": "code",
    "lines": [
      "equal (vector \"paris\" \"dublin\") | geo-world reachable \"boston\";"
    ],
    "preprocessed": "equal (vector \"paris\" \"dublin\") | geo-world reachable \"boston\";",
    "code": "21000322100003211100000110000101110010011010010111001132110010001110101011000100110110001101001011011103312321000111111321000111110321100010011011110111001101110100011011110110111032233",
    "parse": [
      "equal",
      [
        "vector",
        "\"paris\"",
        "\"dublin\""
      ],
      [
        -1,
        "geo-world",
        "reachable",
        "\"boston\""
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF24A;&#xF15D;&#xF14B;&#xF159;&#xF166;&#xF15F;&#xF14A;&#xF169;&#xF172;&#xF245;&#xF248;&#xF14C;&#xF183;&#xF24A;&#xF14C;&#xF182;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | geo-world reachable \"boston\";"
    ],
    "stanza": 1856
  },
  {
    "role": "code",
    "lines": [
      "equal (vector \"paris\") | geo-world reachable \"genoa\";"
    ],
    "preprocessed": "equal (vector \"paris\") | geo-world reachable \"genoa\";",
    "code": "21000322100003211100000110000101110010011010010111001133123210001111113210001111103211001110110010101101110011011110110000132233",
    "parse": [
      "equal",
      [
        "vector",
        "\"paris\""
      ],
      [
        -1,
        "geo-world",
        "reachable",
        "\"genoa\""
      ]
    ],
    "spider": "&#xF14C;&#xF246;&#xF154;&#xF24A;&#xF14B;&#xF145;&#xF165;&#xF160;&#xF16A;&#xF169;&#xF177;&#xF245;&#xF248;&#xF14C;&#xF183;&#xF24A;&#xF14C;&#xF182;&#xF24A;&#xF14A;&#xF161;&#xF169;&#xF15F;&#xF16A;&#xF181;&#xF165;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | geo-world reachable \"genoa\";"
    ],
    "stanza": 1857
  },
  {
    "role": "file",
    "lines": [
      "== COS_JList_impl =="
    ],
    "stanza": 1858
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "native implementation of a Java list, hash classes",
    "section_category": "JAVA",
    "section_index": 59,
    "stanza": 1859
  },
  {
    "role": "code",
    "lines": [
      "define flex-equals",
      "  (lambda (x y) ",
      "    (if (number? | x)",
      "    (if (number? | y)",
      "        (= (x) (y))",
      "        (false))",
      "    (if (number? | y)",
      "        (false)",
      "        (x equals (y)))));"
    ],
    "preprocessed": "define flex-equals\n  (lambda (x y) \n    (if (number? | x)\n    (if (number? | y)\n        (= (x) (y))\n        (false))\n    (if (number? | y)\n        (false)\n        (x equals (y)))));",
    "code": "21101321001000000322110103221010013211110133221111322110003123210100133221111322110003123211110133221132210100133221111013332203332211113221100031232111101332203322101001321101110103221111013333332233",
    "parse": [
      "define",
      "flex-equals",
      [
        "lambda",
        [
          "x",
          "y"
        ],
        [
          "if",
          [
            "number?",
            [
              -1,
              "x"
            ]
          ],
          [
            "if",
            [
              "number?",
              [
                -1,
                "y"
              ]
            ],
            [
              "=",
              [
                "x"
              ],
              [
                "y"
              ]
            ],
            [
              "false"
            ]
          ],
          [
            "if",
            [
              "number?",
              [
                -1,
                "y"
              ]
            ],
            [
              "false"
            ],
            [
              "x",
              "equals",
              [
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14D;&#xF144;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF246;&#xF153;&#xF246;&#xF15C;&#xF248;&#xF16D;&#xF245;&#xF246;&#xF153;&#xF246;&#xF15C;&#xF248;&#xF181;&#xF245;&#xF246;&#xF147;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF181;&#xF245;&#xF245;&#xF246;&#xF144;&#xF245;&#xF245;&#xF246;&#xF153;&#xF246;&#xF15C;&#xF248;&#xF181;&#xF245;&#xF246;&#xF144;&#xF245;&#xF246;&#xF16D;&#xF24A;&#xF14A;&#xF17E;&#xF246;&#xF181;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1860
  },
  {
    "role": "code",
    "lines": [
      "define remove-object",
      "  (lambda (x) ",
      "    (remove-match (lambda (y) ",
      "            (flex-equals (x) (y)))));"
    ],
    "preprocessed": "define remove-object\n  (lambda (x) \n    (remove-match (lambda (y) \n            (flex-equals (x) (y)))));",
    "code": "2110132100100000132211010322101001332211011011322110103221111013322100100000032210100133221111013333332233",
    "parse": [
      "define",
      "remove-object",
      [
        "lambda",
        [
          "x"
        ],
        [
          "remove-match",
          [
            "lambda",
            [
              "y"
            ],
            [
              "flex-equals",
              [
                "x"
              ],
              [
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14D;&#xF145;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF15F;&#xF246;&#xF15E;&#xF246;&#xF181;&#xF245;&#xF246;&#xF14D;&#xF144;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF181;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1861
  },
  {
    "role": "code",
    "lines": [
      "define contains-object",
      "  (lambda (x lst)",
      "    (if (> (list-length | lst) 0)",
      "    (if (flex-equals (head | lst) (x))",
      "        (true)",
      "        (contains-object (x) (tail | lst)))",
      "    (false)));"
    ],
    "preprocessed": "define contains-object\n  (lambda (x lst)\n    (if (> (list-length | lst) 0)\n    (if (flex-equals (head | lst) (x))\n        (true)\n        (contains-object (x) (tail | lst)))\n    (false)));",
    "code": "21101321001000010322110103221010013211001003322111132210032210100113123211001003320332211113221001000000322101000031232110010033221010013332213322100100001032210100133221010010312321100100333322033332233",
    "parse": [
      "define",
      "contains-object",
      [
        "lambda",
        [
          "x",
          "lst"
        ],
        [
          "if",
          [
            ">",
            [
              "list-length",
              [
                -1,
                "lst"
              ]
            ],
            "0"
          ],
          [
            "if",
            [
              "flex-equals",
              [
                "head",
                [
                  -1,
                  "lst"
                ]
              ],
              [
                "x"
              ]
            ],
            [
              "true"
            ],
            [
              "contains-object",
              [
                "x"
              ],
              [
                "tail",
                [
                  -1,
                  "lst"
                ]
              ]
            ]
          ],
          [
            "false"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14D;&#xF146;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF145;&#xF168;&#xF245;&#xF246;&#xF153;&#xF246;&#xF148;&#xF246;&#xF145;&#xF157;&#xF248;&#xF145;&#xF168;&#xF245;&#xF144;&#xF245;&#xF246;&#xF153;&#xF246;&#xF14D;&#xF144;&#xF246;&#xF145;&#xF154;&#xF248;&#xF145;&#xF168;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF246;&#xF145;&#xF245;&#xF246;&#xF14D;&#xF146;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF156;&#xF248;&#xF145;&#xF168;&#xF245;&#xF245;&#xF245;&#xF246;&#xF144;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1862
  },
  {
    "role": "code",
    "lines": [
      "class COS_JList ()",
      "       (field super ((java lang Object) new))",
      "       (method unknown (lambda (x) (super (x))))",
      "       (field contents (cell new (vector)))",
      "       (method <init>-V (self))",
      "       (method <init> (self <init>-V))",
      "       (method add-Object-V (lambda (x)",
      "             (contents set (prepend (x) (contents get)))))",
      "       (method add (self add-Object-V))",
      "       (method remove-Object-Z (lambda (x)",
      "            (contents set ",
      "                  (remove-object (x) (contents get)))))",
      "       (method remove (self remove-Object-Z))",
      "       (method contains-Object-Z (lambda (x)",
      "                   (contains-object (x) (contents get))))",
      "       (method contains (self contains-Object-Z))",
      "       (method get-I-Object (lambda (x)",
      "             (list-ref (contents get) (x))))",
      "       (method get (self get-I-Object))",
      "       (method iterator-Iterator (COS_JListIterator new (self)))",
      "       (method iterator (self iterator-Iterator))",
      "       (method size-V-I (list-length (contents get)))",
      "       (method size (self size-V-I));"
    ],
    "preprocessed": "class COS_JList ()\n       (field super ((java lang Object) new))\n       (method unknown (lambda (x) (super (x))))\n       (field contents (cell new (vector)))\n       (method <init>-V (self))\n       (method <init> (self <init>-V))\n       (method add-Object-V (lambda (x)\n             (contents set (prepend (x) (contents get)))))\n       (method add (self add-Object-V))\n       (method remove-Object-Z (lambda (x)\n            (contents set \n                  (remove-object (x) (contents get)))))\n       (method remove (self remove-Object-Z))\n       (method contains-Object-Z (lambda (x)\n                   (contains-object (x) (contents get))))\n       (method contains (self contains-Object-Z))\n       (method get-I-Object (lambda (x)\n             (list-ref (contents get) (x))))\n       (method get (self get-I-Object))\n       (method iterator-Iterator (COS_JListIterator new (self)))\n       (method iterator (self iterator-Iterator))\n       (method size-V-I (list-length (contents get)))\n       (method size (self size-V-I));",
    "code
    "parse": [
      "class",
      "COS_JList",
      [],
      [
        "field",
        "super",
        [
          [
            "java",
            "lang",
            "Object"
          ],
          "new"
        ]
      ],
      [
        "method",
        "unknown",
        [
          "lambda",
          [
            "x"
          ],
          [
            "super",
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "contents",
        [
          "cell",
          "new",
          [
            "vector"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "add-Object-V",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contents",
            "set",
            [
              "prepend",
              [
                "x"
              ],
              [
                "contents",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          "self",
          "add-Object-V"
        ]
      ],
      [
        "method",
        "remove-Object-Z",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contents",
            "set",
            [
              "remove-object",
              [
                "x"
              ],
              [
                "contents",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "remove",
        [
          "self",
          "remove-Object-Z"
        ]
      ],
      [
        "method",
        "contains-Object-Z",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contains-object",
            [
              "x"
            ],
            [
              "contents",
              "get"
            ]
          ]
        ]
      ],
      [
        "method",
        "contains",
        [
          "self",
          "contains-Object-Z"
        ]
      ],
      [
        "method",
        "get-I-Object",
        [
          "lambda",
          [
            "x"
          ],
          [
            "list-ref",
            [
              "contents",
              "get"
            ],
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          "self",
          "get-I-Object"
        ]
      ],
      [
        "method",
        "iterator-Iterator",
        [
          "COS_JListIterator",
          "new",
          [
            "self"
          ]
        ]
      ],
      [
        "method",
        "iterator",
        [
          "self",
          "iterator-Iterator"
        ]
      ],
      [
        "method",
        "size-V-I",
        [
          "list-length",
          [
            "contents",
            "get"
          ]
        ]
      ],
      [
        "method",
        "size",
        [
          "self",
          "size-V-I"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF147;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF179;&#xF246;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF147;&#xF176;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF179;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF171;&#xF246;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF154;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF148;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF158;&#xF246;&#xF145;&#xF15A;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF173;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF148;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF149;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF158;&#xF246;&#xF14D;&#xF145;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF174;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF149;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF14A;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF14D;&#xF146;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF14B;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF14A;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF14C;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF145;&#xF158;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF14C;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF14D;&#xF246;&#xF14D;&#xF14E;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF14F;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF14D;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF150;&#xF246;&#xF145;&#xF157;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF151;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF150;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1863
  },
  {
    "role": "code",
    "lines": [
      "define test1 (COS_JList new);"
    ],
    "preprocessed": "define test1 (COS_JList new);",
    "code": "2110132100011000032210010000113211110010332233",
    "parse": [
      "define",
      "test1",
      [
        "COS_JList",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF174;&#xF246;&#xF14D;&#xF147;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1864
  },
  {
    "role": "code",
    "lines": [
      "begin (test1 add-Object-V (test1))",
      "       (= 1 | test1 size-V-I);"
    ],
    "preprocessed": "begin (test1 add-Object-V (test1))\n       (= 1 | test1 size-V-I);",
    "code": "210101100322100011000032100100010032210001100003332211321312321000110000321001001100332233",
    "parse": [
      "begin",
      [
        "test1",
        "add-Object-V",
        [
          "test1"
        ]
      ],
      [
        "=",
        "1",
        [
          -1,
          "test1",
          "size-V-I"
        ]
      ]
    ],
    "spider": "&#xF146;&#xF170;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF148;&#xF246;&#xF14C;&#xF174;&#xF245;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF150;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1865
  },
  {
    "role": "code",
    "lines": [
      "test1 == (test1 get-I-Object 0);"
    ],
    "preprocessed": "test1 == (test1 get-I-Object 0);",
    "code": "21000110000321000010003221000110000321001001000320332233",
    "parse": [
      "test1",
      "==",
      [
        "test1",
        "get-I-Object",
        "0"
      ]
    ],
    "spider": "&#xF14C;&#xF174;&#xF24A;&#xF148;&#xF14C;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF14C;&#xF24A;&#xF144;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1866
  },
  {
    "role": "code",
    "lines": [
      "class COS_JHashMap ()",
      "       (field super ((java lang Object) new))",
      "       (method unknown (lambda (x) (super (x))))",
      "       (field contents (cell new (? x 0)))",
      "       (method <init>-V (self))",
      "       (method <init> (self <init>-V))",
      "       (method put-Object-Object-V (lambda (x y)",
      "                     (let ((prev | contents get))",
      "                       (contents set ",
      "                         (? z ",
      "                            (if (flex-equals (z) (x))",
      "                            (y)",
      "                            (prev (z))))))))",
      "       (method put (self put-Object-Object-V))",
      "       (method get-Object-Object (lambda (x)",
      "                   (contents get (x))))",
      "       (method get (self get-Object-Object));"
    ],
    "preprocessed": "class COS_JHashMap ()\n       (field super ((java lang Object) new))\n       (method unknown (lambda (x) (super (x))))\n       (field contents (cell new (? x 0)))\n       (method <init>-V (self))\n       (method <init> (self <init>-V))\n       (method put-Object-Object-V (lambda (x y)\n                     (let ((prev | contents get))\n                       (contents set \n                         (? z \n                            (if (flex-equals (z) (x))\n                            (y)\n                            (prev (z))))))))\n       (method put (self put-Object-Object-V))\n       (method get-Object-Object (lambda (x)\n                   (contents get (x))))\n       (method get (self get-Object-Object));",
    "code
    "parse": [
      "class",
      "COS_JHashMap",
      [],
      [
        "field",
        "super",
        [
          [
            "java",
            "lang",
            "Object"
          ],
          "new"
        ]
      ],
      [
        "method",
        "unknown",
        [
          "lambda",
          [
            "x"
          ],
          [
            "super",
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "contents",
        [
          "cell",
          "new",
          [
            "?",
            "x",
            "0"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "put-Object-Object-V",
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            "let",
            [
              [
                "prev",
                [
                  -1,
                  "contents",
                  "get"
                ]
              ]
            ],
            [
              "contents",
              "set",
              [
                "?",
                "z",
                [
                  "if",
                  [
                    "flex-equals",
                    [
                      "z"
                    ],
                    [
                      "x"
                    ]
                  ],
                  [
                    "y"
                  ],
                  [
                    "prev",
                    [
                      "z"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "put",
        [
          "self",
          "put-Object-Object-V"
        ]
      ],
      [
        "method",
        "get-Object-Object",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contents",
            "get",
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          "self",
          "get-Object-Object"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF152;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF179;&#xF246;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF147;&#xF176;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF179;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF171;&#xF246;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF153;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF146;&#xF172;&#xF248;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF158;&#xF246;&#xF150;&#xF24A;&#xF182;&#xF246;&#xF153;&#xF246;&#xF14D;&#xF144;&#xF246;&#xF182;&#xF245;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF246;&#xF181;&#xF245;&#xF246;&#xF146;&#xF172;&#xF246;&#xF182;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF154;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF153;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF155;&#xF246;&#xF15E;&#xF246;&#xF16D;&#xF245;&#xF246;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF246;&#xF16D;&#xF245;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF155;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1867
  },
  {
    "role": "code",
    "lines": [
      "define test2 (COS_JHashMap new);"
    ],
    "preprocessed": "define test2 (COS_JHashMap new);",
    "code": "2110132100101001032210010011103211110010332233",
    "parse": [
      "define",
      "test2",
      [
        "COS_JHashMap",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14D;&#xF156;&#xF246;&#xF14D;&#xF152;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1868
  },
  {
    "role": "code",
    "lines": [
      "begin (test2 put-Object-Object-V 5 10)",
      "       (= 10 | test2 get 5);"
    ],
    "preprocessed": "begin (test2 put-Object-Object-V 5 10)\n       (= 10 | test2 get 5);",
    "code": "2101011003221001010010321001001111321013210103322113210103123210010100103210001001132101332233",
    "parse": [
      "begin",
      [
        "test2",
        "put-Object-Object-V",
        "5",
        "10"
      ],
      [
        "=",
        "10",
        [
          -1,
          "test2",
          "get",
          "5"
        ]
      ]
    ],
    "spider": "&#xF146;&#xF170;&#xF246;&#xF14D;&#xF156;&#xF24A;&#xF14D;&#xF153;&#xF24A;&#xF149;&#xF24A;&#xF14E;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF14E;&#xF248;&#xF14D;&#xF156;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF149;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1869
  },
  {
    "role": "file",
    "lines": [
      "== COS_JList =="
    ],
    "stanza": 1870
  },
  {
    "role": "comment",
    "lines": [
      "# There is Java code for COS_JList available"
    ],
    "stanza": 1871
  },
  {
    "role": "file",
    "lines": [
      "== COS_JHashMap =="
    ],
    "stanza": 1872
  },
  {
    "role": "comment",
    "lines": [
      "# There is Java code for COS_JHashMap available"
    ],
    "stanza": 1873
  },
  {
    "role": "file",
    "lines": [
      "== COS_JList_test =="
    ],
    "stanza": 1874
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "testing the JList class",
    "section_category": "JAVA",
    "section_index": 60,
    "stanza": 1875
  },
  {
    "role": "code",
    "lines": [
      "define test1 (COS_JList new);"
    ],
    "preprocessed": "define test1 (COS_JList new);",
    "code": "2110132100011000032210010000113211110010332233",
    "parse": [
      "define",
      "test1",
      [
        "COS_JList",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF174;&#xF246;&#xF14D;&#xF147;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1876
  },
  {
    "role": "code",
    "lines": [
      "begin (test1 add-Object-V (test1))",
      "       (= 1 (test1 size-V-I));"
    ],
    "preprocessed": "begin (test1 add-Object-V (test1))\n       (= 1 (test1 size-V-I));",
    "code": "21010110032210001100003210010001003221000110000333221132132210001100003210010011003332233",
    "parse": [
      "begin",
      [
        "test1",
        "add-Object-V",
        [
          "test1"
        ]
      ],
      [
        "=",
        "1",
        [
          "test1",
          "size-V-I"
        ]
      ]
    ],
    "spider": "&#xF146;&#xF170;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF148;&#xF246;&#xF14C;&#xF174;&#xF245;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF150;&#xF245;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1877
  },
  {
    "role": "code",
    "lines": [
      "(test1 get-I-Object 0) == (test1);"
    ],
    "preprocessed": "(test1 get-I-Object 0) == (test1);",
    "code": "2210001100003210010010003203321000010003221000110000332233",
    "parse": [
      [
        "test1",
        "get-I-Object",
        "0"
      ],
      "==",
      [
        "test1"
      ]
    ],
    "spider": "&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF14C;&#xF24A;&#xF144;&#xF245;&#xF148;&#xF14C;&#xF246;&#xF14C;&#xF174;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1878
  },
  {
    "role": "file",
    "lines": [
      "== COS_JListIterator_impl =="
    ],
    "stanza": 1879
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "basic iterator implementation",
    "section_category": "JAVA",
    "section_index": 61,
    "stanza": 1880
  },
  {
    "role": "code",
    "lines": [
      "class COS_JListIterator (ref)",
      "       (field pipe (cell new (ref contents get)))",
      "       (method <init>-V (self))",
      "       (method <init> (self <init>-V))",
      "       (method hasNext-Z (> (list-length | pipe get) 0))",
      "       (method hasNext (self hasNext-Z))",
      "       (method next (self next-Object))",
      "       (method next-Object ",
      "           (let ((result (head | pipe get)))",
      "         (begin ",
      "           (pipe set | tail | pipe get)",
      "           (result))));"
    ],
    "preprocessed": "class COS_JListIterator (ref)\n       (field pipe (cell new (ref contents get)))\n       (method <init>-V (self))\n       (method <init> (self <init>-V))\n       (method hasNext-Z (> (list-length | pipe get) 0))\n       (method hasNext (self hasNext-Z))\n       (method next (self next-Object))\n       (method next-Object \n           (let ((result (head | pipe get)))\n         (begin \n           (pipe set | tail | pipe get)\n           (result))));",
    "code": "21000011103210010010103221001010011332210000110032100101010032210001000032111100103221001010011321110110132100010011333322100000100321101101113221110011033322100000100321101110003221110011032110110111333221000001003210010101013221003221010011312321001010100321000100113320333221000001003210010101103221110011032100101010133322100000100321100011132211100110321001010111333221000001003210010101113221000001032221000001010322101000031232100101010032100010011333322101011003221001010100321000101003123210100103123210010101003210001001133221000001010333332233",
    "parse": [
      "class",
      "COS_JListIterator",
      [
        "ref"
      ],
      [
        "field",
        "pipe",
        [
          "cell",
          "new",
          [
            "ref",
            "contents",
            "get"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "hasNext-Z",
        [
          ">",
          [
            "list-length",
            [
              -1,
              "pipe",
              "get"
            ]
          ],
          "0"
        ]
      ],
      [
        "method",
        "hasNext",
        [
          "self",
          "hasNext-Z"
        ]
      ],
      [
        "method",
        "next",
        [
          "self",
          "next-Object"
        ]
      ],
      [
        "method",
        "next-Object",
        [
          "let",
          [
            [
              "result",
              [
                "head",
                [
                  -1,
                  "pipe",
                  "get"
                ]
              ]
            ]
          ],
          [
            "begin",
            [
              "pipe",
              "set",
              [
                -1,
                "tail",
                [
                  -1,
                  "pipe",
                  "get"
                ]
              ]
            ],
            [
              "result"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF14E;&#xF246;&#xF14D;&#xF157;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14D;&#xF158;&#xF246;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF14D;&#xF157;&#xF24A;&#xF147;&#xF171;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF159;&#xF246;&#xF148;&#xF246;&#xF145;&#xF157;&#xF248;&#xF14D;&#xF158;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF144;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF15A;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF159;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF14B;&#xF246;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF15B;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF15B;&#xF246;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14C;&#xF14E;&#xF246;&#xF145;&#xF154;&#xF248;&#xF14D;&#xF158;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF245;&#xF245;&#xF246;&#xF146;&#xF170;&#xF246;&#xF14D;&#xF158;&#xF24A;&#xF148;&#xF158;&#xF248;&#xF145;&#xF156;&#xF248;&#xF14D;&#xF158;&#xF24A;&#xF148;&#xF157;&#xF245;&#xF246;&#xF14C;&#xF14E;&#xF245;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1881
  },
  {
    "role": "code",
    "lines": [
      "define test1 (COS_JList new);"
    ],
    "preprocessed": "define test1 (COS_JList new);",
    "code": "2110132100011000032210010000113211110010332233",
    "parse": [
      "define",
      "test1",
      [
        "COS_JList",
        "new"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14C;&#xF174;&#xF246;&#xF14D;&#xF147;&#xF24A;&#xF147;&#xF176;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1882
  },
  {
    "role": "code",
    "lines": [
      "begin",
      "  (test1 add 15)",
      "  (test1 add 72)",
      "  (test1 add 99)",
      "  (true);"
    ],
    "preprocessed": "begin\n  (test1 add 15)\n  (test1 add 72)\n  (test1 add 99)\n  (true);",
    "code": "2101011003221000110000321110111132111133221000110000321110111132100100033221000110000321110111132110001133221332233",
    "parse": [
      "begin",
      [
        "test1",
        "add",
        "15"
      ],
      [
        "test1",
        "add",
        "72"
      ],
      [
        "test1",
        "add",
        "99"
      ],
      [
        "true"
      ]
    ],
    "spider": "&#xF146;&#xF170;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF153;&#xF245;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF14C;&#xF245;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF147;&#xF173;&#xF24A;&#xF145;&#xF167;&#xF245;&#xF246;&#xF145;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1883
  },
  {
    "role": "code",
    "lines": [
      "define iter1 (test1 iterator);"
    ],
    "preprocessed": "define iter1 (test1 iterator);",
    "code": "211013210010110003221000110000321001001011332233",
    "parse": [
      "define",
      "iter1",
      [
        "test1",
        "iterator"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14D;&#xF15C;&#xF246;&#xF14C;&#xF174;&#xF24A;&#xF14D;&#xF14F;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1884
  },
  {
    "role": "code",
    "lines": [
      "iter1 hasNext;"
    ],
    "preprocessed": "iter1 hasNext;",
    "code": "2100101100032100101011032233",
    "parse": [
      "iter1",
      "hasNext"
    ],
    "spider": "&#xF14D;&#xF15C;&#xF24A;&#xF14D;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1885
  },
  {
    "role": "code",
    "lines": [
      "equal 99 | iter1 next;"
    ],
    "preprocessed": "equal 99 | iter1 next;",
    "code": "21000321100011312321001011000321100011132233",
    "parse": [
      "equal",
      "99",
      [
        -1,
        "iter1",
        "next"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF145;&#xF167;&#xF248;&#xF14D;&#xF15C;&#xF24A;&#xF147;&#xF14B;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | iter1 next;"
    ],
    "stanza": 1886
  },
  {
    "role": "code",
    "lines": [
      "iter1 hasNext;"
    ],
    "preprocessed": "iter1 hasNext;",
    "code": "2100101100032100101011032233",
    "parse": [
      "iter1",
      "hasNext"
    ],
    "spider": "&#xF14D;&#xF15C;&#xF24A;&#xF14D;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1887
  },
  {
    "role": "code",
    "lines": [
      "equal 72 | iter1 next;"
    ],
    "preprocessed": "equal 72 | iter1 next;",
    "code": "21000321001000312321001011000321100011132233",
    "parse": [
      "equal",
      "72",
      [
        -1,
        "iter1",
        "next"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF145;&#xF14C;&#xF248;&#xF14D;&#xF15C;&#xF24A;&#xF147;&#xF14B;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | iter1 next;"
    ],
    "stanza": 1888
  },
  {
    "role": "code",
    "lines": [
      "iter1 hasNext;"
    ],
    "preprocessed": "iter1 hasNext;",
    "code": "2100101100032100101011032233",
    "parse": [
      "iter1",
      "hasNext"
    ],
    "spider": "&#xF14D;&#xF15C;&#xF24A;&#xF14D;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1889
  },
  {
    "role": "code",
    "lines": [
      "equal 15 | iter1 next;"
    ],
    "preprocessed": "equal 15 | iter1 next;",
    "code": "21000321111312321001011000321100011132233",
    "parse": [
      "equal",
      "15",
      [
        -1,
        "iter1",
        "next"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF153;&#xF248;&#xF14D;&#xF15C;&#xF24A;&#xF147;&#xF14B;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | iter1 next;"
    ],
    "stanza": 1890
  },
  {
    "role": "code",
    "lines": [
      "not | iter1 hasNext;"
    ],
    "preprocessed": "not | iter1 hasNext;",
    "code": "210131232100101100032100101011032233",
    "parse": [
      "not",
      [
        -1,
        "iter1",
        "hasNext"
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14D;&#xF15C;&#xF24A;&#xF14D;&#xF15A;&#xF24B;",
    "dt": false,
    "stanza": 1891
  },
  {
    "role": "file",
    "lines": [
      "== COS_JListIterator =="
    ],
    "stanza": 1892
  },
  {
    "role": "comment",
    "lines": [
      "# There is Java code for COS_JListIterator available"
    ],
    "stanza": 1893
  },
  {
    "role": "file",
    "lines": [
      "== COS_JDoor =="
    ],
    "stanza": 1894
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# public class COS_JDoor {",
      "#     private COS_JRoom src, dest;",
      "#     private String src_cmd, dest_cmd;",
      "# ",
      "#     public COS_JDoor(COS_JRoom src, String src_cmd,",
      "#              COS_JRoom dest, String dest_cmd) {",
      "#     this.src = src;",
      "#     this.dest = dest;",
      "#     this.src_cmd = src_cmd;",
      "#     this.dest_cmd = dest_cmd;",
      "#     src.addDoor(this);",
      "#     dest.addDoor(this);",
      "#     }",
      "# ",
      "#     public COS_JRoom apply(COS_JRoom src, String cmd) {",
      "#     if (src == this.src) {",
      "#         if (src_cmd.equals(cmd)) {",
      "#         return this.dest;",
      "#         }",
      "#     }",
      "#     if (src == this.dest) {",
      "#         if (dest_cmd.equals(cmd)) {",
      "#         return this.src;",
      "#         }",
      "#     }",
      "#     return null;",
      "#     }",
      "# ",
      "#     public COS_JRoom apply(COS_JRoom src) {",
      "#     if (src==this.src) {",
      "#         return this.dest;",
      "#     }",
      "#     if (src==this.dest) {",
      "#         return this.src;",
      "#     }",
      "#     return null;",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JDoor'",
    "section_category": "JAVA",
    "section_index": 62,
    "stanza": 1895
  },
  {
    "role": "code",
    "lines": [
      "class COS_JDoor ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field src | cell new 0)",
      "   (field dest | cell new 0)",
      "   (field src_cmd | cell new 0)",
      "   (field dest_cmd | cell new 0)",
      "   (method <init>-COS_JRoom-String-COS_JRoom-String-V",
      "     (lambda (arg0 arg1 arg2 arg3) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1) (pair 3 $arg2) (pair 4 $arg3))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm aload 1)",
      "         ((= $x 4) | jvm putfield src $COS_JRoom)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm aload 3)",
      "         ((= $x 7) | jvm putfield dest $COS_JRoom)",
      "         ((= $x 8) | jvm aload 0)",
      "         ((= $x 9) | jvm aload 2)",
      "         ((= $x 10) | jvm putfield src_cmd (java lang String))",
      "         ((= $x 11) | jvm aload 0)",
      "         ((= $x 12) | jvm aload 4)",
      "         ((= $x 13) | jvm putfield dest_cmd (java lang String))",
      "         ((= $x 14) | jvm aload 1)",
      "         ((= $x 15) | jvm aload 0)",
      "         ((= $x 16) | jvm invokevirtual addDoor-COS_JDoor-V 1 0)",
      "         ((= $x 17) | jvm aload 3)",
      "         ((= $x 18) | jvm aload 0)",
      "         ((= $x 19) | jvm invokevirtual addDoor-COS_JDoor-V 1 0)",
      "         ((= $x 20) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-COS_JRoom-String-COS_JRoom-String-V)",
      "",
      "   (method apply-COS_JRoom-String-COS_JRoom",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 1)",
      "         ((= $x 1) | jvm aload 0)",
      "         ((= $x 2) | jvm getfield src $COS_JRoom)",
      "         ((= $x 3) | jvm if_acmpne 12)",
      "         ((= $x 4) | jvm aload 0)",
      "         ((= $x 5) | jvm getfield src_cmd (java lang String))",
      "         ((= $x 6) | jvm aload 2)",
      "         ((= $x 7) | jvm invokevirtual equals-Object-Z 1 1)",
      "         ((= $x 8) | jvm ifeq 12)",
      "         ((= $x 9) | jvm aload 0)",
      "         ((= $x 10) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 11) | jvm areturn)",
      "         ((= $x 12) | jvm aload 1)",
      "         ((= $x 13) | jvm aload 0)",
      "         ((= $x 14) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 15) | jvm if_acmpne 24)",
      "         ((= $x 16) | jvm aload 0)",
      "         ((= $x 17) | jvm getfield dest_cmd (java lang String))",
      "         ((= $x 18) | jvm aload 2)",
      "         ((= $x 19) | jvm invokevirtual equals-Object-Z 1 1)",
      "         ((= $x 20) | jvm ifeq 24)",
      "         ((= $x 21) | jvm aload 0)",
      "         ((= $x 22) | jvm getfield src $COS_JRoom)",
      "         ((= $x 23) | jvm areturn)",
      "         ((= $x 24) | jvm aconst_null)",
      "         ((= $x 25) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method apply | self apply-COS_JRoom-String-COS_JRoom)",
      "",
      "   (method apply-COS_JRoom-COS_JRoom",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 1)",
      "         ((= $x 1) | jvm aload 0)",
      "         ((= $x 2) | jvm getfield src $COS_JRoom)",
      "         ((= $x 3) | jvm if_acmpne 7)",
      "         ((= $x 4) | jvm aload 0)",
      "         ((= $x 5) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 6) | jvm areturn)",
      "         ((= $x 7) | jvm aload 1)",
      "         ((= $x 8) | jvm aload 0)",
      "         ((= $x 9) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 10) | jvm if_acmpne 14)",
      "         ((= $x 11) | jvm aload 0)",
      "         ((= $x 12) | jvm getfield src $COS_JRoom)",
      "         ((= $x 13) | jvm areturn)",
      "         ((= $x 14) | jvm aconst_null)",
      "         ((= $x 15) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JDoor ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (java lang Object) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field src | cell new 0)\n   (field dest | cell new 0)\n   (field src_cmd | cell new 0)\n   (field dest_cmd | cell new 0)\n   (method <init>-COS_JRoom-String-COS_JRoom-String-V\n     (lambda (arg0 arg1 arg2 arg3) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1) (pair 3 $arg2) (pair 4 $arg3))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm aload 1)\n         ((= $x 4) | jvm putfield src $COS_JRoom)\n         ((= $x 5) | jvm aload 0)\n         ((= $x 6) | jvm aload 3)\n         ((= $x 7) | jvm putfield dest $COS_JRoom)\n         ((= $x 8) | jvm aload 0)\n         ((= $x 9) | jvm aload 2)\n         ((= $x 10) | jvm putfield src_cmd (java lang String))\n         ((= $x 11) | jvm aload 0)\n         ((= $x 12) | jvm aload 4)\n         ((= $x 13) | jvm putfield dest_cmd (java lang String))\n         ((= $x 14) | jvm aload 1)\n         ((= $x 15) | jvm aload 0)\n         ((= $x 16) | jvm invokevirtual addDoor-COS_JDoor-V 1 0)\n         ((= $x 17) | jvm aload 3)\n         ((= $x 18) | jvm aload 0)\n         ((= $x 19) | jvm invokevirtual addDoor-COS_JDoor-V 1 0)\n         ((= $x 20) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-COS_JRoom-String-COS_JRoom-String-V)\n\n   (method apply-COS_JRoom-String-COS_JRoom\n     (lambda (arg0 arg1) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 1)\n         ((= $x 1) | jvm aload 0)\n         ((= $x 2) | jvm getfield src $COS_JRoom)\n         ((= $x 3) | jvm if_acmpne 12)\n         ((= $x 4) | jvm aload 0)\n         ((= $x 5) | jvm getfield src_cmd (java lang String))\n         ((= $x 6) | jvm aload 2)\n         ((= $x 7) | jvm invokevirtual equals-Object-Z 1 1)\n         ((= $x 8) | jvm ifeq 12)\n         ((= $x 9) | jvm aload 0)\n         ((= $x 10) | jvm getfield dest $COS_JRoom)\n         ((= $x 11) | jvm areturn)\n         ((= $x 12) | jvm aload 1)\n         ((= $x 13) | jvm aload 0)\n         ((= $x 14) | jvm getfield dest $COS_JRoom)\n         ((= $x 15) | jvm if_acmpne 24)\n         ((= $x 16) | jvm aload 0)\n         ((= $x 17) | jvm getfield dest_cmd (java lang String))\n         ((= $x 18) | jvm aload 2)\n         ((= $x 19) | jvm invokevirtual equals-Object-Z 1 1)\n         ((= $x 20) | jvm ifeq 24)\n         ((= $x 21) | jvm aload 0)\n         ((= $x 22) | jvm getfield src $COS_JRoom)\n         ((= $x 23) | jvm areturn)\n         ((= $x 24) | jvm aconst_null)\n         ((= $x 25) | jvm areturn)\n         (jvm return))\n   )\n\n   (method apply | self apply-COS_JRoom-String-COS_JRoom)\n\n   (method apply-COS_JRoom-COS_JRoom\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 1)\n         ((= $x 1) | jvm aload 0)\n         ((= $x 2) | jvm getfield src $COS_JRoom)\n         ((= $x 3) | jvm if_acmpne 7)\n         ((= $x 4) | jvm aload 0)\n         ((= $x 5) | jvm getfield dest $COS_JRoom)\n         ((= $x 6) | jvm areturn)\n         ((= $x 7) | jvm aload 1)\n         ((= $x 8) | jvm aload 0)\n         ((= $x 9) | jvm getfield dest $COS_JRoom)\n         ((= $x 10) | jvm if_acmpne 14)\n         ((= $x 11) | jvm aload 0)\n         ((= $x 12) | jvm getfield src $COS_JRoom)\n         ((= $x 13) | jvm areturn)\n         ((= $x 14) | jvm aconst_null)\n         ((= $x 15) | jvm areturn)\n         (jvm return))\n   )\n\n ;",
    "code
    "parse": [
      "class",
      "COS_JDoor",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "src",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "dest",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "src_cmd",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "dest_cmd",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-COS_JRoom-String-COS_JRoom-String-V",
        [
          "lambda",
          [
            "arg0",
            "arg1",
            "arg2",
            "arg3"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ],
                      [
                        "pair",
                        "3",
                        [
                          -2,
                          "arg2"
                        ]
                      ],
                      [
                        "pair",
                        "4",
                        [
                          -2,
                          "arg3"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "src_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "dest_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "addDoor-COS_JDoor-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "addDoor-COS_JDoor-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-COS_JRoom-String-COS_JRoom-String-V"
        ]
      ],
      [
        "method",
        "apply-COS_JRoom-String-COS_JRoom",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "12"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "equals-Object-Z",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "12"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "24"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "equals-Object-Z",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "24"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "21"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "22"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "23"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "24"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "25"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "apply",
        [
          -1,
          "self",
          "apply-COS_JRoom-String-COS_JRoom"
        ]
      ],
      [
        "method",
        "apply-COS_JRoom-COS_JRoom",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "14"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF15D;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF161;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14D;&#xF15E;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14D;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF160;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF24A;&#xF14C;&#xF16E;&#xF24A;&#xF14D;&#xF161;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF147;&#xF249;&#xF14C;&#xF16E;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF148;&#xF249;&#xF14D;&#xF161;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF15F;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF161;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14D;&#xF15E;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14D;&#xF15F;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF152;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF153;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF154;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF163;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF156;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF157;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF163;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF158;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF160;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF164;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF15F;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF182;&#xF24A;&#xF150;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14D;&#xF15E;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14A;&#xF17D;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF17F;&#xF24A;&#xF150;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF161;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF152;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF161;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF153;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF182;&#xF24A;&#xF15C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF154;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14D;&#xF15F;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF156;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF157;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14A;&#xF17D;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF158;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF17F;&#xF24A;&#xF15C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF159;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF15F;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF170;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF165;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF164;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF166;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF15F;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF182;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF161;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF161;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF182;&#xF24A;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF15F;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF152;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF170;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF153;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1896
  },
  {
    "role": "file",
    "lines": [
      "== COS_JThing =="
    ],
    "stanza": 1897
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# public class COS_JThing extends COS_JNamed {",
      "#     private COS_JRoom location;",
      "#     private COS_JRoom nextLocation;",
      "# ",
      "#     public void setRoom(COS_JRoom location) {",
      "#     if (this.location!=null) {",
      "#         this.location.removeThing(this);",
      "#     }",
      "#     this.location = location;",
      "#     location.addThing(this);",
      "#     this.nextLocation = location;",
      "#     }",
      "#     ",
      "#     public COS_JRoom getRoom() {",
      "#     return location;",
      "#     }",
      "# ",
      "#     public void setNextRoom(COS_JRoom location) {",
      "#     nextLocation = location;",
      "#     }",
      "# ",
      "#     public void postUpdate() {",
      "#     if (nextLocation!=location) {",
      "#         setRoom(nextLocation);",
      "#     }",
      "#     }",
      "# }",
      "# "
    ],
    "section_description": "class translation 'COS_JThing'",
    "section_category": "JAVA",
    "section_index": 63,
    "stanza": 1898
  },
  {
    "role": "code",
    "lines": [
      "class COS_JThing ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (COS_JNamed) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field location | cell new 0)",
      "   (field nextLocation | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method setRoom-COS_JRoom-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield location $COS_JRoom)",
      "         ((= $x 2) | jvm ifnull 7)",
      "         ((= $x 3) | jvm aload 0)",
      "         ((= $x 4) | jvm getfield location $COS_JRoom)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm invokevirtual removeThing-COS_JThing-V 1 0)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm aload 1)",
      "         ((= $x 9) | jvm putfield location $COS_JRoom)",
      "         ((= $x 10) | jvm aload 1)",
      "         ((= $x 11) | jvm aload 0)",
      "         ((= $x 12) | jvm invokevirtual addThing-COS_JThing-V 1 0)",
      "         ((= $x 13) | jvm aload 0)",
      "         ((= $x 14) | jvm aload 1)",
      "         ((= $x 15) | jvm putfield nextLocation $COS_JRoom)",
      "         ((= $x 16) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setRoom | self setRoom-COS_JRoom-V)",
      "",
      "   (method getRoom-COS_JRoom",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield location $COS_JRoom)",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getRoom | self getRoom-COS_JRoom)",
      "",
      "   (method setNextRoom-COS_JRoom-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm aload 1)",
      "         ((= $x 2) | jvm putfield nextLocation $COS_JRoom)",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setNextRoom | self setNextRoom-COS_JRoom-V)",
      "",
      "   (method postUpdate-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield nextLocation $COS_JRoom)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm getfield location $COS_JRoom)",
      "         ((= $x 4) | jvm if_acmpeq 9)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm aload 0)",
      "         ((= $x 7) | jvm getfield nextLocation $COS_JRoom)",
      "         ((= $x 8) | jvm invokevirtual setRoom-COS_JRoom-V 1 0)",
      "         ((= $x 9) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method postUpdate | self postUpdate-V)",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JThing ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (COS_JNamed) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field location | cell new 0)\n   (field nextLocation | cell new 0)\n   (method <init>-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-V)\n\n   (method setRoom-COS_JRoom-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield location $COS_JRoom)\n         ((= $x 2) | jvm ifnull 7)\n         ((= $x 3) | jvm aload 0)\n         ((= $x 4) | jvm getfield location $COS_JRoom)\n         ((= $x 5) | jvm aload 0)\n         ((= $x 6) | jvm invokevirtual removeThing-COS_JThing-V 1 0)\n         ((= $x 7) | jvm aload 0)\n         ((= $x 8) | jvm aload 1)\n         ((= $x 9) | jvm putfield location $COS_JRoom)\n         ((= $x 10) | jvm aload 1)\n         ((= $x 11) | jvm aload 0)\n         ((= $x 12) | jvm invokevirtual addThing-COS_JThing-V 1 0)\n         ((= $x 13) | jvm aload 0)\n         ((= $x 14) | jvm aload 1)\n         ((= $x 15) | jvm putfield nextLocation $COS_JRoom)\n         ((= $x 16) | jvm return)\n         (jvm return))\n   )\n\n   (method setRoom | self setRoom-COS_JRoom-V)\n\n   (method getRoom-COS_JRoom\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield location $COS_JRoom)\n         ((= $x 2) | jvm areturn)\n         (jvm return))\n   )\n\n   (method getRoom | self getRoom-COS_JRoom)\n\n   (method setNextRoom-COS_JRoom-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm aload 1)\n         ((= $x 2) | jvm putfield nextLocation $COS_JRoom)\n         ((= $x 3) | jvm return)\n         (jvm return))\n   )\n\n   (method setNextRoom | self setNextRoom-COS_JRoom-V)\n\n   (method postUpdate-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield nextLocation $COS_JRoom)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm getfield location $COS_JRoom)\n         ((= $x 4) | jvm if_acmpeq 9)\n         ((= $x 5) | jvm aload 0)\n         ((= $x 6) | jvm aload 0)\n         ((= $x 7) | jvm getfield nextLocation $COS_JRoom)\n         ((= $x 8) | jvm invokevirtual setRoom-COS_JRoom-V 1 0)\n         ((= $x 9) | jvm return)\n         (jvm return))\n   )\n\n   (method postUpdate | self postUpdate-V)\n\n ;",
    "code
    "parse": [
      "class",
      "COS_JThing",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "COS_JNamed"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "location",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "nextLocation",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "setRoom-COS_JRoom-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "removeThing-COS_JThing-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "addThing-COS_JThing-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setRoom",
        [
          -1,
          "self",
          "setRoom-COS_JRoom-V"
        ]
      ],
      [
        "method",
        "getRoom-COS_JRoom",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getRoom",
        [
          -1,
          "self",
          "getRoom-COS_JRoom"
        ]
      ],
      [
        "method",
        "setNextRoom-COS_JRoom-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setNextRoom",
        [
          -1,
          "self",
          "setNextRoom-COS_JRoom-V"
        ]
      ],
      [
        "method",
        "postUpdate-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpeq",
                        "9"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "setRoom-COS_JRoom-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "postUpdate",
        [
          -1,
          "self",
          "postUpdate-V"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF167;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14D;&#xF168;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF170;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14D;&#xF169;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF16A;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF170;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF148;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF170;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF16B;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF170;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF16C;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF152;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF153;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14D;&#xF169;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF154;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF16A;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF16E;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF170;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF16F;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF16E;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF170;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14D;&#xF169;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF171;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF170;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF172;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14D;&#xF169;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF170;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF183;&#xF24A;&#xF14D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14D;&#xF169;&#xF249;&#xF14D;&#xF162;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF16A;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF173;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF172;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1899
  },
  {
    "role": "file",
    "lines": [
      "== COS_JRoom =="
    ],
    "stanza": 1900
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# import java.util.Iterator;",
      "# ",
      "# public class COS_JRoom extends COS_JNamed {",
      "#     //private COS_JList content = new COS_JList();",
      "#     //private COS_JList doors = new COS_JList();",
      "# ",
      "#     private COS_JList content;",
      "#     private COS_JList doors;",
      "# ",
      "#     public COS_JRoom() {",
      "#     content = new COS_JList();",
      "#     doors = new COS_JList();",
      "#     }",
      "# ",
      "#     public COS_JList get() {",
      "#     return content;",
      "#     }",
      "# ",
      "#     public Iterator getDoors() {",
      "#     return doors.iterator();",
      "#     }",
      "# ",
      "#     public void addDoor(COS_JDoor door) {",
      "#     //System.out.println(\"add door -> \" + getName());",
      "#     doors.add(door);",
      "#     }",
      "# ",
      "#     public void addThing(COS_JThing thing) {",
      "#     content.add(thing);",
      "#     }",
      "# ",
      "#     public void removeThing(COS_JThing thing) {",
      "#     content.remove(thing);",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JRoom'",
    "section_category": "JAVA",
    "section_index": 64,
    "stanza": 1901
  },
  {
    "role": "code",
    "lines": [
      "class COS_JRoom ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (COS_JNamed) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field content | cell new 0)",
      "   (field doors | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm new $COS_JList)",
      "         ((= $x 4) | jvm dup)",
      "         ((= $x 5) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 6) | jvm putfield content $COS_JList)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm new $COS_JList)",
      "         ((= $x 9) | jvm dup)",
      "         ((= $x 10) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 11) | jvm putfield doors $COS_JList)",
      "         ((= $x 12) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method get-COS_JList",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JList)",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method get | self get-COS_JList)",
      "",
      "   (method getDoors-Iterator",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield doors $COS_JList)",
      "         ((= $x 2) | jvm invokevirtual iterator-Iterator 0 1)",
      "         ((= $x 3) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getDoors | self getDoors-Iterator)",
      "",
      "   (method addDoor-COS_JDoor-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield doors $COS_JList)",
      "         ((= $x 2) | jvm aload 1)",
      "         ((= $x 3) | jvm invokevirtual add-Object-V 1 0)",
      "         ((= $x 4) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method addDoor | self addDoor-COS_JDoor-V)",
      "",
      "   (method addThing-COS_JThing-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JList)",
      "         ((= $x 2) | jvm aload 1)",
      "         ((= $x 3) | jvm invokevirtual add-Object-V 1 0)",
      "         ((= $x 4) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method addThing | self addThing-COS_JThing-V)",
      "",
      "   (method removeThing-COS_JThing-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JList)",
      "         ((= $x 2) | jvm aload 1)",
      "         ((= $x 3) | jvm invokevirtual remove-Object-Z 1 1)",
      "         ((= $x 4) | jvm pop)",
      "         ((= $x 5) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method removeThing | self removeThing-COS_JThing-V)",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JRoom ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (COS_JNamed) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field content | cell new 0)\n   (field doors | cell new 0)\n   (method <init>-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm new $COS_JList)\n         ((= $x 4) | jvm dup)\n         ((= $x 5) | jvm invokespecial <init>-V 0 0)\n         ((= $x 6) | jvm putfield content $COS_JList)\n         ((= $x 7) | jvm aload 0)\n         ((= $x 8) | jvm new $COS_JList)\n         ((= $x 9) | jvm dup)\n         ((= $x 10) | jvm invokespecial <init>-V 0 0)\n         ((= $x 11) | jvm putfield doors $COS_JList)\n         ((= $x 12) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-V)\n\n   (method get-COS_JList\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield content $COS_JList)\n         ((= $x 2) | jvm areturn)\n         (jvm return))\n   )\n\n   (method get | self get-COS_JList)\n\n   (method getDoors-Iterator\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield doors $COS_JList)\n         ((= $x 2) | jvm invokevirtual iterator-Iterator 0 1)\n         ((= $x 3) | jvm areturn)\n         (jvm return))\n   )\n\n   (method getDoors | self getDoors-Iterator)\n\n   (method addDoor-COS_JDoor-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield doors $COS_JList)\n         ((= $x 2) | jvm aload 1)\n         ((= $x 3) | jvm invokevirtual add-Object-V 1 0)\n         ((= $x 4) | jvm return)\n         (jvm return))\n   )\n\n   (method addDoor | self addDoor-COS_JDoor-V)\n\n   (method addThing-COS_JThing-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield content $COS_JList)\n         ((= $x 2) | jvm aload 1)\n         ((= $x 3) | jvm invokevirtual add-Object-V 1 0)\n         ((= $x 4) | jvm return)\n         (jvm return))\n   )\n\n   (method addThing | self addThing-COS_JThing-V)\n\n   (method removeThing-COS_JThing-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield content $COS_JList)\n         ((= $x 2) | jvm aload 1)\n         ((= $x 3) | jvm invokevirtual remove-Object-Z 1 1)\n         ((= $x 4) | jvm pop)\n         ((= $x 5) | jvm return)\n         (jvm return))\n   )\n\n   (method removeThing | self removeThing-COS_JThing-V)\n\n ;",
    "code
    "parse": [
      "class",
      "COS_JRoom",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "COS_JNamed"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "content",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "doors",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "doors",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "get-COS_JList",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "self",
          "get-COS_JList"
        ]
      ],
      [
        "method",
        "getDoors-Iterator",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "doors",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "iterator-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getDoors",
        [
          -1,
          "self",
          "getDoors-Iterator"
        ]
      ],
      [
        "method",
        "addDoor-COS_JDoor-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "doors",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-Object-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "addDoor",
        [
          -1,
          "self",
          "addDoor-COS_JDoor-V"
        ]
      ],
      [
        "method",
        "addThing-COS_JThing-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-Object-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "addThing",
        [
          -1,
          "self",
          "addThing-COS_JThing-V"
        ]
      ],
      [
        "method",
        "removeThing-COS_JThing-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "remove-Object-Z",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "pop"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "removeThing",
        [
          -1,
          "self",
          "removeThing-COS_JThing-V"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF162;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14D;&#xF168;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF156;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14D;&#xF174;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14D;&#xF174;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF175;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF175;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF176;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14D;&#xF174;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF177;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF176;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF163;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14D;&#xF174;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF178;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF163;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF16C;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF179;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF16C;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF16B;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF149;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14D;&#xF17A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF17B;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF16B;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1902
  },
  {
    "role": "file",
    "lines": [
      "== COS_JNamed =="
    ],
    "stanza": 1903
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# public class COS_JNamed {",
      "#     private String name = \"-\";",
      "#     private COS_JWorld world = null;",
      "# ",
      "#     void setName(String name) {",
      "#     this.name = name;",
      "#     }",
      "# ",
      "#     String getName() {",
      "#     return name;",
      "#     }",
      "# ",
      "#     void setWorld(COS_JWorld world) {",
      "#     this.world = world;",
      "#     }",
      "# ",
      "#     COS_JWorld getWorld() {",
      "#     return world;",
      "#     }",
      "# ",
      "#     void update() {",
      "#     }",
      "# ",
      "#     void postUpdate() {",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JNamed'",
    "section_category": "JAVA",
    "section_index": 65,
    "stanza": 1904
  },
  {
    "role": "code",
    "lines": [
      "class COS_JNamed ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field name | cell new 0)",
      "   (field world | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm ldc (String new int-init \"-\"))",
      "         ((= $x 4) | jvm putfield name (java lang String))",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm aconst_null)",
      "         ((= $x 7) | jvm putfield world $COS_JWorld)",
      "         ((= $x 8) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method setName-String-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm aload 1)",
      "         ((= $x 2) | jvm putfield name (java lang String))",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setName | self setName-String-V)",
      "",
      "   (method getName-String",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield name (java lang String))",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getName | self getName-String)",
      "",
      "   (method setWorld-COS_JWorld-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm aload 1)",
      "         ((= $x 2) | jvm putfield world $COS_JWorld)",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setWorld | self setWorld-COS_JWorld-V)",
      "",
      "   (method getWorld-COS_JWorld",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield world $COS_JWorld)",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getWorld | self getWorld-COS_JWorld)",
      "",
      "   (method update-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method update | self update-V)",
      "",
      "   (method postUpdate-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method postUpdate | self postUpdate-V)",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JNamed ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (java lang Object) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field name | cell new 0)\n   (field world | cell new 0)\n   (method <init>-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm ldc (String new int-init \"-\"))\n         ((= $x 4) | jvm putfield name (java lang String))\n         ((= $x 5) | jvm aload 0)\n         ((= $x 6) | jvm aconst_null)\n         ((= $x 7) | jvm putfield world $COS_JWorld)\n         ((= $x 8) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-V)\n\n   (method setName-String-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm aload 1)\n         ((= $x 2) | jvm putfield name (java lang String))\n         ((= $x 3) | jvm return)\n         (jvm return))\n   )\n\n   (method setName | self setName-String-V)\n\n   (method getName-String\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield name (java lang String))\n         ((= $x 2) | jvm areturn)\n         (jvm return))\n   )\n\n   (method getName | self getName-String)\n\n   (method setWorld-COS_JWorld-V\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm aload 1)\n         ((= $x 2) | jvm putfield world $COS_JWorld)\n         ((= $x 3) | jvm return)\n         (jvm return))\n   )\n\n   (method setWorld | self setWorld-COS_JWorld-V)\n\n   (method getWorld-COS_JWorld\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield world $COS_JWorld)\n         ((= $x 2) | jvm areturn)\n         (jvm return))\n   )\n\n   (method getWorld | self getWorld-COS_JWorld)\n\n   (method update-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm return)\n         (jvm return))\n   )\n\n   (method update | self update-V)\n\n   (method postUpdate-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm return)\n         (jvm return))\n   )\n\n   (method postUpdate | self postUpdate-V)\n\n ;",
    "code
    "parse": [
      "class",
      "COS_JNamed",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "name",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "world",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ldc",
                        [
                          "String",
                          "new",
                          "int-init",
                          "\"-\""
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "name",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "world",
                        [
                          -2,
                          "COS_JWorld"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "setName-String-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "name",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setName",
        [
          -1,
          "self",
          "setName-String-V"
        ]
      ],
      [
        "method",
        "getName-String",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "name",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getName",
        [
          -1,
          "self",
          "getName-String"
        ]
      ],
      [
        "method",
        "setWorld-COS_JWorld-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "world",
                        [
                          -2,
                          "COS_JWorld"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setWorld",
        [
          -1,
          "self",
          "setWorld-COS_JWorld-V"
        ]
      ],
      [
        "method",
        "getWorld-COS_JWorld",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "world",
                        [
                          -2,
                          "COS_JWorld"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getWorld",
        [
          -1,
          "self",
          "getWorld-COS_JWorld"
        ]
      ],
      [
        "method",
        "update-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "self",
          "update-V"
        ]
      ],
      [
        "method",
        "postUpdate-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "postUpdate",
        [
          -1,
          "self",
          "postUpdate-V"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF168;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF146;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF179;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16E;&#xF246;&#xF14B;&#xF147;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14B;&#xF149;&#xF24A;&#xF171;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF170;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14C;&#xF179;&#xF249;&#xF14D;&#xF17C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF17D;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF146;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF17E;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF17D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF17F;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF146;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF180;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF17F;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF181;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14C;&#xF179;&#xF249;&#xF14D;&#xF17C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF182;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF181;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF183;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14C;&#xF179;&#xF249;&#xF14D;&#xF17C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF144;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF183;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF145;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF176;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14E;&#xF145;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF172;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14D;&#xF173;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14D;&#xF172;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1905
  },
  {
    "role": "file",
    "lines": [
      "== COS_JWorld =="
    ],
    "stanza": 1906
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# import java.util.Iterator;",
      "# ",
      "# public class COS_JWorld {",
      "#     private COS_JHashMap content;",
      "#     private COS_JList inventory;",
      "# ",
      "#     public COS_JWorld() {",
      "#     content = new COS_JHashMap();",
      "#     inventory = new COS_JList();",
      "#     }",
      "# ",
      "#     public void add(COS_JNamed named, String name) {",
      "#     named.setName(name);",
      "#     content.put(named.getName(),named);",
      "#     inventory.add(named);",
      "#     }",
      "# ",
      "#     public COS_JNamed get(String name) {",
      "#     return (COS_JNamed)content.get(new String(name));",
      "#     }",
      "# ",
      "#     public void update() {",
      "#     for (Iterator i = inventory.iterator(); i.hasNext(); ) {",
      "#         COS_JNamed o = (COS_JNamed) i.next();",
      "#         o.update();",
      "#     }",
      "#     for (Iterator i = inventory.iterator(); i.hasNext(); ) {",
      "#         COS_JNamed o = (COS_JNamed) i.next();",
      "#         o.postUpdate();",
      "#     }",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JWorld'",
    "section_category": "JAVA",
    "section_index": 66,
    "stanza": 1907
  },
  {
    "role": "code",
    "lines": [
      "class COS_JWorld ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field content | cell new 0)",
      "   (field inventory | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm new $COS_JHashMap)",
      "         ((= $x 4) | jvm dup)",
      "         ((= $x 5) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 6) | jvm putfield content $COS_JHashMap)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm new $COS_JList)",
      "         ((= $x 9) | jvm dup)",
      "         ((= $x 10) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 11) | jvm putfield inventory $COS_JList)",
      "         ((= $x 12) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method add-COS_JNamed-String-V",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 1)",
      "         ((= $x 1) | jvm aload 2)",
      "         ((= $x 2) | jvm invokevirtual setName-String-V 1 0)",
      "         ((= $x 3) | jvm aload 0)",
      "         ((= $x 4) | jvm getfield content $COS_JHashMap)",
      "         ((= $x 5) | jvm aload 1)",
      "         ((= $x 6) | jvm invokevirtual getName-String 0 1)",
      "         ((= $x 7) | jvm aload 1)",
      "         ((= $x 8) | jvm invokevirtual put-Object-Object-V 2 0)",
      "         ((= $x 9) | jvm aload 0)",
      "         ((= $x 10) | jvm getfield inventory $COS_JList)",
      "         ((= $x 11) | jvm aload 1)",
      "         ((= $x 12) | jvm invokevirtual add-Object-V 1 0)",
      "         ((= $x 13) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method add | self add-COS_JNamed-String-V)",
      "",
      "   (method get-String-COS_JNamed",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JHashMap)",
      "         ((= $x 2) | jvm new (java lang String))",
      "         ((= $x 3) | jvm dup)",
      "         ((= $x 4) | jvm aload 1)",
      "         ((= $x 5) | jvm invokespecial <init>-String-V 1 0)",
      "         ((= $x 6) | jvm invokevirtual get-Object-Object 1 1)",
      "         ((= $x 7) | jvm checkcast $COS_JNamed)",
      "         ((= $x 8) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method get | self get-String-COS_JNamed)",
      "",
      "   (method update-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield inventory $COS_JList)",
      "         ((= $x 2) | jvm invokevirtual iterator-Iterator 0 1)",
      "         ((= $x 3) | jvm astore 1)",
      "         ((= $x 4) | jvm aload 1)",
      "         ((= $x 5) | jvm invokeinterface hasNext-Z 0 1 1)",
      "         ((= $x 6) | jvm ifeq 14)",
      "         ((= $x 7) | jvm aload 1)",
      "         ((= $x 8) | jvm invokeinterface next-Object 0 1 1)",
      "         ((= $x 9) | jvm checkcast $COS_JNamed)",
      "         ((= $x 10) | jvm astore 2)",
      "         ((= $x 11) | jvm aload 2)",
      "         ((= $x 12) | jvm invokevirtual update-V 0 0)",
      "         ((= $x 13) | jvm goto 4)",
      "         ((= $x 14) | jvm aload 0)",
      "         ((= $x 15) | jvm getfield inventory $COS_JList)",
      "         ((= $x 16) | jvm invokevirtual iterator-Iterator 0 1)",
      "         ((= $x 17) | jvm astore 1)",
      "         ((= $x 18) | jvm aload 1)",
      "         ((= $x 19) | jvm invokeinterface hasNext-Z 0 1 1)",
      "         ((= $x 20) | jvm ifeq 28)",
      "         ((= $x 21) | jvm aload 1)",
      "         ((= $x 22) | jvm invokeinterface next-Object 0 1 1)",
      "         ((= $x 23) | jvm checkcast $COS_JNamed)",
      "         ((= $x 24) | jvm astore 2)",
      "         ((= $x 25) | jvm aload 2)",
      "         ((= $x 26) | jvm invokevirtual postUpdate-V 0 0)",
      "         ((= $x 27) | jvm goto 18)",
      "         ((= $x 28) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method update | self update-V)",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JWorld ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (java lang Object) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field content | cell new 0)\n   (field inventory | cell new 0)\n   (method <init>-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm new $COS_JHashMap)\n         ((= $x 4) | jvm dup)\n         ((= $x 5) | jvm invokespecial <init>-V 0 0)\n         ((= $x 6) | jvm putfield content $COS_JHashMap)\n         ((= $x 7) | jvm aload 0)\n         ((= $x 8) | jvm new $COS_JList)\n         ((= $x 9) | jvm dup)\n         ((= $x 10) | jvm invokespecial <init>-V 0 0)\n         ((= $x 11) | jvm putfield inventory $COS_JList)\n         ((= $x 12) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-V)\n\n   (method add-COS_JNamed-String-V\n     (lambda (arg0 arg1) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 1)\n         ((= $x 1) | jvm aload 2)\n         ((= $x 2) | jvm invokevirtual setName-String-V 1 0)\n         ((= $x 3) | jvm aload 0)\n         ((= $x 4) | jvm getfield content $COS_JHashMap)\n         ((= $x 5) | jvm aload 1)\n         ((= $x 6) | jvm invokevirtual getName-String 0 1)\n         ((= $x 7) | jvm aload 1)\n         ((= $x 8) | jvm invokevirtual put-Object-Object-V 2 0)\n         ((= $x 9) | jvm aload 0)\n         ((= $x 10) | jvm getfield inventory $COS_JList)\n         ((= $x 11) | jvm aload 1)\n         ((= $x 12) | jvm invokevirtual add-Object-V 1 0)\n         ((= $x 13) | jvm return)\n         (jvm return))\n   )\n\n   (method add | self add-COS_JNamed-String-V)\n\n   (method get-String-COS_JNamed\n     (lambda (arg0) |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self) (pair 1 $arg0))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield content $COS_JHashMap)\n         ((= $x 2) | jvm new (java lang String))\n         ((= $x 3) | jvm dup)\n         ((= $x 4) | jvm aload 1)\n         ((= $x 5) | jvm invokespecial <init>-String-V 1 0)\n         ((= $x 6) | jvm invokevirtual get-Object-Object 1 1)\n         ((= $x 7) | jvm checkcast $COS_JNamed)\n         ((= $x 8) | jvm areturn)\n         (jvm return))\n   )\n\n   (method get | self get-String-COS_JNamed)\n\n   (method update-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm getfield inventory $COS_JList)\n         ((= $x 2) | jvm invokevirtual iterator-Iterator 0 1)\n         ((= $x 3) | jvm astore 1)\n         ((= $x 4) | jvm aload 1)\n         ((= $x 5) | jvm invokeinterface hasNext-Z 0 1 1)\n         ((= $x 6) | jvm ifeq 14)\n         ((= $x 7) | jvm aload 1)\n         ((= $x 8) | jvm invokeinterface next-Object 0 1 1)\n         ((= $x 9) | jvm checkcast $COS_JNamed)\n         ((= $x 10) | jvm astore 2)\n         ((= $x 11) | jvm aload 2)\n         ((= $x 12) | jvm invokevirtual update-V 0 0)\n         ((= $x 13) | jvm goto 4)\n         ((= $x 14) | jvm aload 0)\n         ((= $x 15) | jvm getfield inventory $COS_JList)\n         ((= $x 16) | jvm invokevirtual iterator-Iterator 0 1)\n         ((= $x 17) | jvm astore 1)\n         ((= $x 18) | jvm aload 1)\n         ((= $x 19) | jvm invokeinterface hasNext-Z 0 1 1)\n         ((= $x 20) | jvm ifeq 28)\n         ((= $x 21) | jvm aload 1)\n         ((= $x 22) | jvm invokeinterface next-Object 0 1 1)\n         ((= $x 23) | jvm checkcast $COS_JNamed)\n         ((= $x 24) | jvm astore 2)\n         ((= $x 25) | jvm aload 2)\n         ((= $x 26) | jvm invokevirtual postUpdate-V 0 0)\n         ((= $x 27) | jvm goto 18)\n         ((= $x 28) | jvm return)\n         (jvm return))\n   )\n\n   (method update | self update-V)\n\n ;",
    "code
    "parse": [
      "class",
      "COS_JWorld",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "content",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "inventory",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "content",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "add-COS_JNamed-String-V",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "pair",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "setName-String-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "getName-String",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "put-Object-Object-V",
                        "2",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-Object-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "self",
          "add-COS_JNamed-String-V"
        ]
      ],
      [
        "method",
        "get-String-COS_JNamed",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "pair",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-String-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "get-Object-Object",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JNamed"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "self",
          "get-String-COS_JNamed"
        ]
      ],
      [
        "method",
        "update-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "iterator-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "hasNext-Z",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "14"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "next-Object",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JNamed"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "update-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "iterator-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "hasNext-Z",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "28"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "21"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "22"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "next-Object",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "23"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JNamed"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "24"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "25"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "26"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "postUpdate-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "27"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "18"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "28"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "self",
          "update-V"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14D;&#xF17C;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF179;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF148;&#xF156;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF147;&#xF172;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF147;&#xF172;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF146;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF24A;&#xF14C;&#xF163;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF146;&#xF249;&#xF14C;&#xF163;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF17D;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF17F;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF153;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF147;&#xF172;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF173;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14E;&#xF146;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF147;&#xF246;&#xF15E;&#xF246;&#xF14C;&#xF162;&#xF245;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF145;&#xF249;&#xF14C;&#xF162;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF148;&#xF156;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14B;&#xF147;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14B;&#xF148;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF155;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF167;&#xF249;&#xF14D;&#xF168;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14B;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14E;&#xF147;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF145;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF147;&#xF172;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF150;&#xF24A;&#xF14D;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF17F;&#xF24A;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF150;&#xF24A;&#xF14D;&#xF15B;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF167;&#xF249;&#xF14D;&#xF168;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14E;&#xF145;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF179;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF152;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF153;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF147;&#xF172;&#xF249;&#xF14D;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF154;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF14D;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF156;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF157;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF150;&#xF24A;&#xF14D;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF158;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF17F;&#xF24A;&#xF160;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF159;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF150;&#xF24A;&#xF14D;&#xF15B;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF167;&#xF249;&#xF14D;&#xF168;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF172;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF179;&#xF24A;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF160;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF176;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14E;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1908
  },
  {
    "role": "file",
    "lines": [
      "== COS_JRobo =="
    ],
    "stanza": 1909
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# import java.util.Iterator;",
      "# ",
      "# public class COS_JRobo extends COS_JThing {",
      "#     private COS_JHashMap times;",
      "#     private int now;",
      "# ",
      "#     public COS_JRobo() {",
      "#     times = new COS_JHashMap();",
      "#     now = 1;",
      "#     }",
      "# ",
      "#     public void update() {",
      "#     COS_JRoom location = getRoom();",
      "#     //System.out.println(\"Updating robo...\");",
      "#     if (location!=null) {",
      "#         int oldestTime = now;",
      "#         COS_JDoor oldestDoor = null;",
      "#         for (Iterator i = location.getDoors(); i.hasNext(); ) {",
      "#         COS_JDoor door = (COS_JDoor) i.next();",
      "#         //System.out.println(\" scanning door \");",
      "#         Integer t = (Integer)times.get(door);",
      "#         int v = 0;",
      "#         if (t!=null) {",
      "#             v = t.intValue();",
      "#         }",
      "#         if (v<oldestTime) {",
      "#             oldestTime = v;",
      "#             oldestDoor = door;",
      "#         }",
      "#         }",
      "#         if (oldestDoor!=null) {",
      "#         times.put(oldestDoor,new Integer(now));",
      "#         setNextRoom(oldestDoor.apply(location));",
      "#         }",
      "#     }",
      "#     now++;",
      "#     }",
      "# }",
      "# "
    ],
    "section_description": "class translation 'COS_JRobo'",
    "section_category": "JAVA",
    "section_index": 67,
    "stanza": 1910
  },
  {
    "role": "code",
    "lines": [
      "class COS_JRobo ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (COS_JThing) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field times | cell new 0)",
      "   (field now | (int) new)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm new $COS_JHashMap)",
      "         ((= $x 4) | jvm dup)",
      "         ((= $x 5) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 6) | jvm putfield times $COS_JHashMap)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm iconst 1)",
      "         ((= $x 9) | jvm putfield now $int)",
      "         ((= $x 10) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method update-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokevirtual getRoom-COS_JRoom 0 1)",
      "         ((= $x 2) | jvm astore 1)",
      "         ((= $x 3) | jvm aload 1)",
      "         ((= $x 4) | jvm ifnull 57)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm getfield now $int)",
      "         ((= $x 7) | jvm istore 2)",
      "         ((= $x 8) | jvm aconst_null)",
      "         ((= $x 9) | jvm astore 3)",
      "         ((= $x 10) | jvm aload 1)",
      "         ((= $x 11) | jvm invokevirtual getDoors-Iterator 0 1)",
      "         ((= $x 12) | jvm astore 4)",
      "         ((= $x 13) | jvm aload 4)",
      "         ((= $x 14) | jvm invokeinterface hasNext-Z 0 1 1)",
      "         ((= $x 15) | jvm ifeq 41)",
      "         ((= $x 16) | jvm aload 4)",
      "         ((= $x 17) | jvm invokeinterface next-Object 0 1 1)",
      "         ((= $x 18) | jvm checkcast $COS_JDoor)",
      "         ((= $x 19) | jvm astore 5)",
      "         ((= $x 20) | jvm aload 0)",
      "         ((= $x 21) | jvm getfield times $COS_JHashMap)",
      "         ((= $x 22) | jvm aload 5)",
      "         ((= $x 23) | jvm invokevirtual get-Object-Object 1 1)",
      "         ((= $x 24) | jvm checkcast (java lang Integer))",
      "         ((= $x 25) | jvm astore 6)",
      "         ((= $x 26) | jvm iconst 0)",
      "         ((= $x 27) | jvm istore 7)",
      "         ((= $x 28) | jvm aload 6)",
      "         ((= $x 29) | jvm ifnull 33)",
      "         ((= $x 30) | jvm aload 6)",
      "         ((= $x 31) | jvm invokevirtual intValue-I 0 1)",
      "         ((= $x 32) | jvm istore 7)",
      "         ((= $x 33) | jvm iload 7)",
      "         ((= $x 34) | jvm iload 2)",
      "         ((= $x 35) | jvm if_icmpge 40)",
      "         ((= $x 36) | jvm iload 7)",
      "         ((= $x 37) | jvm istore 2)",
      "         ((= $x 38) | jvm aload 5)",
      "         ((= $x 39) | jvm astore 3)",
      "         ((= $x 40) | jvm goto 13)",
      "         ((= $x 41) | jvm aload 3)",
      "         ((= $x 42) | jvm ifnull 57)",
      "         ((= $x 43) | jvm aload 0)",
      "         ((= $x 44) | jvm getfield times $COS_JHashMap)",
      "         ((= $x 45) | jvm aload 3)",
      "         ((= $x 46) | jvm new (java lang Integer))",
      "         ((= $x 47) | jvm dup)",
      "         ((= $x 48) | jvm aload 0)",
      "         ((= $x 49) | jvm getfield now $int)",
      "         ((= $x 50) | jvm invokespecial <init>-I-V 1 0)",
      "         ((= $x 51) | jvm invokevirtual put-Object-Object-V 2 0)",
      "         ((= $x 52) | jvm aload 0)",
      "         ((= $x 53) | jvm aload 3)",
      "         ((= $x 54) | jvm aload 1)",
      "         ((= $x 55) | jvm invokevirtual apply-COS_JRoom-COS_JRoom 1 1)",
      "         ((= $x 56) | jvm invokevirtual setNextRoom-COS_JRoom-V 1 0)",
      "         ((= $x 57) | jvm aload 0)",
      "         ((= $x 58) | jvm dup)",
      "         ((= $x 59) | jvm getfield now $int)",
      "         ((= $x 60) | jvm iconst 1)",
      "         ((= $x 61) | jvm iadd)",
      "         ((= $x 62) | jvm putfield now $int)",
      "         ((= $x 63) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method update | self update-V)",
      "",
      " ;"
    ],
    "preprocessed": "class COS_JRobo ()\n   (field super-ref | make-cell 0)\n   (method new | set! $super-ref | (COS_JThing) $this)\n   (method super | ? x | (get! $super-ref) $x)\n   (method unknown | ? x | self super $x)\n   (field times | cell new 0)\n   (field now | (int) new)\n   (method <init>-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokespecial <init>-V 0 0)\n         ((= $x 2) | jvm aload 0)\n         ((= $x 3) | jvm new $COS_JHashMap)\n         ((= $x 4) | jvm dup)\n         ((= $x 5) | jvm invokespecial <init>-V 0 0)\n         ((= $x 6) | jvm putfield times $COS_JHashMap)\n         ((= $x 7) | jvm aload 0)\n         ((= $x 8) | jvm iconst 1)\n         ((= $x 9) | jvm putfield now $int)\n         ((= $x 10) | jvm return)\n         (jvm return))\n   )\n\n   (method <init> | self <init>-V)\n\n   (method update-V\n     (lambda () |\n      let ((vars | cell new | make-hash | vector\n                    (pair 0 $self))\n           (stack | cell new | vector)) |\n      state-machine $vars $stack | ? jvm | ? x | cond\n         ((= $x 0) | jvm aload 0)\n         ((= $x 1) | jvm invokevirtual getRoom-COS_JRoom 0 1)\n         ((= $x 2) | jvm astore 1)\n         ((= $x 3) | jvm aload 1)\n         ((= $x 4) | jvm ifnull 57)\n         ((= $x 5) | jvm aload 0)\n         ((= $x 6) | jvm getfield now $int)\n         ((= $x 7) | jvm istore 2)\n         ((= $x 8) | jvm aconst_null)\n         ((= $x 9) | jvm astore 3)\n         ((= $x 10) | jvm aload 1)\n         ((= $x 11) | jvm invokevirtual getDoors-Iterator 0 1)\n         ((= $x 12) | jvm astore 4)\n         ((= $x 13) | jvm aload 4)\n         ((= $x 14) | jvm invokeinterface hasNext-Z 0 1 1)\n         ((= $x 15) | jvm ifeq 41)\n         ((= $x 16) | jvm aload 4)\n         ((= $x 17) | jvm invokeinterface next-Object 0 1 1)\n         ((= $x 18) | jvm checkcast $COS_JDoor)\n         ((= $x 19) | jvm astore 5)\n         ((= $x 20) | jvm aload 0)\n         ((= $x 21) | jvm getfield times $COS_JHashMap)\n         ((= $x 22) | jvm aload 5)\n         ((= $x 23) | jvm invokevirtual get-Object-Object 1 1)\n         ((= $x 24) | jvm checkcast (java lang Integer))\n         ((= $x 25) | jvm astore 6)\n         ((= $x 26) | jvm iconst 0)\n         ((= $x 27) | jvm istore 7)\n         ((= $x 28) | jvm aload 6)\n         ((= $x 29) | jvm ifnull 33)\n         ((= $x 30) | jvm aload 6)\n         ((= $x 31) | jvm invokevirtual intValue-I 0 1)\n         ((= $x 32) | jvm istore 7)\n         ((= $x 33) | jvm iload 7)\n         ((= $x 34) | jvm iload 2)\n         ((= $x 35) | jvm if_icmpge 40)\n         ((= $x 36) | jvm iload 7)\n         ((= $x 37) | jvm istore 2)\n         ((= $x 38) | jvm aload 5)\n         ((= $x 39) | jvm astore 3)\n         ((= $x 40) | jvm goto 13)\n         ((= $x 41) | jvm aload 3)\n         ((= $x 42) | jvm ifnull 57)\n         ((= $x 43) | jvm aload 0)\n         ((= $x 44) | jvm getfield times $COS_JHashMap)\n         ((= $x 45) | jvm aload 3)\n         ((= $x 46) | jvm new (java lang Integer))\n         ((= $x 47) | jvm dup)\n         ((= $x 48) | jvm aload 0)\n         ((= $x 49) | jvm getfield now $int)\n         ((= $x 50) | jvm invokespecial <init>-I-V 1 0)\n         ((= $x 51) | jvm invokevirtual put-Object-Object-V 2 0)\n         ((= $x 52) | jvm aload 0)\n         ((= $x 53) | jvm aload 3)\n         ((= $x 54) | jvm aload 1)\n         ((= $x 55) | jvm invokevirtual apply-COS_JRoom-COS_JRoom 1 1)\n         ((= $x 56) | jvm invokevirtual setNextRoom-COS_JRoom-V 1 0)\n         ((= $x 57) | jvm aload 0)\n         ((= $x 58) | jvm dup)\n         ((= $x 59) | jvm getfield now $int)\n         ((= $x 60) | jvm iconst 1)\n         ((= $x 61) | jvm iadd)\n         ((= $x 62) | jvm putfield now $int)\n         ((= $x 63) | jvm return)\n         (jvm return))\n   )\n\n   (method update | self update-V)\n\n ;",
    "code
    "parse": [
      "class",
      "COS_JRobo",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "make-cell",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "set!",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "COS_JThing"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "get!",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "times",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "now",
        [
          -1,
          [
            "int"
          ],
          "new"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "times",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "update-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "pair",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "getRoom-COS_JRoom",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "57"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "getDoors-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "hasNext-Z",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "41"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "next-Object",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JDoor"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "5"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "21"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "times",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "22"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "5"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "23"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "get-Object-Object",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "24"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          "java",
                          "lang",
                          "Integer"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "25"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "6"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "26"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "27"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "28"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "6"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "29"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "33"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "30"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "6"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "31"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "intValue-I",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "32"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "33"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "34"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "35"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_icmpge",
                        "40"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "36"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "37"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "38"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "5"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "39"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "40"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "13"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "41"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "42"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "57"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "43"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "44"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "times",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "45"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "46"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          "java",
                          "lang",
                          "Integer"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "47"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "48"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "49"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "50"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-I-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "51"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "put-Object-Object-V",
                        "2",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "52"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "53"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "54"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "55"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "apply-COS_JRoom-COS_JRoom",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "56"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "setNextRoom-COS_JRoom-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "57"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "58"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "59"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "60"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "61"
                      ],
                      [
                        -1,
                        "jvm",
                        "iadd"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "62"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "63"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "self",
          "update-V"
        ]
      ]
    ],
    "spider": "&#xF148;&#xF152;&#xF24A;&#xF14E;&#xF148;&#xF247;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14C;&#xF165;&#xF248;&#xF15F;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF160;&#xF249;&#xF14C;&#xF165;&#xF248;&#xF246;&#xF14D;&#xF167;&#xF245;&#xF249;&#xF148;&#xF144;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF147;&#xF179;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF246;&#xF161;&#xF249;&#xF14C;&#xF165;&#xF245;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF14A;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF147;&#xF179;&#xF249;&#xF16D;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14E;&#xF149;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF148;&#xF150;&#xF24A;&#xF14E;&#xF14A;&#xF248;&#xF246;&#xF147;&#xF156;&#xF245;&#xF147;&#xF176;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17B;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF17B;&#xF24A;&#xF144;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14E;&#xF149;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14E;&#xF14A;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14A;&#xF17C;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14A;&#xF17B;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF14E;&#xF145;&#xF246;&#xF15E;&#xF247;&#xF248;&#xF146;&#xF146;&#xF246;&#xF246;&#xF14B;&#xF15F;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF146;&#xF17A;&#xF248;&#xF154;&#xF246;&#xF145;&#xF15B;&#xF24A;&#xF144;&#xF249;&#xF147;&#xF16A;&#xF245;&#xF245;&#xF246;&#xF14B;&#xF160;&#xF248;&#xF148;&#xF154;&#xF24A;&#xF147;&#xF176;&#xF248;&#xF154;&#xF245;&#xF245;&#xF248;&#xF14C;&#xF160;&#xF249;&#xF14B;&#xF15F;&#xF249;&#xF14B;&#xF160;&#xF248;&#xF150;&#xF24A;&#xF14C;&#xF15F;&#xF248;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF147;&#xF15C;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF16E;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF146;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF147;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF148;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF148;&#xF24A;&#xF17D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF149;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14E;&#xF14A;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF169;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF170;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF14F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF176;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF150;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF151;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF152;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF150;&#xF24A;&#xF14D;&#xF159;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF153;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF17F;&#xF24A;&#xF16D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF154;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF148;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF155;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF150;&#xF24A;&#xF14D;&#xF15B;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF156;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF167;&#xF249;&#xF14D;&#xF15D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF157;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF158;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF159;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14E;&#xF149;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF155;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF167;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF182;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF15F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF169;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF160;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF161;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF148;&#xF24A;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF162;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF14A;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF163;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14E;&#xF14B;&#xF24A;&#xF144;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF164;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF169;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF165;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF166;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF167;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF144;&#xF24A;&#xF16C;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF168;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16C;&#xF24A;&#xF14B;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF169;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF169;&#xF24A;&#xF146;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF16A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF149;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF16B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF168;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF16C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF179;&#xF24A;&#xF151;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF16D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF16E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF148;&#xF24A;&#xF17D;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF16F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF170;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14E;&#xF149;&#xF249;&#xF14D;&#xF152;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF171;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF172;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF176;&#xF246;&#xF14B;&#xF14A;&#xF24A;&#xF14C;&#xF166;&#xF24A;&#xF14A;&#xF182;&#xF245;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF173;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF174;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF175;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14E;&#xF14A;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF176;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF151;&#xF24A;&#xF14A;&#xF183;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF177;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF153;&#xF24A;&#xF146;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF178;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF179;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF147;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF17A;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF17B;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF166;&#xF24A;&#xF145;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF17C;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14C;&#xF14C;&#xF24A;&#xF14D;&#xF170;&#xF24A;&#xF145;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF17D;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16B;&#xF24A;&#xF144;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF17E;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF165;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF17F;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF171;&#xF24A;&#xF14E;&#xF14A;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF180;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF16D;&#xF24A;&#xF145;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF181;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF177;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF182;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF14B;&#xF173;&#xF24A;&#xF14E;&#xF14A;&#xF249;&#xF147;&#xF156;&#xF245;&#xF246;&#xF246;&#xF147;&#xF249;&#xF16D;&#xF24A;&#xF183;&#xF245;&#xF248;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF246;&#xF14C;&#xF15F;&#xF24A;&#xF147;&#xF164;&#xF245;&#xF245;&#xF245;&#xF246;&#xF148;&#xF148;&#xF24A;&#xF148;&#xF176;&#xF248;&#xF147;&#xF16A;&#xF24A;&#xF14E;&#xF145;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1911
  },
  {
    "role": "file",
    "lines": [
      "== COS_JRoom_test =="
    ],
    "stanza": 1912
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "test JRoom, JDoor, JThing, etc",
    "section_category": "JAVA",
    "section_index": 68,
    "stanza": 1913
  },
  {
    "role": "code",
    "lines": [
      "define s (? x | String new int-init | x);"
    ],
    "preprocessed": "define s (? x | String new int-init | x);",
    "code": "211013210100010003221100321010013123211100001132111100103211100010131232101001332233",
    "parse": [
      "define",
      "s",
      [
        "?",
        "x",
        [
          -1,
          "String",
          "new",
          "int-init",
          [
            -1,
            "x"
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF14C;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14B;&#xF147;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14B;&#xF149;&#xF248;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1914
  },
  {
    "role": "code",
    "lines": [
      "define room1 (COS_JRoom new <init>);"
    ],
    "preprocessed": "define room1 (COS_JRoom new <init>);",
    "code": "211013210100010013221001011110321111001032110111000332233",
    "parse": [
      "define",
      "room1",
      [
        "COS_JRoom",
        "new",
        "<init>"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF14D;&#xF246;&#xF14D;&#xF162;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17C;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1915
  },
  {
    "role": "code",
    "lines": [
      "define room2 (COS_JRoom new <init>);"
    ],
    "preprocessed": "define room2 (COS_JRoom new <init>);",
    "code": "211013210100010103221001011110321111001032110111000332233",
    "parse": [
      "define",
      "room2",
      [
        "COS_JRoom",
        "new",
        "<init>"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF14E;&#xF246;&#xF14D;&#xF162;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17C;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1916
  },
  {
    "role": "code",
    "lines": [
      "define door12 (COS_JDoor new <init> ",
      "              (room1) (s \"south\") (room2) (s \"north\"));"
    ],
    "preprocessed": "define door12 (COS_JDoor new <init> \n              (room1) (s \"south\") (room2) (s \"north\"));",
    "code": "211013210100010113221001011001321111001032110111000322101000100133221010001000321110011011011110111010101110100011010003322101000101033221010001000321101110011011110111001001110100011010003332233",
    "parse": [
      "define",
      "door12",
      [
        "COS_JDoor",
        "new",
        "<init>",
        [
          "room1"
        ],
        [
          "s",
          "\"south\""
        ],
        [
          "room2"
        ],
        [
          "s",
          "\"north\""
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF14F;&#xF246;&#xF14D;&#xF15D;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17C;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF246;&#xF14E;&#xF14C;&#xF24A;&#xF14B;&#xF151;&#xF173;&#xF161;&#xF15B;&#xF155;&#xF16C;&#xF245;&#xF246;&#xF14E;&#xF14E;&#xF245;&#xF246;&#xF14E;&#xF14C;&#xF24A;&#xF14A;&#xF17D;&#xF173;&#xF160;&#xF16B;&#xF155;&#xF16C;&#xF245;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1917
  },
  {
    "role": "code",
    "lines": [
      "define jworld (COS_JWorld new <init>);"
    ],
    "preprocessed": "define jworld (COS_JWorld new <init>);",
    "code": "211013210100011003221001111000321111001032110111000332233",
    "parse": [
      "define",
      "jworld",
      [
        "COS_JWorld",
        "new",
        "<init>"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF150;&#xF246;&#xF14D;&#xF17C;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17C;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1918
  },
  {
    "role": "code",
    "lines": [
      "define thing1 (COS_JThing new <init>);"
    ],
    "preprocessed": "define thing1 (COS_JThing new <init>);",
    "code": "211013210100011013221001100011321111001032110111000332233",
    "parse": [
      "define",
      "thing1",
      [
        "COS_JThing",
        "new",
        "<init>"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF151;&#xF246;&#xF14D;&#xF167;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17C;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1919
  },
  {
    "role": "code",
    "lines": [
      "define robo1 (COS_JRobo new <init>);"
    ],
    "preprocessed": "define robo1 (COS_JRobo new <init>);",
    "code": "211013210100011103221010000100321111001032110111000332233",
    "parse": [
      "define",
      "robo1",
      [
        "COS_JRobo",
        "new",
        "<init>"
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14E;&#xF152;&#xF246;&#xF14E;&#xF148;&#xF24A;&#xF147;&#xF176;&#xF24A;&#xF14A;&#xF17C;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1920
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (thing1) | s \"bus\";"
    ],
    "preprocessed": "act | jworld add (thing1) | s \"bus\";",
    "code": "2110111011312321010001100321110111132210100011013312321010001000321100010011101010111001132233",
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "thing1"
        ],
        [
          -1,
          "s",
          "\"bus\""
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF150;&#xF24A;&#xF147;&#xF173;&#xF246;&#xF14E;&#xF151;&#xF245;&#xF248;&#xF14E;&#xF14C;&#xF24A;&#xF15C;&#xF16B;&#xF159;&#xF177;&#xF24B;",
    "dt": true,
    "stanza": 1921
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (robo1) | s \"autobus\";"
    ],
    "preprocessed": "act | jworld add (robo1) | s \"autobus\";",
    "code": "211011101131232101000110032111011113221010001110331232101000100032110000101110101011101000110111101100010011101010111001132233",
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "robo1"
        ],
        [
          -1,
          "s",
          "\"autobus\""
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF150;&#xF24A;&#xF147;&#xF173;&#xF246;&#xF14E;&#xF152;&#xF245;&#xF248;&#xF14E;&#xF14C;&#xF24A;&#xF145;&#xF165;&#xF161;&#xF15B;&#xF155;&#xF173;&#xF15C;&#xF16B;&#xF159;&#xF177;&#xF24B;",
    "dt": true,
    "stanza": 1922
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (room1) | s \"boston\";"
    ],
    "preprocessed": "act | jworld add (room1) | s \"boston\";",
    "code": "2110111011312321010001100321110111132210100010013312321010001000321100010011011110111001101110100011011110110111032233",
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "room1"
        ],
        [
          -1,
          "s",
          "\"boston\""
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF150;&#xF24A;&#xF147;&#xF173;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF248;&#xF14E;&#xF14C;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF24B;",
    "dt": true,
    "stanza": 1923
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (room2) | s \"newyork\";"
    ],
    "preprocessed": "act | jworld add (room2) | s \"newyork\";",
    "code": "211011101131232101000110032111011113221010001010331232101000100032110111001100101011101110111100101101111011100100110101132233",
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "room2"
        ],
        [
          -1,
          "s",
          "\"newyork\""
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF150;&#xF24A;&#xF147;&#xF173;&#xF246;&#xF14E;&#xF14E;&#xF245;&#xF248;&#xF14E;&#xF14C;&#xF24A;&#xF145;&#xF172;&#xF15D;&#xF15B;&#xF161;&#xF17D;&#xF15F;&#xF17B;&#xF14D;&#xF16F;&#xF24B;",
    "dt": true,
    "stanza": 1924
  },
  {
    "role": "code",
    "lines": [
      "begin (room1 get add (room1))",
      "       (= 1 | room1 get size);"
    ],
    "preprocessed": "begin (room1 get add (room1))\n       (= 1 | room1 get size);",
    "code": "21010110032210100010013210001001132111011113221010001001333221132131232101000100132100010011321001001101332233",
    "parse": [
      "begin",
      [
        "room1",
        "get",
        "add",
        [
          "room1"
        ]
      ],
      [
        "=",
        "1",
        [
          -1,
          "room1",
          "get",
          "size"
        ]
      ]
    ],
    "spider": "&#xF146;&#xF170;&#xF246;&#xF14E;&#xF14D;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF147;&#xF173;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF245;&#xF246;&#xF147;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF14D;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1925
  },
  {
    "role": "code",
    "lines": [
      "= 1 | room1 get size;"
    ],
    "preprocessed": "= 1 | room1 get size;",
    "code": "2113213123210100010013210001001132100100110132233",
    "parse": [
      "=",
      "1",
      [
        -1,
        "room1",
        "get",
        "size"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF248;&#xF14E;&#xF14D;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1926
  },
  {
    "role": "code",
    "lines": [
      "= 0 | room2 get size;"
    ],
    "preprocessed": "= 0 | room2 get size;",
    "code": "2113203123210100010103210001001132100100110132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "room2",
        "get",
        "size"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14E;&#xF14E;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1927
  },
  {
    "role": "code",
    "lines": [
      "act | thing1 setRoom (room1);"
    ],
    "preprocessed": "act | thing1 setRoom (room1);",
    "code": "21101110113123210100011013210011010013221010001001332233",
    "parse": [
      "act",
      [
        -1,
        "thing1",
        "setRoom",
        [
          "room1"
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF151;&#xF24A;&#xF14D;&#xF16D;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1928
  },
  {
    "role": "code",
    "lines": [
      "= 2 | room1 get size;"
    ],
    "preprocessed": "= 2 | room1 get size;",
    "code": "21132103123210100010013210001001132100100110132233",
    "parse": [
      "=",
      "2",
      [
        -1,
        "room1",
        "get",
        "size"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF146;&#xF248;&#xF14E;&#xF14D;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1929
  },
  {
    "role": "code",
    "lines": [
      "= 0 | room2 get size;"
    ],
    "preprocessed": "= 0 | room2 get size;",
    "code": "2113203123210100010103210001001132100100110132233",
    "parse": [
      "=",
      "0",
      [
        -1,
        "room2",
        "get",
        "size"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF144;&#xF248;&#xF14E;&#xF14E;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1930
  },
  {
    "role": "code",
    "lines": [
      "act | thing1 setRoom (room2);"
    ],
    "preprocessed": "act | thing1 setRoom (room2);",
    "code": "21101110113123210100011013210011010013221010001010332233",
    "parse": [
      "act",
      [
        -1,
        "thing1",
        "setRoom",
        [
          "room2"
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF151;&#xF24A;&#xF14D;&#xF16D;&#xF246;&#xF14E;&#xF14E;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1931
  },
  {
    "role": "code",
    "lines": [
      "room1 get size;"
    ],
    "preprocessed": "room1 get size;",
    "code": "210100010013210001001132100100110132233",
    "parse": [
      "room1",
      "get",
      "size"
    ],
    "spider": "&#xF14E;&#xF14D;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1932
  },
  {
    "role": "code",
    "lines": [
      "room2 get size;"
    ],
    "preprocessed": "room2 get size;",
    "code": "210100010103210001001132100100110132233",
    "parse": [
      "room2",
      "get",
      "size"
    ],
    "spider": "&#xF14E;&#xF14E;&#xF24A;&#xF148;&#xF157;&#xF24A;&#xF14D;&#xF151;&#xF24B;",
    "dt": false,
    "stanza": 1933
  },
  {
    "role": "code",
    "lines": [
      "thing1 equals (thing1);"
    ],
    "preprocessed": "thing1 equals (thing1);",
    "code": "21010001101321101110103221010001101332233",
    "parse": [
      "thing1",
      "equals",
      [
        "thing1"
      ]
    ],
    "spider": "&#xF14E;&#xF151;&#xF24A;&#xF14A;&#xF17E;&#xF246;&#xF14E;&#xF151;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1934
  },
  {
    "role": "code",
    "lines": [
      "room1 equals (room1);"
    ],
    "preprocessed": "room1 equals (room1);",
    "code": "21010001001321101110103221010001001332233",
    "parse": [
      "room1",
      "equals",
      [
        "room1"
      ]
    ],
    "spider": "&#xF14E;&#xF14D;&#xF24A;&#xF14A;&#xF17E;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1935
  },
  {
    "role": "code",
    "lines": [
      "not | thing1 equals (room1);"
    ],
    "preprocessed": "not | thing1 equals (room1);",
    "code": "2101312321010001101321101110103221010001001332233",
    "parse": [
      "not",
      [
        -1,
        "thing1",
        "equals",
        [
          "room1"
        ]
      ]
    ],
    "spider": "&#xF149;&#xF248;&#xF14E;&#xF151;&#xF24A;&#xF14A;&#xF17E;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF24B;",
    "dt": false,
    "stanza": 1936
  },
  {
    "role": "code",
    "lines": [
      "equal \"newyork\" | door12 apply (room1) (s \"south\") getName intValue;"
    ],
    "preprocessed": "equal \"newyork\" | door12 apply (room1) (s \"south\") getName intValue;",
    "code": "210003211011100110010101110111011110010110111101110010011010113123210100010113210011000013221010001001332210100010003211100110110111101110101011101000110100033210011111003211100000132233",
    "parse": [
      "equal",
      "\"newyork\"",
      [
        -1,
        "door12",
        "apply",
        [
          "room1"
        ],
        [
          "s",
          "\"south\""
        ],
        "getName",
        "intValue"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF145;&#xF172;&#xF15D;&#xF15B;&#xF161;&#xF17D;&#xF15F;&#xF17B;&#xF14D;&#xF16F;&#xF248;&#xF14E;&#xF14F;&#xF24A;&#xF14D;&#xF165;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF246;&#xF14E;&#xF14C;&#xF24A;&#xF14B;&#xF151;&#xF173;&#xF161;&#xF15B;&#xF155;&#xF16C;&#xF245;&#xF14D;&#xF180;&#xF24A;&#xF14B;&#xF145;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | door12 apply (room1) (s \"south\") getName intValue;"
    ],
    "stanza": 1937
  },
  {
    "role": "code",
    "lines": [
      "equal \"boston\" | door12 apply (room2) (s \"north\") getName intValue;"
    ],
    "preprocessed": "equal \"boston\" | door12 apply (room2) (s \"north\") getName intValue;",
    "code": "2100032110001001101111011100110111010001101111011011103123210100010113210011000013221010001010332210100010003211011100110111101110010011101000110100033210011111003211100000132233",
    "parse": [
      "equal",
      "\"boston\"",
      [
        -1,
        "door12",
        "apply",
        [
          "room2"
        ],
        [
          "s",
          "\"north\""
        ],
        "getName",
        "intValue"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF248;&#xF14E;&#xF14F;&#xF24A;&#xF14D;&#xF165;&#xF246;&#xF14E;&#xF14E;&#xF245;&#xF246;&#xF14E;&#xF14C;&#xF24A;&#xF14A;&#xF17D;&#xF173;&#xF160;&#xF16B;&#xF155;&#xF16C;&#xF245;&#xF14D;&#xF180;&#xF24A;&#xF14B;&#xF145;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | door12 apply (room2) (s \"north\") getName intValue;"
    ],
    "stanza": 1938
  },
  {
    "role": "code",
    "lines": [
      "define o",
      "  (? x | jworld get | s | x);"
    ],
    "preprocessed": "define o\n  (? x | jworld get | s | x);",
    "code": "21101321110000103221100321010013123210100011003210001001131232101000100031232101001332233",
    "parse": [
      "define",
      "o",
      [
        "?",
        "x",
        [
          -1,
          "jworld",
          "get",
          [
            -1,
            "s",
            [
              -1,
              "x"
            ]
          ]
        ]
      ]
    ],
    "spider": "&#xF151;&#xF24A;&#xF14B;&#xF146;&#xF246;&#xF150;&#xF24A;&#xF16D;&#xF248;&#xF14E;&#xF150;&#xF24A;&#xF148;&#xF157;&#xF248;&#xF14E;&#xF14C;&#xF248;&#xF16D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1939
  },
  {
    "role": "code",
    "lines": [
      "= \"newyork\" | (o \"bus\") getRoom getName intValue;"
    ],
    "preprocessed": "= \"newyork\" | (o \"bus\") getRoom getName intValue;",
    "code": "211321101110011001010111011101111001011011110111001001101011312322111000010321100010011101010111001133210011010113210011111003211100000132233",
    "parse": [
      "=",
      "\"newyork\"",
      [
        -1,
        [
          "o",
          "\"bus\""
        ],
        "getRoom",
        "getName",
        "intValue"
      ]
    ],
    "spider": "&#xF147;&#xF24A;&#xF145;&#xF172;&#xF15D;&#xF15B;&#xF161;&#xF17D;&#xF15F;&#xF17B;&#xF14D;&#xF16F;&#xF248;&#xF246;&#xF14B;&#xF146;&#xF24A;&#xF15C;&#xF16B;&#xF159;&#xF177;&#xF245;&#xF14D;&#xF16F;&#xF24A;&#xF14D;&#xF180;&#xF24A;&#xF14B;&#xF145;&#xF24B;",
    "dt": false,
    "stanza": 1940
  },
  {
    "role": "code",
    "lines": [
      "act | robo1 setRoom (room1);"
    ],
    "preprocessed": "act | robo1 setRoom (room1);",
    "code": "21101110113123210100011103210011010013221010001001332233",
    "parse": [
      "act",
      [
        -1,
        "robo1",
        "setRoom",
        [
          "room1"
        ]
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF152;&#xF24A;&#xF14D;&#xF16D;&#xF246;&#xF14E;&#xF14D;&#xF245;&#xF24B;",
    "dt": true,
    "stanza": 1941
  },
  {
    "role": "code",
    "lines": [
      "equal \"boston\" | (o \"autobus\") getRoom getName intValue;"
    ],
    "preprocessed": "equal \"boston\" | (o \"autobus\") getRoom getName intValue;",
    "code": "21000321100010011011110111001101110100011011110110111031232211100001032110000101110101011101000110111101100010011101010111001133210011010113210011111003211100000132233",
    "parse": [
      "equal",
      "\"boston\"",
      [
        -1,
        [
          "o",
          "\"autobus\""
        ],
        "getRoom",
        "getName",
        "intValue"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF15C;&#xF16A;&#xF181;&#xF177;&#xF161;&#xF14A;&#xF181;&#xF172;&#xF248;&#xF246;&#xF14B;&#xF146;&#xF24A;&#xF145;&#xF165;&#xF161;&#xF15B;&#xF155;&#xF173;&#xF15C;&#xF16B;&#xF159;&#xF177;&#xF245;&#xF14D;&#xF16F;&#xF24A;&#xF14D;&#xF180;&#xF24A;&#xF14B;&#xF145;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | (o \"autobus\") getRoom getName intValue;"
    ],
    "stanza": 1942
  },
  {
    "role": "code",
    "lines": [
      "act | jworld update;"
    ],
    "preprocessed": "act | jworld update;",
    "code": "21101110113123210100011003210011001032233",
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "update"
      ]
    ],
    "spider": "&#xF14A;&#xF17F;&#xF248;&#xF14E;&#xF150;&#xF24A;&#xF148;&#xF176;&#xF24B;",
    "dt": true,
    "stanza": 1943
  },
  {
    "role": "code",
    "lines": [
      "equal \"newyork\" | (o \"autobus\") getRoom getName intValue;"
    ],
    "preprocessed": "equal \"newyork\" | (o \"autobus\") getRoom getName intValue;",
    "code": "2100032110111001100101011101110111100101101111011100100110101131232211100001032110000101110101011101000110111101100010011101010111001133210011010113210011111003211100000132233",
    "parse": [
      "equal",
      "\"newyork\"",
      [
        -1,
        [
          "o",
          "\"autobus\""
        ],
        "getRoom",
        "getName",
        "intValue"
      ]
    ],
    "spider": "&#xF14C;&#xF24A;&#xF145;&#xF172;&#xF15D;&#xF15B;&#xF161;&#xF17D;&#xF15F;&#xF17B;&#xF14D;&#xF16F;&#xF248;&#xF246;&#xF14B;&#xF146;&#xF24A;&#xF145;&#xF165;&#xF161;&#xF15B;&#xF155;&#xF173;&#xF15C;&#xF16B;&#xF159;&#xF177;&#xF245;&#xF14D;&#xF16F;&#xF24A;&#xF14D;&#xF180;&#xF24A;&#xF14B;&#xF145;&#xF24B;",
    "dt": false,
    "lines_original": [
      "demo | (o \"autobus\") getRoom getName intValue;"
    ],
    "stanza": 1944
  }
]