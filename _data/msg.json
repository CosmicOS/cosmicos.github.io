[
  {
    "role": "file",
    "lines": [
      "== COS_License =="
    ],
    "stanza": 0
  },
  {
    "role": "comment",
    "lines": [
      "#   Author: Paul Fitzpatrick, paulfitz@alum.mit.edu",
      "#   Copyright (c) 2018 Paul Fitzpatrick",
      "#",
      "#   This file is part of CosmicOS.",
      "#",
      "#   CosmicOS is free software; you can redistribute it and/or modify",
      "#   it under the terms of the GNU General Public License as published by",
      "#   the Free Software Foundation; either version 2 of the License, or",
      "#   (at your option) any later version.",
      "#",
      "#   CosmicOS is distributed in the hope that it will be useful,",
      "#   but WITHOUT ANY WARRANTY; without even the implied warranty of",
      "#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
      "#   GNU General Public License for more details.",
      "#",
      "#   You should have received a copy of the GNU General Public License",
      "#   along with CosmicOS; if not, write to the Free Software",
      "#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",
      "#"
    ],
    "stanza": 1
  },
  {
    "role": "file",
    "lines": [
      "== COS_Intro =="
    ],
    "stanza": 2
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Here we count up from zero, go through some primes, that sort of",
      "thing.  Just like in the movies!  There is some syntax around the",
      "numbers, and a structure to the \"lesson,\" but it will be fine for the",
      "listener to ignore all that for now.  Hopefully what they will pick up",
      "on is:",
      "",
      " * There are some repeating patterns.",
      " * Between those patterns, there's a specific short unit repeating",
      "   a varying number of times (we count in unary).",
      " * The number of times it varies smells like math.",
      "",
      "We'll get to a more compact representation of numbers later, once",
      "we've established the basics.",
      ""
    ],
    "section_description": "introduce numbers (in unary notation)",
    "section_category": "MATH",
    "section_index": 0,
    "stanza": 3
  },
  {
    "role": "code",
    "lines": [
      "intro unary;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "unary"
    ],
    "code": "121001031211132233",
    "spider": "&#xf156;&#xf24a;&#xf14b;&#xf24b;",
    "stanza": 4
  },
  {
    "role": "code",
    "lines": [
      "intro is;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "is"
    ],
    "code": "121001031210111132233",
    "spider": "&#xf156;&#xf24a;&#xf173;&#xf24b;",
    "stanza": 5
  },
  {
    "role": "code",
    "lines": [
      "intro int;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "int"
    ],
    "code": "121001031211000032233",
    "spider": "&#xf156;&#xf24a;&#xf174;&#xf24b;",
    "stanza": 6
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "0"
      ]
    ],
    "code": "12101111312110000302312111302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 7
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100003023121113021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 8
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211000030231211130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 9
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110000302312111302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 10
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100003023121113021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 11
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211000030231211130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 12
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110000302312111302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 13
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100003023121113021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 14
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211000030231211130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 15
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110000302312111302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 16
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100003023121113021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 17
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211000030231211130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 18
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110000302312111302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 19
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100003023121113021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 20
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211000030231211130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 21
  },
  {
    "role": "code",
    "lines": [
      "is int | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "int",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110000302312111302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf174;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 22
  },
  {
    "role": "code",
    "lines": [
      "intro square;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "square"
    ],
    "code": "121001031211000132233",
    "spider": "&#xf156;&#xf24a;&#xf175;&#xf24b;",
    "stanza": 23
  },
  {
    "role": "code",
    "lines": [
      "is square | unary 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "square",
      [
        -1,
        "unary",
        "0"
      ]
    ],
    "code": "12101111312110001302312111302032233",
    "spider": "&#xf173;&#xf24a;&#xf175;&#xf248;&#xf14b;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 24
  },
  {
    "role": "code",
    "lines": [
      "is square | unary 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "square",
      [
        -1,
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100013023121113021302032233",
    "spider": "&#xf173;&#xf24a;&#xf175;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 25
  },
  {
    "role": "code",
    "lines": [
      "is square | unary 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100013023121113021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf175;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 26
  },
  {
    "role": "code",
    "lines": [
      "is square | unary 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110001302312111302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf175;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 27
  },
  {
    "role": "code",
    "lines": [
      "is square | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100013023121113021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf175;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 28
  },
  {
    "role": "code",
    "lines": [
      "is square | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "square",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100013023121113021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf175;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 29
  },
  {
    "role": "code",
    "lines": [
      "intro prime;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "prime"
    ],
    "code": "121001031211001032233",
    "spider": "&#xf156;&#xf24a;&#xf176;&#xf24b;",
    "stanza": 30
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211001030231211130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 31
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12101111312110010302312111302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 32
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211001030231211130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 33
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100103023121113021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 34
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211001030231211130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 35
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100103023121113021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 36
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211001030231211130213021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 37
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100103023121113021302130213021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 38
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211001030231211130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 39
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210111131211001030231211130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 40
  },
  {
    "role": "code",
    "lines": [
      "is prime | unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0;"
    ],
    "dt": false,
    "parse": [
      "is",
      "prime",
      [
        -1,
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121011113121100103023121113021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302130213021302032233",
    "spider": "&#xf173;&#xf24a;&#xf176;&#xf248;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 41
  },
  {
    "role": "file",
    "lines": [
      "== COS_Compare =="
    ],
    "stanza": 42
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We've hopefully cued our listeners to be looking for mathematical",
      "patterns.  So let's give them some more.  It doesn't matter so much",
      "what patterns we give, as long as they are clear, and that there are",
      "several of them.  Eventually we'll want the listener to start turning",
      "things around, and use the parts of the message they understand (the",
      "mathematical patterns) to learn something about the parts they don't",
      "(the message structure and syntax).",
      "",
      "Let's take a shot at introducing ways of comparing numbers.",
      "No doubt we're revealing a feudal, reductive mindset in which",
      "all things must be ranked in a hierachy.  ¯\\\\\\_(ツ)_/¯.",
      "",
      "Equality is introduced by a series of true statements of the form `X = X` ",
      "(the syntax is a little different than regular math, more like ",
      "`= X X`, but that isn't important yet).  The listener will hopefully",
      "discern a number getting repeated twice within the \"sentence\"",
      "structure they've been seeing, but won't be sure yet what we are",
      "driving at until we introduce non-equality and contrast with it.",
      "",
      ""
    ],
    "section_description": "introduce equality and inequality of numbers",
    "section_category": "MATH",
    "section_index": 1,
    "stanza": 43
  },
  {
    "role": "code",
    "lines": [
      "intro =;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "="
    ],
    "code": "12100103121132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf24b;",
    "stanza": 44
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 45
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 46
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121132121113021302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 47
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 48
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 0) (unary 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302130213021302033212111302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 49
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121132121113021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 50
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130213021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 51
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302130213021302130213021302033212111302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 52
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 53
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121132121113021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 54
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 55
  },
  {
    "role": "doc",
    "lines": [
      "Now introduce symbols for 'greater than' and 'less than,' and contrast with equality.",
      "Hopefully the listener will start to understand what part of the sentences are numbers, what part is a function of the relationship between the numbers, and what parts are just meaningless (for now) scaffolding around all that.",
      "There's an ambiguity between the 'greater than' and 'less than' symbols, depending on how you interpret the sentences, but it doesn't matter yet."
    ],
    "stanza": 56
  },
  {
    "role": "code",
    "lines": [
      "intro >;"
    ],
    "dt": false,
    "parse": [
      "intro",
      ">"
    ],
    "code": "121001031210032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf24b;",
    "stanza": 57
  },
  {
    "role": "code",
    "lines": [
      "intro <;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "<"
    ],
    "code": "12100103121032233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf24b;",
    "stanza": 58
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 59
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302033212111302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 60
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213020332121113021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 61
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 62
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "1210032121113021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 63
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 64
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302130213020332121113021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 65
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 66
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 67
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 68
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121132121113021302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 69
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 70
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 71
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210032121113021302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 72
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213020332121113021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 73
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 74
  },
  {
    "role": "doc",
    "lines": [
      "Add some random examples."
    ],
    "stanza": 75
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213020332121113021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 76
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "1210032121113021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 77
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "12100321211130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 78
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130213021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 79
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 80
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 81
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 82
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213021302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 83
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "1210032121113021302130213021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 84
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "121003212111302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 85
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 86
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213021302130213021302130213020332121113021302130213021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 87
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 88
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302130213020332121113021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 89
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 90
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130203321211130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 91
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130203321211130213021302130213021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 92
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113020332121113021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 93
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 94
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 95
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302033212111302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 96
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302033212111302130213021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 97
  },
  {
    "role": "doc",
    "lines": [
      "Even more random examples.  We shouldn't be shy about piling on examples at this early stage of the message.  Even just the repetition of the sentence structure with many small variations could help guide the listener at a more fundamental level than what we're ostensibly trying to communicate here."
    ],
    "stanza": 98
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 99
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210032121113021302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 100
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302033212111302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 101
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 102
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 103
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 104
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302033212111302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 105
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "1210032121113021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 106
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "1210032121113021302130203321211130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 107
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 108
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 109
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210032121113021302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 110
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 111
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302033212111302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 112
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 113
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 114
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 115
  },
  {
    "role": "code",
    "lines": [
      "> (unary 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213020332121113021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 116
  },
  {
    "role": "code",
    "lines": [
      "< (unary 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 117
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 118
  },
  {
    "role": "code",
    "lines": [
      "< (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130203321211130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 119
  },
  {
    "role": "file",
    "lines": [
      "== COS_NotLogic =="
    ],
    "stanza": 120
  },
  {
    "role": "doc",
    "lines": [
      "",
      "At this point, the listener can find numbers in our sentences, and has some",
      "idea of symbols related to equality and inequality.  But the structure of the",
      "sentences remains a mystery.  Let's introduce more math, so that we can show",
      "different sentence structures.  First, let's introduce logical negation.",
      "We construct some sentences the listener should know are wrong, and put \"not\"",
      "in front of them.",
      "",
      ""
    ],
    "section_description": "introduce logical negation",
    "section_category": "MATH",
    "section_index": 2,
    "stanza": 121
  },
  {
    "role": "code",
    "lines": [
      "intro not;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "not"
    ],
    "code": "121001031210132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf24b;",
    "stanza": 122
  },
  {
    "role": "doc",
    "lines": [
      "Show an equality, then negate two conflicting inequalities."
    ],
    "stanza": 123
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "121132121113020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 124
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121013023121032121113020332121113020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 125
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1210130231210032121113020332121113020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 126
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 127
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312103212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 128
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121013023121003212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 129
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121132121113021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 130
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121013023121032121113021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 131
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231210032121113021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 132
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 133
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231210321211130213021302033212111302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 134
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312100321211130213021302033212111302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 135
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121132121113021302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 136
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121013023121032121113021302130213020332121113021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 137
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231210032121113021302130213020332121113021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 138
  },
  {
    "role": "doc",
    "lines": [
      "Show an inequality, then two negations."
    ],
    "stanza": 139
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213021302130203321211130213021302130213021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 140
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321211130213021302130203321211130213021302130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 141
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312100321211130213021302130203321211130213021302130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 142
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 143
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121013023121132121113021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 144
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231210032121113021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 145
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121032121113021302033212111302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 146
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121013023121132121113021302033212111302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 147
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231210032121113021302033212111302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 148
  },
  {
    "role": "code",
    "lines": [
      "< (unary  0) (unary  1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12103212111302033212111302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 149
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  0) (unary  1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312113212111302033212111302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 150
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  0) (unary  1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121013023121003212111302033212111302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 151
  },
  {
    "role": "code",
    "lines": [
      "< (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "<",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1210321211130213021302130213021302130213021302033212111302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 152
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321211130213021302130213021302130213021302033212111302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 153
  },
  {
    "role": "code",
    "lines": [
      "not | > (unary  1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312100321211130213021302130213021302130213021302033212111302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 154
  },
  {
    "role": "doc",
    "lines": [
      "Show another batch of inequalities with negations."
    ],
    "stanza": 155
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130213021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 156
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312113212111302130213021302130213021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 157
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312103212111302130213021302130213021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 158
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130213021302130213021302130213021302033212111302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 159
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312113212111302130213021302130213021302130213021302130213021302033212111302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 160
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312103212111302130213021302130213021302130213021302130213021302033212111302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 161
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121003212111302130213021302130213021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 162
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312113212111302130213021302130213021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 163
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12101302312103212111302130213021302130213021302130213021302130203321211130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 164
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213020332121113020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 165
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321211130213021302130213020332121113020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 166
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1210130231210321211130213021302130213020332121113020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 167
  },
  {
    "role": "code",
    "lines": [
      "> (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      ">",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12100321211130213021302130213021302130213021302130213021302130213021302130213020332121113021302130213021302130213021302130213020332233",
    "spider": "&#xf148;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 168
  },
  {
    "role": "code",
    "lines": [
      "not | = (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321211130213021302130213021302130213021302130213021302130213021302130213020332121113021302130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 169
  },
  {
    "role": "code",
    "lines": [
      "not | < (unary  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0) (unary  1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231210321211130213021302130213021302130213021302130213021302130213021302130213020332121113021302130213021302130213021302130213020332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 170
  },
  {
    "role": "file",
    "lines": [
      "== COS_Addition =="
    ],
    "stanza": 171
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Let's introduce some arithmetic, to show off still more sentence structure.",
      "We show sentences of the mathematical form `X = Y + Z`, which in our message look like",
      "`= X | + Y Z`.  From this, and the negation lesson, the listener will hopefully",
      "start picking up on how to chain operations.",
      "",
      "If the listener didn't already have a pretty clear idea of what `=` is,",
      "then these sentences could just as easily be interpreted as being about subtraction.",
      "Even having an idea of `=`, syntax is still fuzzy enough that this lesson may not",
      "be unambiguous by itself.",
      ""
    ],
    "section_description": "introduce addition",
    "section_category": "MATH",
    "section_index": 3,
    "stanza": 172
  },
  {
    "role": "code",
    "lines": [
      "intro +;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "+"
    ],
    "code": "1210010312101032233",
    "spider": "&#xf156;&#xf24a;&#xf14e;&#xf24b;",
    "stanza": 173
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | + (unary  0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213020330231210103212111302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 174
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302130213020330231210103212111302130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 175
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | + (unary  1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213020330231210103212111302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 176
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  0) (unary  1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121010321211130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 177
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121010321211130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 178
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | + (unary  1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130203302312101032121113021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 179
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | + (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312101032121113020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 180
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121010321211130213021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 181
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | + (unary  1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130203302312101032121113021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 182
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | + (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121010321211130213021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 183
  },
  {
    "role": "file",
    "lines": [
      "== COS_Subtraction =="
    ],
    "stanza": 184
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Introduce subtraction via `= X | - Y Z` sentences.  Until syntax is fully understood,",
      "an ambiguity may remain between this and addition.",
      ""
    ],
    "section_description": "introduce subtraction",
    "section_category": "MATH",
    "section_index": 4,
    "stanza": 185
  },
  {
    "role": "code",
    "lines": [
      "intro -;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "-"
    ],
    "code": "1210010312101132233",
    "spider": "&#xf156;&#xf24a;&#xf14f;&#xf24b;",
    "stanza": 186
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | - (unary  1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302033023121011321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 187
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302130203302312101132121113021302130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 188
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | - (unary  1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213020330231210113212111302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 189
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | - (unary  1 1 1 1 0) (unary  1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113020330231210113212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 190
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | - (unary  1 1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213020330231210113212111302130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 191
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 0) | - (unary  1 1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213020330231210113212111302130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 192
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | - (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312101132121113020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 193
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121011321211130213021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 194
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | - (unary  1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302033023121011321211130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 195
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | - (unary  1 1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "-",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121011321211130213021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 196
  },
  {
    "role": "file",
    "lines": [
      "== COS_Multiplication =="
    ],
    "stanza": 197
  },
  {
    "role": "doc",
    "lines": [
      "",
      "While we're at it, let's introduce multiplication with `= X | * Y Z` sentences.",
      "As for addition and subtraction, there will be some ambiguity as to whether we are",
      "presenting multiplication or division here, until syntax is clearly understood.",
      ""
    ],
    "section_description": "introduce multiplication",
    "section_category": "MATH",
    "section_index": 5,
    "stanza": 198
  },
  {
    "role": "code",
    "lines": [
      "intro *;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "*"
    ],
    "code": "1210010312100132233",
    "spider": "&#xf156;&#xf24a;&#xf14d;&#xf24b;",
    "stanza": 199
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 200
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302033023121001321211130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 201
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113020330231210013212111302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 202
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 203
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "12113212111302033023121001321211130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 204
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 0) | * (unary  1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213020330231210013212111302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 205
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | * (unary  1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130203302312100132121113021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 206
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302033023121001321211130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 207
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113020330231210013212111302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 208
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | * (unary  1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130203302312100132121113021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 209
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 0) | * (unary  1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121001321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 210
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 0) | * (unary  1 1 0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302130213020330231210013212111302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 211
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 212
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302033023121001321211130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 213
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 0) | * (unary  1 1 1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302130213020330231210013212111302130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 214
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 1 1 1 1 1 1 0) | * (unary  1 1 1 0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130213021302130213021302130203302312100132121113021302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 215
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302033023121001321211130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 216
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302033023121001321211130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 217
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113020330231210013212111302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 218
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 219
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 1 0) | * (unary  1 1 1 0) (unary  1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302033023121001321211130213021302130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 220
  },
  {
    "role": "code",
    "lines": [
      "= (unary  1 1 0) | * (unary  1 0) (unary  1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130203302312100132121113021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 221
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 222
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 223
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113020330231210013212111302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 224
  },
  {
    "role": "code",
    "lines": [
      "= (unary  0) | * (unary  1 1 1 0) (unary  0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 225
  },
  {
    "role": "file",
    "lines": [
      "== COS_Binary =="
    ],
    "stanza": 226
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Switch from unary numbers to another representation.  The best representation",
      "will depend on the details of how the message is being transmitted, and the",
      "rest of the message doesn't depend on that choice for correctness (though the",
      "choice will have implications for how easy the message will be to interpret).",
      "As a base-line, imagine we use a binary representation.",
      "",
      "It isn't important for the listener to understand, but it might be worth explaining",
      "at this point how the unary representation worked.  In fact there's no special",
      "syntax used, just three objects:",
      "",
      " * The number `0`.",
      " * The number `1`.",
      " * A function (called `unary` in English) that takes a value and:",
      "   - If passed `0`, the function returns `0`",
      "   - If passed `1`, the function returns another function, just like itself,",
      "     except with any ultimate return value increased by `1`.",
      "",
      "Using syntax defined later in the message, `unary` could be defined as:",
      "",
      "```",
      "@ unary-v | ? v | ? x | if (= $x 0) $v (unary-v | + $v 1)",
      "@ unary | unary-v 0",
      "```",
      "",
      "If you know Lisp/Scheme/etc, just read `@` as `define`, `?` as",
      "`lambda`, and `|` as opening a parenthesis that gets closed at the end",
      "of the statement.",
      "",
      "Anyway, all of this is a digression, but it is worth knowing that as much as possible",
      "the message is built from itself, so that in the end everything dovetails nicely.",
      "",
      ""
    ],
    "section_description": "introduce non-unary representation of numbers",
    "section_category": "MATH",
    "section_index": 6,
    "stanza": 227
  },
  {
    "role": "code",
    "lines": [
      "= 0 (unary 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        "unary",
        "0"
      ]
    ],
    "code": "1211302032121113020332233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 228
  },
  {
    "role": "code",
    "lines": [
      "= 1 (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12113021321211130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 229
  },
  {
    "role": "code",
    "lines": [
      "= 2 (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302103212111302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 230
  },
  {
    "role": "code",
    "lines": [
      "= 3 (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021132121113021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 231
  },
  {
    "role": "code",
    "lines": [
      "= 4 (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302100321211130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 232
  },
  {
    "role": "code",
    "lines": [
      "= 5 (unary 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021013212111302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 233
  },
  {
    "role": "code",
    "lines": [
      "= 6 (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130211032121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 234
  },
  {
    "role": "code",
    "lines": [
      "= 7 (unary 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302111321211130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 235
  },
  {
    "role": "code",
    "lines": [
      "= 8 (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130210003212111302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 236
  },
  {
    "role": "code",
    "lines": [
      "= 9 (unary 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302100132121113021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 237
  },
  {
    "role": "code",
    "lines": [
      "= 10 (unary 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "10",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021010321211130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 238
  },
  {
    "role": "code",
    "lines": [
      "= 11 (unary 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130210113212111302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 239
  },
  {
    "role": "code",
    "lines": [
      "= 12 (unary 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "12",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302110032121113021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf210;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 240
  },
  {
    "role": "code",
    "lines": [
      "= 13 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "13",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021101321211130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf211;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 241
  },
  {
    "role": "code",
    "lines": [
      "= 14 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "14",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130211103212111302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf212;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 242
  },
  {
    "role": "code",
    "lines": [
      "= 15 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302111132121113021302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 243
  },
  {
    "role": "code",
    "lines": [
      "= 1 (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12113021321211130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 244
  },
  {
    "role": "code",
    "lines": [
      "= 2 (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302103212111302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 245
  },
  {
    "role": "code",
    "lines": [
      "= 4 (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302100321211130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 246
  },
  {
    "role": "code",
    "lines": [
      "= 8 (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130210003212111302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 247
  },
  {
    "role": "code",
    "lines": [
      "= 16 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130210000321211130213021302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 248
  },
  {
    "role": "code",
    "lines": [
      "= 5 (unary 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021013212111302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 249
  },
  {
    "role": "code",
    "lines": [
      "= 14 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "14",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130211103212111302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf212;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 250
  },
  {
    "role": "code",
    "lines": [
      "= 2 (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        "unary",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302103212111302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 251
  },
  {
    "role": "code",
    "lines": [
      "= 3 (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        "unary",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021132121113021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 252
  },
  {
    "role": "code",
    "lines": [
      "= 0 (unary 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        "unary",
        "0"
      ]
    ],
    "code": "1211302032121113020332233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 253
  },
  {
    "role": "code",
    "lines": [
      "= 13 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "13",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021101321211130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf211;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 254
  },
  {
    "role": "code",
    "lines": [
      "= 11 (unary 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130210113212111302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 255
  },
  {
    "role": "code",
    "lines": [
      "= 1 (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        "unary",
        "1",
        "0"
      ]
    ],
    "code": "12113021321211130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 256
  },
  {
    "role": "code",
    "lines": [
      "= 9 (unary 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302100132121113021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 257
  },
  {
    "role": "code",
    "lines": [
      "= 15 (unary 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302111132121113021302130213021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 258
  },
  {
    "role": "code",
    "lines": [
      "= 8 (unary 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130210003212111302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 259
  },
  {
    "role": "code",
    "lines": [
      "= 7 (unary 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302111321211130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 260
  },
  {
    "role": "code",
    "lines": [
      "= 6 (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "121130211032121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 261
  },
  {
    "role": "code",
    "lines": [
      "= 4 (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302100321211130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 262
  },
  {
    "role": "code",
    "lines": [
      "= 12 (unary 1 1 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "12",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "1211302110032121113021302130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf210;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 263
  },
  {
    "role": "code",
    "lines": [
      "= 10 (unary 1 1 1 1 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "10",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ]
    ],
    "code": "12113021010321211130213021302130213021302130213021302130213020332233",
    "spider": "&#xf147;&#xf24a;&#xf20e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 264
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130213021302130213021302130203302312101032121113021302130213021302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 265
  },
  {
    "role": "code",
    "lines": [
      "= 9 | + 6 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        "+",
        "6",
        "3"
      ]
    ],
    "code": "1211302100130231210103021103021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf14e;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 266
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) | + (unary 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130213021302130203302312101032121113020332121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 267
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 0 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "0",
        "6"
      ]
    ],
    "code": "12113021103023121010302030211032233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf14e;&#xf24a;&#xf204;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 268
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302130213021302130213021302033023121010321211130213021302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 269
  },
  {
    "role": "code",
    "lines": [
      "= 10 | + 6 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "10",
      [
        -1,
        "+",
        "6",
        "4"
      ]
    ],
    "code": "12113021010302312101030211030210032233",
    "spider": "&#xf147;&#xf24a;&#xf20e;&#xf248;&#xf14e;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 270
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 0) | + (unary 1 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302130213020330231210103212111302130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 271
  },
  {
    "role": "code",
    "lines": [
      "= 5 | + 3 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        -1,
        "+",
        "3",
        "2"
      ]
    ],
    "code": "12113021013023121010302113021032233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf248;&#xf14e;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 272
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 0) | + (unary 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302033023121010321211130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 273
  },
  {
    "role": "code",
    "lines": [
      "= 1 | + 1 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "+",
        "1",
        "0"
      ]
    ],
    "code": "1211302130231210103021302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 274
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 0) | + (unary 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130213021302130203302312101032121113021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 275
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 2 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "2",
        "4"
      ]
    ],
    "code": "121130211030231210103021030210032233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf14e;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 276
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 1 1 0) (unary 1 1 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130213021302130213021302130213021302130203302312101032121113021302130213021302130213020332121113021302130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 277
  },
  {
    "role": "code",
    "lines": [
      "= 12 | + 6 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "12",
      [
        -1,
        "+",
        "6",
        "6"
      ]
    ],
    "code": "12113021100302312101030211030211032233",
    "spider": "&#xf147;&#xf24a;&#xf210;&#xf248;&#xf14e;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 278
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 0) | + (unary 1 1 1 1 0) (unary 1 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "+",
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302130213021302130213021302130213020330231210103212111302130213021302130203321211130213021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 279
  },
  {
    "role": "code",
    "lines": [
      "= 8 | + 4 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        "+",
        "4",
        "4"
      ]
    ],
    "code": "12113021000302312101030210030210032233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf14e;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 280
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113020330231210013212111302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 281
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 0 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "0",
        "2"
      ]
    ],
    "code": "12113020302312100130203021032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14d;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 282
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 0) | * (unary 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130203302312100132121113021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 283
  },
  {
    "role": "code",
    "lines": [
      "= 2 | * 1 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "*",
        "1",
        "2"
      ]
    ],
    "code": "121130210302312100130213021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf14d;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 284
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 0) (unary 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12113212111302033023121001321211130203321211130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 285
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 0 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "0",
        "1"
      ]
    ],
    "code": "1211302030231210013020302132233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14d;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 286
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 1 1 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113021302130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 287
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 3 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "3",
        "0"
      ]
    ],
    "code": "12113020302312100130211302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14d;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 288
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "1211321211130203302312100132121113020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 289
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 0 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "0",
        "0"
      ]
    ],
    "code": "1211302030231210013020302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14d;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 290
  },
  {
    "role": "code",
    "lines": [
      "= (unary 0) | * (unary 1 0) (unary 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "0"
        ],
        [
          "unary",
          "0"
        ]
      ]
    ],
    "code": "12113212111302033023121001321211130213020332121113020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 291
  },
  {
    "role": "code",
    "lines": [
      "= 0 | * 1 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "*",
        "1",
        "0"
      ]
    ],
    "code": "1211302030231210013021302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14d;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 292
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 0) | * (unary 1 1 0) (unary 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "121132121113021302130213021302033023121001321211130213021302033212111302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 293
  },
  {
    "role": "code",
    "lines": [
      "= 4 | * 2 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "*",
        "2",
        "2"
      ]
    ],
    "code": "12113021003023121001302103021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 294
  },
  {
    "role": "code",
    "lines": [
      "= (unary 1 1 1 1 1 1 1 1 1 0) | * (unary 1 1 1 0) (unary 1 1 1 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "unary",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "1",
        "0"
      ],
      [
        -1,
        "*",
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ],
        [
          "unary",
          "1",
          "1",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1211321211130213021302130213021302130213021302130203302312100132121113021302130213020332121113021302130213020332233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 295
  },
  {
    "role": "code",
    "lines": [
      "= 9 | * 3 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        "*",
        "3",
        "3"
      ]
    ],
    "code": "121130210013023121001302113021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf14d;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 296
  },
  {
    "role": "file",
    "lines": [
      "== COS_Evaluation =="
    ],
    "stanza": 297
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We've advanced enough that we're starting to have choices about how",
      "something is expressed.  Let's pause to acknowledge that, and",
      "reinforce some syntactic equivalences so the listener can be confident",
      "of them.",
      "",
      "Parentheses play a role in grouping expressions, just like in regular",
      "math.  To reduce the mental burden of tracking nesting, we use a `|` shortcut",
      "that means \"add parentheses between this point and as far as you can go.\"  So for",
      "example `(= 7 | + 3 4)` is equivalent to `(= 7 (+ 3 4))`.",
      ""
    ],
    "section_description": "show alternative groupings",
    "section_category": "MATH",
    "section_index": 7,
    "stanza": 298
  },
  {
    "role": "code",
    "lines": [
      "= 6 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      "6"
    ],
    "code": "121130211030211032233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 299
  },
  {
    "role": "code",
    "lines": [
      "= 6 (+ 1 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        "+",
        "1",
        "5"
      ]
    ],
    "code": "1211302110321210103021302101332233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 300
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 1 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "1",
        "5"
      ]
    ],
    "code": "12113021103023121010302130210132233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 301
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 1 (+ 4 1);"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "1",
        [
          "+",
          "4",
          "1"
        ]
      ]
    ],
    "code": "121130211030231210103021321210103021003021332233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf246;&#xf14e;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 302
  },
  {
    "role": "code",
    "lines": [
      "= 6 | + 1 | + 4 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "+",
        "1",
        [
          -1,
          "+",
          "4",
          "1"
        ]
      ]
    ],
    "code": "1211302110302312101030213023121010302100302132233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf248;&#xf14e;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 303
  },
  {
    "role": "code",
    "lines": [
      "= 6 (+ 1 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        "+",
        "1",
        "5"
      ]
    ],
    "code": "1211302110321210103021302101332233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 304
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 3) (+ 1 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "+",
        "3",
        "3"
      ],
      [
        "+",
        "1",
        "5"
      ]
    ],
    "code": "12113212101030211302113321210103021302101332233",
    "spider": "&#xf147;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 305
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 (- 5 2)) (+ 1 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "+",
        "3",
        [
          "-",
          "5",
          "2"
        ]
      ],
      [
        "+",
        "1",
        "5"
      ]
    ],
    "code": "12113212101030211321210113021013021033321210103021302101332233",
    "spider": "&#xf147;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf246;&#xf14f;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf245;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 306
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 | - 5 2) (+ 1 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "+",
        "3",
        [
          -1,
          "-",
          "5",
          "2"
        ]
      ],
      [
        "+",
        "1",
        "5"
      ]
    ],
    "code": "121132121010302113023121011302101302103321210103021302101332233",
    "spider": "&#xf147;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf248;&#xf14f;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 307
  },
  {
    "role": "code",
    "lines": [
      "= (+ 3 | - 5 2) | + 1 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "+",
        "3",
        [
          -1,
          "-",
          "5",
          "2"
        ]
      ],
      [
        -1,
        "+",
        "1",
        "5"
      ]
    ],
    "code": "1211321210103021130231210113021013021033023121010302130210132233",
    "spider": "&#xf147;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf248;&#xf14f;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 308
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "show local assignment",
    "section_category": "MATH",
    "section_index": 8,
    "stanza": 309
  },
  {
    "role": "doc",
    "lines": [
      "An expression starting with `assign` is a way to name values for use within that expression. To use the assigned value, simply place its name at the beginning of an expression.  For example, a value assigned to `x` can be used by writing `(x)`. The name is entirely arbitrary, and can be just an integer."
    ],
    "stanza": 310
  },
  {
    "role": "code",
    "lines": [
      "intro assign;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "assign"
    ],
    "code": "1210010312111032233",
    "spider": "&#xf156;&#xf24a;&#xf152;&#xf24b;",
    "stanza": 311
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | = (x) 1;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "=",
        [
          "x"
        ],
        "1"
      ]
    ],
    "code": "12111031210101130213023121132121010113302132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf205;&#xf24b;",
    "stanza": 312
  },
  {
    "role": "code",
    "lines": [
      "assign x 2 | = (x) 2;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "2",
      [
        -1,
        "=",
        [
          "x"
        ],
        "2"
      ]
    ],
    "code": "1211103121010113021030231211321210101133021032233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf206;&#xf248;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf206;&#xf24b;",
    "stanza": 313
  },
  {
    "role": "code",
    "lines": [
      "assign x 3 | = (x) 3;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "3",
      [
        -1,
        "=",
        [
          "x"
        ],
        "3"
      ]
    ],
    "code": "1211103121010113021130231211321210101133021132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf207;&#xf248;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf207;&#xf24b;",
    "stanza": 314
  },
  {
    "role": "code",
    "lines": [
      "assign y 1 | = (y) 1;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "y",
      "1",
      [
        -1,
        "=",
        [
          "y"
        ],
        "1"
      ]
    ],
    "code": "12111031211010030213023121132121101003302132233",
    "spider": "&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf246;&#xf178;&#xf245;&#xf205;&#xf24b;",
    "stanza": 315
  },
  {
    "role": "code",
    "lines": [
      "assign y 2 | = (y) 2;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "y",
      "2",
      [
        -1,
        "=",
        [
          "y"
        ],
        "2"
      ]
    ],
    "code": "1211103121101003021030231211321211010033021032233",
    "spider": "&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf206;&#xf248;&#xf147;&#xf246;&#xf178;&#xf245;&#xf206;&#xf24b;",
    "stanza": 316
  },
  {
    "role": "code",
    "lines": [
      "assign y 3 | = (y) 3;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "y",
      "3",
      [
        -1,
        "=",
        [
          "y"
        ],
        "3"
      ]
    ],
    "code": "1211103121101003021130231211321211010033021132233",
    "spider": "&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf207;&#xf248;&#xf147;&#xf246;&#xf178;&#xf245;&#xf207;&#xf24b;",
    "stanza": 317
  },
  {
    "role": "code",
    "lines": [
      "assign x 3 | = 9 (* (x) (x));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "3",
      [
        -1,
        "=",
        "9",
        [
          "*",
          [
            "x"
          ],
          [
            "x"
          ]
        ]
      ]
    ],
    "code": "12111031210101130211302312113021001321210013212101011332121010113332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf207;&#xf248;&#xf147;&#xf24a;&#xf20d;&#xf246;&#xf14d;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 318
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 (* (x) (x));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            "x"
          ],
          [
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113021003023121130210000321210013212101011332121010113332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf208;&#xf248;&#xf147;&#xf24a;&#xf214;&#xf246;&#xf14d;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 319
  },
  {
    "role": "code",
    "lines": [
      "assign z 3 | = 9 (* (z) (z));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "z",
      "3",
      [
        -1,
        "=",
        "9",
        [
          "*",
          [
            "z"
          ],
          [
            "z"
          ]
        ]
      ]
    ],
    "code": "12111031211010130211302312113021001321210013212110101332121101013332233",
    "spider": "&#xf152;&#xf24a;&#xf179;&#xf24a;&#xf207;&#xf248;&#xf147;&#xf24a;&#xf20d;&#xf246;&#xf14d;&#xf246;&#xf179;&#xf245;&#xf246;&#xf179;&#xf245;&#xf245;&#xf24b;",
    "stanza": 320
  },
  {
    "role": "code",
    "lines": [
      "assign z 4 | = 16 (* (z) (z));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "z",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            "z"
          ],
          [
            "z"
          ]
        ]
      ]
    ],
    "code": "1211103121101013021003023121130210000321210013212110101332121101013332233",
    "spider": "&#xf152;&#xf24a;&#xf179;&#xf24a;&#xf208;&#xf248;&#xf147;&#xf24a;&#xf214;&#xf246;&#xf14d;&#xf246;&#xf179;&#xf245;&#xf246;&#xf179;&#xf245;&#xf245;&#xf24b;",
    "stanza": 321
  },
  {
    "role": "code",
    "lines": [
      "assign x (+) | = 7 (x 4 3);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "+"
      ],
      [
        -1,
        "=",
        "7",
        [
          "x",
          "4",
          "3"
        ]
      ]
    ],
    "code": "12111031210101132121010330231211302111321210101130210030211332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf14e;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20b;&#xf246;&#xf16f;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 322
  },
  {
    "role": "code",
    "lines": [
      "assign y (+) | = 12 (y 6 6);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "y",
      [
        "+"
      ],
      [
        -1,
        "=",
        "12",
        [
          "y",
          "6",
          "6"
        ]
      ]
    ],
    "code": "1211103121101003212101033023121130211003212110100302110302110332233",
    "spider": "&#xf152;&#xf24a;&#xf178;&#xf246;&#xf14e;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf210;&#xf246;&#xf178;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 323
  },
  {
    "role": "code",
    "lines": [
      "assign z (+) | = 9 (z 7 2);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "z",
      [
        "+"
      ],
      [
        -1,
        "=",
        "9",
        [
          "z",
          "7",
          "2"
        ]
      ]
    ],
    "code": "121110312110101321210103302312113021001321211010130211130210332233",
    "spider": "&#xf152;&#xf24a;&#xf179;&#xf246;&#xf14e;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20d;&#xf246;&#xf179;&#xf24a;&#xf20b;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 324
  },
  {
    "role": "code",
    "lines": [
      "assign a (-) | = 1 (a 4 3);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "a",
      [
        "-"
      ],
      [
        -1,
        "=",
        "1",
        [
          "a",
          "4",
          "3"
        ]
      ]
    ],
    "code": "121110312110110321210113302312113021321211011030210030211332233",
    "spider": "&#xf152;&#xf24a;&#xf17a;&#xf246;&#xf14f;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf205;&#xf246;&#xf17a;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 325
  },
  {
    "role": "code",
    "lines": [
      "assign b (-) | = 0 (b 6 6);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "b",
      [
        "-"
      ],
      [
        -1,
        "=",
        "0",
        [
          "b",
          "6",
          "6"
        ]
      ]
    ],
    "code": "1211103121101113212101133023121130203212110111302110302110332233",
    "spider": "&#xf152;&#xf24a;&#xf17b;&#xf246;&#xf14f;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf246;&#xf17b;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 326
  },
  {
    "role": "code",
    "lines": [
      "assign c (-) | = 5 (c 7 2);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "c",
      [
        "-"
      ],
      [
        -1,
        "=",
        "5",
        [
          "c",
          "7",
          "2"
        ]
      ]
    ],
    "code": "12111031211100032121011330231211302101321211100030211130210332233",
    "spider": "&#xf152;&#xf24a;&#xf17c;&#xf246;&#xf14f;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf209;&#xf246;&#xf17c;&#xf24a;&#xf20b;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 327
  },
  {
    "role": "code",
    "lines": [
      "assign z (*) | = 12 (z 4 3);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "z",
      [
        "*"
      ],
      [
        -1,
        "=",
        "12",
        [
          "z",
          "4",
          "3"
        ]
      ]
    ],
    "code": "121110312110101321210013302312113021100321211010130210030211332233",
    "spider": "&#xf152;&#xf24a;&#xf179;&#xf246;&#xf14d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf210;&#xf246;&#xf179;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 328
  },
  {
    "role": "code",
    "lines": [
      "assign y (*) | = 36 (y 6 6);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "y",
      [
        "*"
      ],
      [
        -1,
        "=",
        "36",
        [
          "y",
          "6",
          "6"
        ]
      ]
    ],
    "code": "121110312110100321210013302312113021001003212110100302110302110332233",
    "spider": "&#xf152;&#xf24a;&#xf178;&#xf246;&#xf14d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf228;&#xf246;&#xf178;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 329
  },
  {
    "role": "code",
    "lines": [
      "assign x (*) | = 14 (x 7 2);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "*"
      ],
      [
        -1,
        "=",
        "14",
        [
          "x",
          "7",
          "2"
        ]
      ]
    ],
    "code": "121110312101011321210013302312113021110321210101130211130210332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf14d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf212;&#xf246;&#xf16f;&#xf24a;&#xf20b;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 330
  },
  {
    "role": "code",
    "lines": [
      "assign x (=) | x 4 4;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "="
      ],
      [
        -1,
        "x",
        "4",
        "4"
      ]
    ],
    "code": "121110312101011321211330231210101130210030210032233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf147;&#xf245;&#xf248;&#xf16f;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 331
  },
  {
    "role": "code",
    "lines": [
      "assign x (=) | x 4 (+ 2 2);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "="
      ],
      [
        -1,
        "x",
        "4",
        [
          "+",
          "2",
          "2"
        ]
      ]
    ],
    "code": "1211103121010113212113302312101011302100321210103021030210332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf147;&#xf245;&#xf248;&#xf16f;&#xf24a;&#xf208;&#xf246;&#xf14e;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 332
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | assign y 2 | = 3 (+ (x) (y));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "assign",
        "y",
        "2",
        [
          -1,
          "=",
          "3",
          [
            "+",
            [
              "x"
            ],
            [
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "12111031210101130213023121110312110100302103023121130211321210103212101011332121101003332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf248;&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf206;&#xf248;&#xf147;&#xf24a;&#xf207;&#xf246;&#xf14e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf178;&#xf245;&#xf245;&#xf24b;",
    "stanza": 333
  },
  {
    "role": "code",
    "lines": [
      "assign x 2 | assign y 7 | = 5 (- (y) (x));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "2",
      [
        -1,
        "assign",
        "y",
        "7",
        [
          -1,
          "=",
          "5",
          [
            "-",
            [
              "y"
            ],
            [
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12111031210101130210302312111031211010030211130231211302101321210113212110100332121010113332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf206;&#xf248;&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf20b;&#xf248;&#xf147;&#xf24a;&#xf209;&#xf246;&#xf14f;&#xf246;&#xf178;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 334
  },
  {
    "role": "code",
    "lines": [
      "assign x (+) | assign y 3 | = 4 (x 1 (y));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "+"
      ],
      [
        -1,
        "assign",
        "y",
        "3",
        [
          -1,
          "=",
          "4",
          [
            "x",
            "1",
            [
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "121110312101011321210103302312111031211010030211302312113021003212101011302132121101003332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf14e;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf207;&#xf248;&#xf147;&#xf24a;&#xf208;&#xf246;&#xf16f;&#xf24a;&#xf205;&#xf246;&#xf178;&#xf245;&#xf245;&#xf24b;",
    "stanza": 335
  },
  {
    "role": "doc",
    "lines": [
      "We are pretty ruthless about adding syntax to reduce parentheses.  So let's allow writing `(x)` as `$x` (or equivalent in other renderings).  This and `|` are in fact global options for the message that you can turn off if they are not to your taste."
    ],
    "stanza": 336
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | = (x) 1;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "=",
        [
          "x"
        ],
        "1"
      ]
    ],
    "code": "12111031210101130213023121132121010113302132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf205;&#xf24b;",
    "stanza": 337
  },
  {
    "role": "code",
    "lines": [
      "assign x 1 | = $x 1;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "1",
      [
        -1,
        "=",
        [
          -2,
          "x"
        ],
        "1"
      ]
    ],
    "code": "121110312101011302130231211312312101011302132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 338
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 (* (x) (x));"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            "x"
          ],
          [
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113021003023121130210000321210013212101011332121010113332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf208;&#xf248;&#xf147;&#xf24a;&#xf214;&#xf246;&#xf14d;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 339
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 (* $x $x);"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          "*",
          [
            -2,
            "x"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121110312101011302100302312113021000032121001312312101011312312101011332233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf208;&#xf248;&#xf147;&#xf24a;&#xf214;&#xf246;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 340
  },
  {
    "role": "code",
    "lines": [
      "assign x 4 | = 16 | * $x $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      "4",
      [
        -1,
        "=",
        "16",
        [
          -1,
          "*",
          [
            -2,
            "x"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113021003023121130210000302312100131231210101131231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf208;&#xf248;&#xf147;&#xf24a;&#xf214;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 341
  },
  {
    "role": "doc",
    "lines": [
      "Add more examples to give hints about scoping and other odd corners."
    ],
    "stanza": 342
  },
  {
    "role": "code",
    "lines": [
      "= 2 | assign x 1 | + $x 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "assign",
        "x",
        "1",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ]
    ],
    "code": "121130210302312111031210101130213023121010312312101011302132233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 343
  },
  {
    "role": "code",
    "lines": [
      "= 1 | assign x 1 $x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "assign",
        "x",
        "1",
        [
          -2,
          "x"
        ]
      ]
    ],
    "code": "121130213023121110312101011302131231210101132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 344
  },
  {
    "role": "code",
    "lines": [
      "= 14 | assign x 1 14;"
    ],
    "dt": false,
    "parse": [
      "=",
      "14",
      [
        -1,
        "assign",
        "x",
        "1",
        "14"
      ]
    ],
    "code": "1211302111030231211103121010113021302111032233",
    "spider": "&#xf147;&#xf24a;&#xf212;&#xf248;&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf24a;&#xf212;&#xf24b;",
    "stanza": 345
  },
  {
    "role": "code",
    "lines": [
      "= 4 | assign x (assign y 3 | + 1 $y) $x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "assign",
        "x",
        [
          "assign",
          "y",
          "3",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "y"
            ]
          ]
        ],
        [
          -2,
          "x"
        ]
      ]
    ],
    "code": "12113021003023121110312101011321211103121101003021130231210103021312312110100331231210101132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf207;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf178;&#xf245;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 346
  },
  {
    "role": "code",
    "lines": [
      "= 4 | assign x (assign x 3 | + 1 $x) $x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "assign",
        "x",
        [
          "assign",
          "x",
          "3",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        [
          -2,
          "x"
        ]
      ]
    ],
    "code": "12113021003023121110312101011321211103121010113021130231210103021312312101011331231210101132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf207;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 347
  },
  {
    "role": "doc",
    "lines": [
      "We're ready for functions.  `?` starts a lambda function.  Now we can have fun!"
    ],
    "stanza": 348
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? x $x) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "0"
      ]
    ],
    "code": "12113020302321211003121010113123121010113302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf24b;",
    "stanza": 349
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? x $x) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "1"
      ]
    ],
    "code": "12113021302321211003121010113123121010113302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf205;&#xf24b;",
    "stanza": 350
  },
  {
    "role": "code",
    "lines": [
      "= 2 | (? x $x) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "2"
      ]
    ],
    "code": "1211302103023212110031210101131231210101133021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf206;&#xf24b;",
    "stanza": 351
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (? x $x) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "3"
      ]
    ],
    "code": "1211302113023212110031210101131231210101133021132233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf207;&#xf24b;",
    "stanza": 352
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? x $x) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "4"
      ]
    ],
    "code": "121130210030232121100312101011312312101011330210032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf208;&#xf24b;",
    "stanza": 353
  },
  {
    "role": "code",
    "lines": [
      "= 5 | (? x $x) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        -1,
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        "5"
      ]
    ],
    "code": "121130210130232121100312101011312312101011330210132233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf209;&#xf24b;",
    "stanza": 354
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? x | + 1 $x) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "0"
      ]
    ],
    "code": "1211302130232121100312101011302312101030213123121010113302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf24b;",
    "stanza": 355
  },
  {
    "role": "code",
    "lines": [
      "= 2 | (? x | + 1 $x) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "1"
      ]
    ],
    "code": "12113021030232121100312101011302312101030213123121010113302132233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf205;&#xf24b;",
    "stanza": 356
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (? x | + 1 $x) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "2"
      ]
    ],
    "code": "121130211302321211003121010113023121010302131231210101133021032233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf206;&#xf24b;",
    "stanza": 357
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? x | + 1 $x) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "3"
      ]
    ],
    "code": "1211302100302321211003121010113023121010302131231210101133021132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf207;&#xf24b;",
    "stanza": 358
  },
  {
    "role": "code",
    "lines": [
      "= 5 | (? x | + 1 $x) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "4"
      ]
    ],
    "code": "12113021013023212110031210101130231210103021312312101011330210032233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf208;&#xf24b;",
    "stanza": 359
  },
  {
    "role": "code",
    "lines": [
      "= 6 | (? x | + 1 $x) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "+",
            "1",
            [
              -2,
              "x"
            ]
          ]
        ],
        "5"
      ]
    ],
    "code": "12113021103023212110031210101130231210103021312312101011330210132233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf209;&#xf24b;",
    "stanza": 360
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? x | * $x $x) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "0"
      ]
    ],
    "code": "121130203023212110031210101130231210013123121010113123121010113302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf24b;",
    "stanza": 361
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? x | * $x $x) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "1"
      ]
    ],
    "code": "121130213023212110031210101130231210013123121010113123121010113302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf205;&#xf24b;",
    "stanza": 362
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? x | * $x $x) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "2"
      ]
    ],
    "code": "121130210030232121100312101011302312100131231210101131231210101133021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf206;&#xf24b;",
    "stanza": 363
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? x | * $x $x) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "3"
      ]
    ],
    "code": "1211302100130232121100312101011302312100131231210101131231210101133021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf207;&#xf24b;",
    "stanza": 364
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? x | * $x $x) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "4"
      ]
    ],
    "code": "121130210000302321211003121010113023121001312312101011312312101011330210032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf208;&#xf24b;",
    "stanza": 365
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? x | * $x $x) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -2,
              "x"
            ]
          ]
        ],
        "5"
      ]
    ],
    "code": "121130211001302321211003121010113023121001312312101011312312101011330210132233",
    "spider": "&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf209;&#xf24b;",
    "stanza": 366
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? y | * $y $y) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "0"
      ]
    ],
    "code": "121130203023212110031211010030231210013123121101003123121101003302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf204;&#xf24b;",
    "stanza": 367
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? y | * $y $y) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "1"
      ]
    ],
    "code": "121130213023212110031211010030231210013123121101003123121101003302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf205;&#xf24b;",
    "stanza": 368
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? y | * $y $y) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "2"
      ]
    ],
    "code": "121130210030232121100312110100302312100131231211010031231211010033021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf206;&#xf24b;",
    "stanza": 369
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? y | * $y $y) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "3"
      ]
    ],
    "code": "1211302100130232121100312110100302312100131231211010031231211010033021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf207;&#xf24b;",
    "stanza": 370
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? y | * $y $y) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4"
      ]
    ],
    "code": "121130210000302321211003121101003023121001312312110100312312110100330210032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf208;&#xf24b;",
    "stanza": 371
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? y | * $y $y) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "y",
          [
            -1,
            "*",
            [
              -2,
              "y"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "5"
      ]
    ],
    "code": "121130211001302321211003121101003023121001312312110100312312110100330210132233",
    "spider": "&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf209;&#xf24b;",
    "stanza": 372
  },
  {
    "role": "doc",
    "lines": [
      "Emphasize the arbitrary nature of names, and hint that things we've learned already like addition could possibly be re-imagined as a named value."
    ],
    "stanza": 373
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? + | * $+ $+) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "0"
      ]
    ],
    "code": "121130203023212110031210103023121001312312101031231210103302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf14e;&#xf248;&#xf14d;&#xf249;&#xf14e;&#xf249;&#xf14e;&#xf245;&#xf204;&#xf24b;",
    "stanza": 374
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? + | * $+ $+) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "1"
      ]
    ],
    "code": "121130213023212110031210103023121001312312101031231210103302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf14e;&#xf248;&#xf14d;&#xf249;&#xf14e;&#xf249;&#xf14e;&#xf245;&#xf205;&#xf24b;",
    "stanza": 375
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? + | * $+ $+) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "2"
      ]
    ],
    "code": "121130210030232121100312101030231210013123121010312312101033021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf14e;&#xf248;&#xf14d;&#xf249;&#xf14e;&#xf249;&#xf14e;&#xf245;&#xf206;&#xf24b;",
    "stanza": 376
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? + | * $+ $+) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "3"
      ]
    ],
    "code": "1211302100130232121100312101030231210013123121010312312101033021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf14e;&#xf248;&#xf14d;&#xf249;&#xf14e;&#xf249;&#xf14e;&#xf245;&#xf207;&#xf24b;",
    "stanza": 377
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? + | * $+ $+) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "4"
      ]
    ],
    "code": "121130210000302321211003121010302312100131231210103123121010330210032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf14e;&#xf248;&#xf14d;&#xf249;&#xf14e;&#xf249;&#xf14e;&#xf245;&#xf208;&#xf24b;",
    "stanza": 378
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? + | * $+ $+) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "+",
          [
            -1,
            "*",
            [
              -2,
              "+"
            ],
            [
              -2,
              "+"
            ]
          ]
        ],
        "5"
      ]
    ],
    "code": "121130211001302321211003121010302312100131231210103123121010330210132233",
    "spider": "&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf14e;&#xf248;&#xf14d;&#xf249;&#xf14e;&#xf249;&#xf14e;&#xf245;&#xf209;&#xf24b;",
    "stanza": 379
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (? 5 | * $5 $5) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "0"
      ]
    ],
    "code": "121130203023212110030210130231210013123021013123021013302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf249;&#xf209;&#xf249;&#xf209;&#xf245;&#xf204;&#xf24b;",
    "stanza": 380
  },
  {
    "role": "code",
    "lines": [
      "= 1 | (? 5 | * $5 $5) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "1"
      ]
    ],
    "code": "121130213023212110030210130231210013123021013123021013302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf249;&#xf209;&#xf249;&#xf209;&#xf245;&#xf205;&#xf24b;",
    "stanza": 381
  },
  {
    "role": "code",
    "lines": [
      "= 4 | (? 5 | * $5 $5) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "2"
      ]
    ],
    "code": "121130210030232121100302101302312100131230210131230210133021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf249;&#xf209;&#xf249;&#xf209;&#xf245;&#xf206;&#xf24b;",
    "stanza": 382
  },
  {
    "role": "code",
    "lines": [
      "= 9 | (? 5 | * $5 $5) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "3"
      ]
    ],
    "code": "1211302100130232121100302101302312100131230210131230210133021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf249;&#xf209;&#xf249;&#xf209;&#xf245;&#xf207;&#xf24b;",
    "stanza": 383
  },
  {
    "role": "code",
    "lines": [
      "= 16 | (? 5 | * $5 $5) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "4"
      ]
    ],
    "code": "121130210000302321211003021013023121001312302101312302101330210032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf249;&#xf209;&#xf249;&#xf209;&#xf245;&#xf208;&#xf24b;",
    "stanza": 384
  },
  {
    "role": "code",
    "lines": [
      "= 25 | (? 5 | * $5 $5) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "25",
      [
        -1,
        [
          "?",
          "5",
          [
            -1,
            "*",
            [
              -2,
              "5"
            ],
            [
              -2,
              "5"
            ]
          ]
        ],
        "5"
      ]
    ],
    "code": "121130211001302321211003021013023121001312302101312302101330210132233",
    "spider": "&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf249;&#xf209;&#xf249;&#xf209;&#xf245;&#xf209;&#xf24b;",
    "stanza": 385
  },
  {
    "role": "doc",
    "lines": [
      "Show that we can name functions and use them later - still within a single expression for now."
    ],
    "stanza": 386
  },
  {
    "role": "code",
    "lines": [
      "assign x (? y | * $y $y) | = 25 | x 5;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "?",
        "y",
        [
          -1,
          "*",
          [
            -2,
            "y"
          ],
          [
            -2,
            "y"
          ]
        ]
      ],
      [
        -1,
        "=",
        "25",
        [
          -1,
          "x",
          "5"
        ]
      ]
    ],
    "code": "1211103121010113212110031211010030231210013123121101003123121101003302312113021100130231210101130210132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf178;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf16f;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 387
  },
  {
    "role": "code",
    "lines": [
      "assign x (? y | + $y 1) | = 6 | x 5;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "?",
        "y",
        [
          -1,
          "+",
          [
            -2,
            "y"
          ],
          "1"
        ]
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "x",
          "5"
        ]
      ]
    ],
    "code": "121110312101011321211003121101003023121010312312110100302133023121130211030231210101130210132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14e;&#xf249;&#xf178;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf16f;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 388
  },
  {
    "role": "code",
    "lines": [
      "assign x (? x | + $x 1) | = 6 | x 5;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "?",
        "x",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "x",
          "5"
        ]
      ]
    ],
    "code": "121110312101011321211003121010113023121010312312101011302133023121130211030231210101130210132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf16f;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 389
  },
  {
    "role": "code",
    "lines": [
      "assign y (? x | + $x 1) | = 6 | y 5;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "y",
      [
        "?",
        "x",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "y",
          "5"
        ]
      ]
    ],
    "code": "121110312110100321211003121010113023121010312312101011302133023121130211030231211010030210132233",
    "spider": "&#xf152;&#xf24a;&#xf178;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf178;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 390
  },
  {
    "role": "doc",
    "lines": [
      "Show that we can nest functions to take multiple values."
    ],
    "stanza": 391
  },
  {
    "role": "code",
    "lines": [
      "= 52 | * 4 13;"
    ],
    "dt": false,
    "parse": [
      "=",
      "52",
      [
        -1,
        "*",
        "4",
        "13"
      ]
    ],
    "code": "12113021101003023121001302100302110132233",
    "spider": "&#xf147;&#xf24a;&#xf238;&#xf248;&#xf14d;&#xf24a;&#xf208;&#xf24a;&#xf211;&#xf24b;",
    "stanza": 392
  },
  {
    "role": "code",
    "lines": [
      "= 52 | (? x | * $x 4) 13;"
    ],
    "dt": false,
    "parse": [
      "=",
      "52",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "4"
          ]
        ],
        "13"
      ]
    ],
    "code": "12113021101003023212110031210101130231210013123121010113021003302110132233",
    "spider": "&#xf147;&#xf24a;&#xf238;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf211;&#xf24b;",
    "stanza": 393
  },
  {
    "role": "code",
    "lines": [
      "= 52 | (? x | ? y | * $x $y) 13 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "52",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "*",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ],
        "13",
        "4"
      ]
    ],
    "code": "121130211010030232121100312101011302312110031211010030231210013123121010113123121101003302110130210032233",
    "spider": "&#xf147;&#xf24a;&#xf238;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf211;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 394
  },
  {
    "role": "code",
    "lines": [
      "= 53 | (? x | ? y | + 1 | * $x $y) 13 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "53",
      [
        -1,
        [
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "+",
              "1",
              [
                -1,
                "*",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ],
        "13",
        "4"
      ]
    ],
    "code": "12113021101013023212110031210101130231211003121101003023121010302130231210013123121010113123121101003302110130210032233",
    "spider": "&#xf147;&#xf24a;&#xf239;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf211;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 395
  },
  {
    "role": "code",
    "lines": [
      "assign z (? x | ? y | + 1 | * $x $y) | = 53 | z 13 4;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "z",
      [
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "+",
            "1",
            [
              -1,
              "*",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "53",
        [
          -1,
          "z",
          "13",
          "4"
        ]
      ]
    ],
    "code": "121110312110101321211003121010113023121100312110100302312101030213023121001312312101011312312110100330231211302110101302312110101302110130210032233",
    "spider": "&#xf152;&#xf24a;&#xf179;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf239;&#xf248;&#xf179;&#xf24a;&#xf211;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 396
  },
  {
    "role": "file",
    "lines": [
      "== COS_DefineFunction =="
    ],
    "stanza": 397
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We've set up a way to name a value within an expression.  Now let's go beyond that,",
      "and introduce a way to name a value in one sentence and use it in a later sentence.",
      "In other words, a message-level memory.  After this, we'll be able to define new",
      "symbols from existing ones, with less need for large numbers of examples.",
      "",
      "We introduce a `define` symbol that works just like `assign`, except that it applies",
      "to the rest of the message rather than the rest of the sentence.",
      "",
      "A sentence of the form `define X Y` means that `$X` will evaluate to `Y` from that",
      "point on (unless `X` is changed by another `define`).",
      "",
      "The `meaning-of-life-universe-everything` symbol here is entirely arbitrary, and",
      "won't be encoded as anything particularly meaningful in the message.",
      ""
    ],
    "section_description": "demonstrate existence of memory",
    "section_category": "MATH",
    "section_index": 9,
    "stanza": 398
  },
  {
    "role": "code",
    "lines": [
      "define meaning-of-life-universe-everything 39;"
    ],
    "dt": true,
    "parse": [
      "@",
      "meaning-of-life-universe-everything",
      "39"
    ],
    "code": "12110131211100130210011132233",
    "spider": "&#xf151;&#xf24a;&#xf17d;&#xf24a;&#xf22b;&#xf24b;",
    "stanza": 399
  },
  {
    "role": "code",
    "lines": [
      "= 39 $meaning-of-life-universe-everything;"
    ],
    "dt": false,
    "parse": [
      "=",
      "39",
      [
        -2,
        "meaning-of-life-universe-everything"
      ]
    ],
    "code": "121130210011131231211100132233",
    "spider": "&#xf147;&#xf24a;&#xf22b;&#xf249;&#xf17d;&#xf24b;",
    "stanza": 400
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 39;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "39"
    ],
    "code": "121131231211100130210011132233",
    "spider": "&#xf147;&#xf249;&#xf17d;&#xf24a;&#xf22b;&#xf24b;",
    "stanza": 401
  },
  {
    "role": "code",
    "lines": [
      "= 49 | + 10 $meaning-of-life-universe-everything;"
    ],
    "dt": false,
    "parse": [
      "=",
      "49",
      [
        -1,
        "+",
        "10",
        [
          -2,
          "meaning-of-life-universe-everything"
        ]
      ]
    ],
    "code": "12113021100013023121010302101031231211100132233",
    "spider": "&#xf147;&#xf24a;&#xf235;&#xf248;&#xf14e;&#xf24a;&#xf20e;&#xf249;&#xf17d;&#xf24b;",
    "stanza": 402
  },
  {
    "role": "code",
    "lines": [
      "define meaning-of-life-universe-everything 40;"
    ],
    "dt": true,
    "parse": [
      "@",
      "meaning-of-life-universe-everything",
      "40"
    ],
    "code": "12110131211100130210100032233",
    "spider": "&#xf151;&#xf24a;&#xf17d;&#xf24a;&#xf22c;&#xf24b;",
    "stanza": 403
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 40;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "40"
    ],
    "code": "121131231211100130210100032233",
    "spider": "&#xf147;&#xf249;&#xf17d;&#xf24a;&#xf22c;&#xf24b;",
    "stanza": 404
  },
  {
    "role": "code",
    "lines": [
      "= 80 | * $meaning-of-life-universe-everything 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "80",
      [
        -1,
        "*",
        [
          -2,
          "meaning-of-life-universe-everything"
        ],
        "2"
      ]
    ],
    "code": "1211302101000030231210013123121110013021032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf214;&#xf248;&#xf14d;&#xf249;&#xf17d;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 405
  },
  {
    "role": "code",
    "lines": [
      "define meaning-of-life-universe-everything | + 1 $meaning-of-life-universe-everything;"
    ],
    "dt": true,
    "parse": [
      "@",
      "meaning-of-life-universe-everything",
      [
        -1,
        "+",
        "1",
        [
          -2,
          "meaning-of-life-universe-everything"
        ]
      ]
    ],
    "code": "1211013121110013023121010302131231211100132233",
    "spider": "&#xf151;&#xf24a;&#xf17d;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf17d;&#xf24b;",
    "stanza": 406
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 41;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "41"
    ],
    "code": "121131231211100130210100132233",
    "spider": "&#xf147;&#xf249;&#xf17d;&#xf24a;&#xf22d;&#xf24b;",
    "stanza": 407
  },
  {
    "role": "code",
    "lines": [
      "assign x (+ 1 $meaning-of-life-universe-everything) | define meaning-of-life-universe-everything $x;"
    ],
    "dt": true,
    "parse": [
      "assign",
      "x",
      [
        "+",
        "1",
        [
          -2,
          "meaning-of-life-universe-everything"
        ]
      ],
      [
        -1,
        "@",
        "meaning-of-life-universe-everything",
        [
          -2,
          "x"
        ]
      ]
    ],
    "code": "1211103121010113212101030213123121110013302312110131211100131231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf17d;&#xf245;&#xf248;&#xf151;&#xf24a;&#xf17d;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 408
  },
  {
    "role": "code",
    "lines": [
      "= $meaning-of-life-universe-everything 42;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "meaning-of-life-universe-everything"
      ],
      "42"
    ],
    "code": "121131231211100130210101032233",
    "spider": "&#xf147;&#xf249;&#xf17d;&#xf24a;&#xf22e;&#xf24b;",
    "stanza": 409
  },
  {
    "role": "doc",
    "lines": [
      "Now we can start defining and naming functions.  Here's one to square an integer."
    ],
    "stanza": 410
  },
  {
    "role": "code",
    "lines": [
      "intro square;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "square"
    ],
    "code": "121001031211000132233",
    "spider": "&#xf156;&#xf24a;&#xf175;&#xf24b;",
    "stanza": 411
  },
  {
    "role": "code",
    "lines": [
      "define square | ? x | * $x $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "square",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "*",
          [
            -2,
            "x"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211013121100013023121100312101011302312100131231210101131231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 412
  },
  {
    "role": "code",
    "lines": [
      "= 9 | square 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        "square",
        "3"
      ]
    ],
    "code": "121130210013023121100013021132233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf175;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 413
  },
  {
    "role": "code",
    "lines": [
      "= 81 | square 9;"
    ],
    "dt": false,
    "parse": [
      "=",
      "81",
      [
        -1,
        "square",
        "9"
      ]
    ],
    "code": "12113021010001302312110001302100132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf215;&#xf248;&#xf175;&#xf24a;&#xf20d;&#xf24b;",
    "stanza": 414
  },
  {
    "role": "code",
    "lines": [
      "= 1 | square 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "square",
        "1"
      ]
    ],
    "code": "12113021302312110001302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf175;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 415
  },
  {
    "role": "code",
    "lines": [
      "= 4 | square 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "square",
        "2"
      ]
    ],
    "code": "12113021003023121100013021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf175;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 416
  },
  {
    "role": "code",
    "lines": [
      "= 0 | square 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "square",
        "0"
      ]
    ],
    "code": "12113020302312110001302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf175;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 417
  },
  {
    "role": "doc",
    "lines": [
      "Here's a function to increment an integer."
    ],
    "stanza": 418
  },
  {
    "role": "code",
    "lines": [
      "intro ++;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "++"
    ],
    "code": "121001031211101032233",
    "spider": "&#xf156;&#xf24a;&#xf17e;&#xf24b;",
    "stanza": 419
  },
  {
    "role": "code",
    "lines": [
      "define ++ | ? x | + $x 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "++",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "1"
        ]
      ]
    ],
    "code": "12110131211101030231211003121010113023121010312312101011302132233",
    "spider": "&#xf151;&#xf24a;&#xf17e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 420
  },
  {
    "role": "code",
    "lines": [
      "= 4 | ++ 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "++",
        "3"
      ]
    ],
    "code": "12113021003023121110103021132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf17e;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 421
  },
  {
    "role": "code",
    "lines": [
      "= 10 | ++ 9;"
    ],
    "dt": false,
    "parse": [
      "=",
      "10",
      [
        -1,
        "++",
        "9"
      ]
    ],
    "code": "12113021010302312111010302100132233",
    "spider": "&#xf147;&#xf24a;&#xf20e;&#xf248;&#xf17e;&#xf24a;&#xf20d;&#xf24b;",
    "stanza": 422
  },
  {
    "role": "code",
    "lines": [
      "= 2 | ++ 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "++",
        "1"
      ]
    ],
    "code": "121130210302312111010302132233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf17e;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 423
  },
  {
    "role": "code",
    "lines": [
      "= 3 | ++ 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "++",
        "2"
      ]
    ],
    "code": "1211302113023121110103021032233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf17e;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 424
  },
  {
    "role": "code",
    "lines": [
      "= 1 | ++ 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "++",
        "0"
      ]
    ],
    "code": "12113021302312111010302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf17e;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 425
  },
  {
    "role": "file",
    "lines": [
      "== COS_TrueFalse =="
    ],
    "stanza": 426
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Now that we have functions, we could introduce some clever definitions of true, false,",
      "and conditionals, where:",
      "",
      " * `if` is `? x | ? y | ? z | x $y $z`",
      " * `true` is `? y | ? z | y`",
      " * `false` is `? y | ? z | z`",
      " ",
      "This is a neat implementation, but maybe a bit confusing.  So let's",
      "not actually commit to a type for truth values in the message yet,",
      "but just equate them with the results of equality `=`.",
      "",
      "Once we have truth values, we can introduce conditionals and build up to fun stuff.",
      "",
      "One slightly sneaky thing we do is to code `true` and `false` as `$1`",
      "and `$0`.  This could be helpful, or confusing, I'm not sure.  Nothing",
      "else in the message depends on this so it can be adjusted to taste.",
      ""
    ],
    "section_description": "introduce true and false",
    "section_category": "MATH",
    "section_index": 10,
    "stanza": 427
  },
  {
    "role": "code",
    "lines": [
      "intro true;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "true"
    ],
    "code": "1210010312132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf24b;",
    "stanza": 428
  },
  {
    "role": "code",
    "lines": [
      "intro false;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "false"
    ],
    "code": "1210010312032233",
    "spider": "&#xf156;&#xf24a;&#xf144;&#xf24b;",
    "stanza": 429
  },
  {
    "role": "code",
    "lines": [
      "define true | = 0 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "true",
      [
        -1,
        "=",
        "0",
        "0"
      ]
    ],
    "code": "1211013121302312113020302032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 430
  },
  {
    "role": "code",
    "lines": [
      "define false | = 0 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "false",
      [
        -1,
        "=",
        "0",
        "1"
      ]
    ],
    "code": "1211013120302312113020302132233",
    "spider": "&#xf151;&#xf24a;&#xf144;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 431
  },
  {
    "role": "code",
    "lines": [
      "= $true (= 2 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        "=",
        "2",
        "2"
      ]
    ],
    "code": "121131231213212113021030210332233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 432
  },
  {
    "role": "code",
    "lines": [
      "= $true (> 4 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        ">",
        "4",
        "2"
      ]
    ],
    "code": "12113123121321210030210030210332233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 433
  },
  {
    "role": "code",
    "lines": [
      "= $true (= 1 1);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        "=",
        "1",
        "1"
      ]
    ],
    "code": "1211312312132121130213021332233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 434
  },
  {
    "role": "code",
    "lines": [
      "= $true (> 6 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "code": "121131231213212100302110302100332233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 435
  },
  {
    "role": "code",
    "lines": [
      "= $true (< 3 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        "<",
        "3",
        "4"
      ]
    ],
    "code": "1211312312132121030211302100332233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 436
  },
  {
    "role": "code",
    "lines": [
      "= (= 5 5) $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "5",
        "5"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "12113212113021013021013312312132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf245;&#xf249;&#xf145;&#xf24b;",
    "stanza": 437
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 3) $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "3",
        "3"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "121132121130211302113312312132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf249;&#xf145;&#xf24b;",
    "stanza": 438
  },
  {
    "role": "code",
    "lines": [
      "= (= 4 4) $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "4",
        "4"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "12113212113021003021003312312132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf245;&#xf249;&#xf145;&#xf24b;",
    "stanza": 439
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 3) $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "3",
        "3"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "121132121130211302113312312132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf249;&#xf145;&#xf24b;",
    "stanza": 440
  },
  {
    "role": "code",
    "lines": [
      "= (= 0 0) $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "0",
        "0"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "1211321211302030203312312132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf249;&#xf145;&#xf24b;",
    "stanza": 441
  },
  {
    "role": "code",
    "lines": [
      "= $false (< 6 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        "<",
        "6",
        "2"
      ]
    ],
    "code": "1211312312032121030211030210332233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 442
  },
  {
    "role": "code",
    "lines": [
      "= $false (< 4 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        "<",
        "4",
        "2"
      ]
    ],
    "code": "1211312312032121030210030210332233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 443
  },
  {
    "role": "code",
    "lines": [
      "= $false (< 4 1);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        "<",
        "4",
        "1"
      ]
    ],
    "code": "121131231203212103021003021332233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 444
  },
  {
    "role": "code",
    "lines": [
      "= $false (> 0 0);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        ">",
        "0",
        "0"
      ]
    ],
    "code": "12113123120321210030203020332233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 445
  },
  {
    "role": "code",
    "lines": [
      "= $false (> 0 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        ">",
        "0",
        "5"
      ]
    ],
    "code": "1211312312032121003020302101332233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 446
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 2) $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "3",
        "2"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "121132121130211302103312312032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf249;&#xf144;&#xf24b;",
    "stanza": 447
  },
  {
    "role": "code",
    "lines": [
      "= (> 2 3) $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "2",
        "3"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "1211321210030210302113312312032233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf249;&#xf144;&#xf24b;",
    "stanza": 448
  },
  {
    "role": "code",
    "lines": [
      "= (> 4 5) $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "4",
        "5"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "121132121003021003021013312312032233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf249;&#xf144;&#xf24b;",
    "stanza": 449
  },
  {
    "role": "code",
    "lines": [
      "= (> 2 6) $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "2",
        "6"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "12113212100302103021103312312032233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf245;&#xf249;&#xf144;&#xf24b;",
    "stanza": 450
  },
  {
    "role": "code",
    "lines": [
      "= (> 1 6) $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "1",
        "6"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "1211321210030213021103312312032233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf20a;&#xf245;&#xf249;&#xf144;&#xf24b;",
    "stanza": 451
  },
  {
    "role": "code",
    "lines": [
      "= $true $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "12113123121312312132233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 452
  },
  {
    "role": "code",
    "lines": [
      "= $false $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "12113123120312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 453
  },
  {
    "role": "code",
    "lines": [
      "not | = $true $false;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12101302312113123121312312032233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 454
  },
  {
    "role": "code",
    "lines": [
      "not | = $false $true;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12101302312113123120312312132233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 455
  },
  {
    "role": "code",
    "lines": [
      "= (> 4 2) (< 1 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "4",
        "2"
      ],
      [
        "<",
        "1",
        "4"
      ]
    ],
    "code": "121132121003021003021033212103021302100332233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 456
  },
  {
    "role": "code",
    "lines": [
      "= (= 3 3) (< 3 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "3",
        "3"
      ],
      [
        "<",
        "3",
        "5"
      ]
    ],
    "code": "12113212113021130211332121030211302101332233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 457
  },
  {
    "role": "code",
    "lines": [
      "= (= 0 0) (= 4 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "0",
        "0"
      ],
      [
        "=",
        "4",
        "4"
      ]
    ],
    "code": "1211321211302030203321211302100302100332233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 458
  },
  {
    "role": "code",
    "lines": [
      "= (> 6 4) (< 3 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "6",
        "4"
      ],
      [
        "<",
        "3",
        "5"
      ]
    ],
    "code": "12113212100302110302100332121030211302101332233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 459
  },
  {
    "role": "code",
    "lines": [
      "= (< 5 6) (< 0 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "<",
        "5",
        "6"
      ],
      [
        "<",
        "0",
        "2"
      ]
    ],
    "code": "12113212103021013021103321210302030210332233",
    "spider": "&#xf147;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 460
  },
  {
    "role": "code",
    "lines": [
      "= (= 5 1) (> 2 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "=",
        "5",
        "1"
      ],
      [
        ">",
        "2",
        "4"
      ]
    ],
    "code": "121132121130210130213321210030210302100332233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 461
  },
  {
    "role": "code",
    "lines": [
      "= (> 4 6) (> 1 3);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "4",
        "6"
      ],
      [
        ">",
        "1",
        "3"
      ]
    ],
    "code": "1211321210030210030211033212100302130211332233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 462
  },
  {
    "role": "code",
    "lines": [
      "= (> 2 5) (= 5 3);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        ">",
        "2",
        "5"
      ],
      [
        "=",
        "5",
        "3"
      ]
    ],
    "code": "1211321210030210302101332121130210130211332233",
    "spider": "&#xf147;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 463
  },
  {
    "role": "code",
    "lines": [
      "= (< 2 1) (< 6 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "<",
        "2",
        "1"
      ],
      [
        "<",
        "6",
        "4"
      ]
    ],
    "code": "12113212103021030213321210302110302100332233",
    "spider": "&#xf147;&#xf246;&#xf146;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 464
  },
  {
    "role": "code",
    "lines": [
      "= (< 6 2) (> 4 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "<",
        "6",
        "2"
      ],
      [
        ">",
        "4",
        "5"
      ]
    ],
    "code": "12113212103021103021033212100302100302101332233",
    "spider": "&#xf147;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 465
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 0 1) (= 0 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "0",
          "1"
        ],
        [
          "=",
          "0",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321210030203021332121130203020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 466
  },
  {
    "role": "code",
    "lines": [
      "not | = (< 6 4) (= 5 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "<",
          "6",
          "4"
        ],
        [
          "=",
          "5",
          "5"
        ]
      ]
    ],
    "code": "12101302312113212103021103021003321211302101302101332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 467
  },
  {
    "role": "code",
    "lines": [
      "not | = (= 4 2) (> 1 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "=",
          "4",
          "2"
        ],
        [
          ">",
          "1",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321211302100302103321210030213020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 468
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 5 6) (< 1 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "5",
          "6"
        ],
        [
          "<",
          "1",
          "3"
        ]
      ]
    ],
    "code": "121013023121132121003021013021103321210302130211332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 469
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 3 6) (> 5 4);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "3",
          "6"
        ],
        [
          ">",
          "5",
          "4"
        ]
      ]
    ],
    "code": "121013023121132121003021130211033212100302101302100332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 470
  },
  {
    "role": "code",
    "lines": [
      "not | = (= 2 2) (> 0 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "=",
          "2",
          "2"
        ],
        [
          ">",
          "0",
          "3"
        ]
      ]
    ],
    "code": "1210130231211321211302103021033212100302030211332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 471
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 5 2) (= 2 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "5",
          "2"
        ],
        [
          "=",
          "2",
          "3"
        ]
      ]
    ],
    "code": "121013023121132121003021013021033212113021030211332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 472
  },
  {
    "role": "code",
    "lines": [
      "not | = (> 4 1) (< 2 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          ">",
          "4",
          "1"
        ],
        [
          "<",
          "2",
          "0"
        ]
      ]
    ],
    "code": "1210130231211321210030210030213321210302103020332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 473
  },
  {
    "role": "code",
    "lines": [
      "not | = (= 2 2) (< 3 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "=",
          "2",
          "2"
        ],
        [
          "<",
          "3",
          "2"
        ]
      ]
    ],
    "code": "1210130231211321211302103021033212103021130210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 474
  },
  {
    "role": "code",
    "lines": [
      "not | = (< 0 1) (> 3 4);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "<",
          "0",
          "1"
        ],
        [
          ">",
          "3",
          "4"
        ]
      ]
    ],
    "code": "1210130231211321210302030213321210030211302100332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf146;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 475
  },
  {
    "role": "file",
    "lines": [
      "== COS_If =="
    ],
    "stanza": 476
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Now that we spent some time looking at `true` and `false`, let's show",
      "a way to build conditional expressions.  We start with an `if` expression,",
      "of the form `if CONDITION E1 E2`, which evaluates to `E1` if the `CONDITION`",
      "is `true`, otherwise `E2`.",
      "",
      "If the listener is trying to map the language we are describing onto",
      "their own system of computation, it is pretty important that `if` be",
      "\"lazy,\" and completely skip evaluating the branch not taken.  That",
      "should become clear fairly soon if they were to try an \"eager\" `if`.",
      ""
    ],
    "section_description": "show conditionals",
    "section_category": "MATH",
    "section_index": 11,
    "stanza": 477
  },
  {
    "role": "code",
    "lines": [
      "intro if;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "if"
    ],
    "code": "1210010312111132233",
    "spider": "&#xf156;&#xf24a;&#xf153;&#xf24b;",
    "stanza": 478
  },
  {
    "role": "code",
    "lines": [
      "= 28 | if (< 3 0) 24 28;"
    ],
    "dt": false,
    "parse": [
      "=",
      "28",
      [
        -1,
        "if",
        [
          "<",
          "3",
          "0"
        ],
        "24",
        "28"
      ]
    ],
    "code": "12113021110030231211113212103021130203302110003021110032233",
    "spider": "&#xf147;&#xf24a;&#xf220;&#xf248;&#xf153;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf245;&#xf21c;&#xf24a;&#xf220;&#xf24b;",
    "stanza": 479
  },
  {
    "role": "code",
    "lines": [
      "= 27 | if (> 2 4) 29 27;"
    ],
    "dt": false,
    "parse": [
      "=",
      "27",
      [
        -1,
        "if",
        [
          ">",
          "2",
          "4"
        ],
        "29",
        "27"
      ]
    ],
    "code": "12113021101130231211113212100302103021003302111013021101132233",
    "spider": "&#xf147;&#xf24a;&#xf21f;&#xf248;&#xf153;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf221;&#xf24a;&#xf21f;&#xf24b;",
    "stanza": 480
  },
  {
    "role": "code",
    "lines": [
      "= 29 | if (= 3 1) 20 29;"
    ],
    "dt": false,
    "parse": [
      "=",
      "29",
      [
        -1,
        "if",
        [
          "=",
          "3",
          "1"
        ],
        "20",
        "29"
      ]
    ],
    "code": "12113021110130231211113212113021130213302101003021110132233",
    "spider": "&#xf147;&#xf24a;&#xf221;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf218;&#xf24a;&#xf221;&#xf24b;",
    "stanza": 481
  },
  {
    "role": "code",
    "lines": [
      "= 21 | if (= 0 0) 21 26;"
    ],
    "dt": false,
    "parse": [
      "=",
      "21",
      [
        -1,
        "if",
        [
          "=",
          "0",
          "0"
        ],
        "21",
        "26"
      ]
    ],
    "code": "1211302101013023121111321211302030203302101013021101032233",
    "spider": "&#xf147;&#xf24a;&#xf219;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf219;&#xf24a;&#xf21e;&#xf24b;",
    "stanza": 482
  },
  {
    "role": "code",
    "lines": [
      "= 29 | if (> 5 3) 29 23;"
    ],
    "dt": false,
    "parse": [
      "=",
      "29",
      [
        -1,
        "if",
        [
          ">",
          "5",
          "3"
        ],
        "29",
        "23"
      ]
    ],
    "code": "12113021110130231211113212100302101302113302111013021011132233",
    "spider": "&#xf147;&#xf24a;&#xf221;&#xf248;&#xf153;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf221;&#xf24a;&#xf21b;&#xf24b;",
    "stanza": 483
  },
  {
    "role": "code",
    "lines": [
      "= 26 | if (> 1 0) 26 22;"
    ],
    "dt": false,
    "parse": [
      "=",
      "26",
      [
        -1,
        "if",
        [
          ">",
          "1",
          "0"
        ],
        "26",
        "22"
      ]
    ],
    "code": "12113021101030231211113212100302130203302110103021011032233",
    "spider": "&#xf147;&#xf24a;&#xf21e;&#xf248;&#xf153;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf21e;&#xf24a;&#xf21a;&#xf24b;",
    "stanza": 484
  },
  {
    "role": "code",
    "lines": [
      "= 21 | if (= 3 3) 21 27;"
    ],
    "dt": false,
    "parse": [
      "=",
      "21",
      [
        -1,
        "if",
        [
          "=",
          "3",
          "3"
        ],
        "21",
        "27"
      ]
    ],
    "code": "121130210101302312111132121130211302113302101013021101132233",
    "spider": "&#xf147;&#xf24a;&#xf219;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf219;&#xf24a;&#xf21f;&#xf24b;",
    "stanza": 485
  },
  {
    "role": "code",
    "lines": [
      "= 23 | if (> 4 4) 25 23;"
    ],
    "dt": false,
    "parse": [
      "=",
      "23",
      [
        -1,
        "if",
        [
          ">",
          "4",
          "4"
        ],
        "25",
        "23"
      ]
    ],
    "code": "121130210111302312111132121003021003021003302110013021011132233",
    "spider": "&#xf147;&#xf24a;&#xf21b;&#xf248;&#xf153;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf245;&#xf21d;&#xf24a;&#xf21b;&#xf24b;",
    "stanza": 486
  },
  {
    "role": "doc",
    "lines": [
      "We can now define more interesting functions.  Here's the maximum of two integers:"
    ],
    "stanza": 487
  },
  {
    "role": "code",
    "lines": [
      "intro max;"
    ],
    "dt": false,
    "parse": [
      "intro",
      ">:>"
    ],
    "code": "121001031212100312100332233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf148;&#xf24b;",
    "stanza": 488
  },
  {
    "role": "code",
    "lines": [
      "define max | ? x | ? y | if (> $x $y) $x $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      ">:>",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              ">",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121210031210033023121100312101011302312110031211010030231211113212100312312101011312312110100331231210101131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf148;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf148;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 489
  },
  {
    "role": "code",
    "lines": [
      "= 0 | max 0 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        ">:>",
        "0",
        "0"
      ]
    ],
    "code": "121130203023121210031210033020302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf148;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 490
  },
  {
    "role": "code",
    "lines": [
      "= 1 | max 0 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        ">:>",
        "0",
        "1"
      ]
    ],
    "code": "121130213023121210031210033020302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf148;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 491
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 0 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        ">:>",
        "0",
        "2"
      ]
    ],
    "code": "12113021030231212100312100330203021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf148;&#xf148;&#xf204;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 492
  },
  {
    "role": "code",
    "lines": [
      "= 1 | max 1 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        ">:>",
        "1",
        "0"
      ]
    ],
    "code": "121130213023121210031210033021302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf148;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 493
  },
  {
    "role": "code",
    "lines": [
      "= 1 | max 1 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        ">:>",
        "1",
        "1"
      ]
    ],
    "code": "121130213023121210031210033021302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf148;&#xf205;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 494
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 1 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        ">:>",
        "1",
        "2"
      ]
    ],
    "code": "12113021030231212100312100330213021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf148;&#xf148;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 495
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 2 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        ">:>",
        "2",
        "0"
      ]
    ],
    "code": "12113021030231212100312100330210302032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf148;&#xf148;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 496
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 2 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        ">:>",
        "2",
        "1"
      ]
    ],
    "code": "12113021030231212100312100330210302132233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf148;&#xf148;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 497
  },
  {
    "role": "code",
    "lines": [
      "= 2 | max 2 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        ">:>",
        "2",
        "2"
      ]
    ],
    "code": "121130210302312121003121003302103021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf148;&#xf148;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 498
  },
  {
    "role": "doc",
    "lines": [
      "Now the minimum of two integers:"
    ],
    "stanza": 499
  },
  {
    "role": "code",
    "lines": [
      "intro min;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "<:<"
    ],
    "code": "1210010312121031210332233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf146;&#xf24b;",
    "stanza": 500
  },
  {
    "role": "code",
    "lines": [
      "define min | ? x | ? y | if (< $x $y) $x $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "<:<",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "<",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121210312103302312110031210101130231211003121101003023121111321210312312101011312312110100331231210101131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf146;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf146;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 501
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 0 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "<:<",
        "0",
        "0"
      ]
    ],
    "code": "1211302030231212103121033020302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf146;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 502
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 0 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "<:<",
        "0",
        "1"
      ]
    ],
    "code": "1211302030231212103121033020302132233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf146;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 503
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 0 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "<:<",
        "0",
        "2"
      ]
    ],
    "code": "12113020302312121031210330203021032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf146;&#xf204;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 504
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 1 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "<:<",
        "1",
        "0"
      ]
    ],
    "code": "1211302030231212103121033021302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf146;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 505
  },
  {
    "role": "code",
    "lines": [
      "= 1 | min 1 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "<:<",
        "1",
        "1"
      ]
    ],
    "code": "1211302130231212103121033021302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf146;&#xf205;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 506
  },
  {
    "role": "code",
    "lines": [
      "= 1 | min 1 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "<:<",
        "1",
        "2"
      ]
    ],
    "code": "12113021302312121031210330213021032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf146;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 507
  },
  {
    "role": "code",
    "lines": [
      "= 0 | min 2 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "<:<",
        "2",
        "0"
      ]
    ],
    "code": "12113020302312121031210330210302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf146;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 508
  },
  {
    "role": "code",
    "lines": [
      "= 1 | min 2 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "<:<",
        "2",
        "1"
      ]
    ],
    "code": "12113021302312121031210330210302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf146;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 509
  },
  {
    "role": "code",
    "lines": [
      "= 2 | min 2 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "<:<",
        "2",
        "2"
      ]
    ],
    "code": "1211302103023121210312103302103021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf146;&#xf146;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 510
  },
  {
    "role": "doc",
    "lines": [
      "Why should human CS students be the only ones the factorial example is inflicted on..."
    ],
    "stanza": 511
  },
  {
    "role": "code",
    "lines": [
      "intro factorial;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "*:<"
    ],
    "code": "121001031212100131210332233",
    "spider": "&#xf156;&#xf24a;&#xf14d;&#xf146;&#xf24b;",
    "stanza": 512
  },
  {
    "role": "code",
    "lines": [
      "define factorial | ? x | if (< $x 1) 1 | * $x | factorial | - $x 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "*:<",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "<",
            [
              -2,
              "x"
            ],
            "1"
          ],
          "1",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            [
              -1,
              "*:<",
              [
                -1,
                "-",
                [
                  -2,
                  "x"
                ],
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121210013121033023121100312101011302312111132121031231210101130213302130231210013123121010113023121210013121033023121011312312101011302132233",
    "spider": "&#xf151;&#xf24a;&#xf14d;&#xf146;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf146;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf205;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf248;&#xf14d;&#xf146;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 513
  },
  {
    "role": "code",
    "lines": [
      "= 1 | factorial 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "*:<",
        "1"
      ]
    ],
    "code": "12113021302312121001312103302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14d;&#xf146;&#xf205;&#xf24b;",
    "stanza": 514
  },
  {
    "role": "code",
    "lines": [
      "= 2 | factorial 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "*:<",
        "2"
      ]
    ],
    "code": "1211302103023121210013121033021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf14d;&#xf146;&#xf206;&#xf24b;",
    "stanza": 515
  },
  {
    "role": "code",
    "lines": [
      "= 6 | factorial 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "*:<",
        "3"
      ]
    ],
    "code": "12113021103023121210013121033021132233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf14d;&#xf146;&#xf207;&#xf24b;",
    "stanza": 516
  },
  {
    "role": "code",
    "lines": [
      "= 24 | factorial 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "24",
      [
        -1,
        "*:<",
        "4"
      ]
    ],
    "code": "12113021100030231212100131210330210032233",
    "spider": "&#xf147;&#xf24a;&#xf21c;&#xf248;&#xf14d;&#xf146;&#xf208;&#xf24b;",
    "stanza": 517
  },
  {
    "role": "code",
    "lines": [
      "= 120 | factorial 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "120",
      [
        -1,
        "*:<",
        "5"
      ]
    ],
    "code": "1211302111100030231212100131210330210132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf23c;&#xf248;&#xf14d;&#xf146;&#xf209;&#xf24b;",
    "stanza": 518
  },
  {
    "role": "file",
    "lines": [
      "== COS_AndLogic =="
    ],
    "stanza": 519
  },
  {
    "role": "doc",
    "lines": [
      "",
      "We continue introducing symbols related to math and logic.  Now we will often",
      "be able to both define them and give examples, so the listener has multiple",
      "paths to understanding.",
      "",
      "Here is `and`, which evaluates to `true` if both its two arguments are `true`,",
      "and `false` otherwise.  We don't talk about wbat happens if you pass it integers",
      "or something funky.  There'd be value in getting into talking about types, but",
      "it might be a bit much just now.",
      ""
    ],
    "section_description": "introduce the AND logical operator",
    "section_category": "MATH",
    "section_index": 12,
    "stanza": 520
  },
  {
    "role": "code",
    "lines": [
      "intro and;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "true:*"
    ],
    "code": "12100103121213121001332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14d;&#xf24b;",
    "stanza": 521
  },
  {
    "role": "code",
    "lines": [
      "define and | ? x | ? y | if $x $y $false;"
    ],
    "dt": true,
    "parse": [
      "@",
      "true:*",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ],
            [
              -2,
              "false"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212131210013302312110031210101130231211003121101003023121111312312101011312312110100312312032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf249;&#xf144;&#xf24b;",
    "stanza": 522
  },
  {
    "role": "code",
    "lines": [
      "not | and $false $false;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12101302312121312100133123120312312032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 523
  },
  {
    "role": "code",
    "lines": [
      "not | and $false $true;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12101302312121312100133123120312312132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 524
  },
  {
    "role": "code",
    "lines": [
      "not | and $true $false;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12101302312121312100133123121312312032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 525
  },
  {
    "role": "code",
    "lines": [
      "and $true $true;"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "12121312100133123121312312132233",
    "spider": "&#xf145;&#xf14d;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 526
  },
  {
    "role": "code",
    "lines": [
      "= $false | and $false $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "true:*",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12113123120302312121312100133123120312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 527
  },
  {
    "role": "code",
    "lines": [
      "= $false | and $false $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "true:*",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12113123120302312121312100133123120312312132233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 528
  },
  {
    "role": "code",
    "lines": [
      "= $false | and $true $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "true:*",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12113123120302312121312100133123121312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 529
  },
  {
    "role": "code",
    "lines": [
      "= $true | and $true $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "true:*",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12113123121302312121312100133123121312312132233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 530
  },
  {
    "role": "code",
    "lines": [
      "and (= 2 2) (> 4 2);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "=",
        "2",
        "2"
      ],
      [
        ">",
        "4",
        "2"
      ]
    ],
    "code": "121213121001332121130210302103321210030210030210332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 531
  },
  {
    "role": "code",
    "lines": [
      "and (= 1 1) (> 6 4);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "=",
        "1",
        "1"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "code": "12121312100133212113021302133212100302110302100332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 532
  },
  {
    "role": "code",
    "lines": [
      "and (< 3 4) (= 5 5);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "<",
        "3",
        "4"
      ],
      [
        "=",
        "5",
        "5"
      ]
    ],
    "code": "1212131210013321210302113021003321211302101302101332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 533
  },
  {
    "role": "code",
    "lines": [
      "and (= 3 3) (= 4 4);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "4",
        "4"
      ]
    ],
    "code": "121213121001332121130211302113321211302100302100332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 534
  },
  {
    "role": "code",
    "lines": [
      "and (= 3 3) (= 0 0);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "0",
        "0"
      ]
    ],
    "code": "12121312100133212113021130211332121130203020332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 535
  },
  {
    "role": "code",
    "lines": [
      "and (< 5 7) (> 5 3);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "<",
        "5",
        "7"
      ],
      [
        ">",
        "5",
        "3"
      ]
    ],
    "code": "12121312100133212103021013021113321210030210130211332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 536
  },
  {
    "role": "code",
    "lines": [
      "and (> 5 4) (> 1 0);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "1",
        "0"
      ]
    ],
    "code": "121213121001332121003021013021003321210030213020332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 537
  },
  {
    "role": "code",
    "lines": [
      "and (> 3 0) (= 3 3);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        ">",
        "3",
        "0"
      ],
      [
        "=",
        "3",
        "3"
      ]
    ],
    "code": "1212131210013321210030211302033212113021130211332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 538
  },
  {
    "role": "code",
    "lines": [
      "and (< 3 4) (< 3 6);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "<",
        "3",
        "4"
      ],
      [
        "<",
        "3",
        "6"
      ]
    ],
    "code": "121213121001332121030211302100332121030211302110332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 539
  },
  {
    "role": "code",
    "lines": [
      "and (> 5 4) (> 5 4);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "5",
        "4"
      ]
    ],
    "code": "1212131210013321210030210130210033212100302101302100332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 540
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 6 4) (< 3 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "6",
          "4"
        ],
        [
          "<",
          "3",
          "1"
        ]
      ]
    ],
    "code": "121013023121213121001332121003021103021003321210302113021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 541
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 3 1) (> 3 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "3",
          "1"
        ],
        [
          ">",
          "3",
          "3"
        ]
      ]
    ],
    "code": "12101302312121312100133212100302113021332121003021130211332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 542
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 0 0) (= 5 4);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "=",
          "0",
          "0"
        ],
        [
          "=",
          "5",
          "4"
        ]
      ]
    ],
    "code": "1210130231212131210013321211302030203321211302101302100332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 543
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 2 4) (> 4 6);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "2",
          "4"
        ],
        [
          ">",
          "4",
          "6"
        ]
      ]
    ],
    "code": "12101302312121312100133212103021030210033212100302100302110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 544
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 3 3) (= 3 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "=",
          "3",
          "3"
        ],
        [
          "=",
          "3",
          "1"
        ]
      ]
    ],
    "code": "121013023121213121001332121130211302113321211302113021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 545
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 1 5) (< 3 6);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "1",
          "5"
        ],
        [
          "<",
          "3",
          "6"
        ]
      ]
    ],
    "code": "121013023121213121001332121003021302101332121030211302110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 546
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 2) (= 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "6",
          "2"
        ],
        [
          "=",
          "2",
          "2"
        ]
      ]
    ],
    "code": "12101302312121312100133212103021103021033212113021030210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 547
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 2 5) (= 5 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "2",
          "5"
        ],
        [
          "=",
          "5",
          "5"
        ]
      ]
    ],
    "code": "12101302312121312100133212100302103021013321211302101302101332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 548
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 2) (= 3 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "6",
          "2"
        ],
        [
          "=",
          "3",
          "3"
        ]
      ]
    ],
    "code": "12101302312121312100133212103021103021033212113021130211332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 549
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 4 3) (> 5 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "4",
          "3"
        ],
        [
          ">",
          "5",
          "2"
        ]
      ]
    ],
    "code": "1210130231212131210013321210302100302113321210030210130210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 550
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 5 4) (= 1 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "5",
          "4"
        ],
        [
          "=",
          "1",
          "2"
        ]
      ]
    ],
    "code": "12101302312121312100133212103021013021003321211302130210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 551
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 4) (= 5 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "6",
          "4"
        ],
        [
          "=",
          "5",
          "1"
        ]
      ]
    ],
    "code": "121013023121213121001332121030211030210033212113021013021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 552
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 2 6) (= 1 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "2",
          "6"
        ],
        [
          "=",
          "1",
          "5"
        ]
      ]
    ],
    "code": "121013023121213121001332121003021030211033212113021302101332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 553
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 3) (= 2 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "2",
          "3"
        ]
      ]
    ],
    "code": "12101302312121312100133212103021103021133212113021030211332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 554
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 4) (> 0 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "6",
          "4"
        ],
        [
          ">",
          "0",
          "1"
        ]
      ]
    ],
    "code": "12101302312121312100133212103021103021003321210030203021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 555
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 3 5) (< 4 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "=",
          "3",
          "5"
        ],
        [
          "<",
          "4",
          "1"
        ]
      ]
    ],
    "code": "12101302312121312100133212113021130210133212103021003021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 556
  },
  {
    "role": "code",
    "lines": [
      "not | and (= 4 1) (< 4 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "=",
          "4",
          "1"
        ],
        [
          "<",
          "4",
          "2"
        ]
      ]
    ],
    "code": "12101302312121312100133212113021003021332121030210030210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 557
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 6 3) (= 3 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "3",
          "0"
        ]
      ]
    ],
    "code": "1210130231212131210013321210302110302113321211302113020332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 558
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 4 2) (< 4 6);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "4",
          "2"
        ],
        [
          "<",
          "4",
          "6"
        ]
      ]
    ],
    "code": "1210130231212131210013321210302100302103321210302100302110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 559
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 4 1) (< 5 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "4",
          "1"
        ],
        [
          "<",
          "5",
          "2"
        ]
      ]
    ],
    "code": "121013023121213121001332121003021003021332121030210130210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 560
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 0 1) (> 7 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "0",
          "1"
        ],
        [
          ">",
          "7",
          "5"
        ]
      ]
    ],
    "code": "121013023121213121001332121003020302133212100302111302101332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 561
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 3 4) (> 3 6);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "3",
          "4"
        ],
        [
          ">",
          "3",
          "6"
        ]
      ]
    ],
    "code": "1210130231212131210013321210302113021003321210030211302110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 562
  },
  {
    "role": "code",
    "lines": [
      "not | and (> 1 2) (> 6 4);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          ">",
          "1",
          "2"
        ],
        [
          ">",
          "6",
          "4"
        ]
      ]
    ],
    "code": "1210130231212131210013321210030213021033212100302110302100332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 563
  },
  {
    "role": "code",
    "lines": [
      "not | and (< 0 1) (= 4 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:*",
        [
          "<",
          "0",
          "1"
        ],
        [
          "=",
          "4",
          "5"
        ]
      ]
    ],
    "code": "1210130231212131210013321210302030213321211302100302101332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 564
  },
  {
    "role": "code",
    "lines": [
      "and (< 4 6) (< 5 7);"
    ],
    "dt": false,
    "parse": [
      "true:*",
      [
        "<",
        "4",
        "6"
      ],
      [
        "<",
        "5",
        "7"
      ]
    ],
    "code": "12121312100133212103021003021103321210302101302111332233",
    "spider": "&#xf145;&#xf14d;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf20b;&#xf245;&#xf24b;",
    "stanza": 565
  },
  {
    "role": "file",
    "lines": [
      "== COS_OrLogic =="
    ],
    "stanza": 566
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Here is `or`, which evaluates to `true` if either of its arguments are `true`,",
      "and `false` otherwise.  Again, we just don't talk about what happens if you",
      "pass in any unexpected values, like integers or functions.  The message is",
      "constructed so that the problem never comes up.",
      ""
    ],
    "section_description": "introduce the OR logical operator",
    "section_category": "MATH",
    "section_index": 13,
    "stanza": 567
  },
  {
    "role": "code",
    "lines": [
      "intro or;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "true:+"
    ],
    "code": "12100103121213121010332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14e;&#xf24b;",
    "stanza": 568
  },
  {
    "role": "code",
    "lines": [
      "define or | ? x | ? y | if $x $true $y"
    ],
    "dt": true,
    "parse": [
      "@",
      "true:+",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              -2,
              "x"
            ],
            [
              -2,
              "true"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212131210103302312110031210101130231211003121101003023121111312312101011312312131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf249;&#xf16f;&#xf249;&#xf145;&#xf249;&#xf178;&#xf24b;",
    "stanza": 569
  },
  {
    "role": "code",
    "lines": [
      "not | or $false $false;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12101302312121312101033123120312312032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 570
  },
  {
    "role": "code",
    "lines": [
      "or $false $true;"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        -2,
        "false"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "12121312101033123120312312132233",
    "spider": "&#xf145;&#xf14e;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 571
  },
  {
    "role": "code",
    "lines": [
      "or $true $false;"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        -2,
        "true"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "12121312101033123121312312032233",
    "spider": "&#xf145;&#xf14e;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 572
  },
  {
    "role": "code",
    "lines": [
      "or $true $true;"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "12121312101033123121312312132233",
    "spider": "&#xf145;&#xf14e;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 573
  },
  {
    "role": "code",
    "lines": [
      "= $false | or $false $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "true:+",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12113123120302312121312101033123120312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 574
  },
  {
    "role": "code",
    "lines": [
      "= $true | or $false $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "true:+",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12113123121302312121312101033123120312312132233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 575
  },
  {
    "role": "code",
    "lines": [
      "= $true | or $true $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "true:+",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12113123121302312121312101033123121312312032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 576
  },
  {
    "role": "code",
    "lines": [
      "= $true | or $true $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "true:+",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12113123121302312121312101033123121312312132233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 577
  },
  {
    "role": "code",
    "lines": [
      "or (= 2 2) (> 4 2);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "=",
        "2",
        "2"
      ],
      [
        ">",
        "4",
        "2"
      ]
    ],
    "code": "121213121010332121130210302103321210030210030210332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 578
  },
  {
    "role": "code",
    "lines": [
      "or (= 1 1) (> 6 4);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "=",
        "1",
        "1"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "code": "12121312101033212113021302133212100302110302100332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 579
  },
  {
    "role": "code",
    "lines": [
      "or (< 3 4) (= 5 5);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "3",
        "4"
      ],
      [
        "=",
        "5",
        "5"
      ]
    ],
    "code": "1212131210103321210302113021003321211302101302101332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 580
  },
  {
    "role": "code",
    "lines": [
      "or (= 3 3) (= 4 4);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "4",
        "4"
      ]
    ],
    "code": "121213121010332121130211302113321211302100302100332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 581
  },
  {
    "role": "code",
    "lines": [
      "or (= 3 3) (= 0 0);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "0",
        "0"
      ]
    ],
    "code": "12121312101033212113021130211332121130203020332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 582
  },
  {
    "role": "code",
    "lines": [
      "or (< 5 7) (> 5 3);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "5",
        "7"
      ],
      [
        ">",
        "5",
        "3"
      ]
    ],
    "code": "12121312101033212103021013021113321210030210130211332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 583
  },
  {
    "role": "code",
    "lines": [
      "or (> 5 4) (> 1 0);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "1",
        "0"
      ]
    ],
    "code": "121213121010332121003021013021003321210030213020332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 584
  },
  {
    "role": "code",
    "lines": [
      "or (> 3 0) (= 3 3);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "3",
        "0"
      ],
      [
        "=",
        "3",
        "3"
      ]
    ],
    "code": "1212131210103321210030211302033212113021130211332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 585
  },
  {
    "role": "code",
    "lines": [
      "or (< 3 4) (< 3 6);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "3",
        "4"
      ],
      [
        "<",
        "3",
        "6"
      ]
    ],
    "code": "121213121010332121030211302100332121030211302110332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 586
  },
  {
    "role": "code",
    "lines": [
      "or (> 5 4) (> 5 4);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "5",
        "4"
      ],
      [
        ">",
        "5",
        "4"
      ]
    ],
    "code": "1212131210103321210030210130210033212100302101302100332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 587
  },
  {
    "role": "code",
    "lines": [
      "or (> 6 4) (< 3 1);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "6",
        "4"
      ],
      [
        "<",
        "3",
        "1"
      ]
    ],
    "code": "121213121010332121003021103021003321210302113021332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 588
  },
  {
    "role": "code",
    "lines": [
      "or (> 3 1) (> 3 3);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "3",
        "1"
      ],
      [
        ">",
        "3",
        "3"
      ]
    ],
    "code": "12121312101033212100302113021332121003021130211332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 589
  },
  {
    "role": "code",
    "lines": [
      "or (= 0 0) (= 5 4);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "=",
        "0",
        "0"
      ],
      [
        "=",
        "5",
        "4"
      ]
    ],
    "code": "1212131210103321211302030203321211302101302100332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 590
  },
  {
    "role": "code",
    "lines": [
      "or (< 2 4) (> 4 6);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "2",
        "4"
      ],
      [
        ">",
        "4",
        "6"
      ]
    ],
    "code": "12121312101033212103021030210033212100302100302110332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 591
  },
  {
    "role": "code",
    "lines": [
      "or (= 3 3) (= 3 1);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "=",
        "3",
        "3"
      ],
      [
        "=",
        "3",
        "1"
      ]
    ],
    "code": "121213121010332121130211302113321211302113021332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 592
  },
  {
    "role": "code",
    "lines": [
      "or (> 1 5) (< 3 6);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "1",
        "5"
      ],
      [
        "<",
        "3",
        "6"
      ]
    ],
    "code": "121213121010332121003021302101332121030211302110332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 593
  },
  {
    "role": "code",
    "lines": [
      "or (< 6 2) (= 2 2);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "6",
        "2"
      ],
      [
        "=",
        "2",
        "2"
      ]
    ],
    "code": "12121312101033212103021103021033212113021030210332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 594
  },
  {
    "role": "code",
    "lines": [
      "or (> 2 5) (= 5 5);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "2",
        "5"
      ],
      [
        "=",
        "5",
        "5"
      ]
    ],
    "code": "12121312101033212100302103021013321211302101302101332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 595
  },
  {
    "role": "code",
    "lines": [
      "or (< 6 2) (= 3 3);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "6",
        "2"
      ],
      [
        "=",
        "3",
        "3"
      ]
    ],
    "code": "12121312101033212103021103021033212113021130211332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 596
  },
  {
    "role": "code",
    "lines": [
      "or (< 4 3) (> 5 2);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "4",
        "3"
      ],
      [
        ">",
        "5",
        "2"
      ]
    ],
    "code": "1212131210103321210302100302113321210030210130210332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 597
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 5 4) (= 1 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "<",
          "5",
          "4"
        ],
        [
          "=",
          "1",
          "2"
        ]
      ]
    ],
    "code": "12101302312121312101033212103021013021003321211302130210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 598
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 4) (= 5 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "<",
          "6",
          "4"
        ],
        [
          "=",
          "5",
          "1"
        ]
      ]
    ],
    "code": "121013023121213121010332121030211030210033212113021013021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 599
  },
  {
    "role": "code",
    "lines": [
      "not | or (> 2 6) (= 1 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          ">",
          "2",
          "6"
        ],
        [
          "=",
          "1",
          "5"
        ]
      ]
    ],
    "code": "121013023121213121010332121003021030211033212113021302101332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 600
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 3) (= 2 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "2",
          "3"
        ]
      ]
    ],
    "code": "12101302312121312101033212103021103021133212113021030211332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 601
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 4) (> 0 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "<",
          "6",
          "4"
        ],
        [
          ">",
          "0",
          "1"
        ]
      ]
    ],
    "code": "12101302312121312101033212103021103021003321210030203021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 602
  },
  {
    "role": "code",
    "lines": [
      "not | or (= 3 5) (< 4 1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "=",
          "3",
          "5"
        ],
        [
          "<",
          "4",
          "1"
        ]
      ]
    ],
    "code": "12101302312121312101033212113021130210133212103021003021332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 603
  },
  {
    "role": "code",
    "lines": [
      "not | or (= 4 1) (< 4 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "=",
          "4",
          "1"
        ],
        [
          "<",
          "4",
          "2"
        ]
      ]
    ],
    "code": "12101302312121312101033212113021003021332121030210030210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 604
  },
  {
    "role": "code",
    "lines": [
      "not | or (< 6 3) (= 3 0);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "true:+",
        [
          "<",
          "6",
          "3"
        ],
        [
          "=",
          "3",
          "0"
        ]
      ]
    ],
    "code": "1210130231212131210103321210302110302113321211302113020332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 605
  },
  {
    "role": "code",
    "lines": [
      "or (< 4 2) (< 4 6);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "4",
        "2"
      ],
      [
        "<",
        "4",
        "6"
      ]
    ],
    "code": "1212131210103321210302100302103321210302100302110332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 606
  },
  {
    "role": "code",
    "lines": [
      "or (> 4 1) (< 5 2);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "4",
        "1"
      ],
      [
        "<",
        "5",
        "2"
      ]
    ],
    "code": "121213121010332121003021003021332121030210130210332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 607
  },
  {
    "role": "code",
    "lines": [
      "or (> 0 1) (> 7 5);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "0",
        "1"
      ],
      [
        ">",
        "7",
        "5"
      ]
    ],
    "code": "121213121010332121003020302133212100302111302101332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 608
  },
  {
    "role": "code",
    "lines": [
      "or (< 3 4) (> 3 6);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "3",
        "4"
      ],
      [
        ">",
        "3",
        "6"
      ]
    ],
    "code": "1212131210103321210302113021003321210030211302110332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 609
  },
  {
    "role": "code",
    "lines": [
      "or (> 1 2) (> 6 4);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        ">",
        "1",
        "2"
      ],
      [
        ">",
        "6",
        "4"
      ]
    ],
    "code": "1212131210103321210030213021033212100302110302100332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf148;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 610
  },
  {
    "role": "code",
    "lines": [
      "or (< 0 1) (= 4 5);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "0",
        "1"
      ],
      [
        "=",
        "4",
        "5"
      ]
    ],
    "code": "1212131210103321210302030213321211302100302101332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 611
  },
  {
    "role": "code",
    "lines": [
      "or (< 4 6) (< 5 7);"
    ],
    "dt": false,
    "parse": [
      "true:+",
      [
        "<",
        "4",
        "6"
      ],
      [
        "<",
        "5",
        "7"
      ]
    ],
    "code": "12121312101033212103021003021103321210302101302111332233",
    "spider": "&#xf145;&#xf14e;&#xf246;&#xf146;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf146;&#xf24a;&#xf209;&#xf24a;&#xf20b;&#xf245;&#xf24b;",
    "stanza": 612
  },
  {
    "role": "doc",
    "lines": [
      "Now is an opportune moment to add `<=` and `>=` definitions.",
      "There are shorter definitions, like just negating `>` and `<`, but this feels more natural?"
    ],
    "stanza": 613
  },
  {
    "role": "code",
    "lines": [
      "define >= | ? x | ? y | or (> $x $y) (= $x $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      ">=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "true:+",
            [
              ">",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312111011302312110031210101130231211003121101003023121213121010332121003123121010113123121101003321211312312101011312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf148;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 614
  },
  {
    "role": "code",
    "lines": [
      "define <= | ? x | ? y | or (< $x $y) (= $x $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      "<=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "true:+",
            [
              "<",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211110030231211003121010113023121100312110100302312121312101033212103123121010113123121101003321211312312101011312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf180;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 615
  },
  {
    "role": "code",
    "lines": [
      ">= 0 0;"
    ],
    "dt": false,
    "parse": [
      ">=",
      "0",
      "0"
    ],
    "code": "121110113020302032233",
    "spider": "&#xf17f;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 616
  },
  {
    "role": "code",
    "lines": [
      "<= 0 0;"
    ],
    "dt": false,
    "parse": [
      "<=",
      "0",
      "0"
    ],
    "code": "121111003020302032233",
    "spider": "&#xf180;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 617
  },
  {
    "role": "code",
    "lines": [
      "not | >= 0 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">=",
        "0",
        "1"
      ]
    ],
    "code": "121013023121110113020302132233",
    "spider": "&#xf149;&#xf248;&#xf17f;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 618
  },
  {
    "role": "code",
    "lines": [
      "<= 0 1;"
    ],
    "dt": false,
    "parse": [
      "<=",
      "0",
      "1"
    ],
    "code": "121111003020302132233",
    "spider": "&#xf180;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 619
  },
  {
    "role": "code",
    "lines": [
      "not | >= 0 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">=",
        "0",
        "2"
      ]
    ],
    "code": "1210130231211101130203021032233",
    "spider": "&#xf149;&#xf248;&#xf17f;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 620
  },
  {
    "role": "code",
    "lines": [
      "<= 0 2;"
    ],
    "dt": false,
    "parse": [
      "<=",
      "0",
      "2"
    ],
    "code": "1211110030203021032233",
    "spider": "&#xf180;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 621
  },
  {
    "role": "code",
    "lines": [
      ">= 1 0;"
    ],
    "dt": false,
    "parse": [
      ">=",
      "1",
      "0"
    ],
    "code": "121110113021302032233",
    "spider": "&#xf17f;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 622
  },
  {
    "role": "code",
    "lines": [
      "not | <= 1 0;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<=",
        "1",
        "0"
      ]
    ],
    "code": "121013023121111003021302032233",
    "spider": "&#xf149;&#xf248;&#xf180;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 623
  },
  {
    "role": "code",
    "lines": [
      ">= 1 1;"
    ],
    "dt": false,
    "parse": [
      ">=",
      "1",
      "1"
    ],
    "code": "121110113021302132233",
    "spider": "&#xf17f;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 624
  },
  {
    "role": "code",
    "lines": [
      "<= 1 1;"
    ],
    "dt": false,
    "parse": [
      "<=",
      "1",
      "1"
    ],
    "code": "121111003021302132233",
    "spider": "&#xf180;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 625
  },
  {
    "role": "code",
    "lines": [
      "not | >= 1 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        ">=",
        "1",
        "2"
      ]
    ],
    "code": "1210130231211101130213021032233",
    "spider": "&#xf149;&#xf248;&#xf17f;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 626
  },
  {
    "role": "code",
    "lines": [
      "<= 1 2;"
    ],
    "dt": false,
    "parse": [
      "<=",
      "1",
      "2"
    ],
    "code": "1211110030213021032233",
    "spider": "&#xf180;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 627
  },
  {
    "role": "code",
    "lines": [
      ">= 2 0;"
    ],
    "dt": false,
    "parse": [
      ">=",
      "2",
      "0"
    ],
    "code": "1211101130210302032233",
    "spider": "&#xf17f;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 628
  },
  {
    "role": "code",
    "lines": [
      "not | <= 2 0;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<=",
        "2",
        "0"
      ]
    ],
    "code": "1210130231211110030210302032233",
    "spider": "&#xf149;&#xf248;&#xf180;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 629
  },
  {
    "role": "code",
    "lines": [
      ">= 2 1;"
    ],
    "dt": false,
    "parse": [
      ">=",
      "2",
      "1"
    ],
    "code": "1211101130210302132233",
    "spider": "&#xf17f;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 630
  },
  {
    "role": "code",
    "lines": [
      "not | <= 2 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<=",
        "2",
        "1"
      ]
    ],
    "code": "1210130231211110030210302132233",
    "spider": "&#xf149;&#xf248;&#xf180;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 631
  },
  {
    "role": "code",
    "lines": [
      ">= 2 2;"
    ],
    "dt": false,
    "parse": [
      ">=",
      "2",
      "2"
    ],
    "code": "12111011302103021032233",
    "spider": "&#xf17f;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 632
  },
  {
    "role": "code",
    "lines": [
      "<= 2 2;"
    ],
    "dt": false,
    "parse": [
      "<=",
      "2",
      "2"
    ],
    "code": "12111100302103021032233",
    "spider": "&#xf180;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 633
  },
  {
    "role": "file",
    "lines": [
      "== COS_Cons =="
    ],
    "stanza": 634
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Now we introduce our first data structure.  The expression `cons X Y` stores `X` and `Y`",
      "in a pair.  We can then pull `X` out from the pair with `car (cons X Y)`, and we can",
      "get `Y` out from the pair with `cdr (cons X Y)`.  Apologies for the arcane names,",
      "they are inherited from Lisp (and they'll be encoded as something else in the",
      "message anyway).",
      "",
      "We give a definition of `cons` that is a bit funky.  The `cons X Y` expression",
      "constructs a function which takes a single argument, also a function.  That",
      "argument gets called with `X` and `Y`.  That means to pull `X` back out, we",
      "just need to call `cons X Y` with a function like `? a | ? b $a`.  Likewise for",
      "`Y`.  That is exactly what `car` and `cdr` do.",
      "",
      "Definitions like that can be a bit hard to think about.  But the great",
      "thing is that you can apply definitions like these without initially",
      "understanding them.  So if the listener wants to try them out, they",
      "can there's an element of interactivity beyond what a plain text",
      "message could give.",
      ""
    ],
    "section_description": "introduce pairs",
    "section_category": "MATH",
    "section_index": 14,
    "stanza": 635
  },
  {
    "role": "code",
    "lines": [
      "intro cons;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cons"
    ],
    "code": "12100103121010132233",
    "spider": "&#xf156;&#xf24a;&#xf159;&#xf24b;",
    "stanza": 636
  },
  {
    "role": "code",
    "lines": [
      "intro car;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cons:0"
    ],
    "code": "121001031212101013020332233",
    "spider": "&#xf156;&#xf24a;&#xf159;&#xf204;&#xf24b;",
    "stanza": 637
  },
  {
    "role": "code",
    "lines": [
      "intro cdr;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cons:1"
    ],
    "code": "121001031212101013021332233",
    "spider": "&#xf156;&#xf24a;&#xf159;&#xf205;&#xf24b;",
    "stanza": 638
  },
  {
    "role": "code",
    "lines": [
      "define cons | ? x | ? y | ? z | z $x $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cons",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "z",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121010130231211003121010113023121100312110100302312110031211010130231211010131231210101131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf159;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf179;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 639
  },
  {
    "role": "code",
    "lines": [
      "define car | ? z | z | ? x | ? y $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cons:0",
      [
        -1,
        "?",
        "z",
        [
          -1,
          "z",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "?",
              "y",
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212101013020330231211003121101013023121101013023121100312101011302312110031211010031231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf159;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf179;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 640
  },
  {
    "role": "code",
    "lines": [
      "define cdr | ? z | z | ? x | ? y $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cons:1",
      [
        -1,
        "?",
        "z",
        [
          -1,
          "z",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "?",
              "y",
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212101013021330231211003121101013023121101013023121100312101011302312110031211010031231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf159;&#xf205;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf179;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf249;&#xf178;&#xf24b;",
    "stanza": 641
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 0 4) | = 0 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "0",
        "4"
      ],
      [
        -1,
        "=",
        "0",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013020302100330231211302030231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 642
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 0 4) | = 4 | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "0",
        "4"
      ],
      [
        -1,
        "=",
        "4",
        [
          -1,
          "cons:1",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302030210033023121130210030231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf208;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 643
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 6 2) | = 6 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "6",
        "2"
      ],
      [
        -1,
        "=",
        "6",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013021103021033023121130211030231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 644
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 6 2) | = 2 | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "6",
        "2"
      ],
      [
        -1,
        "=",
        "2",
        [
          -1,
          "cons:1",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302110302103302312113021030231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 645
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 9) | = 3 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        "9"
      ],
      [
        -1,
        "=",
        "3",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013021130210013302312113021130231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 646
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 9) | = 9 | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        "9"
      ],
      [
        -1,
        "=",
        "9",
        [
          -1,
          "cons:1",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302113021001330231211302100130231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 647
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 7 | cons 10 2) | = 7 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "7",
        [
          -1,
          "cons",
          "10",
          "2"
        ]
      ],
      [
        -1,
        "=",
        "7",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013021113023121010130210103021033023121130211130231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20b;&#xf248;&#xf159;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20b;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 648
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 7 | cons 10 2) | = 10 | car | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "7",
        [
          -1,
          "cons",
          "10",
          "2"
        ]
      ],
      [
        -1,
        "=",
        "10",
        [
          -1,
          "cons:0",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12111031210101132121010130211130231210101302101030210330231211302101030231212101013020330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20b;&#xf248;&#xf159;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20e;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 649
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 7 | cons 10 2) | = 2 | cdr | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "7",
        [
          -1,
          "cons",
          "10",
          "2"
        ]
      ],
      [
        -1,
        "=",
        "2",
        [
          -1,
          "cons:1",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302111302312101013021010302103302312113021030231212101013021330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20b;&#xf248;&#xf159;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 650
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 1 | cons 15 17) | = 1 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "1",
        [
          -1,
          "cons",
          "15",
          "17"
        ]
      ],
      [
        -1,
        "=",
        "1",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302130231210101302111130210001330231211302130231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf24a;&#xf213;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 651
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 1 | cons 15 17) | = 15 | car | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "1",
        [
          -1,
          "cons",
          "15",
          "17"
        ]
      ],
      [
        -1,
        "=",
        "15",
        [
          -1,
          "cons:0",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302130231210101302111130210001330231211302111130231212101013020330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf24a;&#xf213;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf213;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 652
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 1 | cons 15 17) | = 17 | cdr | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "1",
        [
          -1,
          "cons",
          "15",
          "17"
        ]
      ],
      [
        -1,
        "=",
        "17",
        [
          -1,
          "cons:1",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013021302312101013021111302100013302312113021000130231212101013021330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf24a;&#xf213;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf215;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 653
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 8 | cons 14 9) | = 8 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "8",
        [
          -1,
          "cons",
          "14",
          "9"
        ]
      ],
      [
        -1,
        "=",
        "8",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "12111031210101132121010130210003023121010130211103021001330231211302100030231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20c;&#xf248;&#xf159;&#xf24a;&#xf212;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 654
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 8 | cons 14 9) | = 14 | car | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "8",
        [
          -1,
          "cons",
          "14",
          "9"
        ]
      ],
      [
        -1,
        "=",
        "14",
        [
          -1,
          "cons:0",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12111031210101132121010130210003023121010130211103021001330231211302111030231212101013020330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20c;&#xf248;&#xf159;&#xf24a;&#xf212;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf212;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 655
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 8 | cons 14 9) | = 9 | cdr | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "8",
        [
          -1,
          "cons",
          "14",
          "9"
        ]
      ],
      [
        -1,
        "=",
        "9",
        [
          -1,
          "cons:1",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12111031210101132121010130210003023121010130211103021001330231211302100130231212101013021330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf20c;&#xf248;&#xf159;&#xf24a;&#xf212;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 656
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 3 | car $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "3",
        [
          -1,
          "cons:0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013021130231210101302030231210101302103023121010130210030213302312113021130231212101013020331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 657
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 0 | car | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "0",
        [
          -1,
          "cons:0",
          [
            -1,
            "cons:1",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302113023121010130203023121010130210302312101013021003021330231211302030231212101013020330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 658
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 2 | car | cdr | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "2",
        [
          -1,
          "cons:0",
          [
            -1,
            "cons:1",
            [
              -1,
              "cons:1",
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211103121010113212101013021130231210101302030231210101302103023121010130210030213302312113021030231212101013020330231212101013021330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 659
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 4 | car | cdr | cdr | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "4",
        [
          -1,
          "cons:0",
          [
            -1,
            "cons:1",
            [
              -1,
              "cons:1",
              [
                -1,
                "cons:1",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12111031210101132121010130211302312101013020302312101013021030231210101302100302133023121130210030231212101013020330231212101013021330231212101013021330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf208;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 660
  },
  {
    "role": "code",
    "lines": [
      "assign x (cons 3 | cons 0 | cons 2 | cons 4 1) | = 1 | cdr | cdr | cdr | cdr $x;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "x",
      [
        "cons",
        "3",
        [
          -1,
          "cons",
          "0",
          [
            -1,
            "cons",
            "2",
            [
              -1,
              "cons",
              "4",
              "1"
            ]
          ]
        ]
      ],
      [
        -1,
        "=",
        "1",
        [
          -1,
          "cons:1",
          [
            -1,
            "cons:1",
            [
              -1,
              "cons:1",
              [
                -1,
                "cons:1",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121110312101011321210101302113023121010130203023121010130210302312101013021003021330231211302130231212101013021330231212101013021330231212101013021330231212101013021331231210101132233",
    "spider": "&#xf152;&#xf24a;&#xf16f;&#xf246;&#xf159;&#xf24a;&#xf207;&#xf248;&#xf159;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf24a;&#xf206;&#xf248;&#xf159;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 661
  },
  {
    "role": "file",
    "lines": [
      "== COS_Mutable =="
    ],
    "stanza": 662
  },
  {
    "role": "doc",
    "lines": [
      "",
      "With `define`, we showed that there is a global memory, where we can associate a",
      "symbol with a value.  That's nice, but it can be handy to separate memory from",
      "naming.  In this section we introduce `make-cell X`, which creates a \"cell\"",
      "of memory and puts `X` in it.  The cell can be read with `get!`, like",
      "`get! | make-cell X`, or written to with `set!`, like `set! (make-cell-X) Y`.",
      ""
    ],
    "section_description": "introduce mutable cells",
    "section_category": "MATH",
    "section_index": 15,
    "stanza": 663
  },
  {
    "role": "code",
    "lines": [
      "intro make-cell;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cell:make"
    ],
    "code": "12100103121210010131211011332233",
    "spider": "&#xf156;&#xf24a;&#xf169;&#xf15f;&#xf24b;",
    "stanza": 664
  },
  {
    "role": "code",
    "lines": [
      "intro set!;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cell:assign"
    ],
    "code": "1210010312121001013121110332233",
    "spider": "&#xf156;&#xf24a;&#xf169;&#xf152;&#xf24b;",
    "stanza": 665
  },
  {
    "role": "code",
    "lines": [
      "intro get!;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cell:get"
    ],
    "code": "121001031212100101312111101332233",
    "spider": "&#xf156;&#xf24a;&#xf169;&#xf181;&#xf24b;",
    "stanza": 666
  },
  {
    "role": "code",
    "lines": [
      "define demo:make-cell:x | make-cell 14;"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:cell:make:x",
      [
        -1,
        "cell:make",
        "14"
      ]
    ],
    "code": "1211013121210010031210010131211011312101011330231212100101312110113302111032233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf248;&#xf169;&#xf15f;&#xf212;&#xf24b;",
    "stanza": 667
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 14;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:x"
        ]
      ],
      "14"
    ],
    "code": "12113212121001013121111013312312121001003121001013121101131210101133302111032233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf212;&#xf24b;",
    "stanza": 668
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:x 15;"
    ],
    "dt": false,
    "parse": [
      "cell:assign",
      [
        -2,
        "demo:cell:make:x"
      ],
      "15"
    ],
    "code": "12121001013121110331231212100100312100101312110113121010113302111132233",
    "spider": "&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf213;&#xf24b;",
    "stanza": 669
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 15;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:x"
        ]
      ],
      "15"
    ],
    "code": "12113212121001013121111013312312121001003121001013121101131210101133302111132233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf213;&#xf24b;",
    "stanza": 670
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:x 5;"
    ],
    "dt": false,
    "parse": [
      "cell:assign",
      [
        -2,
        "demo:cell:make:x"
      ],
      "5"
    ],
    "code": "1212100101312111033123121210010031210010131211011312101011330210132233",
    "spider": "&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf209;&#xf24b;",
    "stanza": 671
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:x 7;"
    ],
    "dt": false,
    "parse": [
      "cell:assign",
      [
        -2,
        "demo:cell:make:x"
      ],
      "7"
    ],
    "code": "1212100101312111033123121210010031210010131211011312101011330211132233",
    "spider": "&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf20b;&#xf24b;",
    "stanza": 672
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:x"
        ]
      ],
      "7"
    ],
    "code": "1211321212100101312111101331231212100100312100101312110113121010113330211132233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 673
  },
  {
    "role": "code",
    "lines": [
      "define demo:make-cell:y | make-cell 11;"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:cell:make:y",
      [
        -1,
        "cell:make",
        "11"
      ]
    ],
    "code": "1211013121210010031210010131211011312110100330231212100101312110113302101132233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf248;&#xf169;&#xf15f;&#xf20f;&#xf24b;",
    "stanza": 674
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:y) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:y"
        ]
      ],
      "11"
    ],
    "code": "12113212121001013121111013312312121001003121001013121101131211010033302101132233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 675
  },
  {
    "role": "code",
    "lines": [
      "set! $demo:make-cell:y 22;"
    ],
    "dt": false,
    "parse": [
      "cell:assign",
      [
        -2,
        "demo:cell:make:y"
      ],
      "22"
    ],
    "code": "121210010131211103312312121001003121001013121101131211010033021011032233",
    "spider": "&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf21a;&#xf24b;",
    "stanza": 676
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:y) 22;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:y"
        ]
      ],
      "22"
    ],
    "code": "121132121210010131211110133123121210010031210010131211011312110100333021011032233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf245;&#xf21a;&#xf24b;",
    "stanza": 677
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:x"
        ]
      ],
      "7"
    ],
    "code": "1211321212100101312111101331231212100100312100101312110113121010113330211132233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 678
  },
  {
    "role": "code",
    "lines": [
      "= 29 (+ (get! $demo:make-cell:x) | get! $demo:make-cell:y);"
    ],
    "dt": false,
    "parse": [
      "=",
      "29",
      [
        "+",
        [
          "cell:get",
          [
            -2,
            "demo:cell:make:x"
          ]
        ],
        [
          -1,
          "cell:get",
          [
            -2,
            "demo:cell:make:y"
          ]
        ]
      ]
    ],
    "code": "12113021110132121010321212100101312111101331231212100100312100101312110113121010113330231212100101312111101331231212100100312100101312110113121101003332233",
    "spider": "&#xf147;&#xf24a;&#xf221;&#xf246;&#xf14e;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf248;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf245;&#xf24b;",
    "stanza": 679
  },
  {
    "role": "code",
    "lines": [
      "if (= (get! $demo:make-cell:x) 7) (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 99);"
    ],
    "dt": false,
    "parse": [
      "if",
      [
        "=",
        [
          "cell:get",
          [
            -2,
            "demo:cell:make:x"
          ]
        ],
        "7"
      ],
      [
        "cell:assign",
        [
          -2,
          "demo:cell:make:x"
        ],
        "88"
      ],
      [
        "cell:assign",
        [
          -2,
          "demo:cell:make:x"
        ],
        "99"
      ]
    ],
    "code": "1211113212113212121001013121111013312312121001003121001013121101131210101133302111332121210010131211103312312121001003121001013121101131210101133021011000332121210010131211103312312121001003121001013121101131210101133021100011332233",
    "spider": "&#xf153;&#xf246;&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf20b;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf205;&#xf21c;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf205;&#xf227;&#xf245;&#xf24b;",
    "stanza": 680
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 88;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:x"
        ]
      ],
      "88"
    ],
    "code": "12113212121001013121111013312312121001003121001013121101131210101133302101100032233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf205;&#xf21c;&#xf24b;",
    "stanza": 681
  },
  {
    "role": "code",
    "lines": [
      "if (= (get! $demo:make-cell:x) 7) (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 99);"
    ],
    "dt": false,
    "parse": [
      "if",
      [
        "=",
        [
          "cell:get",
          [
            -2,
            "demo:cell:make:x"
          ]
        ],
        "7"
      ],
      [
        "cell:assign",
        [
          -2,
          "demo:cell:make:x"
        ],
        "88"
      ],
      [
        "cell:assign",
        [
          -2,
          "demo:cell:make:x"
        ],
        "99"
      ]
    ],
    "code": "1211113212113212121001013121111013312312121001003121001013121101131210101133302111332121210010131211103312312121001003121001013121101131210101133021011000332121210010131211103312312121001003121001013121101131210101133021100011332233",
    "spider": "&#xf153;&#xf246;&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf20b;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf205;&#xf21c;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf205;&#xf227;&#xf245;&#xf24b;",
    "stanza": 682
  },
  {
    "role": "code",
    "lines": [
      "= (get! $demo:make-cell:x) 99;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "cell:get",
        [
          -2,
          "demo:cell:make:x"
        ]
      ],
      "99"
    ],
    "code": "12113212121001013121111013312312121001003121001013121101131210101133302110001132233",
    "spider": "&#xf147;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf205;&#xf227;&#xf24b;",
    "stanza": 683
  },
  {
    "role": "file",
    "lines": [
      "== COS_ListPre =="
    ],
    "stanza": 684
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Lists are a handy data structure to have.  We'd like to get to the point",
      "in the message where we can make lists like this: `vector 1 4 5`,",
      "`vector 77 $undefined (vector 1 2 3) 14`, etc.  But",
      "`vector` can't be a function in the language we've described up to now,",
      "it just can't work syntactically.",
      "What we can do is make lists like this: `(list 3) 1 4 5`,",
      "`(list 4) 77 $undefined ((list 3) 1 2 3) 14`, where we manually",
      "specify how many values are in the list.",
      "And then we can introduce a way to transform the syntax of the language,",
      "so that `vector 1 4 5` gets rewritten to `(list 3) 1 4 5` prior to being",
      "evaluated.",
      "",
      "An alternative would be just to introduce some special new syntax for",
      "lists, and give examples.  If the listener finds our transformation approach",
      "confusing, they can simply ignore it and pick the message up again once",
      "`vector` is in place.  But by giving the transformation, we offer a second",
      "way to understand and experiment with the concepts being introduced.",
      ""
    ],
    "section_description": "introduce lists",
    "section_category": "MATH",
    "section_index": 16,
    "stanza": 685
  },
  {
    "role": "code",
    "lines": [
      "intro list;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list"
    ],
    "code": "121001031211111032233",
    "spider": "&#xf156;&#xf24a;&#xf182;&#xf24b;",
    "stanza": 686
  },
  {
    "role": "code",
    "lines": [
      "define list:n | ? n | ? ret |",
      "  if (= $n 1) (? x | ret 1 $x) |",
      "  ? x | list:n (- $n 1) | ? y | ? z | ret (+ 1 $y) | cons $x $z;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:n",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "?",
          "ret",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "1"
            ],
            [
              "?",
              "x",
              [
                -1,
                "ret",
                "1",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -1,
              "?",
              "x",
              [
                -1,
                "list:n",
                [
                  "-",
                  [
                    -2,
                    "n"
                  ],
                  "1"
                ],
                [
                  -1,
                  "?",
                  "y",
                  [
                    -1,
                    "?",
                    "z",
                    [
                      -1,
                      "ret",
                      [
                        "+",
                        "1",
                        [
                          -2,
                          "y"
                        ]
                      ],
                      [
                        -1,
                        "cons",
                        [
                          -2,
                          "x"
                        ],
                        [
                          -2,
                          "z"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121111103121111113302312110031211111130231211003121000000302312111132121131231211111130213321211003121010113023121000000302131231210101133023121100312101011302312121111103121111113321210113123121111113021330231211003121101003023121100312110101302312100000032121010302131231211010033023121010131231210101131231211010132233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf183;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf144;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf144;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf182;&#xf183;&#xf246;&#xf14f;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf145;&#xf144;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf178;&#xf245;&#xf248;&#xf159;&#xf249;&#xf16f;&#xf249;&#xf179;&#xf24b;",
    "stanza": 687
  },
  {
    "role": "code",
    "lines": [
      "define list | ? n | if (= $n 0) (cons 0 0) (list:n $n $cons);"
    ],
    "dt": true,
    "parse": [
      "@",
      "list",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "n"
            ],
            "0"
          ],
          [
            "cons",
            "0",
            "0"
          ],
          [
            "list:n",
            [
              -2,
              "n"
            ],
            [
              -2,
              "cons"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121111103023121100312111111302312111132121131231211111130203321210101302030203321212111110312111111331231211111131231210101332233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf182;&#xf183;&#xf249;&#xf183;&#xf249;&#xf159;&#xf245;&#xf24b;",
    "stanza": 688
  },
  {
    "role": "code",
    "lines": [
      "intro undefined;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "undefined"
    ],
    "code": "121001031210000032233",
    "spider": "&#xf156;&#xf24a;&#xf164;&#xf24b;",
    "stanza": 689
  },
  {
    "role": "code",
    "lines": [
      "= $undefined $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "undefined"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "121131231210000031231210000032233",
    "spider": "&#xf147;&#xf249;&#xf164;&#xf249;&#xf164;&#xf24b;",
    "stanza": 690
  },
  {
    "role": "code",
    "lines": [
      "not | = $undefined 0;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "undefined"
        ],
        "0"
      ]
    ],
    "code": "1210130231211312312100000302032233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf249;&#xf164;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 691
  },
  {
    "role": "code",
    "lines": [
      "not | = $undefined 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "undefined"
        ],
        "1"
      ]
    ],
    "code": "1210130231211312312100000302132233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf249;&#xf164;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 692
  },
  {
    "role": "code",
    "lines": [
      "not | = $undefined 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          -2,
          "undefined"
        ],
        "2"
      ]
    ],
    "code": "12101302312113123121000003021032233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf249;&#xf164;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 693
  },
  {
    "role": "code",
    "lines": [
      "intro head;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list:0"
    ],
    "code": "1210010312121111103020332233",
    "spider": "&#xf156;&#xf24a;&#xf182;&#xf204;&#xf24b;",
    "stanza": 694
  },
  {
    "role": "code",
    "lines": [
      "define head | ? x:list |",
      "  if (= 0 | car $x:list) $undefined |",
      "  if (= 1 | car $x:list) (cdr $x:list) |",
      "  car | cdr $x:list;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:0",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "cons:0",
              [
                -2,
                "x:list"
              ]
            ]
          ],
          [
            -2,
            "undefined"
          ],
          [
            -1,
            "if",
            [
              "=",
              "1",
              [
                -1,
                "cons:0",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              "cons:1",
              [
                -2,
                "x:list"
              ]
            ],
            [
              -1,
              "cons:0",
              [
                -1,
                "cons:1",
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121111103020330231211003121210101131211111033023121111321211302030231212101013020331231212101011312111110333123121000003023121111321211302130231212101013020331231212101011312111110333212121010130213312312121010113121111103330231212101013020330231212101013021331231212101011312111110332233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf164;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf159;&#xf204;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf182;&#xf24b;",
    "stanza": 695
  },
  {
    "role": "code",
    "lines": [
      "intro tail;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list:remainder"
    ],
    "code": "1210010312121111103121000001332233",
    "spider": "&#xf156;&#xf24a;&#xf182;&#xf145;&#xf145;&#xf24b;",
    "stanza": 696
  },
  {
    "role": "code",
    "lines": [
      "define tail | ? x:list |",
      "  if (= 0 | car $x:list) $undefined |",
      "  if (= 1 | car $x:list) (cons 0 0) |",
      "  cons (- (car $x:list) 1) | cdr | cdr $x:list;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:remainder",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "cons:0",
              [
                -2,
                "x:list"
              ]
            ]
          ],
          [
            -2,
            "undefined"
          ],
          [
            -1,
            "if",
            [
              "=",
              "1",
              [
                -1,
                "cons:0",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              "cons",
              "0",
              "0"
            ],
            [
              -1,
              "cons",
              [
                "-",
                [
                  "cons:0",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                "1"
              ],
              [
                -1,
                "cons:1",
                [
                  -1,
                  "cons:1",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121111103121000001330231211003121210101131211111033023121111321211302030231212101013020331231212101011312111110333123121000003023121111321211302130231212101013020331231212101011312111110333212101013020302033023121010132121011321212101013020331231212101011312111110333021330231212101013021330231212101013021331231212101011312111110332233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf145;&#xf145;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf164;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf159;&#xf246;&#xf14f;&#xf246;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf205;&#xf245;&#xf248;&#xf159;&#xf205;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf182;&#xf24b;",
    "stanza": 697
  },
  {
    "role": "code",
    "lines": [
      "= 17 | head | (list 4) 17 4 3 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "17",
      [
        -1,
        "list:0",
        [
          -1,
          [
            "list",
            "4"
          ],
          "17",
          "4",
          "3",
          "0"
        ]
      ]
    ],
    "code": "1211302100013023121211111030203302321211111030210033021000130210030211302032233",
    "spider": "&#xf147;&#xf24a;&#xf215;&#xf248;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf215;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 698
  },
  {
    "role": "code",
    "lines": [
      "= 14 | head | (list 9) 14 0 12 19 11 9 8 0 17;"
    ],
    "dt": false,
    "parse": [
      "=",
      "14",
      [
        -1,
        "list:0",
        [
          -1,
          [
            "list",
            "9"
          ],
          "14",
          "0",
          "12",
          "19",
          "11",
          "9",
          "8",
          "0",
          "17"
        ]
      ]
    ],
    "code": "1211302111030231212111110302033023212111110302100133021110302030211003021001130210113021001302100030203021000132233",
    "spider": "&#xf147;&#xf24a;&#xf212;&#xf248;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf212;&#xf24a;&#xf204;&#xf24a;&#xf210;&#xf24a;&#xf217;&#xf24a;&#xf20f;&#xf24a;&#xf20d;&#xf24a;&#xf20c;&#xf24a;&#xf204;&#xf24a;&#xf215;&#xf24b;",
    "stanza": 699
  },
  {
    "role": "code",
    "lines": [
      "= 16 | head | (list 6) 16 9 0 17 17 10;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        "list:0",
        [
          -1,
          [
            "list",
            "6"
          ],
          "16",
          "9",
          "0",
          "17",
          "17",
          "10"
        ]
      ]
    ],
    "code": "12113021000030231212111110302033023212111110302110330210000302100130203021000130210001302101032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf214;&#xf24a;&#xf20d;&#xf24a;&#xf204;&#xf24a;&#xf215;&#xf24a;&#xf215;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 700
  },
  {
    "role": "code",
    "lines": [
      "= 5 | head | (list 5) 5 3 1 5 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        -1,
        "list:0",
        [
          -1,
          [
            "list",
            "5"
          ],
          "5",
          "3",
          "1",
          "5",
          "11"
        ]
      ]
    ],
    "code": "1211302101302312121111103020330232121111103021013302101302113021302101302101132233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf248;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf20f;&#xf24b;",
    "stanza": 701
  },
  {
    "role": "code",
    "lines": [
      "= 15 | head | (list 9) 15 10 12 4 13 6 13 1 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "list:0",
        [
          -1,
          [
            "list",
            "9"
          ],
          "15",
          "10",
          "12",
          "4",
          "13",
          "6",
          "13",
          "1",
          "6"
        ]
      ]
    ],
    "code": "12113021111302312121111103020330232121111103021001330211113021010302110030210030211013021103021101302130211032233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf213;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf24a;&#xf211;&#xf24a;&#xf20a;&#xf24a;&#xf211;&#xf24a;&#xf205;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 702
  },
  {
    "role": "code",
    "lines": [
      "= 4 | head | tail | (list 10) 1 4 3 7 0 1 2 11 13 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            [
              "list",
              "10"
            ],
            "1",
            "4",
            "3",
            "7",
            "0",
            "1",
            "2",
            "11",
            "13",
            "3"
          ]
        ]
      ]
    ],
    "code": "1211302100302312121111103020330231212111110312100000133023212111110302101033021302100302113021113020302130210302101130211013021132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20e;&#xf245;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24a;&#xf20b;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf20f;&#xf24a;&#xf211;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 703
  },
  {
    "role": "code",
    "lines": [
      "= 3 | head | tail | (list 5) 15 3 19 16 17;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            [
              "list",
              "5"
            ],
            "15",
            "3",
            "19",
            "16",
            "17"
          ]
        ]
      ]
    ],
    "code": "121130211302312121111103020330231212111110312100000133023212111110302101330211113021130210011302100003021000132233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf213;&#xf24a;&#xf207;&#xf24a;&#xf217;&#xf24a;&#xf214;&#xf24a;&#xf215;&#xf24b;",
    "stanza": 704
  },
  {
    "role": "code",
    "lines": [
      "= 8 | head | tail | (list 6) 6 8 13 9 18 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            [
              "list",
              "6"
            ],
            "6",
            "8",
            "13",
            "9",
            "18",
            "2"
          ]
        ]
      ]
    ],
    "code": "121130210003023121211111030203302312121111103121000001330232121111103021103302110302100030211013021001302100103021032233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf211;&#xf24a;&#xf20d;&#xf24a;&#xf216;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 705
  },
  {
    "role": "code",
    "lines": [
      "= 3 | head | tail | (list 8) 5 3 10 13 2 8 6 12;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            [
              "list",
              "8"
            ],
            "5",
            "3",
            "10",
            "13",
            "2",
            "8",
            "6",
            "12"
          ]
        ]
      ]
    ],
    "code": "121130211302312121111103020330231212111110312100000133023212111110302100033021013021130210103021101302103021000302110302110032233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20e;&#xf24a;&#xf211;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf210;&#xf24b;",
    "stanza": 706
  },
  {
    "role": "code",
    "lines": [
      "= 11 | head | tail | (list 10) 14 11 18 9 9 11 3 10 16 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            [
              "list",
              "10"
            ],
            "14",
            "11",
            "18",
            "9",
            "9",
            "11",
            "3",
            "10",
            "16",
            "2"
          ]
        ]
      ]
    ],
    "code": "12113021011302312121111103020330231212111110312100000133023212111110302101033021110302101130210010302100130210013021011302113021010302100003021032233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20e;&#xf245;&#xf212;&#xf24a;&#xf20f;&#xf24a;&#xf216;&#xf24a;&#xf20d;&#xf24a;&#xf20d;&#xf24a;&#xf20f;&#xf24a;&#xf207;&#xf24a;&#xf20e;&#xf24a;&#xf214;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 707
  },
  {
    "role": "code",
    "lines": [
      "= 16 | head | tail | tail | (list 7) 19 7 16 17 12 1 18;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            "list:remainder",
            [
              -1,
              [
                "list",
                "7"
              ],
              "19",
              "7",
              "16",
              "17",
              "12",
              "1",
              "18"
            ]
          ]
        ]
      ]
    ],
    "code": "12113021000030231212111110302033023121211111031210000013302312121111103121000001330232121111103021113302100113021113021000030210001302110030213021001032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf217;&#xf24a;&#xf20b;&#xf24a;&#xf214;&#xf24a;&#xf215;&#xf24a;&#xf210;&#xf24a;&#xf205;&#xf24a;&#xf216;&#xf24b;",
    "stanza": 708
  },
  {
    "role": "code",
    "lines": [
      "= 18 | head | tail | tail | (list 6) 16 9 18 5 11 17;"
    ],
    "dt": false,
    "parse": [
      "=",
      "18",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            "list:remainder",
            [
              -1,
              [
                "list",
                "6"
              ],
              "16",
              "9",
              "18",
              "5",
              "11",
              "17"
            ]
          ]
        ]
      ]
    ],
    "code": "121130210010302312121111103020330231212111110312100000133023121211111031210000013302321211111030211033021000030210013021001030210130210113021000132233",
    "spider": "&#xf147;&#xf24a;&#xf216;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf214;&#xf24a;&#xf20d;&#xf24a;&#xf216;&#xf24a;&#xf209;&#xf24a;&#xf20f;&#xf24a;&#xf215;&#xf24b;",
    "stanza": 709
  },
  {
    "role": "code",
    "lines": [
      "= 15 | head | tail | tail | (list 4) 1 0 15 18;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            "list:remainder",
            [
              -1,
              [
                "list",
                "4"
              ],
              "1",
              "0",
              "15",
              "18"
            ]
          ]
        ]
      ]
    ],
    "code": "12113021111302312121111103020330231212111110312100000133023121211111031210000013302321211111030210033021302030211113021001032233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf213;&#xf24a;&#xf216;&#xf24b;",
    "stanza": 710
  },
  {
    "role": "code",
    "lines": [
      "= 4 | head | tail | tail | (list 6) 0 0 4 19 1 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            "list:remainder",
            [
              -1,
              [
                "list",
                "6"
              ],
              "0",
              "0",
              "4",
              "19",
              "1",
              "5"
            ]
          ]
        ]
      ]
    ],
    "code": "1211302100302312121111103020330231212111110312100000133023121211111031210000013302321211111030211033020302030210030210011302130210132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf24a;&#xf217;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 711
  },
  {
    "role": "code",
    "lines": [
      "= 7 | head | tail | tail | (list 4) 7 1 7 14;"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        -1,
        "list:0",
        [
          -1,
          "list:remainder",
          [
            -1,
            "list:remainder",
            [
              -1,
              [
                "list",
                "4"
              ],
              "7",
              "1",
              "7",
              "14"
            ]
          ]
        ]
      ]
    ],
    "code": "1211302111302312121111103020330231212111110312100000133023121211111031210000013302321211111030210033021113021302111302111032233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf20b;&#xf24a;&#xf205;&#xf24a;&#xf20b;&#xf24a;&#xf212;&#xf24b;",
    "stanza": 712
  },
  {
    "role": "code",
    "lines": [
      "intro list-length;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list-length"
    ],
    "code": "1210010312100001032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf146;&#xf24b;",
    "stanza": 713
  },
  {
    "role": "code",
    "lines": [
      "define list-length $car;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list-length",
      [
        -2,
        "cons:0"
      ]
    ],
    "code": "121101312100001031231212101013020332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf146;&#xf249;&#xf159;&#xf204;&#xf24b;",
    "stanza": 714
  },
  {
    "role": "code",
    "lines": [
      "= 4 | list-length | (list 4) 1 9 3 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "4"
          ],
          "1",
          "9",
          "3",
          "6"
        ]
      ]
    ],
    "code": "1211302100302312100001030232121111103021003302130210013021130211032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf146;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf205;&#xf24a;&#xf20d;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 715
  },
  {
    "role": "code",
    "lines": [
      "= 1 | list-length | (list 1) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "1"
          ],
          "6"
        ]
      ]
    ],
    "code": "12113021302312100001030232121111103021330211032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf146;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf205;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 716
  },
  {
    "role": "code",
    "lines": [
      "= 9 | list-length | (list 9) 6 2 5 8 7 4 1 3 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "9"
          ],
          "6",
          "2",
          "5",
          "8",
          "7",
          "4",
          "1",
          "3",
          "0"
        ]
      ]
    ],
    "code": "121130210013023121000010302321211111030210013302110302103021013021000302111302100302130211302032233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf145;&#xf146;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf20b;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 717
  },
  {
    "role": "code",
    "lines": [
      "= 7 | list-length | (list 7) 6 0 1 9 4 5 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "7"
          ],
          "6",
          "0",
          "1",
          "9",
          "4",
          "5",
          "2"
        ]
      ]
    ],
    "code": "12113021113023121000010302321211111030211133021103020302130210013021003021013021032233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf248;&#xf145;&#xf146;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf20a;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf20d;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 718
  },
  {
    "role": "code",
    "lines": [
      "= 6 | list-length | (list 6) 2 4 7 0 3 8;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "list-length",
        [
          -1,
          [
            "list",
            "6"
          ],
          "2",
          "4",
          "7",
          "0",
          "3",
          "8"
        ]
      ]
    ],
    "code": "121130211030231210000103023212111110302110330210302100302111302030211302100032233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf145;&#xf146;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf20b;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 719
  },
  {
    "role": "code",
    "lines": [
      "intro list-ref;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list-ref"
    ],
    "code": "1210010312100001132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf147;&#xf24b;",
    "stanza": 720
  },
  {
    "role": "code",
    "lines": [
      "define list-ref | ? x:list | ? n |",
      "  if (= 0 | car $x:list) $undefined |",
      "  if (= $n 0) (head $x:list) |",
      "  list-ref (tail $x:list) | - $n 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list-ref",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "cons:0",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              -2,
              "undefined"
            ],
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "n"
                ],
                "0"
              ],
              [
                "list:0",
                [
                  -2,
                  "x:list"
                ]
              ],
              [
                -1,
                "list-ref",
                [
                  "list:remainder",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                [
                  -1,
                  "-",
                  [
                    -2,
                    "n"
                  ],
                  "1"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210000113023121100312121010113121111103302312110031211111130231211113212113020302312121010130203312312121010113121111103331231210000030231211113212113123121111113020332121211111030203312312121010113121111103330231210000113212121111103121000001331231212101011312111110333023121011312312111111302132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf147;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf164;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf145;&#xf147;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf14f;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 721
  },
  {
    "role": "code",
    "lines": [
      "= 15 | list-ref ((list 4) 5 8 15 3) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "4"
          ],
          "5",
          "8",
          "15",
          "3"
        ],
        "2"
      ]
    ],
    "code": "121130211113023121000011322121111103021003302101302100030211113021133021032233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf213;&#xf24a;&#xf207;&#xf245;&#xf206;&#xf24b;",
    "stanza": 722
  },
  {
    "role": "code",
    "lines": [
      "= 7 | list-ref ((list 7) 12 19 0 15 1 8 7) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "7"
          ],
          "12",
          "19",
          "0",
          "15",
          "1",
          "8",
          "7"
        ],
        "6"
      ]
    ],
    "code": "121130211130231210000113221211111030211133021100302100113020302111130213021000302111330211032233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf210;&#xf24a;&#xf217;&#xf24a;&#xf204;&#xf24a;&#xf213;&#xf24a;&#xf205;&#xf24a;&#xf20c;&#xf24a;&#xf20b;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 723
  },
  {
    "role": "code",
    "lines": [
      "= 4 | list-ref ((list 2) 4 6) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "2"
          ],
          "4",
          "6"
        ],
        "0"
      ]
    ],
    "code": "12113021003023121000011322121111103021033021003021103302032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf208;&#xf24a;&#xf20a;&#xf245;&#xf204;&#xf24b;",
    "stanza": 724
  },
  {
    "role": "code",
    "lines": [
      "= 13 | list-ref ((list 4) 11 10 13 8) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "13",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "4"
          ],
          "11",
          "10",
          "13",
          "8"
        ],
        "2"
      ]
    ],
    "code": "121130211013023121000011322121111103021003302101130210103021101302100033021032233",
    "spider": "&#xf147;&#xf24a;&#xf211;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf20f;&#xf24a;&#xf20e;&#xf24a;&#xf211;&#xf24a;&#xf20c;&#xf245;&#xf206;&#xf24b;",
    "stanza": 725
  },
  {
    "role": "code",
    "lines": [
      "= 2 | list-ref ((list 6) 9 2 9 8 10 12) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "6"
          ],
          "9",
          "2",
          "9",
          "8",
          "10",
          "12"
        ],
        "1"
      ]
    ],
    "code": "121130210302312100001132212111110302110330210013021030210013021000302101030211003302132233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf20d;&#xf24a;&#xf20c;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf245;&#xf205;&#xf24b;",
    "stanza": 726
  },
  {
    "role": "code",
    "lines": [
      "= 7 | list-ref ((list 4) 18 7 12 13) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "4"
          ],
          "18",
          "7",
          "12",
          "13"
        ],
        "1"
      ]
    ],
    "code": "1211302111302312100001132212111110302100330210010302111302110030211013302132233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf216;&#xf24a;&#xf20b;&#xf24a;&#xf210;&#xf24a;&#xf211;&#xf245;&#xf205;&#xf24b;",
    "stanza": 727
  },
  {
    "role": "code",
    "lines": [
      "= 2 | list-ref ((list 9) 3 3 5 6 2 16 10 1 1) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "9"
          ],
          "3",
          "3",
          "5",
          "6",
          "2",
          "16",
          "10",
          "1",
          "1"
        ],
        "4"
      ]
    ],
    "code": "1211302103023121000011322121111103021001330211302113021013021103021030210000302101030213021330210032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf207;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf214;&#xf24a;&#xf20e;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf208;&#xf24b;",
    "stanza": 728
  },
  {
    "role": "code",
    "lines": [
      "= 13 | list-ref ((list 7) 11 13 9 12 5 7 5) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "13",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "7"
          ],
          "11",
          "13",
          "9",
          "12",
          "5",
          "7",
          "5"
        ],
        "1"
      ]
    ],
    "code": "12113021101302312100001132212111110302111330210113021101302100130211003021013021113021013302132233",
    "spider": "&#xf147;&#xf24a;&#xf211;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf20f;&#xf24a;&#xf211;&#xf24a;&#xf20d;&#xf24a;&#xf210;&#xf24a;&#xf209;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf205;&#xf24b;",
    "stanza": 729
  },
  {
    "role": "code",
    "lines": [
      "= 17 | list-ref ((list 9) 13 17 14 16 0 2 9 3 5) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "17",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "9"
          ],
          "13",
          "17",
          "14",
          "16",
          "0",
          "2",
          "9",
          "3",
          "5"
        ],
        "1"
      ]
    ],
    "code": "121130210001302312100001132212111110302100133021101302100013021110302100003020302103021001302113021013302132233",
    "spider": "&#xf147;&#xf24a;&#xf215;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf211;&#xf24a;&#xf215;&#xf24a;&#xf212;&#xf24a;&#xf214;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf20d;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf205;&#xf24b;",
    "stanza": 730
  },
  {
    "role": "code",
    "lines": [
      "= 1 | list-ref ((list 9) 18 10 4 1 17 18 8 8 8) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "list-ref",
        [
          [
            "list",
            "9"
          ],
          "18",
          "10",
          "4",
          "1",
          "17",
          "18",
          "8",
          "8",
          "8"
        ],
        "3"
      ]
    ],
    "code": "12113021302312100001132212111110302100133021001030210103021003021302100013021001030210003021000302100033021132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf147;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf216;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf215;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf245;&#xf207;&#xf24b;",
    "stanza": 731
  },
  {
    "role": "code",
    "lines": [
      "intro function?;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "function?"
    ],
    "code": "12100103121110132233",
    "spider": "&#xf156;&#xf24a;&#xf161;&#xf24b;",
    "stanza": 732
  },
  {
    "role": "code",
    "lines": [
      "function? | ? x 1;"
    ],
    "dt": false,
    "parse": [
      "function?",
      [
        -1,
        "?",
        "x",
        "1"
      ]
    ],
    "code": "12111013023121100312101011302132233",
    "spider": "&#xf161;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 733
  },
  {
    "role": "code",
    "lines": [
      "not | function? 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "function?",
        "1"
      ]
    ],
    "code": "1210130231211101302132233",
    "spider": "&#xf149;&#xf248;&#xf161;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 734
  },
  {
    "role": "code",
    "lines": [
      "not | function? | + 1 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "function?",
        [
          -1,
          "+",
          "1",
          "1"
        ]
      ]
    ],
    "code": "121013023121110130231210103021302132233",
    "spider": "&#xf149;&#xf248;&#xf161;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 735
  },
  {
    "role": "code",
    "lines": [
      "function? | ? y | + $y 2;"
    ],
    "dt": false,
    "parse": [
      "function?",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "+",
          [
            -2,
            "y"
          ],
          "2"
        ]
      ]
    ],
    "code": "1211101302312110031211010030231210103123121101003021032233",
    "spider": "&#xf161;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14e;&#xf249;&#xf178;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 736
  },
  {
    "role": "code",
    "lines": [
      "function? $*;"
    ],
    "dt": false,
    "parse": [
      "function?",
      [
        -2,
        "*"
      ]
    ],
    "code": "1211101312312100132233",
    "spider": "&#xf161;&#xf249;&#xf14d;&#xf24b;",
    "stanza": 737
  },
  {
    "role": "code",
    "lines": [
      "not | function? | = 1 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "function?",
        [
          -1,
          "=",
          "1",
          "2"
        ]
      ]
    ],
    "code": "12101302312111013023121130213021032233",
    "spider": "&#xf149;&#xf248;&#xf161;&#xf248;&#xf147;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 738
  },
  {
    "role": "code",
    "lines": [
      "intro equal;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "equal"
    ],
    "code": "1210010312100010032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf148;&#xf24b;",
    "stanza": 739
  },
  {
    "role": "code",
    "lines": [
      "define equal | ? x | ? y |",
      "  if (not | = (function? $x) (function? $y)) $false |",
      "  if (function? $x) (list= $x $y) (= $x $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      "equal",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                [
                  "function?",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  "function?",
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "if",
              [
                "function?",
                [
                  -2,
                  "x"
                ]
              ],
              [
                "list=",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                "=",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121000100302312110031210101130231211003121101003023121111321210130231211321211101312312101011332121110131231211010033312312030231211113212111013123121010113321210001013123121010113123121101003321211312312101011312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf148;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf246;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf161;&#xf249;&#xf178;&#xf245;&#xf245;&#xf249;&#xf144;&#xf248;&#xf153;&#xf246;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf149;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 740
  },
  {
    "role": "code",
    "lines": [
      "intro list=;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list="
    ],
    "code": "1210010312100010132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf149;&#xf24b;",
    "stanza": 741
  },
  {
    "role": "code",
    "lines": [
      "define list= | ? x | ? y |",
      "  if (not | = (list-length $x) (list-length $y)) $false |",
      "  if (= 0 | list-length $x) $true |",
      "  if (not | equal (head $x) (head $y)) $false |",
      "  list= (tail $x) (tail $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      "list=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                [
                  "list-length",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  "list-length",
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "if",
              [
                "=",
                "0",
                [
                  -1,
                  "list-length",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -2,
                "true"
              ],
              [
                -1,
                "if",
                [
                  "not",
                  [
                    -1,
                    "equal",
                    [
                      "list:0",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    [
                      "list:0",
                      [
                        -2,
                        "y"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "false"
                ],
                [
                  -1,
                  "list=",
                  [
                    "list:remainder",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    "list:remainder",
                    [
                      -2,
                      "y"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121000101302312110031210101130231211003121101003023121111321210130231211321210000103123121010113321210000103123121101003331231203023121111321211302030231210000103123121010113312312130231211113212101302312100010032121211111030203312312101011332121211111030203312312110100333123120302312100010132121211111031210000013312312101011332121211111031210000013312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf149;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf246;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf146;&#xf249;&#xf178;&#xf245;&#xf245;&#xf249;&#xf144;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf145;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf182;&#xf204;&#xf249;&#xf178;&#xf245;&#xf245;&#xf249;&#xf144;&#xf248;&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 742
  },
  {
    "role": "code",
    "lines": [
      "equal 1 1;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "1",
      "1"
    ],
    "code": "1210001003021302132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 743
  },
  {
    "role": "code",
    "lines": [
      "equal ((list 2) 5 3) ((list 2) 5 3);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        [
          "list",
          "2"
        ],
        "5",
        "3"
      ],
      [
        [
          "list",
          "2"
        ],
        "5",
        "3"
      ]
    ],
    "code": "121000100322121111103021033021013021133221211111030210330210130211332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 744
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) ((list 3) 5 3 9);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        [
          [
            "list",
            "3"
          ],
          "5",
          "3",
          "9"
        ]
      ]
    ],
    "code": "1210130231210001003221211111030210330210130211332212111110302113302101302113021001332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf245;&#xf24b;",
    "stanza": 745
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) ((list 2) 5 4);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        [
          [
            "list",
            "2"
          ],
          "5",
          "4"
        ]
      ]
    ],
    "code": "1210130231210001003221211111030210330210130211332212111110302103302101302100332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 746
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) ((list 2) 4 3);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        [
          [
            "list",
            "2"
          ],
          "4",
          "3"
        ]
      ]
    ],
    "code": "121013023121000100322121111103021033021013021133221211111030210330210030211332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf208;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 747
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 2) 5 3) 12;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "2"
          ],
          "5",
          "3"
        ],
        "12"
      ]
    ],
    "code": "12101302312100010032212111110302103302101302113302110032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf210;&#xf24b;",
    "stanza": 748
  },
  {
    "role": "code",
    "lines": [
      "equal ((list 3) 5 3 9) ((list 3) 5 3 9);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        [
          "list",
          "3"
        ],
        "5",
        "3",
        "9"
      ],
      [
        [
          "list",
          "3"
        ],
        "5",
        "3",
        "9"
      ]
    ],
    "code": "12100010032212111110302113302101302113021001332212111110302113302101302113021001332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf245;&#xf24b;",
    "stanza": 749
  },
  {
    "role": "code",
    "lines": [
      "equal ((list 3) 5 ((list 2) 15 1) 9) ((list 3) 5 ((list 2) 15 1) 9);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        [
          "list",
          "3"
        ],
        "5",
        [
          [
            "list",
            "2"
          ],
          "15",
          "1"
        ],
        "9"
      ],
      [
        [
          "list",
          "3"
        ],
        "5",
        [
          [
            "list",
            "2"
          ],
          "15",
          "1"
        ],
        "9"
      ]
    ],
    "code": "12100010032212111110302113302101322121111103021033021111302133021001332212111110302113302101322121111103021033021111302133021001332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf213;&#xf24a;&#xf205;&#xf245;&#xf20d;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf213;&#xf24a;&#xf205;&#xf245;&#xf20d;&#xf245;&#xf24b;",
    "stanza": 750
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 3) 5 ((list 2) 15 1) 9) ((list 3) 5 ((list 2) 14 1) 9);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "3"
          ],
          "5",
          [
            [
              "list",
              "2"
            ],
            "15",
            "1"
          ],
          "9"
        ],
        [
          [
            "list",
            "3"
          ],
          "5",
          [
            [
              "list",
              "2"
            ],
            "14",
            "1"
          ],
          "9"
        ]
      ]
    ],
    "code": "12101302312100010032212111110302113302101322121111103021033021111302133021001332212111110302113302101322121111103021033021110302133021001332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf213;&#xf24a;&#xf205;&#xf245;&#xf20d;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf212;&#xf24a;&#xf205;&#xf245;&#xf20d;&#xf245;&#xf24b;",
    "stanza": 751
  },
  {
    "role": "code",
    "lines": [
      "not | equal ((list 3) 5 3 9) ((list 3) 5 ((list 2) 14 1) 9);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "equal",
        [
          [
            "list",
            "3"
          ],
          "5",
          "3",
          "9"
        ],
        [
          [
            "list",
            "3"
          ],
          "5",
          [
            [
              "list",
              "2"
            ],
            "14",
            "1"
          ],
          "9"
        ]
      ]
    ],
    "code": "12101302312100010032212111110302113302101302113021001332212111110302113302101322121111103021033021110302133021001332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf148;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf209;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf212;&#xf24a;&#xf205;&#xf245;&#xf20d;&#xf245;&#xf24b;",
    "stanza": 752
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 8) 7 15 18 11 13 0 13 6) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "8"
          ],
          "7",
          "15",
          "18",
          "11",
          "13",
          "0",
          "13",
          "6"
        ]
      ],
      "7"
    ],
    "code": "1211321212111110302033023212111110302100033021113021111302100103021011302110130203021101302110330211132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf20b;&#xf24a;&#xf213;&#xf24a;&#xf216;&#xf24a;&#xf20f;&#xf24a;&#xf211;&#xf24a;&#xf204;&#xf24a;&#xf211;&#xf24a;&#xf20a;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 753
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 8) 7 15 18 11 13 0 13 6) ((list 7) 15 18 11 13 0 13 6);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "8"
          ],
          "7",
          "15",
          "18",
          "11",
          "13",
          "0",
          "13",
          "6"
        ]
      ],
      [
        [
          "list",
          "7"
        ],
        "15",
        "18",
        "11",
        "13",
        "0",
        "13",
        "6"
      ]
    ],
    "code": "12100010132121211111031210000013302321211111030210003302111302111130210010302101130211013020302110130211033221211111030211133021111302100103021011302110130203021101302110332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf20b;&#xf24a;&#xf213;&#xf24a;&#xf216;&#xf24a;&#xf20f;&#xf24a;&#xf211;&#xf24a;&#xf204;&#xf24a;&#xf211;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf213;&#xf24a;&#xf216;&#xf24a;&#xf20f;&#xf24a;&#xf211;&#xf24a;&#xf204;&#xf24a;&#xf211;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 754
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 9) 7 17 11 10 1 3 18 13 5) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "9"
          ],
          "7",
          "17",
          "11",
          "10",
          "1",
          "3",
          "18",
          "13",
          "5"
        ]
      ],
      "7"
    ],
    "code": "1211321212111110302033023212111110302100133021113021000130210113021010302130211302100103021101302101330211132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf20b;&#xf24a;&#xf215;&#xf24a;&#xf20f;&#xf24a;&#xf20e;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf216;&#xf24a;&#xf211;&#xf24a;&#xf209;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 755
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 9) 7 17 11 10 1 3 18 13 5) ((list 8) 17 11 10 1 3 18 13 5);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "9"
          ],
          "7",
          "17",
          "11",
          "10",
          "1",
          "3",
          "18",
          "13",
          "5"
        ]
      ],
      [
        [
          "list",
          "8"
        ],
        "17",
        "11",
        "10",
        "1",
        "3",
        "18",
        "13",
        "5"
      ]
    ],
    "code": "121000101321212111110312100000133023212111110302100133021113021000130210113021010302130211302100103021101302101332212111110302100033021000130210113021010302130211302100103021101302101332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf20b;&#xf24a;&#xf215;&#xf24a;&#xf20f;&#xf24a;&#xf20e;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf216;&#xf24a;&#xf211;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf215;&#xf24a;&#xf20f;&#xf24a;&#xf20e;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf216;&#xf24a;&#xf211;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 756
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 7) 0 15 15 10 12 2 4) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "7"
          ],
          "0",
          "15",
          "15",
          "10",
          "12",
          "2",
          "4"
        ]
      ],
      "0"
    ],
    "code": "1211321212111110302033023212111110302111330203021111302111130210103021100302103021003302032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf204;&#xf24a;&#xf213;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf204;&#xf24b;",
    "stanza": 757
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 7) 0 15 15 10 12 2 4) ((list 6) 15 15 10 12 2 4);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "7"
          ],
          "0",
          "15",
          "15",
          "10",
          "12",
          "2",
          "4"
        ]
      ],
      [
        [
          "list",
          "6"
        ],
        "15",
        "15",
        "10",
        "12",
        "2",
        "4"
      ]
    ],
    "code": "121000101321212111110312100000133023212111110302111330203021111302111130210103021100302103021003322121111103021103302111130211113021010302110030210302100332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf204;&#xf24a;&#xf213;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf213;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 758
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 5) 18 12 3 18 8) 18;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "5"
          ],
          "18",
          "12",
          "3",
          "18",
          "8"
        ]
      ],
      "18"
    ],
    "code": "121132121211111030203302321211111030210133021001030211003021130210010302100033021001032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf216;&#xf24a;&#xf210;&#xf24a;&#xf207;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf245;&#xf216;&#xf24b;",
    "stanza": 759
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 5) 18 12 3 18 8) ((list 4) 12 3 18 8);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "5"
          ],
          "18",
          "12",
          "3",
          "18",
          "8"
        ]
      ],
      [
        [
          "list",
          "4"
        ],
        "12",
        "3",
        "18",
        "8"
      ]
    ],
    "code": "1210001013212121111103121000001330232121111103021013302100103021100302113021001030210003322121111103021003302110030211302100103021000332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf216;&#xf24a;&#xf210;&#xf24a;&#xf207;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf210;&#xf24a;&#xf207;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf245;&#xf24b;",
    "stanza": 760
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 2) 17 13) 17;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "2"
          ],
          "17",
          "13"
        ]
      ],
      "17"
    ],
    "code": "121132121211111030203302321211111030210330210001302110133021000132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf215;&#xf24a;&#xf211;&#xf245;&#xf215;&#xf24b;",
    "stanza": 761
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 2) 17 13) ((list 1) 13);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "2"
          ],
          "17",
          "13"
        ]
      ],
      [
        [
          "list",
          "1"
        ],
        "13"
      ]
    ],
    "code": "121000101321212111110312100000133023212111110302103302100013021101332212111110302133021101332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf215;&#xf24a;&#xf211;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf205;&#xf245;&#xf211;&#xf245;&#xf24b;",
    "stanza": 762
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 5) 5 6 1 19 13) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "5"
          ],
          "5",
          "6",
          "1",
          "19",
          "13"
        ]
      ],
      "5"
    ],
    "code": "121132121211111030203302321211111030210133021013021103021302100113021101330210132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf205;&#xf24a;&#xf217;&#xf24a;&#xf211;&#xf245;&#xf209;&#xf24b;",
    "stanza": 763
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 5) 5 6 1 19 13) ((list 4) 6 1 19 13);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "5"
          ],
          "5",
          "6",
          "1",
          "19",
          "13"
        ]
      ],
      [
        [
          "list",
          "4"
        ],
        "6",
        "1",
        "19",
        "13"
      ]
    ],
    "code": "1210001013212121111103121000001330232121111103021013302101302110302130210011302110133221211111030210033021103021302100113021101332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf205;&#xf24a;&#xf217;&#xf24a;&#xf211;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf20a;&#xf24a;&#xf205;&#xf24a;&#xf217;&#xf24a;&#xf211;&#xf245;&#xf24b;",
    "stanza": 764
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 9) 5 1 6 14 6 15 4 16 5) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "9"
          ],
          "5",
          "1",
          "6",
          "14",
          "6",
          "15",
          "4",
          "16",
          "5"
        ]
      ],
      "5"
    ],
    "code": "12113212121111103020330232121111103021001330210130213021103021110302110302111130210030210000302101330210132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf209;&#xf24a;&#xf205;&#xf24a;&#xf20a;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf24a;&#xf213;&#xf24a;&#xf208;&#xf24a;&#xf214;&#xf24a;&#xf209;&#xf245;&#xf209;&#xf24b;",
    "stanza": 765
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 9) 5 1 6 14 6 15 4 16 5) ((list 8) 1 6 14 6 15 4 16 5);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "9"
          ],
          "5",
          "1",
          "6",
          "14",
          "6",
          "15",
          "4",
          "16",
          "5"
        ]
      ],
      [
        [
          "list",
          "8"
        ],
        "1",
        "6",
        "14",
        "6",
        "15",
        "4",
        "16",
        "5"
      ]
    ],
    "code": "12100010132121211111031210000013302321211111030210013302101302130211030211103021103021111302100302100003021013322121111103021000330213021103021110302110302111130210030210000302101332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf209;&#xf24a;&#xf205;&#xf24a;&#xf20a;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf24a;&#xf213;&#xf24a;&#xf208;&#xf24a;&#xf214;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf205;&#xf24a;&#xf20a;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf24a;&#xf213;&#xf24a;&#xf208;&#xf24a;&#xf214;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 766
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 4) 16 8 6 18) 16;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "4"
          ],
          "16",
          "8",
          "6",
          "18"
        ]
      ],
      "16"
    ],
    "code": "121132121211111030203302321211111030210033021000030210003021103021001033021000032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf214;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf216;&#xf245;&#xf214;&#xf24b;",
    "stanza": 767
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 4) 16 8 6 18) ((list 3) 8 6 18);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "4"
          ],
          "16",
          "8",
          "6",
          "18"
        ]
      ],
      [
        [
          "list",
          "3"
        ],
        "8",
        "6",
        "18"
      ]
    ],
    "code": "121000101321212111110312100000133023212111110302100330210000302100030211030210010332212111110302113302100030211030210010332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf214;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf216;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf216;&#xf245;&#xf24b;",
    "stanza": 768
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 3) 9 1 1) 9;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "3"
          ],
          "9",
          "1",
          "1"
        ]
      ],
      "9"
    ],
    "code": "12113212121111103020330232121111103021133021001302130213302100132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf20d;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf20d;&#xf24b;",
    "stanza": 769
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 3) 9 1 1) ((list 2) 1 1);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "3"
          ],
          "9",
          "1",
          "1"
        ]
      ],
      [
        [
          "list",
          "2"
        ],
        "1",
        "1"
      ]
    ],
    "code": "12100010132121211111031210000013302321211111030211330210013021302133221211111030210330213021332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf20d;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 770
  },
  {
    "role": "code",
    "lines": [
      "= (head | (list 4) 11 16 11 2) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:0",
        [
          -1,
          [
            "list",
            "4"
          ],
          "11",
          "16",
          "11",
          "2"
        ]
      ],
      "11"
    ],
    "code": "121132121211111030203302321211111030210033021011302100003021011302103302101132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf204;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf20f;&#xf24a;&#xf214;&#xf24a;&#xf20f;&#xf24a;&#xf206;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 771
  },
  {
    "role": "code",
    "lines": [
      "list= (tail | (list 4) 11 16 11 2) ((list 3) 16 11 2);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:remainder",
        [
          -1,
          [
            "list",
            "4"
          ],
          "11",
          "16",
          "11",
          "2"
        ]
      ],
      [
        [
          "list",
          "3"
        ],
        "16",
        "11",
        "2"
      ]
    ],
    "code": "121000101321212111110312100000133023212111110302100330210113021000030210113021033221211111030211330210000302101130210332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf20f;&#xf24a;&#xf214;&#xf24a;&#xf20f;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf214;&#xf24a;&#xf20f;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 772
  },
  {
    "role": "code",
    "lines": [
      "intro prepend;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "prepend"
    ],
    "code": "1210010312100011032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14a;&#xf24b;",
    "stanza": 773
  },
  {
    "role": "code",
    "lines": [
      "define prepend | ? x | ? x:list |",
      "  cons (+ (car $x:list) 1)",
      "       (if (= (car $x:list) 0) $x | cons $x | cdr $x:list);"
    ],
    "dt": true,
    "parse": [
      "@",
      "prepend",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "cons",
            [
              "+",
              [
                "cons:0",
                [
                  -2,
                  "x:list"
                ]
              ],
              "1"
            ],
            [
              "if",
              [
                "=",
                [
                  "cons:0",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                "0"
              ],
              [
                -2,
                "x"
              ],
              [
                -1,
                "cons",
                [
                  -2,
                  "x"
                ],
                [
                  -1,
                  "cons:1",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121000110302312110031210101130231211003121210101131211111033023121010132121010321212101013020331231212101011312111110333021332121111321211321212101013020331231212101011312111110333020331231210101130231210101312312101011302312121010130213312312121010113121111103332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14a;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf159;&#xf246;&#xf14e;&#xf246;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf205;&#xf245;&#xf246;&#xf153;&#xf246;&#xf147;&#xf246;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf204;&#xf245;&#xf249;&#xf16f;&#xf248;&#xf159;&#xf249;&#xf16f;&#xf248;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf24b;",
    "stanza": 774
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 14 | (list 0)) ((list 1) 14);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "14",
        [
          -1,
          [
            "list",
            "0"
          ]
        ]
      ],
      [
        [
          "list",
          "1"
        ],
        "14"
      ]
    ],
    "code": "121000101321210001103021110302321211111030203332212111110302133021110332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf212;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf204;&#xf245;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf205;&#xf245;&#xf212;&#xf245;&#xf24b;",
    "stanza": 775
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 6 | (list 1) 4) ((list 2) 6 4);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "6",
        [
          -1,
          [
            "list",
            "1"
          ],
          "4"
        ]
      ],
      [
        [
          "list",
          "2"
        ],
        "6",
        "4"
      ]
    ],
    "code": "12100010132121000110302110302321211111030213302100332212111110302103302110302100332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf20a;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf205;&#xf245;&#xf208;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 776
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 19 | (list 2) 17 14) ((list 3) 19 17 14);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "19",
        [
          -1,
          [
            "list",
            "2"
          ],
          "17",
          "14"
        ]
      ],
      [
        [
          "list",
          "3"
        ],
        "19",
        "17",
        "14"
      ]
    ],
    "code": "1210001013212100011030210011302321211111030210330210001302111033221211111030211330210011302100013021110332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf217;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf215;&#xf24a;&#xf212;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf217;&#xf24a;&#xf215;&#xf24a;&#xf212;&#xf245;&#xf24b;",
    "stanza": 777
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 13 | (list 3) 12 7 16) ((list 4) 13 12 7 16);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "13",
        [
          -1,
          [
            "list",
            "3"
          ],
          "12",
          "7",
          "16"
        ]
      ],
      [
        [
          "list",
          "4"
        ],
        "13",
        "12",
        "7",
        "16"
      ]
    ],
    "code": "121000101321210001103021101302321211111030211330211003021113021000033221211111030210033021101302110030211130210000332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf211;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf210;&#xf24a;&#xf20b;&#xf24a;&#xf214;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf211;&#xf24a;&#xf210;&#xf24a;&#xf20b;&#xf24a;&#xf214;&#xf245;&#xf24b;",
    "stanza": 778
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 4 | (list 4) 15 18 6 10) ((list 5) 4 15 18 6 10);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "4",
        [
          -1,
          [
            "list",
            "4"
          ],
          "15",
          "18",
          "6",
          "10"
        ]
      ],
      [
        [
          "list",
          "5"
        ],
        "4",
        "15",
        "18",
        "6",
        "10"
      ]
    ],
    "code": "1210001013212100011030210030232121111103021003302111130210010302110302101033221211111030210133021003021111302100103021103021010332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf208;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf213;&#xf24a;&#xf216;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf208;&#xf24a;&#xf213;&#xf24a;&#xf216;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf245;&#xf24b;",
    "stanza": 779
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 8 | (list 5) 2 19 15 13 13) ((list 6) 8 2 19 15 13 13);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "8",
        [
          -1,
          [
            "list",
            "5"
          ],
          "2",
          "19",
          "15",
          "13",
          "13"
        ]
      ],
      [
        [
          "list",
          "6"
        ],
        "8",
        "2",
        "19",
        "15",
        "13",
        "13"
      ]
    ],
    "code": "121000101321210001103021000302321211111030210133021030210011302111130211013021101332212111110302110330210003021030210011302111130211013021101332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf20c;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf206;&#xf24a;&#xf217;&#xf24a;&#xf213;&#xf24a;&#xf211;&#xf24a;&#xf211;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf217;&#xf24a;&#xf213;&#xf24a;&#xf211;&#xf24a;&#xf211;&#xf245;&#xf24b;",
    "stanza": 780
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 11 | (list 6) 0 17 15 4 10 7) ((list 7) 11 0 17 15 4 10 7);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "11",
        [
          -1,
          [
            "list",
            "6"
          ],
          "0",
          "17",
          "15",
          "4",
          "10",
          "7"
        ]
      ],
      [
        [
          "list",
          "7"
        ],
        "11",
        "0",
        "17",
        "15",
        "4",
        "10",
        "7"
      ]
    ],
    "code": "12100010132121000110302101130232121111103021103302030210001302111130210030210103021113322121111103021113302101130203021000130211113021003021010302111332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf20f;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf204;&#xf24a;&#xf215;&#xf24a;&#xf213;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf20f;&#xf24a;&#xf204;&#xf24a;&#xf215;&#xf24a;&#xf213;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf20b;&#xf245;&#xf24b;",
    "stanza": 781
  },
  {
    "role": "code",
    "lines": [
      "list= (prepend 15 | (list 7) 2 12 18 12 4 1 12) ((list 8) 15 2 12 18 12 4 1 12);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "prepend",
        "15",
        [
          -1,
          [
            "list",
            "7"
          ],
          "2",
          "12",
          "18",
          "12",
          "4",
          "1",
          "12"
        ]
      ],
      [
        [
          "list",
          "8"
        ],
        "15",
        "2",
        "12",
        "18",
        "12",
        "4",
        "1",
        "12"
      ]
    ],
    "code": "121000101321210001103021111302321211111030211133021030211003021001030211003021003021302110033221211111030210003302111130210302110030210010302110030210030213021100332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf213;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf206;&#xf24a;&#xf210;&#xf24a;&#xf216;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf210;&#xf245;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf213;&#xf24a;&#xf206;&#xf24a;&#xf210;&#xf24a;&#xf216;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf210;&#xf245;&#xf24b;",
    "stanza": 782
  },
  {
    "role": "code",
    "lines": [
      "intro pair;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list:2"
    ],
    "code": "12100103121211111030210332233",
    "spider": "&#xf156;&#xf24a;&#xf182;&#xf206;&#xf24b;",
    "stanza": 783
  },
  {
    "role": "code",
    "lines": [
      "intro first;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "first"
    ],
    "code": "1210010312100011132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14b;&#xf24b;",
    "stanza": 784
  },
  {
    "role": "code",
    "lines": [
      "intro second;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "second"
    ],
    "code": "1210010312100100032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14c;&#xf24b;",
    "stanza": 785
  },
  {
    "role": "code",
    "lines": [
      "define pair | list 2;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:2",
      [
        -1,
        "list",
        "2"
      ]
    ],
    "code": "121101312121111103021033023121111103021032233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf206;&#xf248;&#xf182;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 786
  },
  {
    "role": "code",
    "lines": [
      "define first | ? x:list | head $x:list;"
    ],
    "dt": true,
    "parse": [
      "@",
      "first",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "list:0",
          [
            -2,
            "x:list"
          ]
        ]
      ]
    ],
    "code": "12110131210001113023121100312121010113121111103302312121111103020331231212101011312111110332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14b;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf24b;",
    "stanza": 787
  },
  {
    "role": "code",
    "lines": [
      "define second | ? x:list | head | tail $x:list;"
    ],
    "dt": true,
    "parse": [
      "@",
      "second",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "list:0",
          [
            -1,
            "list:remainder",
            [
              -2,
              "x:list"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100100030231211003121210101131211111033023121211111030203302312121111103121000001331231212101011312111110332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf24b;",
    "stanza": 788
  },
  {
    "role": "code",
    "lines": [
      "list= (pair 4 5) | (list 2) 4 5;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:2",
        "4",
        "5"
      ],
      [
        -1,
        [
          "list",
          "2"
        ],
        "4",
        "5"
      ]
    ],
    "code": "1210001013212121111103021033021003021013302321211111030210330210030210132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf206;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf208;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 789
  },
  {
    "role": "code",
    "lines": [
      "= (first | pair 4 5) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "first",
        [
          -1,
          "list:2",
          "4",
          "5"
        ]
      ],
      "4"
    ],
    "code": "12113212100011130231212111110302103302100302101330210032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf14b;&#xf248;&#xf182;&#xf206;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf208;&#xf24b;",
    "stanza": 790
  },
  {
    "role": "code",
    "lines": [
      "= (second | pair 4 5) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "second",
        [
          -1,
          "list:2",
          "4",
          "5"
        ]
      ],
      "5"
    ],
    "code": "12113212100100030231212111110302103302100302101330210132233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf14c;&#xf248;&#xf182;&#xf206;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf209;&#xf24b;",
    "stanza": 791
  },
  {
    "role": "code",
    "lines": [
      "list= (pair 6 4) | (list 2) 6 4;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:2",
        "6",
        "4"
      ],
      [
        -1,
        [
          "list",
          "2"
        ],
        "6",
        "4"
      ]
    ],
    "code": "1210001013212121111103021033021103021003302321211111030210330211030210032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf206;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf20a;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 792
  },
  {
    "role": "code",
    "lines": [
      "= (first | pair 6 4) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "first",
        [
          -1,
          "list:2",
          "6",
          "4"
        ]
      ],
      "6"
    ],
    "code": "12113212100011130231212111110302103302110302100330211032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf14b;&#xf248;&#xf182;&#xf206;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 793
  },
  {
    "role": "code",
    "lines": [
      "= (second | pair 6 4) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "second",
        [
          -1,
          "list:2",
          "6",
          "4"
        ]
      ],
      "4"
    ],
    "code": "12113212100100030231212111110302103302110302100330210032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf14c;&#xf248;&#xf182;&#xf206;&#xf20a;&#xf24a;&#xf208;&#xf245;&#xf208;&#xf24b;",
    "stanza": 794
  },
  {
    "role": "code",
    "lines": [
      "list= (pair 8 9) | (list 2) 8 9;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:2",
        "8",
        "9"
      ],
      [
        -1,
        [
          "list",
          "2"
        ],
        "8",
        "9"
      ]
    ],
    "code": "12100010132121211111030210330210003021001330232121111103021033021000302100132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf206;&#xf20c;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf20c;&#xf24a;&#xf20d;&#xf24b;",
    "stanza": 795
  },
  {
    "role": "code",
    "lines": [
      "= (first | pair 8 9) 8;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "first",
        [
          -1,
          "list:2",
          "8",
          "9"
        ]
      ],
      "8"
    ],
    "code": "12113212100011130231212111110302103302100030210013302100032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf14b;&#xf248;&#xf182;&#xf206;&#xf20c;&#xf24a;&#xf20d;&#xf245;&#xf20c;&#xf24b;",
    "stanza": 796
  },
  {
    "role": "code",
    "lines": [
      "= (second | pair 8 9) 9;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "second",
        [
          -1,
          "list:2",
          "8",
          "9"
        ]
      ],
      "9"
    ],
    "code": "12113212100100030231212111110302103302100030210013302100132233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf14c;&#xf248;&#xf182;&#xf206;&#xf20c;&#xf24a;&#xf20d;&#xf245;&#xf20d;&#xf24b;",
    "stanza": 797
  },
  {
    "role": "file",
    "lines": [
      "== COS_Map =="
    ],
    "stanza": 798
  },
  {
    "role": "doc",
    "lines": [
      "",
      "For programming and for math, it is handy to be able to apply an element-wise",
      "transform to a list, and some kind of accumulator to pull out a summary.",
      ""
    ],
    "section_description": "introduce map and reduce",
    "section_category": "MATH",
    "section_index": 17,
    "stanza": 799
  },
  {
    "role": "code",
    "lines": [
      "intro map;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "map"
    ],
    "code": "1210010312100100132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14d;&#xf24b;",
    "stanza": 800
  },
  {
    "role": "code",
    "lines": [
      "define map | ? x:? | ? x:list |",
      "  if (= 0 | list-length $x:list) (list 0) |",
      "  prepend (x:? | head $x:list) (map $x:? | tail $x:list);"
    ],
    "dt": true,
    "parse": [
      "@",
      "map",
      [
        -1,
        "?",
        "x:?",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              "list",
              "0"
            ],
            [
              -1,
              "prepend",
              [
                "x:?",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ],
              [
                "map",
                [
                  -2,
                  "x:?"
                ],
                [
                  -1,
                  "list:remainder",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210010013023121100312121010113121100330231211003121210101131211111033023121111321211302030231210000103123121210101131211111033321211111030203302312100011032121210101131211003302312121111103020331231212101011312111110333212100100131231212101011312110033023121211111031210000013312312121010113121111103332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf150;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf182;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf16f;&#xf150;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf249;&#xf16f;&#xf150;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf24b;",
    "stanza": 801
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 3) 12 34 6) | map (? x | * $x 2) | (list 3) 6 17 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "3"
        ],
        "12",
        "34",
        "6"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "3"
          ],
          "6",
          "17",
          "3"
        ]
      ]
    ],
    "code": "121000101322121111103021133021100302100010302110330231210010013212110031210101130231210013123121010113021033023212111110302113302110302100013021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf210;&#xf24a;&#xf226;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf20a;&#xf24a;&#xf215;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 802
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 4) 34 20 14 8) | map (? x | * $x 2) | (list 4) 17 10 7 4;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "4"
        ],
        "34",
        "20",
        "14",
        "8"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "4"
          ],
          "17",
          "10",
          "7",
          "4"
        ]
      ]
    ],
    "code": "1210001013221211111030210033021000103021010030211103021000330231210010013212110031210101130231210013123121010113021033023212111110302100330210001302101030211130210032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf226;&#xf24a;&#xf218;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf215;&#xf24a;&#xf20e;&#xf24a;&#xf20b;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 803
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 5) 8 4 16 0 6) | map (? x | * $x 2) | (list 5) 4 2 8 0 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "5"
        ],
        "8",
        "4",
        "16",
        "0",
        "6"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "5"
          ],
          "4",
          "2",
          "8",
          "0",
          "3"
        ]
      ]
    ],
    "code": "1210001013221211111030210133021000302100302100003020302110330231210010013212110031210101130231210013123121010113021033023212111110302101330210030210302100030203021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf214;&#xf24a;&#xf204;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 804
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 6) 36 4 28 10 6 20) | map (? x | * $x 2) | (list 6) 18 2 14 5 3 10;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "6"
        ],
        "36",
        "4",
        "28",
        "10",
        "6",
        "20"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          [
            -1,
            "*",
            [
              -2,
              "x"
            ],
            "2"
          ]
        ],
        [
          -1,
          [
            "list",
            "6"
          ],
          "18",
          "2",
          "14",
          "5",
          "3",
          "10"
        ]
      ]
    ],
    "code": "1210001013221211111030211033021001003021003021110030210103021103021010033023121001001321211003121010113023121001312312101011302103302321211111030211033021001030210302111030210130211302101032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf228;&#xf24a;&#xf208;&#xf24a;&#xf220;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf218;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf216;&#xf24a;&#xf206;&#xf24a;&#xf212;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 805
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 3) 42 42 42) | map (? x 42) | (list 3) 16 2 11;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "3"
        ],
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "3"
          ],
          "16",
          "2",
          "11"
        ]
      ]
    ],
    "code": "121000101322121111103021133021010103021010103021010103302312100100132121100312101011302101010330232121111103021133021000030210302101132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf214;&#xf24a;&#xf206;&#xf24a;&#xf20f;&#xf24b;",
    "stanza": 806
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 4) 42 42 42 42) | map (? x 42) | (list 4) 15 18 6 0;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "4"
        ],
        "42",
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "4"
          ],
          "15",
          "18",
          "6",
          "0"
        ]
      ]
    ],
    "code": "1210001013221211111030210033021010103021010103021010103021010103302312100100132121100312101011302101010330232121111103021003302111130210010302110302032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf213;&#xf24a;&#xf216;&#xf24a;&#xf20a;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 807
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 5) 42 42 42 42 42) | map (? x 42) | (list 5) 19 11 5 17 2;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "5"
        ],
        "42",
        "42",
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "5"
          ],
          "19",
          "11",
          "5",
          "17",
          "2"
        ]
      ]
    ],
    "code": "1210001013221211111030210133021010103021010103021010103021010103021010103302312100100132121100312101011302101010330232121111103021013302100113021011302101302100013021032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf217;&#xf24a;&#xf20f;&#xf24a;&#xf209;&#xf24a;&#xf215;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 808
  },
  {
    "role": "code",
    "lines": [
      "list= ((list 6) 42 42 42 42 42 42) | map (? x 42) | (list 6) 11 19 5 3 12 6;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        [
          "list",
          "6"
        ],
        "42",
        "42",
        "42",
        "42",
        "42",
        "42"
      ],
      [
        -1,
        "map",
        [
          "?",
          "x",
          "42"
        ],
        [
          -1,
          [
            "list",
            "6"
          ],
          "11",
          "19",
          "5",
          "3",
          "12",
          "6"
        ]
      ]
    ],
    "code": "121000101322121111103021103302101010302101010302101010302101010302101010302101010330231210010013212110031210101130210101033023212111110302110330210113021001130210130211302110030211032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf20f;&#xf24a;&#xf217;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 809
  },
  {
    "role": "code",
    "lines": [
      "intro reduce;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "reduce"
    ],
    "code": "1210010312100101032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14e;&#xf24b;",
    "stanza": 810
  },
  {
    "role": "code",
    "lines": [
      "define reduce | ? x:? | ? x:list |",
      "  if (= 0 | list-length $x:list) $undefined |",
      "  if (= 1 | list-length $x:list) (head $x:list) |",
      "  x:? (head $x:list) (reduce $x:? | tail $x:list);"
    ],
    "dt": true,
    "parse": [
      "@",
      "reduce",
      [
        -1,
        "?",
        "x:?",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              -2,
              "undefined"
            ],
            [
              -1,
              "if",
              [
                "=",
                "1",
                [
                  -1,
                  "list-length",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ],
              [
                "list:0",
                [
                  -2,
                  "x:list"
                ]
              ],
              [
                -1,
                "x:?",
                [
                  "list:0",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                [
                  "reduce",
                  [
                    -2,
                    "x:?"
                  ],
                  [
                    -1,
                    "list:remainder",
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210010103023121100312121010113121100330231211003121210101131211111033023121111321211302030231210000103123121210101131211111033312312100000302312111132121130213023121000010312312121010113121111103332121211111030203312312121010113121111103330231212101011312110033212121111103020331231212101011312111110333212100101031231212101011312110033023121211111031210000013312312121010113121111103332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf14e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf150;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf164;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf16f;&#xf150;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf145;&#xf14e;&#xf249;&#xf16f;&#xf150;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf24b;",
    "stanza": 811
  },
  {
    "role": "code",
    "lines": [
      "= 21 | reduce $+ | (list 3) 3 7 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "21",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "3"
          ],
          "3",
          "7",
          "11"
        ]
      ]
    ],
    "code": "12113021010130231210010103123121010302321211111030211330211302111302101132233",
    "spider": "&#xf147;&#xf24a;&#xf219;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf207;&#xf24a;&#xf20b;&#xf24a;&#xf20f;&#xf24b;",
    "stanza": 812
  },
  {
    "role": "code",
    "lines": [
      "= 43 | reduce $+ | (list 4) 13 11 19 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "43",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "4"
          ],
          "13",
          "11",
          "19",
          "0"
        ]
      ]
    ],
    "code": "121130210101130231210010103123121010302321211111030210033021101302101130210011302032233",
    "spider": "&#xf147;&#xf24a;&#xf22f;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf211;&#xf24a;&#xf20f;&#xf24a;&#xf217;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 813
  },
  {
    "role": "code",
    "lines": [
      "= 41 | reduce $+ | (list 5) 9 2 10 8 12;"
    ],
    "dt": false,
    "parse": [
      "=",
      "41",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "5"
          ],
          "9",
          "2",
          "10",
          "8",
          "12"
        ]
      ]
    ],
    "code": "1211302101001302312100101031231210103023212111110302101330210013021030210103021000302110032233",
    "spider": "&#xf147;&#xf24a;&#xf22d;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf209;&#xf245;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24b;",
    "stanza": 814
  },
  {
    "role": "code",
    "lines": [
      "= 50 | reduce $+ | (list 6) 10 1 2 12 14 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "50",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          [
            "list",
            "6"
          ],
          "10",
          "1",
          "2",
          "12",
          "14",
          "11"
        ]
      ]
    ],
    "code": "12113021100103023121001010312312101030232121111103021103302101030213021030211003021110302101132233",
    "spider": "&#xf147;&#xf24a;&#xf236;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf20e;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf210;&#xf24a;&#xf212;&#xf24a;&#xf20f;&#xf24b;",
    "stanza": 815
  },
  {
    "role": "file",
    "lines": [
      "== COS_Translate =="
    ],
    "stanza": 816
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "how to change the imagined interpreter",
    "section_category": "SYNTAX",
    "section_index": 18,
    "stanza": 817
  },
  {
    "role": "code",
    "lines": [
      "intro translate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "translate"
    ],
    "code": "12100103121100132233",
    "spider": "&#xf156;&#xf24a;&#xf15d;&#xf24b;",
    "stanza": 818
  },
  {
    "role": "code",
    "lines": [
      "define translate:begin $translate;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate:begin",
      [
        -2,
        "translate"
      ]
    ],
    "code": "1211013121211001312100101133123121100132233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf145;&#xf14f;&#xf249;&#xf15d;&#xf24b;",
    "stanza": 819
  },
  {
    "role": "code",
    "lines": [
      "define translate | ? x | if (= $x 32) 64 | translate:begin $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "x"
            ],
            "32"
          ],
          "64",
          [
            -1,
            "translate:begin",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211001302312110031210101130231211113212113123121010113021000003302100000030231212110013121001011331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf224;&#xf245;&#xf205;&#xf204;&#xf248;&#xf15d;&#xf145;&#xf14f;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 820
  },
  {
    "role": "code",
    "lines": [
      "= 32 64;"
    ],
    "dt": false,
    "parse": [
      "=",
      "32",
      "64"
    ],
    "code": "1211302100000302100000032233",
    "spider": "&#xf147;&#xf24a;&#xf224;&#xf24a;&#xf205;&#xf204;&#xf24b;",
    "stanza": 821
  },
  {
    "role": "code",
    "lines": [
      "= (+ 32 64) 128;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "+",
        "32",
        "64"
      ],
      "128"
    ],
    "code": "121132121010302100000302100000033021000000032233",
    "spider": "&#xf147;&#xf246;&#xf14e;&#xf24a;&#xf224;&#xf24a;&#xf205;&#xf204;&#xf245;&#xf206;&#xf204;&#xf24b;",
    "stanza": 822
  },
  {
    "role": "code",
    "lines": [
      "define translate $translate:begin;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -2,
        "translate:begin"
      ]
    ],
    "code": "1211013121100131231212110013121001011332233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf249;&#xf15d;&#xf145;&#xf14f;&#xf24b;",
    "stanza": 823
  },
  {
    "role": "code",
    "lines": [
      "not | = 32 64;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "32",
        "64"
      ]
    ],
    "code": "1210130231211302100000302100000032233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf224;&#xf24a;&#xf205;&#xf204;&#xf24b;",
    "stanza": 824
  },
  {
    "role": "code",
    "lines": [
      "= (+ 32 64) 96;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "+",
        "32",
        "64"
      ],
      "96"
    ],
    "code": "12113212101030210000030210000003302110000032233",
    "spider": "&#xf147;&#xf246;&#xf14e;&#xf24a;&#xf224;&#xf24a;&#xf205;&#xf204;&#xf245;&#xf205;&#xf224;&#xf24b;",
    "stanza": 825
  },
  {
    "role": "doc",
    "lines": [
      "Now let's do something useful: define a special form for lists."
    ],
    "stanza": 826
  },
  {
    "role": "code",
    "lines": [
      "intro vector;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "vector"
    ],
    "code": "12100103121000032233",
    "spider": "&#xf156;&#xf24a;&#xf154;&#xf24b;",
    "stanza": 827
  },
  {
    "role": "code",
    "lines": [
      "define translate | ? x |",
      "  if (not | function? $x) (translate:begin $x) |",
      "  if (not | = vector | head $x) (translate:begin $x) |",
      "  translate | prepend ((list 2) list | list-length | tail $x) | tail $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "not",
            [
              -1,
              "function?",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "translate:begin",
            [
              -2,
              "x"
            ]
          ],
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "vector",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ],
            [
              "translate:begin",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "translate",
              [
                -1,
                "prepend",
                [
                  [
                    "list",
                    "2"
                  ],
                  "list",
                  [
                    -1,
                    "list-length",
                    [
                      -1,
                      "list:remainder",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "list:remainder",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121100130231211003121010113023121111321210130231211101312312101011332121211001312100101133123121010113302312111132121013023121131210000302312121111103020331231210101133212121100131210010113312312101011330231211001302312100011032212111110302103312111110302312100001030231212111110312100000133123121010113302312121111103121000001331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf15d;&#xf145;&#xf14f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf154;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf15d;&#xf145;&#xf14f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf15d;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf206;&#xf245;&#xf182;&#xf248;&#xf145;&#xf146;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 828
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3) | (list 3) 1 2 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3"
      ],
      [
        -1,
        [
          "list",
          "3"
        ],
        "1",
        "2",
        "3"
      ]
    ],
    "code": "12100010132121000030213021030211330232121111103021133021302103021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf246;&#xf182;&#xf24a;&#xf207;&#xf245;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 829
  },
  {
    "role": "file",
    "lines": [
      "== COS_List =="
    ],
    "stanza": 830
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "some more list functions",
    "section_category": "MATH",
    "section_index": 19,
    "stanza": 831
  },
  {
    "role": "code",
    "lines": [
      "intro list:find;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list:find"
    ],
    "code": "1210010312121111103121001100332233",
    "spider": "&#xf156;&#xf24a;&#xf182;&#xf145;&#xf150;&#xf24b;",
    "stanza": 832
  },
  {
    "role": "code",
    "lines": [
      "define list:find:0 | ? x:list | ? y | ? n |",
      "  if (= (list-length $x:list) 0) $undefined |",
      "  if (equal (head $x:list) $y) $n |",
      "  list:find:0 (tail $x:list) $y (+ $n 1);"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:find:0",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "n",
            [
              -1,
              "if",
              [
                "=",
                [
                  "list-length",
                  [
                    -2,
                    "x:list"
                  ]
                ],
                "0"
              ],
              [
                -2,
                "undefined"
              ],
              [
                -1,
                "if",
                [
                  "equal",
                  [
                    "list:0",
                    [
                      -2,
                      "x:list"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ]
                ],
                [
                  -2,
                  "n"
                ],
                [
                  -1,
                  "list:find:0",
                  [
                    "list:remainder",
                    [
                      -2,
                      "x:list"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ],
                  [
                    "+",
                    [
                      -2,
                      "n"
                    ],
                    "1"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212111110312100110030203302312110031212101011312111110330231211003121101003023121100312111111302312111132121132121000010312312121010113121111103330203312312100000302312111132121000100321212111110302033123121210101131211111033312312110100331231211111130231212111110312100110030203321212111110312100000133123121210101131211111033312312110100321210103123121111113021332233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf145;&#xf150;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf147;&#xf246;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf204;&#xf245;&#xf249;&#xf164;&#xf248;&#xf153;&#xf246;&#xf145;&#xf148;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf178;&#xf245;&#xf249;&#xf183;&#xf248;&#xf182;&#xf145;&#xf150;&#xf204;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf178;&#xf246;&#xf14e;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 833
  },
  {
    "role": "code",
    "lines": [
      "define list:find | ? x:list | ? y | list:find:0 $x:list $y 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:find",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "list:find:0",
            [
              -2,
              "x:list"
            ],
            [
              -2,
              "y"
            ],
            "0"
          ]
        ]
      ]
    ],
    "code": "12110131212111110312100110033023121100312121010113121111103302312110031211010030231212111110312100110030203312312121010113121111103312312110100302032233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf145;&#xf150;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf182;&#xf145;&#xf150;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf249;&#xf178;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 834
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 4) 17 4 3 0) 0) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "4"
          ],
          "17",
          "4",
          "3",
          "0"
        ],
        "0"
      ],
      "3"
    ],
    "code": "121132121211111031210011003322121111103021003302100013021003021130203302033021132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf215;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf245;&#xf204;&#xf245;&#xf207;&#xf24b;",
    "stanza": 835
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 0 12 19 11 9 8 0 17) 9) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "0",
          "12",
          "19",
          "11",
          "9",
          "8",
          "0",
          "17"
        ],
        "9"
      ],
      "4"
    ],
    "code": "1211321212111110312100110033221211111030210003302030211003021001130210113021001302100030203021000133021001330210032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf204;&#xf24a;&#xf210;&#xf24a;&#xf217;&#xf24a;&#xf20f;&#xf24a;&#xf20d;&#xf24a;&#xf20c;&#xf24a;&#xf204;&#xf24a;&#xf215;&#xf245;&#xf20d;&#xf245;&#xf208;&#xf24b;",
    "stanza": 836
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 9) 9 0 17 17 10 8 5 3 1) 17) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "9"
          ],
          "9",
          "0",
          "17",
          "17",
          "10",
          "8",
          "5",
          "3",
          "1"
        ],
        "17"
      ],
      "2"
    ],
    "code": "12113212121111103121001100332212111110302100133021001302030210001302100013021010302100030210130211302133021000133021032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20d;&#xf245;&#xf20d;&#xf24a;&#xf204;&#xf24a;&#xf215;&#xf24a;&#xf215;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf215;&#xf245;&#xf206;&#xf24b;",
    "stanza": 837
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 6) 17 15 10 12 4 13) 15) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "6"
          ],
          "17",
          "15",
          "10",
          "12",
          "4",
          "13"
        ],
        "15"
      ],
      "1"
    ],
    "code": "121132121211111031210011003322121111103021103302100013021111302101030211003021003021101330211113302132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf215;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf24a;&#xf211;&#xf245;&#xf213;&#xf245;&#xf205;&#xf24b;",
    "stanza": 838
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 7) 1 6 18 1 4 3 7) 1) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "7"
          ],
          "1",
          "6",
          "18",
          "1",
          "4",
          "3",
          "7"
        ],
        "1"
      ],
      "0"
    ],
    "code": "121132121211111031210011003322121111103021113302130211030210010302130210030211302111330213302032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf205;&#xf24a;&#xf20a;&#xf24a;&#xf216;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24a;&#xf20b;&#xf245;&#xf205;&#xf245;&#xf204;&#xf24b;",
    "stanza": 839
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 1) 2) 2) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "1"
          ],
          "2"
        ],
        "2"
      ],
      "0"
    ],
    "code": "1211321212111110312100110033221211111030213302103302103302032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf205;&#xf245;&#xf206;&#xf245;&#xf206;&#xf245;&#xf204;&#xf24b;",
    "stanza": 840
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 7) 3 7 15 3 19 16 17) 3) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "7"
          ],
          "3",
          "7",
          "15",
          "3",
          "19",
          "16",
          "17"
        ],
        "3"
      ],
      "0"
    ],
    "code": "121132121211111031210011003322121111103021113302113021113021111302113021001130210000302100013302113302032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20b;&#xf245;&#xf207;&#xf24a;&#xf20b;&#xf24a;&#xf213;&#xf24a;&#xf207;&#xf24a;&#xf217;&#xf24a;&#xf214;&#xf24a;&#xf215;&#xf245;&#xf207;&#xf245;&#xf204;&#xf24b;",
    "stanza": 841
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 4) 8 13 9 18) 8) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "4"
          ],
          "8",
          "13",
          "9",
          "18"
        ],
        "8"
      ],
      "0"
    ],
    "code": "12113212121111103121001100332212111110302100330210003021101302100130210010330210003302032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf20c;&#xf24a;&#xf211;&#xf24a;&#xf20d;&#xf24a;&#xf216;&#xf245;&#xf20c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 842
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 5 3 10 13 2 8 6 12) 12) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "5",
          "3",
          "10",
          "13",
          "2",
          "8",
          "6",
          "12"
        ],
        "12"
      ],
      "7"
    ],
    "code": "12113212121111103121001100332212111110302100033021013021130210103021101302103021000302110302110033021100330211132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf20e;&#xf24a;&#xf211;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf210;&#xf245;&#xf210;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 843
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 11 18 9 9 11 3 10 16) 18) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "11",
          "18",
          "9",
          "9",
          "11",
          "3",
          "10",
          "16"
        ],
        "18"
      ],
      "1"
    ],
    "code": "1211321212111110312100110033221211111030210003302101130210010302100130210013021011302113021010302100003302100103302132233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf20f;&#xf24a;&#xf216;&#xf24a;&#xf20d;&#xf24a;&#xf20d;&#xf24a;&#xf20f;&#xf24a;&#xf207;&#xf24a;&#xf20e;&#xf24a;&#xf214;&#xf245;&#xf216;&#xf245;&#xf205;&#xf24b;",
    "stanza": 844
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 4) 19 6 15 16) 11) $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "4"
          ],
          "19",
          "6",
          "15",
          "16"
        ],
        "11"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "1211321212111110312100110033221211111030210033021001130211030211113021000033021011331231210000032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf208;&#xf245;&#xf217;&#xf24a;&#xf20a;&#xf24a;&#xf213;&#xf24a;&#xf214;&#xf245;&#xf20f;&#xf245;&#xf249;&#xf164;&#xf24b;",
    "stanza": 845
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 6) 0 1 5 19 2 8) 7) $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "6"
          ],
          "0",
          "1",
          "5",
          "19",
          "2",
          "8"
        ],
        "7"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "12113212121111103121001100332212111110302110330203021302101302100113021030210003302111331231210000032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20a;&#xf245;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf217;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf245;&#xf20b;&#xf245;&#xf249;&#xf164;&#xf24b;",
    "stanza": 846
  },
  {
    "role": "code",
    "lines": [
      "= (list:find ((list 8) 18 2 17 7 12 3 11 8) 6) $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "list:find",
        [
          [
            "list",
            "8"
          ],
          "18",
          "2",
          "17",
          "7",
          "12",
          "3",
          "11",
          "8"
        ],
        "6"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "1211321212111110312100110033221211111030210003302100103021030210001302111302110030211302101130210003302110331231210000032233",
    "spider": "&#xf147;&#xf246;&#xf182;&#xf145;&#xf150;&#xf246;&#xf246;&#xf182;&#xf24a;&#xf20c;&#xf245;&#xf216;&#xf24a;&#xf206;&#xf24a;&#xf215;&#xf24a;&#xf20b;&#xf24a;&#xf210;&#xf24a;&#xf207;&#xf24a;&#xf20f;&#xf24a;&#xf20c;&#xf245;&#xf20a;&#xf245;&#xf249;&#xf164;&#xf24b;",
    "stanza": 847
  },
  {
    "role": "code",
    "lines": [
      "intro last;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "last"
    ],
    "code": "1210010312100110132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf151;&#xf24b;",
    "stanza": 848
  },
  {
    "role": "code",
    "lines": [
      "define last | ? x | list-ref $x | - (list-length $x) 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "last",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "list-ref",
          [
            -2,
            "x"
          ],
          [
            -1,
            "-",
            [
              "list-length",
              [
                -2,
                "x"
              ]
            ],
            "1"
          ]
        ]
      ]
    ],
    "code": "1211013121001101302312110031210101130231210000113123121010113023121011321210000103123121010113302132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf151;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf248;&#xf14f;&#xf246;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf205;&#xf24b;",
    "stanza": 849
  },
  {
    "role": "code",
    "lines": [
      "intro except-last;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "except-last"
    ],
    "code": "1210010312100111032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf152;&#xf24b;",
    "stanza": 850
  },
  {
    "role": "code",
    "lines": [
      "define except-last | ? x |",
      "  if (>= 1 | list-length $x) (vector) |",
      "  prepend (head $x) | except-last | tail $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "except-last",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            ">=",
            "1",
            [
              -1,
              "list-length",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "vector"
          ],
          [
            -1,
            "prepend",
            [
              "list:0",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "except-last",
              [
                -1,
                "list:remainder",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121001110302312110031210101130231211113212111011302130231210000103123121010113321210000330231210001103212121111103020331231210101133023121001110302312121111103121000001331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf152;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf17f;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf154;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf152;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 851
  },
  {
    "role": "code",
    "lines": [
      "= 15 | last | vector 4 5 15;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "last",
        [
          -1,
          "vector",
          "4",
          "5",
          "15"
        ]
      ]
    ],
    "code": "12113021111302312100110130231210000302100302101302111132233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf145;&#xf151;&#xf248;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24a;&#xf213;&#xf24b;",
    "stanza": 852
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 4 5) | except-last | vector 4 5 15;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "4",
        "5"
      ],
      [
        -1,
        "except-last",
        [
          -1,
          "vector",
          "4",
          "5",
          "15"
        ]
      ]
    ],
    "code": "1210001013212100003021003021013302312100111030231210000302100302101302111132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf145;&#xf152;&#xf248;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24a;&#xf213;&#xf24b;",
    "stanza": 853
  },
  {
    "role": "code",
    "lines": [
      "intro list:reverse;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list:reverse"
    ],
    "code": "1210010312121111103121001111332233",
    "spider": "&#xf156;&#xf24a;&#xf182;&#xf145;&#xf153;&#xf24b;",
    "stanza": 854
  },
  {
    "role": "code",
    "lines": [
      "define list:reverse | ? x:list |",
      "  if (<= (list-length $x:list) 1) $x:list |",
      "  prepend (last $x:list) | list:reverse | except-last $x:list;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list:reverse",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            "<=",
            [
              "list-length",
              [
                -2,
                "x:list"
              ]
            ],
            "1"
          ],
          [
            -2,
            "x:list"
          ],
          [
            -1,
            "prepend",
            [
              "last",
              [
                -2,
                "x:list"
              ]
            ],
            [
              -1,
              "list:reverse",
              [
                -1,
                "except-last",
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212111110312100111133023121100312121010113121111103302312111132121111003212100001031231212101011312111110333021331231212101011312111110330231210001103212100110131231212101011312111110333023121211111031210011113302312100111031231212101011312111110332233",
    "spider": "&#xf151;&#xf24a;&#xf182;&#xf145;&#xf153;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf180;&#xf246;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf205;&#xf245;&#xf249;&#xf16f;&#xf182;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf145;&#xf151;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf182;&#xf145;&#xf153;&#xf248;&#xf145;&#xf152;&#xf249;&#xf16f;&#xf182;&#xf24b;",
    "stanza": 855
  },
  {
    "role": "code",
    "lines": [
      "list= (list:reverse | vector 1 2 3) (vector 3 2 1);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:reverse",
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ],
      [
        "vector",
        "3",
        "2",
        "1"
      ]
    ],
    "code": "121000101321212111110312100111133023121000030213021030211332121000030211302103021332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf153;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 856
  },
  {
    "role": "code",
    "lines": [
      "list= (list:reverse | vector 50 1 33 99) (vector 99 33 1 50);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "list:reverse",
        [
          -1,
          "vector",
          "50",
          "1",
          "33",
          "99"
        ]
      ],
      [
        "vector",
        "99",
        "33",
        "1",
        "50"
      ]
    ],
    "code": "121000101321212111110312100111133023121000030211001030213021000013021100011332121000030211000113021000013021302110010332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf182;&#xf145;&#xf153;&#xf248;&#xf154;&#xf24a;&#xf236;&#xf24a;&#xf205;&#xf24a;&#xf225;&#xf24a;&#xf205;&#xf227;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf227;&#xf24a;&#xf225;&#xf24a;&#xf205;&#xf24a;&#xf236;&#xf245;&#xf24b;",
    "stanza": 857
  },
  {
    "role": "code",
    "lines": [
      "intro append;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "append"
    ],
    "code": "1210010312101000032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf154;&#xf24b;",
    "stanza": 858
  },
  {
    "role": "code",
    "lines": [
      "define append | ? x | ? lst |",
      "  if (= 0 | list-length $lst) (vector $x) |",
      "  prepend (head | $lst) | append $x | tail $lst;"
    ],
    "dt": true,
    "parse": [
      "@",
      "append",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "lst",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "vector",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "prepend",
              [
                "list:0",
                [
                  -1,
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -1,
                "append",
                [
                  -2,
                  "x"
                ],
                [
                  -1,
                  "list:remainder",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210100003023121100312101011302312110031210100013023121111321211302030231210000103123121010001332121000031231210101133023121000110321212111110302033023123121010001330231210100003123121010113023121211111031210000013312312101000132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf154;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf155;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf154;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf182;&#xf204;&#xf248;&#xf249;&#xf145;&#xf155;&#xf245;&#xf248;&#xf145;&#xf154;&#xf249;&#xf16f;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf24b;",
    "stanza": 859
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 5) | append 5 | vector 1 2;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "5"
      ],
      [
        -1,
        "append",
        "5",
        [
          -1,
          "vector",
          "1",
          "2"
        ]
      ]
    ],
    "code": "121000101321210000302130210302101330231210100003021013023121000030213021032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf145;&#xf154;&#xf24a;&#xf209;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 860
  },
  {
    "role": "code",
    "lines": [
      "intro select-match;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "select-match"
    ],
    "code": "1210010312101001032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf156;&#xf24b;",
    "stanza": 861
  },
  {
    "role": "code",
    "lines": [
      "define select-match | ? test | ? lst |",
      "  if (= 0 | list-length $lst) $lst |",
      "  if (not | test | head $lst) (select-match $test | tail $lst) |",
      "  prepend (head $lst) (select-match $test | tail $lst);"
    ],
    "dt": true,
    "parse": [
      "@",
      "select-match",
      [
        -1,
        "?",
        "test",
        [
          -1,
          "?",
          "lst",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              -2,
              "lst"
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "test",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "lst"
                    ]
                  ]
                ]
              ],
              [
                "select-match",
                [
                  -2,
                  "test"
                ],
                [
                  -1,
                  "list:remainder",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -1,
                "prepend",
                [
                  "list:0",
                  [
                    -2,
                    "lst"
                  ]
                ],
                [
                  "select-match",
                  [
                    -2,
                    "test"
                  ],
                  [
                    -1,
                    "list:remainder",
                    [
                      -2,
                      "lst"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312101001030231211003121010011302312110031210100013023121111321211302030231210000103123121010001331231210100013023121111321210130231210100113023121211111030203312312101000133212101001031231210100113023121211111031210000013312312101000133023121000110321212111110302033123121010001332121010010312312101001130231212111110312100000133123121010001332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf156;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf157;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf155;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf145;&#xf155;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf145;&#xf156;&#xf249;&#xf145;&#xf157;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf145;&#xf156;&#xf249;&#xf145;&#xf157;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf24b;",
    "stanza": 862
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 14 19 13) | select-match (? x | > $x 10) | vector 1 14 19 3 13 0 4;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "14",
        "19",
        "13"
      ],
      [
        -1,
        "select-match",
        [
          "?",
          "x",
          [
            -1,
            ">",
            [
              -2,
              "x"
            ],
            "10"
          ]
        ],
        [
          -1,
          "vector",
          "1",
          "14",
          "19",
          "3",
          "13",
          "0",
          "4"
        ]
      ]
    ],
    "code": "1210001013212100003021110302100113021101330231210100103212110031210101130231210031231210101130210103302312100003021302111030210011302113021101302030210032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf217;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf148;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf212;&#xf24a;&#xf217;&#xf24a;&#xf207;&#xf24a;&#xf211;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 863
  },
  {
    "role": "file",
    "lines": [
      "== COS_Series =="
    ],
    "stanza": 864
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Just in passing, give approximate values for `pi` and `e`.",
      ""
    ],
    "section_description": "introduce pi and e",
    "section_category": "MATH",
    "section_index": 20,
    "stanza": 865
  },
  {
    "role": "code",
    "lines": [
      "intro minus;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "minus"
    ],
    "code": "1210010312101010032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf158;&#xf24b;",
    "stanza": 866
  },
  {
    "role": "code",
    "lines": [
      "define minus | ? x | - 0 $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "minus",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "-",
          "0",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121101312101010030231211003121010113023121011302031231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf158;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14f;&#xf24a;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 867
  },
  {
    "role": "code",
    "lines": [
      "= 0 | + 4 | minus 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "+",
        "4",
        [
          -1,
          "minus",
          "4"
        ]
      ]
    ],
    "code": "121130203023121010302100302312101010030210032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14e;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 868
  },
  {
    "role": "code",
    "lines": [
      "= 8 | + 10 | minus 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        "+",
        "10",
        [
          -1,
          "minus",
          "2"
        ]
      ]
    ],
    "code": "121130210003023121010302101030231210101003021032233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf14e;&#xf24a;&#xf20e;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 869
  },
  {
    "role": "code",
    "lines": [
      "intro frac;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "frac"
    ],
    "code": "121001031210011132233",
    "spider": "&#xf156;&#xf24a;&#xf16b;&#xf24b;",
    "stanza": 870
  },
  {
    "role": "code",
    "lines": [
      "= 40 | frac 40 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "40",
      [
        -1,
        "frac",
        "40",
        "1"
      ]
    ],
    "code": "1211302101000302312100111302101000302132233",
    "spider": "&#xf147;&#xf24a;&#xf22c;&#xf248;&#xf16b;&#xf24a;&#xf22c;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 871
  },
  {
    "role": "code",
    "lines": [
      "= 20 | frac 40 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "20",
      [
        -1,
        "frac",
        "40",
        "2"
      ]
    ],
    "code": "1211302101003023121001113021010003021032233",
    "spider": "&#xf147;&#xf24a;&#xf218;&#xf248;&#xf16b;&#xf24a;&#xf22c;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 872
  },
  {
    "role": "code",
    "lines": [
      "= 10 | frac 40 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "10",
      [
        -1,
        "frac",
        "40",
        "4"
      ]
    ],
    "code": "1211302101030231210011130210100030210032233",
    "spider": "&#xf147;&#xf24a;&#xf20e;&#xf248;&#xf16b;&#xf24a;&#xf22c;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 873
  },
  {
    "role": "code",
    "lines": [
      "= 5 | frac 40 8;"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        -1,
        "frac",
        "40",
        "8"
      ]
    ],
    "code": "1211302101302312100111302101000302100032233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf248;&#xf16b;&#xf24a;&#xf22c;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 874
  },
  {
    "role": "code",
    "lines": [
      "= 1 | + (frac 1 2) (frac 1 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "+",
        [
          "frac",
          "1",
          "2"
        ],
        [
          "frac",
          "1",
          "2"
        ]
      ]
    ],
    "code": "121130213023121010321210011130213021033212100111302130210332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14e;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 875
  },
  {
    "role": "code",
    "lines": [
      "= 2 | + (frac 3 2) (frac 1 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "+",
        [
          "frac",
          "3",
          "2"
        ],
        [
          "frac",
          "1",
          "2"
        ]
      ]
    ],
    "code": "12113021030231210103212100111302113021033212100111302130210332233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf14e;&#xf246;&#xf16b;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 876
  },
  {
    "role": "code",
    "lines": [
      "= 1 | + (frac 3 5) (frac 2 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "+",
        [
          "frac",
          "3",
          "5"
        ],
        [
          "frac",
          "2",
          "5"
        ]
      ]
    ],
    "code": "1211302130231210103212100111302113021013321210011130210302101332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14e;&#xf246;&#xf16b;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf16b;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 877
  },
  {
    "role": "code",
    "lines": [
      "intro abs;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "abs"
    ],
    "code": "1210010312101010132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf159;&#xf24b;",
    "stanza": 878
  },
  {
    "role": "code",
    "lines": [
      "define abs | ? x | if (> $x 0) $x (- 0 $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "abs",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            ">",
            [
              -2,
              "x"
            ],
            "0"
          ],
          [
            -2,
            "x"
          ],
          [
            "-",
            "0",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312101010130231211003121010113023121111321210031231210101130203312312101011321210113020312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf159;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf148;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf249;&#xf16f;&#xf246;&#xf14f;&#xf24a;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 879
  },
  {
    "role": "code",
    "lines": [
      "= 4 | abs 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "abs",
        "4"
      ]
    ],
    "code": "1211302100302312101010130210032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf159;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 880
  },
  {
    "role": "code",
    "lines": [
      "= 4 | abs | minus 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "abs",
        [
          -1,
          "minus",
          "4"
        ]
      ]
    ],
    "code": "12113021003023121010101302312101010030210032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf159;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 881
  },
  {
    "role": "code",
    "lines": [
      "intro within;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "within"
    ],
    "code": "1210010312101011032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf15a;&#xf24b;",
    "stanza": 882
  },
  {
    "role": "code",
    "lines": [
      "define demo:epsilon | frac 1 10000;"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:epsilon",
      [
        -1,
        "frac",
        "1",
        "10000"
      ]
    ],
    "code": "121101312121001003121010111330231210011130213021001110001000032233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf145;&#xf15b;&#xf248;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf220;&#xf214;&#xf24b;",
    "stanza": 883
  },
  {
    "role": "code",
    "lines": [
      "define within | ? epsilon | ? x | ? y | < (abs | - $x $y) $epsilon;"
    ],
    "dt": true,
    "parse": [
      "@",
      "within",
      [
        -1,
        "?",
        "epsilon",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "<",
              [
                "abs",
                [
                  -1,
                  "-",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -2,
                    "y"
                  ]
                ]
              ],
              [
                -2,
                "epsilon"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210101103023121100312101011130231211003121010113023121100312110100302312103212101010130231210113123121010113123121101003312312101011132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15a;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf15b;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf146;&#xf246;&#xf145;&#xf159;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf249;&#xf145;&#xf15b;&#xf24b;",
    "stanza": 884
  },
  {
    "role": "code",
    "lines": [
      "not | within $demo:epsilon 1 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "within",
        [
          -2,
          "demo:epsilon"
        ],
        "1",
        "2"
      ]
    ],
    "code": "121013023121010110312312121001003121010111330213021032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 885
  },
  {
    "role": "code",
    "lines": [
      "not | within $demo:epsilon 2 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "within",
        [
          -2,
          "demo:epsilon"
        ],
        "2",
        "1"
      ]
    ],
    "code": "121013023121010110312312121001003121010111330210302132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 886
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon 2 2;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      "2",
      "2"
    ],
    "code": "1210101103123121210010031210101113302103021032233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 887
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon 2 | + 2 (frac $demo:epsilon 2);"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      "2",
      [
        -1,
        "+",
        "2",
        [
          "frac",
          [
            -2,
            "demo:epsilon"
          ],
          "2"
        ]
      ]
    ],
    "code": "1210101103123121210010031210101113302103023121010302103212100111312312121001003121010111330210332233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf206;&#xf248;&#xf14e;&#xf24a;&#xf206;&#xf246;&#xf16b;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf206;&#xf245;&#xf24b;",
    "stanza": 888
  },
  {
    "role": "code",
    "lines": [
      "not | within $demo:epsilon 2 | + 2 (* $demo:epsilon 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "within",
        [
          -2,
          "demo:epsilon"
        ],
        "2",
        [
          -1,
          "+",
          "2",
          [
            "*",
            [
              -2,
              "demo:epsilon"
            ],
            "2"
          ]
        ]
      ]
    ],
    "code": "12101302312101011031231212100100312101011133021030231210103021032121001312312121001003121010111330210332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf206;&#xf248;&#xf14e;&#xf24a;&#xf206;&#xf246;&#xf14d;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf206;&#xf245;&#xf24b;",
    "stanza": 889
  },
  {
    "role": "code",
    "lines": [
      "intro range;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "range"
    ],
    "code": "1210010312101100032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf15c;&#xf24b;",
    "stanza": 890
  },
  {
    "role": "code",
    "lines": [
      "define range | ? x:- | ? x:+ |",
      "  if (<= $x:+ $x:-) (vector) |",
      "  prepend $x:- | range (+ 1 $x:-) $x:+;"
    ],
    "dt": true,
    "parse": [
      "@",
      "range",
      [
        -1,
        "?",
        "x:-",
        [
          -1,
          "?",
          "x:+",
          [
            -1,
            "if",
            [
              "<=",
              [
                -2,
                "x:+"
              ],
              [
                -2,
                "x:-"
              ]
            ],
            [
              "vector"
            ],
            [
              -1,
              "prepend",
              [
                -2,
                "x:-"
              ],
              [
                -1,
                "range",
                [
                  "+",
                  "1",
                  [
                    -2,
                    "x:-"
                  ]
                ],
                [
                  -2,
                  "x:+"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121011000302312110031212101011312101133023121100312121010113121010330231211113212111100312312121010113121010331231212101011312101133321210000330231210001103123121210101131210113302312101100032121010302131231212101011312101133312312121010113121010332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15c;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf14f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf14e;&#xf248;&#xf153;&#xf246;&#xf180;&#xf249;&#xf16f;&#xf14e;&#xf249;&#xf16f;&#xf14f;&#xf245;&#xf246;&#xf154;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf14f;&#xf248;&#xf145;&#xf15c;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf14f;&#xf245;&#xf249;&#xf16f;&#xf14e;&#xf24b;",
    "stanza": 891
  },
  {
    "role": "code",
    "lines": [
      "= 6 | reduce $+ | range 0 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "range",
          "0",
          "4"
        ]
      ]
    ],
    "code": "1211302110302312100101031231210103023121011000302030210032233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 892
  },
  {
    "role": "code",
    "lines": [
      "= 12 | reduce $+ | map (? x | * $x 2) | range 0 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "12",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "map",
          [
            "?",
            "x",
            [
              -1,
              "*",
              [
                -2,
                "x"
              ],
              "2"
            ]
          ],
          [
            -1,
            "range",
            "0",
            "4"
          ]
        ]
      ]
    ],
    "code": "121130211003023121001010312312101030231210010013212110031210101130231210013123121010113021033023121011000302030210032233",
    "spider": "&#xf147;&#xf24a;&#xf210;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 893
  },
  {
    "role": "code",
    "lines": [
      "= 3 | reduce $+ | range 3 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "range",
          "3",
          "4"
        ]
      ]
    ],
    "code": "1211302113023121001010312312101030231210110003021130210032233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 894
  },
  {
    "role": "code",
    "lines": [
      "intro even;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "even"
    ],
    "code": "121001031210111032233",
    "spider": "&#xf156;&#xf24a;&#xf172;&#xf24b;",
    "stanza": 895
  },
  {
    "role": "code",
    "lines": [
      "not | even 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "even",
        "1"
      ]
    ],
    "code": "12101302312101110302132233",
    "spider": "&#xf149;&#xf248;&#xf172;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 896
  },
  {
    "role": "code",
    "lines": [
      "even 2;"
    ],
    "dt": false,
    "parse": [
      "even",
      "2"
    ],
    "code": "121011103021032233",
    "spider": "&#xf172;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 897
  },
  {
    "role": "code",
    "lines": [
      "not | even 3;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "even",
        "3"
      ]
    ],
    "code": "121013023121011103021132233",
    "spider": "&#xf149;&#xf248;&#xf172;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 898
  },
  {
    "role": "code",
    "lines": [
      "even 4;"
    ],
    "dt": false,
    "parse": [
      "even",
      "4"
    ],
    "code": "1210111030210032233",
    "spider": "&#xf172;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 899
  },
  {
    "role": "code",
    "lines": [
      "not | even 5;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "even",
        "5"
      ]
    ],
    "code": "1210130231210111030210132233",
    "spider": "&#xf149;&#xf248;&#xf172;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 900
  },
  {
    "role": "code",
    "lines": [
      "intro odd;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "odd"
    ],
    "code": "1210010312101100132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf15d;&#xf24b;",
    "stanza": 901
  },
  {
    "role": "code",
    "lines": [
      "define odd | ? x | not | even $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "odd",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "not",
          [
            -1,
            "even",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121011001302312110031210101130231210130231210111031231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf149;&#xf248;&#xf172;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 902
  },
  {
    "role": "code",
    "lines": [
      "odd 1;"
    ],
    "dt": false,
    "parse": [
      "odd",
      "1"
    ],
    "code": "121011001302132233",
    "spider": "&#xf145;&#xf15d;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 903
  },
  {
    "role": "code",
    "lines": [
      "even 2;"
    ],
    "dt": false,
    "parse": [
      "even",
      "2"
    ],
    "code": "121011103021032233",
    "spider": "&#xf172;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 904
  },
  {
    "role": "code",
    "lines": [
      "odd 3;"
    ],
    "dt": false,
    "parse": [
      "odd",
      "3"
    ],
    "code": "1210110013021132233",
    "spider": "&#xf145;&#xf15d;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 905
  },
  {
    "role": "code",
    "lines": [
      "even 4;"
    ],
    "dt": false,
    "parse": [
      "even",
      "4"
    ],
    "code": "1210111030210032233",
    "spider": "&#xf172;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 906
  },
  {
    "role": "code",
    "lines": [
      "odd 5;"
    ],
    "dt": false,
    "parse": [
      "odd",
      "5"
    ],
    "code": "12101100130210132233",
    "spider": "&#xf145;&#xf15d;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 907
  },
  {
    "role": "code",
    "lines": [
      "intro decimal;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "decimal"
    ],
    "code": "1210010312101101032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf15e;&#xf24b;",
    "stanza": 908
  },
  {
    "role": "code",
    "lines": [
      "define float | ? x:list | ? y | ? z |",
      "  if (= 0 | list-length | $x:list) 0 |",
      "  + (* $z | head $x:list) |",
      "  float (tail $x:list) $y (* $y $z);"
    ],
    "dt": true,
    "parse": [
      "@",
      "float",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "if",
              [
                "=",
                "0",
                [
                  -1,
                  "list-length",
                  [
                    -1,
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ]
              ],
              "0",
              [
                -1,
                "+",
                [
                  "*",
                  [
                    -2,
                    "z"
                  ],
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ],
                [
                  -1,
                  "float",
                  [
                    "list:remainder",
                    [
                      -2,
                      "x:list"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ],
                  [
                    "*",
                    [
                      -2,
                      "y"
                    ],
                    [
                      -2,
                      "z"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210110113023121100312121010113121111103302312110031211010030231211003121101013023121111321211302030231210000103023123121210101131211111033302030231210103212100131231211010130231212111110302033123121210101131211111033302312101101132121211111031210000013312312121010113121111103331231211010032121001312312110100312312110101332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf248;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf204;&#xf248;&#xf14e;&#xf246;&#xf14d;&#xf249;&#xf179;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf145;&#xf15f;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf178;&#xf246;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf179;&#xf245;&#xf24b;",
    "stanza": 909
  },
  {
    "role": "code",
    "lines": [
      "define decimal | ? x | ? x:list | + $x | float $x:list (frac 1 10) (frac 1 10);"
    ],
    "dt": true,
    "parse": [
      "@",
      "decimal",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -1,
              "float",
              [
                -2,
                "x:list"
              ],
              [
                "frac",
                "1",
                "10"
              ],
              [
                "frac",
                "1",
                "10"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312101101030231211003121010113023121100312121010113121111103302312101031231210101130231210110113123121210101131211111033212100111302130210103321210011130213021010332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf248;&#xf145;&#xf15f;&#xf249;&#xf16f;&#xf182;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf20e;&#xf245;&#xf24b;",
    "stanza": 910
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon (frac 1 3) | decimal 0 | vector 3 3 3 3 3 3;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        "frac",
        "1",
        "3"
      ],
      [
        -1,
        "decimal",
        "0",
        [
          -1,
          "vector",
          "3",
          "3",
          "3",
          "3",
          "3",
          "3"
        ]
      ]
    ],
    "code": "121010110312312121001003121010111332121001113021302113302312101101030203023121000030211302113021130211302113021132233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 911
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon (frac 9 7) | decimal 1 | vector 2 8 5 7 1 4;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        "frac",
        "9",
        "7"
      ],
      [
        -1,
        "decimal",
        "1",
        [
          -1,
          "vector",
          "2",
          "8",
          "5",
          "7",
          "1",
          "4"
        ]
      ]
    ],
    "code": "12101011031231212100100312101011133212100111302100130211133023121011010302130231210000302103021000302101302111302130210032233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf246;&#xf16b;&#xf24a;&#xf20d;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf20b;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 912
  },
  {
    "role": "code",
    "lines": [
      "intro e;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "e"
    ],
    "code": "121001031210100032233",
    "spider": "&#xf156;&#xf24a;&#xf16c;&#xf24b;",
    "stanza": 913
  },
  {
    "role": "code",
    "lines": [
      "define e:hat | reduce $+ | map (? x | frac 1 | factorial $x) | range 0 100;"
    ],
    "dt": true,
    "parse": [
      "@",
      "e:hat",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ],
        [
          -1,
          "map",
          [
            "?",
            "x",
            [
              -1,
              "frac",
              "1",
              [
                -1,
                "*:<",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ],
          [
            -1,
            "range",
            "0",
            "100"
          ]
        ]
      ]
    ],
    "code": "1211013121210100031210111003302312100101031231210103023121001001321211003121010113023121001113021302312121001312103312312101011330231210110003020302110010032233",
    "spider": "&#xf151;&#xf24a;&#xf16c;&#xf145;&#xf160;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf16b;&#xf24a;&#xf205;&#xf248;&#xf14d;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf228;&#xf24b;",
    "stanza": 914
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $e $e:hat;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "e"
      ],
      [
        -2,
        "e:hat"
      ]
    ],
    "code": "1210101103123121210010031210101113312312101000312312121010003121011100332233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf249;&#xf16c;&#xf249;&#xf16c;&#xf145;&#xf160;&#xf24b;",
    "stanza": 915
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $e | decimal 2 | vector 7 1 8 2 8;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "e"
      ],
      [
        -1,
        "decimal",
        "2",
        [
          -1,
          "vector",
          "7",
          "1",
          "8",
          "2",
          "8"
        ]
      ]
    ],
    "code": "1210101103123121210010031210101113312312101000302312101101030210302312100003021113021302100030210302100032233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf249;&#xf16c;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf205;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 916
  },
  {
    "role": "code",
    "lines": [
      "intro pi;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pi"
    ],
    "code": "121001031210100132233",
    "spider": "&#xf156;&#xf24a;&#xf16d;&#xf24b;",
    "stanza": 917
  },
  {
    "role": "code",
    "lines": [
      "define pi:part | ? x | frac (if (even $x) (minus 1) 1) | * (* $x 2) | * (+ 1 | * $x 2) (+ 2 | * $x 2);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pi:part",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "frac",
          [
            "if",
            [
              "even",
              [
                -2,
                "x"
              ]
            ],
            [
              "minus",
              "1"
            ],
            "1"
          ],
          [
            -1,
            "*",
            [
              "*",
              [
                -2,
                "x"
              ],
              "2"
            ],
            [
              -1,
              "*",
              [
                "+",
                "1",
                [
                  -1,
                  "*",
                  [
                    -2,
                    "x"
                  ],
                  "2"
                ]
              ],
              [
                "+",
                "2",
                [
                  -1,
                  "*",
                  [
                    -2,
                    "x"
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121010013121011101330231211003121010113023121001113212111132121011103123121010113321210101003021330213302312100132121001312312101011302103302312100132121010302130231210013123121010113021033212101030210302312100131231210101130210332233",
    "spider": "&#xf151;&#xf24a;&#xf16d;&#xf145;&#xf161;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf16b;&#xf246;&#xf153;&#xf246;&#xf172;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf245;&#xf205;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf14e;&#xf24a;&#xf206;&#xf248;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 918
  },
  {
    "role": "code",
    "lines": [
      "define pi:hat | + 3 | * 4 | reduce $+ | map $pi:part | range 1 100;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pi:hat",
      [
        -1,
        "+",
        "3",
        [
          -1,
          "*",
          "4",
          [
            -1,
            "reduce",
            [
              -2,
              "+"
            ],
            [
              -1,
              "map",
              [
                -2,
                "pi:part"
              ],
              [
                -1,
                "range",
                "1",
                "100"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212101001312101110033023121010302113023121001302100302312100101031231210103023121001001312312121010013121011101330231210110003021302110010032233",
    "spider": "&#xf151;&#xf24a;&#xf16d;&#xf145;&#xf160;&#xf248;&#xf14e;&#xf24a;&#xf207;&#xf248;&#xf14d;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf16d;&#xf145;&#xf161;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf228;&#xf24b;",
    "stanza": 919
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $pi $pi:hat;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "pi"
      ],
      [
        -2,
        "pi:hat"
      ]
    ],
    "code": "1210101103123121210010031210101113312312101001312312121010013121011100332233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf249;&#xf16d;&#xf249;&#xf16d;&#xf145;&#xf160;&#xf24b;",
    "stanza": 920
  },
  {
    "role": "code",
    "lines": [
      "within $demo:epsilon $pi | decimal 3 | vector 1 4 1 5 9 2 6 5 3 5;"
    ],
    "dt": false,
    "parse": [
      "within",
      [
        -2,
        "demo:epsilon"
      ],
      [
        -2,
        "pi"
      ],
      [
        -1,
        "decimal",
        "3",
        [
          -1,
          "vector",
          "1",
          "4",
          "1",
          "5",
          "9",
          "2",
          "6",
          "5",
          "3",
          "5"
        ]
      ]
    ],
    "code": "121010110312312121001003121010111331231210100130231210110103021130231210000302130210030213021013021001302103021103021013021130210132233",
    "spider": "&#xf145;&#xf15a;&#xf249;&#xf168;&#xf145;&#xf15b;&#xf249;&#xf16d;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf207;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 921
  },
  {
    "role": "code",
    "lines": [
      "intro power:10;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "power:10"
    ],
    "code": "12100103121210111103021010332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf162;&#xf20e;&#xf24b;",
    "stanza": 922
  },
  {
    "role": "code",
    "lines": [
      "define power:10 | ? n |",
      "  if (= $n 0) 1 |",
      "  assign part (if (>= $n 0) 10 (frac 1 10)) |",
      "  reduce $* | map (? x $part) | range 0 (abs $n);"
    ],
    "dt": true,
    "parse": [
      "@",
      "power:10",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "n"
            ],
            "0"
          ],
          "1",
          [
            -1,
            "assign",
            "part",
            [
              "if",
              [
                ">=",
                [
                  -2,
                  "n"
                ],
                "0"
              ],
              "10",
              [
                "frac",
                "1",
                "10"
              ]
            ],
            [
              -1,
              "reduce",
              [
                -2,
                "*"
              ],
              [
                -1,
                "map",
                [
                  "?",
                  "x",
                  [
                    -2,
                    "part"
                  ]
                ],
                [
                  -1,
                  "range",
                  "0",
                  [
                    "abs",
                    [
                      -2,
                      "n"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121210111103021010330231211003121111113023121111321211312312111111302033021302312111031210111013212111132121110113123121111113020330210103212100111302130210103330231210010103123121001302312100100132121100312101011312312101110133023121011000302032121010101312312111111332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf162;&#xf20e;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf205;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf161;&#xf246;&#xf153;&#xf246;&#xf17f;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf20e;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf20e;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14d;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf145;&#xf161;&#xf245;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf204;&#xf246;&#xf145;&#xf159;&#xf249;&#xf183;&#xf245;&#xf24b;",
    "stanza": 923
  },
  {
    "role": "code",
    "lines": [
      "define float:= | ? x | ? y |",
      "  if (= $x $y) $true |",
      "  within (frac (+ $x $y) 200000) $x $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "float:=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              -2,
              "true"
            ],
            [
              -1,
              "within",
              [
                "frac",
                [
                  "+",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -2,
                    "y"
                  ]
                ],
                "200000"
              ],
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121210110113121133023121100312101011302312110031211010030231211113212113123121010113123121101003312312130231210101103212100111321210103123121010113123121101003302110000110101000000331231210101131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15f;&#xf147;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf249;&#xf145;&#xf248;&#xf145;&#xf15a;&#xf246;&#xf16b;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf234;&#xf239;&#xf204;&#xf245;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 924
  },
  {
    "role": "code",
    "lines": [
      "float:= 10 | power:10 1;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "10",
      [
        -1,
        "power:10",
        "1"
      ]
    ],
    "code": "12121011011312113302101030231212101111030210103302132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf20e;&#xf248;&#xf145;&#xf162;&#xf20e;&#xf205;&#xf24b;",
    "stanza": 925
  },
  {
    "role": "code",
    "lines": [
      "float:= 100 | power:10 2;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "100",
      [
        -1,
        "power:10",
        "2"
      ]
    ],
    "code": "121210110113121133021100100302312121011110302101033021032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf205;&#xf228;&#xf248;&#xf145;&#xf162;&#xf20e;&#xf206;&#xf24b;",
    "stanza": 926
  },
  {
    "role": "code",
    "lines": [
      "float:= 1000 | power:10 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "1000",
      [
        -1,
        "power:10",
        "3"
      ]
    ],
    "code": "121210110113121133021111101000302312121011110302101033021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf213;&#xf22c;&#xf248;&#xf145;&#xf162;&#xf20e;&#xf207;&#xf24b;",
    "stanza": 927
  },
  {
    "role": "code",
    "lines": [
      "float:= (frac 1 10) | power:10 | minus 1;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "frac",
        "1",
        "10"
      ],
      [
        -1,
        "power:10",
        [
          -1,
          "minus",
          "1"
        ]
      ]
    ],
    "code": "121210110113121133212100111302130210103302312121011110302101033023121010100302132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf145;&#xf162;&#xf20e;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 928
  },
  {
    "role": "code",
    "lines": [
      "float:= (frac 1 100) | power:10 | minus 2;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "frac",
        "1",
        "100"
      ],
      [
        -1,
        "power:10",
        [
          -1,
          "minus",
          "2"
        ]
      ]
    ],
    "code": "1212101101131211332121001113021302110010033023121210111103021010330231210101003021032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf228;&#xf245;&#xf248;&#xf145;&#xf162;&#xf20e;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 929
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | power:10 0;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "power:10",
        "0"
      ]
    ],
    "code": "12121011011312113302130231212101111030210103302032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf205;&#xf248;&#xf145;&#xf162;&#xf20e;&#xf204;&#xf24b;",
    "stanza": 930
  },
  {
    "role": "code",
    "lines": [
      "define decimal:power | ? x:power | ? x:int | ? x:list |",
      "  * (power:10 $x:power) (decimal $x:int $x:list);"
    ],
    "dt": true,
    "parse": [
      "@",
      "decimal:power",
      [
        -1,
        "?",
        "x:power",
        [
          -1,
          "?",
          "x:int",
          [
            -1,
            "?",
            "x:list",
            [
              -1,
              "*",
              [
                "power:10",
                [
                  -2,
                  "x:power"
                ]
              ],
              [
                "decimal",
                [
                  -2,
                  "x:int"
                ],
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212101101031210111103302312110031212101011312101111033023121100312121010113121100003302312110031212101011312111110330231210013212121011110302101033123121210101131210111103332121011010312312121010113121100003312312121010113121111103332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf145;&#xf162;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf174;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf14d;&#xf246;&#xf145;&#xf162;&#xf20e;&#xf249;&#xf16f;&#xf145;&#xf162;&#xf245;&#xf246;&#xf145;&#xf15e;&#xf249;&#xf16f;&#xf174;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf24b;",
    "stanza": 931
  },
  {
    "role": "code",
    "lines": [
      "float:= 1530 | decimal:power 3 1 | vector 5 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "1530",
      [
        -1,
        "decimal:power",
        "3",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "code": "121210110113121133021011111101030231212101101031210111103302113021302312100003021013021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf21b;&#xf23e;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf207;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 932
  },
  {
    "role": "code",
    "lines": [
      "float:= 15300 | decimal:power 4 1 | vector 5 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "15300",
      [
        -1,
        "decimal:power",
        "4",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "code": "1212101101131211330211101111000100302312121011010312101111033021003021302312100003021013021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf207;&#xf233;&#xf208;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf208;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 933
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 5 3) | decimal:power 0 1 | vector 5 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ],
      [
        -1,
        "decimal:power",
        "0",
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "code": "12121011011312113321210110103021302312100003021013021133023121210110103121011110330203021302312100003021013021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf204;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 934
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 0 | vector 0 0 1 5 3) | decimal:power (minus 3) 1 | vector 5 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "0",
        [
          -1,
          "vector",
          "0",
          "0",
          "1",
          "5",
          "3"
        ]
      ],
      [
        -1,
        "decimal:power",
        [
          "minus",
          "3"
        ],
        "1",
        [
          -1,
          "vector",
          "5",
          "3"
        ]
      ]
    ],
    "code": "121210110113121133212101101030203023121000030203020302130210130211330231212101101031210111103321210101003021133021302312100003021013021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf207;&#xf245;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 935
  },
  {
    "role": "code",
    "lines": [
      "intro pow:int;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pow:int"
    ],
    "code": "121001031212100001312110000332233",
    "spider": "&#xf156;&#xf24a;&#xf165;&#xf174;&#xf24b;",
    "stanza": 936
  },
  {
    "role": "code",
    "lines": [
      "define pow:int | ? x | ? n |",
      "  if (= $n 0) 1 |",
      "  assign part (if (>= $n 0) $x (frac 1 $x)) |",
      "  reduce $* | map (? y $part) | range 0 (abs $n);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pow:int",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "0"
            ],
            "1",
            [
              -1,
              "assign",
              "part",
              [
                "if",
                [
                  ">=",
                  [
                    -2,
                    "n"
                  ],
                  "0"
                ],
                [
                  -2,
                  "x"
                ],
                [
                  "frac",
                  "1",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -1,
                "reduce",
                [
                  -2,
                  "*"
                ],
                [
                  -1,
                  "map",
                  [
                    "?",
                    "y",
                    [
                      -2,
                      "part"
                    ]
                  ],
                  [
                    -1,
                    "range",
                    "0",
                    [
                      "abs",
                      [
                        -2,
                        "n"
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121210000131211000033023121100312101011302312110031211111130231211113212113123121111113020330213023121110312101110132121111321211101131231211111130203312312101011321210011130213123121010113330231210010103123121001302312100100132121100312110100312312101110133023121011000302032121010101312312111111332233",
    "spider": "&#xf151;&#xf24a;&#xf165;&#xf174;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf205;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf161;&#xf246;&#xf153;&#xf246;&#xf17f;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf249;&#xf16f;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14d;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf249;&#xf145;&#xf161;&#xf245;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf204;&#xf246;&#xf145;&#xf159;&#xf249;&#xf183;&#xf245;&#xf24b;",
    "stanza": 937
  },
  {
    "role": "code",
    "lines": [
      "= 100 | pow:int 10 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "100",
      [
        -1,
        "pow:int",
        "10",
        "2"
      ]
    ],
    "code": "1211302110010030231212100001312110000330210103021032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf228;&#xf248;&#xf165;&#xf174;&#xf20e;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 938
  },
  {
    "role": "code",
    "lines": [
      "= 25 | pow:int 5 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "25",
      [
        -1,
        "pow:int",
        "5",
        "2"
      ]
    ],
    "code": "1211302110013023121210000131211000033021013021032233",
    "spider": "&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf165;&#xf174;&#xf209;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 939
  },
  {
    "role": "code",
    "lines": [
      "= 4 | pow:int 2 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "pow:int",
        "2",
        "2"
      ]
    ],
    "code": "1211302100302312121000013121100003302103021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf165;&#xf174;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 940
  },
  {
    "role": "code",
    "lines": [
      "= 8 | pow:int 2 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        "pow:int",
        "2",
        "3"
      ]
    ],
    "code": "12113021000302312121000013121100003302103021132233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf165;&#xf174;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 941
  },
  {
    "role": "code",
    "lines": [
      "= 16 | pow:int 2 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        "pow:int",
        "2",
        "4"
      ]
    ],
    "code": "1211302100003023121210000131211000033021030210032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf165;&#xf174;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 942
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow:int 2 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow:int",
        "2",
        "0"
      ]
    ],
    "code": "1211302130231212100001312110000330210302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf165;&#xf174;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 943
  },
  {
    "role": "code",
    "lines": [
      "= (frac 1 2) | pow:int 2 | minus 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "frac",
        "1",
        "2"
      ],
      [
        -1,
        "pow:int",
        "2",
        [
          -1,
          "minus",
          "1"
        ]
      ]
    ],
    "code": "121132121001113021302103302312121000013121100003302103023121010100302132233",
    "spider": "&#xf147;&#xf246;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf165;&#xf174;&#xf206;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 944
  },
  {
    "role": "code",
    "lines": [
      "intro pow;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pow"
    ],
    "code": "121001031210000132233",
    "spider": "&#xf156;&#xf24a;&#xf165;&#xf24b;",
    "stanza": 945
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 2 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "2",
        "0"
      ]
    ],
    "code": "1211302130231210000130210302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 946
  },
  {
    "role": "code",
    "lines": [
      "= 2 | pow 2 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "pow",
        "2",
        "1"
      ]
    ],
    "code": "12113021030231210000130210302132233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 947
  },
  {
    "role": "code",
    "lines": [
      "= 4 | pow 2 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "pow",
        "2",
        "2"
      ]
    ],
    "code": "1211302100302312100001302103021032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 948
  },
  {
    "role": "code",
    "lines": [
      "= 8 | pow 2 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        "pow",
        "2",
        "3"
      ]
    ],
    "code": "12113021000302312100001302103021132233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 949
  },
  {
    "role": "code",
    "lines": [
      "= 16 | pow 2 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        "pow",
        "2",
        "4"
      ]
    ],
    "code": "1211302100003023121000013021030210032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 950
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 3 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "3",
        "0"
      ]
    ],
    "code": "1211302130231210000130211302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 951
  },
  {
    "role": "code",
    "lines": [
      "= 3 | pow 3 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "pow",
        "3",
        "1"
      ]
    ],
    "code": "12113021130231210000130211302132233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 952
  },
  {
    "role": "code",
    "lines": [
      "= 9 | pow 3 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "9",
      [
        -1,
        "pow",
        "3",
        "2"
      ]
    ],
    "code": "12113021001302312100001302113021032233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 953
  },
  {
    "role": "code",
    "lines": [
      "= 27 | pow 3 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "27",
      [
        -1,
        "pow",
        "3",
        "3"
      ]
    ],
    "code": "121130211011302312100001302113021132233",
    "spider": "&#xf147;&#xf24a;&#xf21f;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 954
  },
  {
    "role": "code",
    "lines": [
      "= 81 | pow 3 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "81",
      [
        -1,
        "pow",
        "3",
        "4"
      ]
    ],
    "code": "121130210100013023121000013021130210032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf215;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 955
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 4 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "4",
        "0"
      ]
    ],
    "code": "12113021302312100001302100302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 956
  },
  {
    "role": "code",
    "lines": [
      "= 4 | pow 4 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "pow",
        "4",
        "1"
      ]
    ],
    "code": "1211302100302312100001302100302132233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 957
  },
  {
    "role": "code",
    "lines": [
      "= 16 | pow 4 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        "pow",
        "4",
        "2"
      ]
    ],
    "code": "1211302100003023121000013021003021032233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 958
  },
  {
    "role": "code",
    "lines": [
      "= 64 | pow 4 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "64",
      [
        -1,
        "pow",
        "4",
        "3"
      ]
    ],
    "code": "121130210000003023121000013021003021132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf204;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 959
  },
  {
    "role": "code",
    "lines": [
      "= 256 | pow 4 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "256",
      [
        -1,
        "pow",
        "4",
        "4"
      ]
    ],
    "code": "121130210000000030231210000130210030210032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf204;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 960
  },
  {
    "role": "code",
    "lines": [
      "= 1 | pow 5 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "pow",
        "5",
        "0"
      ]
    ],
    "code": "12113021302312100001302101302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf209;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 961
  },
  {
    "role": "code",
    "lines": [
      "= 5 | pow 5 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "5",
      [
        -1,
        "pow",
        "5",
        "1"
      ]
    ],
    "code": "1211302101302312100001302101302132233",
    "spider": "&#xf147;&#xf24a;&#xf209;&#xf248;&#xf165;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 962
  },
  {
    "role": "code",
    "lines": [
      "= 25 | pow 5 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "25",
      [
        -1,
        "pow",
        "5",
        "2"
      ]
    ],
    "code": "1211302110013023121000013021013021032233",
    "spider": "&#xf147;&#xf24a;&#xf21d;&#xf248;&#xf165;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 963
  },
  {
    "role": "code",
    "lines": [
      "= 125 | pow 5 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "125",
      [
        -1,
        "pow",
        "5",
        "3"
      ]
    ],
    "code": "121130211111013023121000013021013021132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf241;&#xf248;&#xf165;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 964
  },
  {
    "role": "code",
    "lines": [
      "= 625 | pow 5 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "625",
      [
        -1,
        "pow",
        "5",
        "4"
      ]
    ],
    "code": "1211302100111000130231210000130210130210032233",
    "spider": "&#xf147;&#xf24a;&#xf20d;&#xf235;&#xf248;&#xf165;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 965
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | pow 2 0;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "pow",
        "2",
        "0"
      ]
    ],
    "code": "12121011011312113302130231210000130210302032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 966
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 1 8 9 2 0) | pow 2 (decimal 0 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "1",
          "8",
          "9",
          "2",
          "0"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021302312100003021302100030210013021030203302312100001302103212101101030203023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf20c;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 967
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 4 1 4 2 1) | pow 2 (decimal 0 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "4",
          "1",
          "4",
          "2",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302130231210000302100302130210030210302133023121000013021032121011010302030231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 968
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 6 8 1 7 9) | pow 2 (decimal 0 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "6",
          "8",
          "1",
          "7",
          "9"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030213023121000030211030210003021302111302100133023121000013021032121011010302030231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf205;&#xf24a;&#xf20b;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 969
  },
  {
    "role": "code",
    "lines": [
      "float:= 2 | pow 2 1;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "2",
      [
        -1,
        "pow",
        "2",
        "1"
      ]
    ],
    "code": "121210110113121133021030231210000130210302132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf206;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 970
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 3 7 8 4 1) | pow 2 (decimal 1 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "3",
          "7",
          "8",
          "4",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302103023121000030211302111302100030210030213302312100001302103212101101030213023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf20b;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 971
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 8 2 8 4 2) | pow 2 (decimal 1 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "8",
          "2",
          "8",
          "4",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302103023121000030210003021030210003021003021033023121000013021032121011010302130231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 972
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 3 | vector 3 6 3 5 8) | pow 2 (decimal 1 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "3",
        [
          -1,
          "vector",
          "3",
          "6",
          "3",
          "5",
          "8"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030211302312100003021130211030211302101302100033023121000013021032121011010302130231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf207;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 973
  },
  {
    "role": "code",
    "lines": [
      "float:= 4 | pow 2 2;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "4",
      [
        -1,
        "pow",
        "2",
        "2"
      ]
    ],
    "code": "12121011011312113302100302312100001302103021032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf208;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 974
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 4 | vector 7 5 6 8 2) | pow 2 (decimal 2 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "4",
        [
          -1,
          "vector",
          "7",
          "5",
          "6",
          "8",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021003023121000030211130210130211030210003021033023121000013021032121011010302103023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf208;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 975
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 5 | vector 6 5 6 8 5) | pow 2 (decimal 2 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "5",
        [
          -1,
          "vector",
          "6",
          "5",
          "6",
          "8",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302101302312100003021103021013021103021000302101330231210000130210321210110103021030231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf209;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 976
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 6 | vector 7 2 7 1 7) | pow 2 (decimal 2 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "6",
        [
          -1,
          "vector",
          "7",
          "2",
          "7",
          "1",
          "7"
        ]
      ],
      [
        -1,
        "pow",
        "2",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030211030231210000302111302103021113021302111330231210000130210321210110103021030231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf20a;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf206;&#xf24a;&#xf20b;&#xf24a;&#xf205;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 977
  },
  {
    "role": "code",
    "lines": [
      "float:= 8 | pow 2 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "8",
      [
        -1,
        "pow",
        "2",
        "3"
      ]
    ],
    "code": "121210110113121133021000302312100001302103021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf20c;&#xf248;&#xf165;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 978
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | pow 3 0;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "pow",
        "3",
        "0"
      ]
    ],
    "code": "12121011011312113302130231210000130211302032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 979
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 3 1 6 0 7) | pow 3 (decimal 0 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "3",
          "1",
          "6",
          "0",
          "7"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030213023121000030211302130211030203021113302312100001302113212101101030203023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24a;&#xf20a;&#xf24a;&#xf204;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 980
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 7 3 2 0 5) | pow 3 (decimal 0 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "7",
          "3",
          "2",
          "0",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021302312100003021113021130210302030210133023121000013021132121011010302030231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 981
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 2 7 9 5 0) | pow 3 (decimal 0 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "2",
          "7",
          "9",
          "5",
          "0"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021030231210000302103021113021001302101302033023121000013021132121011010302030231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20b;&#xf24a;&#xf20d;&#xf24a;&#xf209;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 982
  },
  {
    "role": "code",
    "lines": [
      "float:= 3 | pow 3 1;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "3",
      [
        -1,
        "pow",
        "3",
        "1"
      ]
    ],
    "code": "121210110113121133021130231210000130211302132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf207;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 983
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 3 | vector 9 4 8 2 2) | pow 3 (decimal 1 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "3",
        [
          -1,
          "vector",
          "9",
          "4",
          "8",
          "2",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030211302312100003021001302100302100030210302103302312100001302113212101101030213023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf207;&#xf248;&#xf154;&#xf24a;&#xf20d;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 984
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 5 | vector 1 9 6 1 5) | pow 3 (decimal 1 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "5",
        [
          -1,
          "vector",
          "1",
          "9",
          "6",
          "1",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021013023121000030213021001302110302130210133023121000013021132121011010302130231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf209;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf20d;&#xf24a;&#xf20a;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 985
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 6 | vector 8 3 8 5 2) | pow 3 (decimal 1 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "6",
        [
          -1,
          "vector",
          "8",
          "3",
          "8",
          "5",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021103023121000030210003021130210003021013021033023121000013021132121011010302130231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf20a;&#xf248;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf207;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 986
  },
  {
    "role": "code",
    "lines": [
      "float:= 9 | pow 3 2;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "9",
      [
        -1,
        "pow",
        "3",
        "2"
      ]
    ],
    "code": "121210110113121133021001302312100001302113021032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf20d;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 987
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 11 | vector 8 4 4 6 6) | pow 3 (decimal 2 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "11",
        [
          -1,
          "vector",
          "8",
          "4",
          "4",
          "6",
          "6"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302101130231210000302100030210030210030211030211033023121000013021132121011010302103023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf20f;&#xf248;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 988
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 15 | vector 5 8 8 4 5) | pow 3 (decimal 2 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "15",
        [
          -1,
          "vector",
          "5",
          "8",
          "8",
          "4",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030211113023121000030210130210003021000302100302101330231210000130211321210110103021030231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf213;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 989
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 20 | vector 5 1 5 5 6) | pow 3 (decimal 2 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "20",
        [
          -1,
          "vector",
          "5",
          "1",
          "5",
          "5",
          "6"
        ]
      ],
      [
        -1,
        "pow",
        "3",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030210100302312100003021013021302101302101302110330231210000130211321210110103021030231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf218;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 990
  },
  {
    "role": "code",
    "lines": [
      "float:= 27 | pow 3 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "27",
      [
        -1,
        "pow",
        "3",
        "3"
      ]
    ],
    "code": "1212101101131211330211011302312100001302113021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf21f;&#xf248;&#xf165;&#xf24a;&#xf207;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 991
  },
  {
    "role": "code",
    "lines": [
      "float:= 1 | pow 4 0;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "1",
      [
        -1,
        "pow",
        "4",
        "0"
      ]
    ],
    "code": "121210110113121133021302312100001302100302032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf205;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 992
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 1 | vector 4 1 4 2 1) | pow 4 (decimal 0 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "1",
        [
          -1,
          "vector",
          "4",
          "1",
          "4",
          "2",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302130231210000302100302130210030210302133023121000013021003212101101030203023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 993
  },
  {
    "role": "code",
    "lines": [
      "float:= 2 | pow 4 (decimal 0 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "2",
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133021030231210000130210032121011010302030231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf206;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 994
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 2 | vector 8 2 8 4 2) | pow 4 (decimal 0 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "2",
        [
          -1,
          "vector",
          "8",
          "2",
          "8",
          "4",
          "2"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "0",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021030231210000302100030210302100030210030210330231210000130210032121011010302030231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 995
  },
  {
    "role": "code",
    "lines": [
      "float:= 4 | pow 4 1;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "4",
      [
        -1,
        "pow",
        "4",
        "1"
      ]
    ],
    "code": "12121011011312113302100302312100001302100302132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf208;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 996
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 5 | vector 6 5 6 8 5) | pow 4 (decimal 1 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "5",
        [
          -1,
          "vector",
          "6",
          "5",
          "6",
          "8",
          "5"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030210130231210000302110302101302110302100030210133023121000013021003212101101030213023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf209;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 997
  },
  {
    "role": "code",
    "lines": [
      "float:= 8 | pow 4 (decimal 1 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "8",
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113302100030231210000130210032121011010302130231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf20c;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 998
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 11 | vector 3 1 3 7 0) | pow 4 (decimal 1 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "11",
        [
          -1,
          "vector",
          "3",
          "1",
          "3",
          "7",
          "0"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "1",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121011010302101130231210000302113021302113021113020330231210000130210032121011010302130231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf20f;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf20b;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 999
  },
  {
    "role": "code",
    "lines": [
      "float:= 16 | pow 4 2;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "16",
      [
        -1,
        "pow",
        "4",
        "2"
      ]
    ],
    "code": "12121011011312113302100003023121000013021003021032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf214;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1000
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 22 | vector 6 2 7 4 1) | pow 4 (decimal 2 | vector 2 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "22",
        [
          -1,
          "vector",
          "6",
          "2",
          "7",
          "4",
          "1"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "2",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321210110103021011030231210000302110302103021113021003021330231210000130210032121011010302103023121000030210302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf21a;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20b;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1001
  },
  {
    "role": "code",
    "lines": [
      "float:= 32 | pow 4 (decimal 2 | vector 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "32",
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "5"
          ]
        ]
      ]
    ],
    "code": "12121011011312113302100000302312100001302100321210110103021030231210000302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf224;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1002
  },
  {
    "role": "code",
    "lines": [
      "float:= (decimal 45 | vector 2 5 4 8 3) | pow 4 (decimal 2 | vector 7 5);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "decimal",
        "45",
        [
          -1,
          "vector",
          "2",
          "5",
          "4",
          "8",
          "3"
        ]
      ],
      [
        -1,
        "pow",
        "4",
        [
          "decimal",
          "2",
          [
            -1,
            "vector",
            "7",
            "5"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212101101030210110130231210000302103021013021003021000302113302312100001302100321210110103021030231210000302111302101332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf231;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf246;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1003
  },
  {
    "role": "code",
    "lines": [
      "float:= 64 | pow 4 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "64",
      [
        -1,
        "pow",
        "4",
        "3"
      ]
    ],
    "code": "1212101101131211330210000003023121000013021003021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf205;&#xf204;&#xf248;&#xf165;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1004
  },
  {
    "role": "code",
    "lines": [
      "intro exp;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "exp"
    ],
    "code": "1210010312101111132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf163;&#xf24b;",
    "stanza": 1005
  },
  {
    "role": "code",
    "lines": [
      "define exp:hat | ? x |",
      "  reduce $+ | map (? n | frac (pow:int $x $n) | factorial $n) | range 0 50;"
    ],
    "dt": true,
    "parse": [
      "@",
      "exp:hat",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "reduce",
          [
            -2,
            "+"
          ],
          [
            -1,
            "map",
            [
              "?",
              "n",
              [
                -1,
                "frac",
                [
                  "pow:int",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -2,
                    "n"
                  ]
                ],
                [
                  -1,
                  "*:<",
                  [
                    -2,
                    "n"
                  ]
                ]
              ]
            ],
            [
              -1,
              "range",
              "0",
              "50"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121011111312101110033023121100312101011302312100101031231210103023121001001321211003121111113023121001113212121000013121100003312312101011312312111111330231212100131210331231211111133023121011000302030211001032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf163;&#xf145;&#xf160;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf16b;&#xf246;&#xf165;&#xf174;&#xf249;&#xf16f;&#xf249;&#xf183;&#xf245;&#xf248;&#xf14d;&#xf146;&#xf249;&#xf183;&#xf245;&#xf248;&#xf145;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf236;&#xf24b;",
    "stanza": 1006
  },
  {
    "role": "code",
    "lines": [
      "float:= $e | exp:hat 1;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        -2,
        "e"
      ],
      [
        -1,
        "exp:hat",
        "1"
      ]
    ],
    "code": "1212101101131211331231210100030231212101111131210111003302132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf249;&#xf16c;&#xf248;&#xf145;&#xf163;&#xf145;&#xf160;&#xf205;&#xf24b;",
    "stanza": 1007
  },
  {
    "role": "code",
    "lines": [
      "define ln:10:hat | decimal 2 | vector 3 0 2 5 8 5 0 9 2 9 9;"
    ],
    "dt": true,
    "parse": [
      "@",
      "ln:10:hat",
      [
        -1,
        "decimal",
        "2",
        [
          -1,
          "vector",
          "3",
          "0",
          "2",
          "5",
          "8",
          "5",
          "0",
          "9",
          "2",
          "9",
          "9"
        ]
      ]
    ],
    "code": "1211013121211000003021010312101110033023121011010302103023121000030211302030210302101302100030210130203021001302103021001302100132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf164;&#xf20e;&#xf145;&#xf160;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf204;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf20d;&#xf24a;&#xf20d;&#xf24b;",
    "stanza": 1008
  },
  {
    "role": "code",
    "lines": [
      "float:= (pow:int 10 2) (exp:hat | * 2 $ln:10:hat);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "pow:int",
        "10",
        "2"
      ],
      [
        "exp:hat",
        [
          -1,
          "*",
          "2",
          [
            -2,
            "ln:10:hat"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121210000131211000033021010302103321212101111131210111003302312100130210312312121100000302101031210111003332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf165;&#xf174;&#xf20e;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf145;&#xf163;&#xf145;&#xf160;&#xf248;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf164;&#xf20e;&#xf145;&#xf160;&#xf245;&#xf24b;",
    "stanza": 1009
  },
  {
    "role": "code",
    "lines": [
      "float:= (pow:int 10 3) (exp:hat | * 3 $ln:10:hat);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "pow:int",
        "10",
        "3"
      ],
      [
        "exp:hat",
        [
          -1,
          "*",
          "3",
          [
            -2,
            "ln:10:hat"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121210000131211000033021010302113321212101111131210111003302312100130211312312121100000302101031210111003332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf165;&#xf174;&#xf20e;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf145;&#xf163;&#xf145;&#xf160;&#xf248;&#xf14d;&#xf24a;&#xf207;&#xf249;&#xf145;&#xf164;&#xf20e;&#xf145;&#xf160;&#xf245;&#xf24b;",
    "stanza": 1010
  },
  {
    "role": "code",
    "lines": [
      "float:= (pow:int 10 4) (exp:hat | * 4 $ln:10:hat);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "pow:int",
        "10",
        "4"
      ],
      [
        "exp:hat",
        [
          -1,
          "*",
          "4",
          [
            -2,
            "ln:10:hat"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212121000013121100003302101030210033212121011111312101110033023121001302100312312121100000302101031210111003332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf165;&#xf174;&#xf20e;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf145;&#xf163;&#xf145;&#xf160;&#xf248;&#xf14d;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf164;&#xf20e;&#xf145;&#xf160;&#xf245;&#xf24b;",
    "stanza": 1011
  },
  {
    "role": "file",
    "lines": [
      "== COS_Complex =="
    ],
    "stanza": 1012
  },
  {
    "role": "doc",
    "lines": [
      "A very very abbreviated introduction of complex numbers"
    ],
    "section_description": "introduce i",
    "section_category": "MATH",
    "section_index": 21,
    "stanza": 1013
  },
  {
    "role": "code",
    "lines": [
      "define all-equal | ? x:list |",
      "  if (>= 1 | list-length $x:list) $true |",
      "  and (= (list-ref $x:list 0) (list-ref $x:list 1))",
      "      (all-equal | tail $x:list);"
    ],
    "dt": true,
    "parse": [
      "@",
      "all-equal",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "if",
          [
            ">=",
            "1",
            [
              -1,
              "list-length",
              [
                -2,
                "x:list"
              ]
            ]
          ],
          [
            -2,
            "true"
          ],
          [
            -1,
            "true:*",
            [
              "=",
              [
                "list-ref",
                [
                  -2,
                  "x:list"
                ],
                "0"
              ],
              [
                "list-ref",
                [
                  -2,
                  "x:list"
                ],
                "1"
              ]
            ],
            [
              "all-equal",
              [
                -1,
                "list:remainder",
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121100001302312110031212101011312111110330231211113212111011302130231210000103123121210101131211111033312312130231212131210013321211321210000113123121210101131211111033020332121000011312312121010113121111103302133321211000013023121211111031210000013312312121010113121111103332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf17f;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf145;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf246;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf182;&#xf204;&#xf245;&#xf246;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf182;&#xf205;&#xf245;&#xf245;&#xf246;&#xf145;&#xf165;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf24b;",
    "stanza": 1014
  },
  {
    "role": "code",
    "lines": [
      "all-equal | vector 2 2 2;"
    ],
    "dt": false,
    "parse": [
      "all-equal",
      [
        -1,
        "vector",
        "2",
        "2",
        "2"
      ]
    ],
    "code": "1211000013023121000030210302103021032233",
    "spider": "&#xf145;&#xf165;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1015
  },
  {
    "role": "code",
    "lines": [
      "not | all-equal | vector 2 2 1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "all-equal",
        [
          -1,
          "vector",
          "2",
          "2",
          "1"
        ]
      ]
    ],
    "code": "121013023121100001302312100003021030210302132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf165;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1016
  },
  {
    "role": "code",
    "lines": [
      "not | all-equal | vector 2 1 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "all-equal",
        [
          -1,
          "vector",
          "2",
          "1",
          "2"
        ]
      ]
    ],
    "code": "121013023121100001302312100003021030213021032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf165;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1017
  },
  {
    "role": "code",
    "lines": [
      "not | all-equal | vector 1 2 2;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "all-equal",
        [
          -1,
          "vector",
          "1",
          "2",
          "2"
        ]
      ]
    ],
    "code": "121013023121100001302312100003021302103021032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf165;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1018
  },
  {
    "role": "code",
    "lines": [
      "intro sum;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "sum"
    ],
    "code": "1210010312110001032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf166;&#xf24b;",
    "stanza": 1019
  },
  {
    "role": "code",
    "lines": [
      "define sum | reduce $+;"
    ],
    "dt": true,
    "parse": [
      "@",
      "sum",
      [
        -1,
        "reduce",
        [
          -2,
          "+"
        ]
      ]
    ],
    "code": "12110131211000103023121001010312312101032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf166;&#xf248;&#xf145;&#xf14e;&#xf249;&#xf14e;&#xf24b;",
    "stanza": 1020
  },
  {
    "role": "code",
    "lines": [
      "intro i;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "i"
    ],
    "code": "121001031210101032233",
    "spider": "&#xf156;&#xf24a;&#xf16e;&#xf24b;",
    "stanza": 1021
  },
  {
    "role": "code",
    "lines": [
      "= (minus 1) | * $i $i;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "minus",
        "1"
      ],
      [
        -1,
        "*",
        [
          -2,
          "i"
        ],
        [
          -2,
          "i"
        ]
      ]
    ],
    "code": "12113212101010030213302312100131231210101031231210101032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14d;&#xf249;&#xf16e;&#xf249;&#xf16e;&#xf24b;",
    "stanza": 1022
  },
  {
    "role": "code",
    "lines": [
      "define complex | ? x | ? y | + $x | * $y $i;"
    ],
    "dt": true,
    "parse": [
      "@",
      "complex",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -1,
              "*",
              [
                -2,
                "y"
              ],
              [
                -2,
                "i"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121100011302312110031210101130231211003121101003023121010312312101011302312100131231211010031231210101032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf167;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf248;&#xf14d;&#xf249;&#xf178;&#xf249;&#xf16e;&#xf24b;",
    "stanza": 1023
  },
  {
    "role": "code",
    "lines": [
      "= (complex 5 6) | + (complex 3 2) (complex 2 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "complex",
        "5",
        "6"
      ],
      [
        -1,
        "+",
        [
          "complex",
          "3",
          "2"
        ],
        [
          "complex",
          "2",
          "4"
        ]
      ]
    ],
    "code": "1211321211000113021013021103302312101032121100011302113021033212110001130210302100332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14e;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 1024
  },
  {
    "role": "code",
    "lines": [
      "= (complex 7 22) | * (complex 5 4) (complex 3 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "complex",
        "7",
        "22"
      ],
      [
        -1,
        "*",
        [
          "complex",
          "5",
          "4"
        ],
        [
          "complex",
          "3",
          "2"
        ]
      ]
    ],
    "code": "1211321211000113021113021011033023121001321211000113021013021003321211000113021130210332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf20b;&#xf24a;&#xf21a;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1025
  },
  {
    "role": "code",
    "lines": [
      "= (complex 10 8) | * (complex 5 4) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "complex",
        "10",
        "8"
      ],
      [
        -1,
        "*",
        [
          "complex",
          "5",
          "4"
        ],
        "2"
      ]
    ],
    "code": "12113212110001130210103021000330231210013212110001130210130210033021032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1026
  },
  {
    "role": "code",
    "lines": [
      "= (complex 10 8) | * 2 (complex 5 4);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "complex",
        "10",
        "8"
      ],
      [
        -1,
        "*",
        "2",
        [
          "complex",
          "5",
          "4"
        ]
      ]
    ],
    "code": "12113212110001130210103021000330231210013021032121100011302101302100332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14d;&#xf24a;&#xf206;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 1027
  },
  {
    "role": "doc",
    "lines": [
      "should work through how to divide complex numbers (multiply by conjugate)"
    ],
    "stanza": 1028
  },
  {
    "role": "code",
    "lines": [
      "= (complex (frac 6 25) (frac 17 25)) | frac (complex 3 2) (complex 4 | minus 3);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "complex",
        [
          "frac",
          "6",
          "25"
        ],
        [
          "frac",
          "17",
          "25"
        ]
      ],
      [
        -1,
        "frac",
        [
          "complex",
          "3",
          "2"
        ],
        [
          "complex",
          "4",
          [
            -1,
            "minus",
            "3"
          ]
        ]
      ]
    ],
    "code": "12113212110001132121001113021103021100133212100111302100013021100133302312100111321211000113021130210332121100011302100302312101010030211332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf167;&#xf246;&#xf16b;&#xf24a;&#xf20a;&#xf24a;&#xf21d;&#xf245;&#xf246;&#xf16b;&#xf24a;&#xf215;&#xf24a;&#xf21d;&#xf245;&#xf245;&#xf248;&#xf16b;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf145;&#xf167;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf207;&#xf245;&#xf24b;",
    "stanza": 1029
  },
  {
    "role": "code",
    "lines": [
      "all-equal | vector",
      "  (+ 7 | * 22 $i)",
      "  (* (+ 5 | * 4 $i) (+ 3 | * 2 $i))",
      "  (sum | vector",
      "    (* 5 3)",
      "    (* 5 (* 2 $i))",
      "    (* (* 4 $i) 3)",
      "    (* (* 4 $i) (* 2 $i)))",
      "  (sum | vector",
      "    15 (* 10 $i) (* 12 $i) (minus 8))",
      "  (sum | vector",
      "    (+ 15 (minus 8)) (* (+ 10 12) $i));"
    ],
    "dt": false,
    "parse": [
      "all-equal",
      [
        -1,
        "vector",
        [
          "+",
          "7",
          [
            -1,
            "*",
            "22",
            [
              -2,
              "i"
            ]
          ]
        ],
        [
          "*",
          [
            "+",
            "5",
            [
              -1,
              "*",
              "4",
              [
                -2,
                "i"
              ]
            ]
          ],
          [
            "+",
            "3",
            [
              -1,
              "*",
              "2",
              [
                -2,
                "i"
              ]
            ]
          ]
        ],
        [
          "sum",
          [
            -1,
            "vector",
            [
              "*",
              "5",
              "3"
            ],
            [
              "*",
              "5",
              [
                "*",
                "2",
                [
                  -2,
                  "i"
                ]
              ]
            ],
            [
              "*",
              [
                "*",
                "4",
                [
                  -2,
                  "i"
                ]
              ],
              "3"
            ],
            [
              "*",
              [
                "*",
                "4",
                [
                  -2,
                  "i"
                ]
              ],
              [
                "*",
                "2",
                [
                  -2,
                  "i"
                ]
              ]
            ]
          ]
        ],
        [
          "sum",
          [
            -1,
            "vector",
            "15",
            [
              "*",
              "10",
              [
                -2,
                "i"
              ]
            ],
            [
              "*",
              "12",
              [
                -2,
                "i"
              ]
            ],
            [
              "minus",
              "8"
            ]
          ]
        ],
        [
          "sum",
          [
            -1,
            "vector",
            [
              "+",
              "15",
              [
                "minus",
                "8"
              ]
            ],
            [
              "*",
              [
                "+",
                "10",
                "12"
              ],
              [
                -2,
                "i"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110000130231210000321210103021113023121001302101103123121010103321210013212101030210130231210013021003123121010103321210103021130231210013021031231210101033321211000103023121000032121001302101302113321210013021013212100130210312312101010333212100132121001302100312312101010330211332121001321210013021003123121010103321210013021031231210101033332121100010302312100003021111321210013021010312312101010332121001302110031231210101033212101010030210003332121100010302312100003212101030211113212101010030210003332121001321210103021010302110033123121010103332233",
    "spider": "&#xf145;&#xf165;&#xf248;&#xf154;&#xf246;&#xf14e;&#xf24a;&#xf20b;&#xf248;&#xf14d;&#xf24a;&#xf21a;&#xf249;&#xf16e;&#xf245;&#xf246;&#xf14d;&#xf246;&#xf14e;&#xf24a;&#xf209;&#xf248;&#xf14d;&#xf24a;&#xf208;&#xf249;&#xf16e;&#xf245;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf248;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf16e;&#xf245;&#xf245;&#xf246;&#xf145;&#xf166;&#xf248;&#xf154;&#xf246;&#xf14d;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf14d;&#xf24a;&#xf209;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf16e;&#xf245;&#xf245;&#xf246;&#xf14d;&#xf246;&#xf14d;&#xf24a;&#xf208;&#xf249;&#xf16e;&#xf245;&#xf207;&#xf245;&#xf246;&#xf14d;&#xf246;&#xf14d;&#xf24a;&#xf208;&#xf249;&#xf16e;&#xf245;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf16e;&#xf245;&#xf245;&#xf245;&#xf246;&#xf145;&#xf166;&#xf248;&#xf154;&#xf24a;&#xf213;&#xf246;&#xf14d;&#xf24a;&#xf20e;&#xf249;&#xf16e;&#xf245;&#xf246;&#xf14d;&#xf24a;&#xf210;&#xf249;&#xf16e;&#xf245;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf20c;&#xf245;&#xf245;&#xf246;&#xf145;&#xf166;&#xf248;&#xf154;&#xf246;&#xf14e;&#xf24a;&#xf213;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf20c;&#xf245;&#xf245;&#xf246;&#xf14d;&#xf246;&#xf14e;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf245;&#xf249;&#xf16e;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1030
  },
  {
    "role": "doc",
    "lines": [
      "Hint at Euler's identity"
    ],
    "stanza": 1031
  },
  {
    "role": "code",
    "lines": [
      "float:= 0 | + 1 | exp:hat | * $pi $i;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      "0",
      [
        -1,
        "+",
        "1",
        [
          -1,
          "exp:hat",
          [
            -1,
            "*",
            [
              -2,
              "pi"
            ],
            [
              -2,
              "i"
            ]
          ]
        ]
      ]
    ],
    "code": "1212101101131211330203023121010302130231212101111131210111003302312100131231210100131231210101032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf204;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf163;&#xf145;&#xf160;&#xf248;&#xf14d;&#xf249;&#xf16d;&#xf249;&#xf16e;&#xf24b;",
    "stanza": 1032
  },
  {
    "role": "file",
    "lines": [
      "== COS_Let =="
    ],
    "stanza": 1033
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Sometimes it is nice to do a lot of assignments at once.",
      "We introduce `let ((k1 v1) (k2 v2)) body` which is equivalent to",
      "`assign k1 v1 | assign k2 v2 | body`.",
      ""
    ],
    "section_description": "define let expressions",
    "section_category": "SYNTAX",
    "section_index": 22,
    "stanza": 1034
  },
  {
    "role": "code",
    "lines": [
      "intro let;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "let"
    ],
    "code": "1210010312110010032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf168;&#xf24b;",
    "stanza": 1035
  },
  {
    "role": "code",
    "lines": [
      "define translate:let:begin $translate;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate:let:begin",
      [
        -2,
        "translate"
      ]
    ],
    "code": "12110131212110013121100100312100101133123121100132233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf145;&#xf168;&#xf145;&#xf14f;&#xf249;&#xf15d;&#xf24b;",
    "stanza": 1036
  },
  {
    "role": "code",
    "lines": [
      "define translate:let | ? x | ? y |",
      "  if (= 0 | list-length $x) (translate $y) |",
      "  translate:let (tail $x) |",
      "    vector assign (head | head $x) (head | tail | head $x) $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate:let",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "translate",
              [
                -2,
                "y"
              ]
            ],
            [
              -1,
              "translate:let",
              [
                "list:remainder",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "vector",
                "assign",
                [
                  "list:0",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ],
                [
                  "list:0",
                  [
                    -1,
                    "list:remainder",
                    [
                      -1,
                      "list:0",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121100131211001003302312110031210101130231211003121101003023121111321211302030231210000103123121010113321211001312312110100330231212110013121100100332121211111031210000013312312101011330231210000312111032121211111030203302312121111103020331231210101133212121111103020330231212111110312100000133023121211111030203312312101011331231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf145;&#xf168;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf15d;&#xf249;&#xf178;&#xf245;&#xf248;&#xf15d;&#xf145;&#xf168;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf152;&#xf246;&#xf182;&#xf204;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1037
  },
  {
    "role": "code",
    "lines": [
      "define translate | ? x |",
      "  if (not | function? $x) (translate:let:begin $x) |",
      "  if (not | = let | head $x) (translate:let:begin $x) |",
      "  translate:let (head | tail $x) (head | tail | tail $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "not",
            [
              -1,
              "function?",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "translate:let:begin",
            [
              -2,
              "x"
            ]
          ],
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "let",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ],
            [
              "translate:let:begin",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "translate:let",
              [
                "list:0",
                [
                  -1,
                  "list:remainder",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                "list:0",
                [
                  -1,
                  "list:remainder",
                  [
                    -1,
                    "list:remainder",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211001302312110031210101130231211113212101302312111013123121010113321212110013121100100312100101133123121010113302312111132121013023121131211001003023121211111030203312312101011332121211001312110010031210010113312312101011330231212110013121100100332121211111030203302312121111103121000001331231210101133212121111103020330231212111110312100000133023121211111031210000013312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf15d;&#xf145;&#xf168;&#xf145;&#xf14f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf145;&#xf168;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf15d;&#xf145;&#xf168;&#xf145;&#xf14f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf15d;&#xf145;&#xf168;&#xf246;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1038
  },
  {
    "role": "code",
    "lines": [
      "let ((x 20)) | = $x 20;"
    ],
    "dt": false,
    "parse": [
      "let",
      [
        [
          "x",
          "20"
        ]
      ],
      [
        -1,
        "=",
        [
          -2,
          "x"
        ],
        "20"
      ]
    ],
    "code": "121100100322121010113021010033302312113123121010113021010032233",
    "spider": "&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf218;&#xf245;&#xf245;&#xf248;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf218;&#xf24b;",
    "stanza": 1039
  },
  {
    "role": "code",
    "lines": [
      "let ((x 50) (y 20)) | = 30 | - $x $y;"
    ],
    "dt": false,
    "parse": [
      "let",
      [
        [
          "x",
          "50"
        ],
        [
          "y",
          "20"
        ]
      ],
      [
        -1,
        "=",
        "30",
        [
          -1,
          "-",
          [
            -2,
            "x"
          ],
          [
            -2,
            "y"
          ]
        ]
      ]
    ],
    "code": "121100100322121010113021100103321211010030210100333023121130211110302312101131231210101131231211010032233",
    "spider": "&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf236;&#xf245;&#xf246;&#xf178;&#xf24a;&#xf218;&#xf245;&#xf245;&#xf248;&#xf147;&#xf24a;&#xf222;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1040
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10)) | + $x 5) (assign x 10 | + $x 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "5"
        ]
      ],
      [
        "assign",
        "x",
        "10",
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "5"
        ]
      ]
    ],
    "code": "12113212110010032212101011302101033302312101031231210101130210133212111031210101130210103023121010312312101011302101332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf245;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf20e;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1041
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10)) | + $x 5) ((? x | + $x 5) 10);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          "5"
        ]
      ],
      [
        [
          "?",
          "x",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            "5"
          ]
        ],
        "10"
      ]
    ],
    "code": "1211321211001003221210101130210103330231210103123121010113021013322121100312101011302312101031231210101130210133021010332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf245;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf20e;&#xf245;&#xf24b;",
    "stanza": 1042
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10) (y 5)) | + $x $y) (assign x 10 | assign y 5 | + $x $y);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ],
          [
            "y",
            "5"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          [
            -2,
            "y"
          ]
        ]
      ],
      [
        "assign",
        "x",
        "10",
        [
          -1,
          "assign",
          "y",
          "5",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "12113212110010032212101011302101033212110100302101333023121010312312101011312312110100332121110312101011302101030231211103121101003021013023121010312312101011312312110100332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf178;&#xf24a;&#xf209;&#xf245;&#xf245;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf152;&#xf24a;&#xf16f;&#xf24a;&#xf20e;&#xf248;&#xf152;&#xf24a;&#xf178;&#xf24a;&#xf209;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 1043
  },
  {
    "role": "code",
    "lines": [
      "= (let ((x 10) (y 5)) | + $x $y) ((? x | ? y | + $x $y) 10 5);"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "let",
        [
          [
            "x",
            "10"
          ],
          [
            "y",
            "5"
          ]
        ],
        [
          -1,
          "+",
          [
            -2,
            "x"
          ],
          [
            -2,
            "y"
          ]
        ]
      ],
      [
        [
          "?",
          "x",
          [
            -1,
            "?",
            "y",
            [
              -1,
              "+",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ],
        "10",
        "5"
      ]
    ],
    "code": "1211321211001003221210101130210103321211010030210133302312101031231210101131231211010033221211003121010113023121100312110100302312101031231210101131231211010033021010302101332233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf178;&#xf24a;&#xf209;&#xf245;&#xf245;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf20e;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1044
  },
  {
    "role": "file",
    "lines": [
      "== COS_MultipleParameter =="
    ],
    "stanza": 1045
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "lambda functions",
    "section_category": "SYNTAX",
    "section_index": 23,
    "stanza": 1046
  },
  {
    "role": "code",
    "lines": [
      "intro lambda;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "lambda"
    ],
    "code": "12100103121101032233",
    "spider": "&#xf156;&#xf24a;&#xf15e;&#xf24b;",
    "stanza": 1047
  },
  {
    "role": "code",
    "lines": [
      "define translate:lambda:begin $translate;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate:lambda:begin",
      [
        -2,
        "translate"
      ]
    ],
    "code": "121101312121100131211010312100101133123121100132233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf15e;&#xf145;&#xf14f;&#xf249;&#xf15d;&#xf24b;",
    "stanza": 1048
  },
  {
    "role": "code",
    "lines": [
      "define translate |",
      "  let ((x:translate $translate:lambda:begin)) |",
      "  ? x |",
      "    if (not | function? $x) (x:translate $x) |",
      "    if (not | = lambda | head $x) (x:translate $x) |",
      "    let ((x:list | head | tail $x)",
      "         (y | head | tail | tail $x)) |",
      "      if (= 0 | list-length $x:list) (translate $y) |",
      "      translate | vector lambda (except-last $x:list) |",
      "        vector ? (last $x:list) $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "let",
        [
          [
            "x:translate",
            [
              -2,
              "translate:lambda:begin"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "x:translate",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "lambda",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "x:translate",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "x:list",
                    [
                      -1,
                      "list:0",
                      [
                        -1,
                        "list:remainder",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ],
                  [
                    "y",
                    [
                      -1,
                      "list:0",
                      [
                        -1,
                        "list:remainder",
                        [
                          -1,
                          "list:remainder",
                          [
                            -2,
                            "x"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "if",
                  [
                    "=",
                    "0",
                    [
                      -1,
                      "list-length",
                      [
                        -2,
                        "x:list"
                      ]
                    ]
                  ],
                  [
                    "translate",
                    [
                      -2,
                      "y"
                    ]
                  ],
                  [
                    -1,
                    "translate",
                    [
                      -1,
                      "vector",
                      "lambda",
                      [
                        "except-last",
                        [
                          -2,
                          "x:list"
                        ]
                      ],
                      [
                        -1,
                        "vector",
                        "?",
                        [
                          "last",
                          [
                            -2,
                            "x:list"
                          ]
                        ],
                        [
                          -2,
                          "y"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf15d;&#xf249;&#xf15d;&#xf15e;&#xf145;&#xf14f;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf16f;&#xf15d;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf15e;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf16f;&#xf15d;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf16f;&#xf182;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf178;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf246;&#xf15d;&#xf249;&#xf178;&#xf245;&#xf248;&#xf15d;&#xf248;&#xf154;&#xf24a;&#xf15e;&#xf246;&#xf145;&#xf152;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf150;&#xf246;&#xf145;&#xf151;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1049
  },
  {
    "role": "code",
    "lines": [
      "= 8 | (lambda (x y) | - $x $y) 8 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "8",
        "0"
      ]
    ],
    "code": "1211302100030232121101032121010113121101003302312101131231210101131231211010033021000302032233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf20c;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1050
  },
  {
    "role": "code",
    "lines": [
      "= 2 | (lambda (x y) | - $x $y) 4 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4",
        "2"
      ]
    ],
    "code": "12113021030232121101032121010113121101003302312101131231210101131231211010033021003021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1051
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (lambda (x y) | - $x $y) 9 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "9",
        "6"
      ]
    ],
    "code": "1211302113023212110103212101011312110100330231210113123121010113123121101003302100130211032233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf20d;&#xf24a;&#xf20a;&#xf24b;",
    "stanza": 1052
  },
  {
    "role": "code",
    "lines": [
      "= 3 | (lambda (x y) | - $x $y) 4 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4",
        "1"
      ]
    ],
    "code": "1211302113023212110103212101011312110100330231210113123121010113123121101003302100302132233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf208;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1053
  },
  {
    "role": "code",
    "lines": [
      "= 0 | (lambda (x y) | - $x $y) 4 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            -1,
            "-",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ],
        "4",
        "4"
      ]
    ],
    "code": "12113020302321211010321210101131211010033023121011312312101011312312110100330210030210032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf208;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1054
  },
  {
    "role": "file",
    "lines": [
      "== COS_CommentBase =="
    ],
    "stanza": 1055
  },
  {
    "role": "comment",
    "lines": [
      "# The following parts of the message are experimental, and not",
      "# carefully integrated with the main body"
    ],
    "section_description": "end of part 1, start of part 2",
    "section_category": "NOTE",
    "section_index": 24,
    "stanza": 1056
  },
  {
    "role": "code",
    "lines": [
      "intro part2;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "part2"
    ],
    "code": "1210010312110010132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf169;&#xf24b;",
    "stanza": 1057
  },
  {
    "role": "file",
    "lines": [
      "== COS_Pure =="
    ],
    "stanza": 1058
  },
  {
    "role": "comment",
    "lines": [
      "# these definitions are not quite what we want",
      "# since thinking of everything as a function requires headscratching",
      "# it would be better to use these as a parallel means of evaluation",
      "# ... for expressions"
    ],
    "section_description": "some pure lambda calculus definitions - optional",
    "section_category": "MATH",
    "section_index": 25,
    "stanza": 1059
  },
  {
    "role": "code",
    "lines": [
      "intro pure:if;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:if"
    ],
    "code": "1210010312121103121111332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf153;&#xf24b;",
    "stanza": 1060
  },
  {
    "role": "code",
    "lines": [
      "define pure:if | ? x | ? y | ? z | x $y $z;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:if",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "x",
              [
                -2,
                "y"
              ],
              [
                -2,
                "z"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121103121111330231211003121010113023121100312110100302312110031211010130231210101131231211010031231211010132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf153;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf16f;&#xf249;&#xf178;&#xf249;&#xf179;&#xf24b;",
    "stanza": 1061
  },
  {
    "role": "code",
    "lines": [
      "intro pure:true;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:true"
    ],
    "code": "1210010312121103121332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf145;&#xf24b;",
    "stanza": 1062
  },
  {
    "role": "code",
    "lines": [
      "define pure:true | ? y | ? z | y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:true",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "z",
          [
            -1,
            "y"
          ]
        ]
      ]
    ],
    "code": "12110131212110312133023121100312110100302312110031211010130231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf145;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf178;&#xf24b;",
    "stanza": 1063
  },
  {
    "role": "code",
    "lines": [
      "intro pure:false;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:false"
    ],
    "code": "1210010312121103120332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf144;&#xf24b;",
    "stanza": 1064
  },
  {
    "role": "code",
    "lines": [
      "define pure:false | ? y | ? z | z;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:false",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "z",
          [
            -1,
            "z"
          ]
        ]
      ]
    ],
    "code": "12110131212110312033023121100312110100302312110031211010130231211010132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf144;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf179;&#xf24b;",
    "stanza": 1065
  },
  {
    "role": "code",
    "lines": [
      "intro pure:cons;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:cons"
    ],
    "code": "12100103121211031210101332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf159;&#xf24b;",
    "stanza": 1066
  },
  {
    "role": "code",
    "lines": [
      "define pure:cons | ? x | ? y | ? z | pure:if $z $x $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:cons",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "z",
            [
              -1,
              "pure:if",
              [
                -2,
                "z"
              ],
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212110312101013302312110031210101130231211003121101003023121100312110101302312121103121111331231211010131231210101131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf159;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf179;&#xf248;&#xf14a;&#xf153;&#xf249;&#xf179;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1067
  },
  {
    "role": "code",
    "lines": [
      "intro pure:car;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:cons:0"
    ],
    "code": "121001031212110312101013020332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf159;&#xf204;&#xf24b;",
    "stanza": 1068
  },
  {
    "role": "code",
    "lines": [
      "define pure:car | ? x | x $pure:true;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:cons:0",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "x",
          [
            -2,
            "pure:true"
          ]
        ]
      ]
    ],
    "code": "1211013121211031210101302033023121100312101011302312101011312312121103121332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf159;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf16f;&#xf249;&#xf14a;&#xf145;&#xf24b;",
    "stanza": 1069
  },
  {
    "role": "code",
    "lines": [
      "intro pure:cdr;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:cons:1"
    ],
    "code": "121001031212110312101013021332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf159;&#xf205;&#xf24b;",
    "stanza": 1070
  },
  {
    "role": "code",
    "lines": [
      "define pure:cdr | ? x | x $pure:false;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:cons:1",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "x",
          [
            -2,
            "pure:false"
          ]
        ]
      ]
    ],
    "code": "1211013121211031210101302133023121100312101011302312101011312312121103120332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf159;&#xf205;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf16f;&#xf249;&#xf14a;&#xf144;&#xf24b;",
    "stanza": 1071
  },
  {
    "role": "code",
    "lines": [
      "intro pure:0;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:0"
    ],
    "code": "1210010312121103020332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf204;&#xf24b;",
    "stanza": 1072
  },
  {
    "role": "code",
    "lines": [
      "define pure:0 | ? y | ? x $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:0",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "12110131212110302033023121100312110100302312110031210101131231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1073
  },
  {
    "role": "code",
    "lines": [
      "intro pure:1;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:1"
    ],
    "code": "1210010312121103021332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf205;&#xf24b;",
    "stanza": 1074
  },
  {
    "role": "code",
    "lines": [
      "define pure:1 | ? y | ? x | y $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:1",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "y",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212110302133023121100312110100302312110031210101130231211010031231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf205;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf178;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1075
  },
  {
    "role": "code",
    "lines": [
      "intro pure:2;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:2"
    ],
    "code": "12100103121211030210332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf206;&#xf24b;",
    "stanza": 1076
  },
  {
    "role": "code",
    "lines": [
      "define pure:2 | ? y | ? x | y (y $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:2",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "y",
            [
              "y",
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212110302103302312110031211010030231211003121010113023121101003212110100312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf206;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf178;&#xf246;&#xf178;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1077
  },
  {
    "role": "code",
    "lines": [
      "intro pure:next;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:next"
    ],
    "code": "1210010312121103121100110332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf145;&#xf16a;&#xf24b;",
    "stanza": 1078
  },
  {
    "role": "code",
    "lines": [
      "define pure:next | ? n | ? y | ? x | y ((n $y) $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:next",
      [
        -1,
        "?",
        "n",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "y",
              [
                [
                  "n",
                  [
                    -2,
                    "y"
                  ]
                ],
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121211031211001103302312110031211111130231211003121101003023121100312101011302312110100322121111113123121101003312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf145;&#xf16a;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf178;&#xf246;&#xf246;&#xf183;&#xf249;&#xf178;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1079
  },
  {
    "role": "code",
    "lines": [
      "intro pure:+;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:+"
    ],
    "code": "1210010312121103121010332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf14e;&#xf24b;",
    "stanza": 1080
  },
  {
    "role": "code",
    "lines": [
      "define pure:+ | ? x | ? y | (x $pure:next) $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:+",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            [
              "x",
              [
                -2,
                "pure:next"
              ]
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212110312101033023121100312101011302312110031211010030232121010113123121211031211001103331231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf14e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf246;&#xf16f;&#xf249;&#xf14a;&#xf145;&#xf16a;&#xf245;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1081
  },
  {
    "role": "code",
    "lines": [
      "intro pure:*;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:*"
    ],
    "code": "1210010312121103121001332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf14d;&#xf24b;",
    "stanza": 1082
  },
  {
    "role": "code",
    "lines": [
      "define pure:* | ? x | ? y | (x (pure:+ $y)) $pure:0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:*",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            [
              "x",
              [
                "pure:+",
                [
                  -2,
                  "y"
                ]
              ]
            ],
            [
              -2,
              "pure:0"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212110312100133023121100312101011302312110031211010030232121010113212121103121010331231211010033312312121103020332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf14d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf246;&#xf16f;&#xf246;&#xf14a;&#xf14e;&#xf249;&#xf178;&#xf245;&#xf245;&#xf249;&#xf14a;&#xf204;&#xf24b;",
    "stanza": 1083
  },
  {
    "role": "code",
    "lines": [
      "intro pure:prev;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:prev"
    ],
    "code": "1210010312121103121100111332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf145;&#xf16b;&#xf24b;",
    "stanza": 1084
  },
  {
    "role": "code",
    "lines": [
      "define pure:prev | ? x:pure | pure:cdr | (x:pure (? x:? | pure:cons (pure:next | pure:car $x:?) (pure:car $x:?))) (pure:cons $pure:0 $pure:0);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:prev",
      [
        -1,
        "?",
        "x:pure",
        [
          -1,
          "pure:cons:1",
          [
            -1,
            [
              "x:pure",
              [
                "?",
                "x:?",
                [
                  -1,
                  "pure:cons",
                  [
                    "pure:next",
                    [
                      -1,
                      "pure:cons:0",
                      [
                        -2,
                        "x:?"
                      ]
                    ]
                  ],
                  [
                    "pure:cons:0",
                    [
                      -2,
                      "x:?"
                    ]
                  ]
                ]
              ]
            ],
            [
              "pure:cons",
              [
                -2,
                "pure:0"
              ],
              [
                -2,
                "pure:0"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121211031211001113302312110031212101011312110330231212110312101013021330232121210101131211033212110031212101011312110033023121211031210101332121211031211001103302312121103121010130203312312121010113121100333212121103121010130203312312121010113121100333332121211031210101331231212110302033123121211030203332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf145;&#xf16b;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf14a;&#xf248;&#xf14a;&#xf159;&#xf205;&#xf248;&#xf246;&#xf16f;&#xf14a;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf150;&#xf248;&#xf14a;&#xf159;&#xf246;&#xf14a;&#xf145;&#xf16a;&#xf248;&#xf14a;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf14a;&#xf159;&#xf249;&#xf14a;&#xf204;&#xf249;&#xf14a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 1085
  },
  {
    "role": "code",
    "lines": [
      "intro pure:=:0;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:=:0"
    ],
    "code": "121001031212110312113020332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf147;&#xf204;&#xf24b;",
    "stanza": 1086
  },
  {
    "role": "code",
    "lines": [
      "define pure:=:0 | ? x:pure | (x:pure (? y $pure:false) $pure:true);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:=:0",
      [
        -1,
        "?",
        "x:pure",
        [
          -1,
          [
            "x:pure",
            [
              "?",
              "y",
              [
                -2,
                "pure:false"
              ]
            ],
            [
              -2,
              "pure:true"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121211031211302033023121100312121010113121103302321212101011312110332121100312110100312312121103120333123121211031213332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf147;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf14a;&#xf248;&#xf246;&#xf16f;&#xf14a;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf249;&#xf14a;&#xf144;&#xf245;&#xf249;&#xf14a;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1087
  },
  {
    "role": "code",
    "lines": [
      "intro fixed-point;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "fixed-point"
    ],
    "code": "1210010312110100032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf16c;&#xf24b;",
    "stanza": 1088
  },
  {
    "role": "code",
    "lines": [
      "define fixed-point | ? x | (? y | x (y $y)) (? y | x (y $y));"
    ],
    "dt": true,
    "parse": [
      "@",
      "fixed-point",
      [
        -1,
        "?",
        "x",
        [
          -1,
          [
            "?",
            "y",
            [
              -1,
              "x",
              [
                "y",
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ],
          [
            "?",
            "y",
            [
              -1,
              "x",
              [
                "y",
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211010003023121100312101011302321211003121101003023121010113212110100312312110100333212110031211010030231210101132121101003123121101003332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16c;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf16f;&#xf246;&#xf178;&#xf249;&#xf178;&#xf245;&#xf245;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf16f;&#xf246;&#xf178;&#xf249;&#xf178;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1089
  },
  {
    "role": "comment",
    "lines": [
      "# .. but for rest of message will assume that define does fixed-point for us",
      "# now build a link between numbers and church number functions"
    ],
    "stanza": 1090
  },
  {
    "role": "code",
    "lines": [
      "intro pure:int:get;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "pure:int:get"
    ],
    "code": "121001031212110312110000312111101332233",
    "spider": "&#xf156;&#xf24a;&#xf14a;&#xf174;&#xf181;&#xf24b;",
    "stanza": 1091
  },
  {
    "role": "code",
    "lines": [
      "define pure:int:get | ? y | y (? x | + $x 1) 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pure:int:get",
      [
        -1,
        "?",
        "y",
        [
          -1,
          "y",
          [
            "?",
            "x",
            [
              -1,
              "+",
              [
                -2,
                "x"
              ],
              "1"
            ]
          ],
          "0"
        ]
      ]
    ],
    "code": "121101312121103121100003121111013302312110031211010030231211010032121100312101011302312101031231210101130213302032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf174;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf178;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1092
  },
  {
    "role": "code",
    "lines": [
      "= 0 (pure:int:get $pure:0);"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        "pure:int:get",
        [
          -2,
          "pure:0"
        ]
      ]
    ],
    "code": "1211302032121211031211000031211110133123121211030203332233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf246;&#xf14a;&#xf174;&#xf181;&#xf249;&#xf14a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 1093
  },
  {
    "role": "code",
    "lines": [
      "= 1 (pure:int:get $pure:1);"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        "pure:int:get",
        [
          -2,
          "pure:1"
        ]
      ]
    ],
    "code": "1211302132121211031211000031211110133123121211030213332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14a;&#xf174;&#xf181;&#xf249;&#xf14a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1094
  },
  {
    "role": "code",
    "lines": [
      "= 2 (pure:int:get $pure:2);"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        "pure:int:get",
        [
          -2,
          "pure:2"
        ]
      ]
    ],
    "code": "121130210321212110312110000312111101331231212110302103332233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf246;&#xf14a;&#xf174;&#xf181;&#xf249;&#xf14a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1095
  },
  {
    "role": "code",
    "lines": [
      "define int:pure:get | ? x | if (= 0 $x) $pure:0 (pure:next | int:pure:get | - $x 1);"
    ],
    "dt": true,
    "parse": [
      "@",
      "int:pure:get",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -2,
              "x"
            ]
          ],
          [
            -2,
            "pure:0"
          ],
          [
            "pure:next",
            [
              -1,
              "int:pure:get",
              [
                -1,
                "-",
                [
                  -2,
                  "x"
                ],
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121100003121103121111013302312110031210101130231211113212113020312312101011331231212110302033212121103121100110330231212110000312110312111101330231210113123121010113021332233",
    "spider": "&#xf151;&#xf24a;&#xf174;&#xf14a;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf14a;&#xf204;&#xf246;&#xf14a;&#xf145;&#xf16a;&#xf248;&#xf174;&#xf14a;&#xf181;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1096
  },
  {
    "role": "file",
    "lines": [
      "== COS_Quantifier =="
    ],
    "stanza": 1097
  },
  {
    "role": "comment",
    "lines": [
      "# really need to link with sets for true correctness",
      "# and the examples here are REALLY sparse, need much more"
    ],
    "section_description": "introduce universal quantifier",
    "section_category": "MATH",
    "section_index": 26,
    "stanza": 1098
  },
  {
    "role": "code",
    "lines": [
      "intro forall;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "forall"
    ],
    "code": "12100103121001132233",
    "spider": "&#xf156;&#xf24a;&#xf157;&#xf24b;",
    "stanza": 1099
  },
  {
    "role": "code",
    "lines": [
      "< 5 (+ 5 1);"
    ],
    "dt": false,
    "parse": [
      "<",
      "5",
      [
        "+",
        "5",
        "1"
      ]
    ],
    "code": "1210302101321210103021013021332233",
    "spider": "&#xf146;&#xf24a;&#xf209;&#xf246;&#xf14e;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1100
  },
  {
    "role": "code",
    "lines": [
      "< 4 (+ 4 1);"
    ],
    "dt": false,
    "parse": [
      "<",
      "4",
      [
        "+",
        "4",
        "1"
      ]
    ],
    "code": "1210302100321210103021003021332233",
    "spider": "&#xf146;&#xf24a;&#xf208;&#xf246;&#xf14e;&#xf24a;&#xf208;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1101
  },
  {
    "role": "code",
    "lines": [
      "< 3 (+ 3 1);"
    ],
    "dt": false,
    "parse": [
      "<",
      "3",
      [
        "+",
        "3",
        "1"
      ]
    ],
    "code": "12103021132121010302113021332233",
    "spider": "&#xf146;&#xf24a;&#xf207;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1102
  },
  {
    "role": "code",
    "lines": [
      "< 2 (+ 2 1);"
    ],
    "dt": false,
    "parse": [
      "<",
      "2",
      [
        "+",
        "2",
        "1"
      ]
    ],
    "code": "12103021032121010302103021332233",
    "spider": "&#xf146;&#xf24a;&#xf206;&#xf246;&#xf14e;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1103
  },
  {
    "role": "code",
    "lines": [
      "< 1 (+ 1 1);"
    ],
    "dt": false,
    "parse": [
      "<",
      "1",
      [
        "+",
        "1",
        "1"
      ]
    ],
    "code": "121030213212101030213021332233",
    "spider": "&#xf146;&#xf24a;&#xf205;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1104
  },
  {
    "role": "code",
    "lines": [
      "< 0 (+ 0 1);"
    ],
    "dt": false,
    "parse": [
      "<",
      "0",
      [
        "+",
        "0",
        "1"
      ]
    ],
    "code": "121030203212101030203021332233",
    "spider": "&#xf146;&#xf24a;&#xf204;&#xf246;&#xf14e;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1105
  },
  {
    "role": "code",
    "lines": [
      "forall (? x | < $x (+ $x 1));"
    ],
    "dt": false,
    "parse": [
      "forall",
      [
        "?",
        "x",
        [
          -1,
          "<",
          [
            -2,
            "x"
          ],
          [
            "+",
            [
              -2,
              "x"
            ],
            "1"
          ]
        ]
      ]
    ],
    "code": "121001132121100312101011302312103123121010113212101031231210101130213332233",
    "spider": "&#xf157;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf249;&#xf16f;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1106
  },
  {
    "role": "code",
    "lines": [
      "< 5 (* 5 2);"
    ],
    "dt": false,
    "parse": [
      "<",
      "5",
      [
        "*",
        "5",
        "2"
      ]
    ],
    "code": "12103021013212100130210130210332233",
    "spider": "&#xf146;&#xf24a;&#xf209;&#xf246;&#xf14d;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1107
  },
  {
    "role": "code",
    "lines": [
      "< 4 (* 4 2);"
    ],
    "dt": false,
    "parse": [
      "<",
      "4",
      [
        "*",
        "4",
        "2"
      ]
    ],
    "code": "12103021003212100130210030210332233",
    "spider": "&#xf146;&#xf24a;&#xf208;&#xf246;&#xf14d;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1108
  },
  {
    "role": "code",
    "lines": [
      "< 3 (* 3 2);"
    ],
    "dt": false,
    "parse": [
      "<",
      "3",
      [
        "*",
        "3",
        "2"
      ]
    ],
    "code": "121030211321210013021130210332233",
    "spider": "&#xf146;&#xf24a;&#xf207;&#xf246;&#xf14d;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1109
  },
  {
    "role": "code",
    "lines": [
      "< 2 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "<",
      "2",
      [
        "*",
        "2",
        "2"
      ]
    ],
    "code": "121030210321210013021030210332233",
    "spider": "&#xf146;&#xf24a;&#xf206;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1110
  },
  {
    "role": "code",
    "lines": [
      "< 1 (* 1 2);"
    ],
    "dt": false,
    "parse": [
      "<",
      "1",
      [
        "*",
        "1",
        "2"
      ]
    ],
    "code": "1210302132121001302130210332233",
    "spider": "&#xf146;&#xf24a;&#xf205;&#xf246;&#xf14d;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1111
  },
  {
    "role": "code",
    "lines": [
      "not | < 0 (* 0 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "<",
        "0",
        [
          "*",
          "0",
          "2"
        ]
      ]
    ],
    "code": "1210130231210302032121001302030210332233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf24a;&#xf204;&#xf246;&#xf14d;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1112
  },
  {
    "role": "code",
    "lines": [
      "not | forall (? x | < $x (* $x 2));"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "forall",
        [
          "?",
          "x",
          [
            -1,
            "<",
            [
              -2,
              "x"
            ],
            [
              "*",
              [
                -2,
                "x"
              ],
              "2"
            ]
          ]
        ]
      ]
    ],
    "code": "1210130231210011321211003121010113023121031231210101132121001312312101011302103332233",
    "spider": "&#xf149;&#xf248;&#xf157;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf249;&#xf16f;&#xf246;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1113
  },
  {
    "role": "comment",
    "lines": [
      "# really need to link with sets for true correctness",
      "# and the examples here are REALLY sparse, need much more"
    ],
    "section_description": "introduce existential quantifier",
    "section_category": "MATH",
    "section_index": 27,
    "stanza": 1114
  },
  {
    "role": "code",
    "lines": [
      "not | = 5 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "5",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "code": "1210130231211302101321210013021030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf209;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1115
  },
  {
    "role": "code",
    "lines": [
      "= 4 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        "*",
        "2",
        "2"
      ]
    ],
    "code": "1211302100321210013021030210332233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1116
  },
  {
    "role": "code",
    "lines": [
      "not | = 3 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "3",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "code": "121013023121130211321210013021030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf207;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1117
  },
  {
    "role": "code",
    "lines": [
      "not | = 2 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "2",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "code": "121013023121130210321210013021030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf206;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1118
  },
  {
    "role": "code",
    "lines": [
      "not | = 1 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "1",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "code": "12101302312113021321210013021030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1119
  },
  {
    "role": "code",
    "lines": [
      "not | = 0 (* 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "0",
        [
          "*",
          "2",
          "2"
        ]
      ]
    ],
    "code": "12101302312113020321210013021030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1120
  },
  {
    "role": "code",
    "lines": [
      "intro exists;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "exists"
    ],
    "code": "12100103121010032233",
    "spider": "&#xf156;&#xf24a;&#xf158;&#xf24b;",
    "stanza": 1121
  },
  {
    "role": "code",
    "lines": [
      "exists (? x | = $x (* 2 2));"
    ],
    "dt": false,
    "parse": [
      "exists",
      [
        "?",
        "x",
        [
          -1,
          "=",
          [
            -2,
            "x"
          ],
          [
            "*",
            "2",
            "2"
          ]
        ]
      ]
    ],
    "code": "121010032121100312101011302312113123121010113212100130210302103332233",
    "spider": "&#xf158;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf249;&#xf16f;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1122
  },
  {
    "role": "code",
    "lines": [
      "not | = 5 (+ 5 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "5",
        [
          "+",
          "5",
          "2"
        ]
      ]
    ],
    "code": "12101302312113021013212101030210130210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf209;&#xf246;&#xf14e;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1123
  },
  {
    "role": "code",
    "lines": [
      "not | = 4 (+ 4 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "4",
        [
          "+",
          "4",
          "2"
        ]
      ]
    ],
    "code": "12101302312113021003212101030210030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf208;&#xf246;&#xf14e;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1124
  },
  {
    "role": "code",
    "lines": [
      "not | = 3 (+ 3 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "3",
        [
          "+",
          "3",
          "2"
        ]
      ]
    ],
    "code": "121013023121130211321210103021130210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf207;&#xf246;&#xf14e;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1125
  },
  {
    "role": "code",
    "lines": [
      "not | = 2 (+ 2 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "2",
        [
          "+",
          "2",
          "2"
        ]
      ]
    ],
    "code": "121013023121130210321210103021030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf206;&#xf246;&#xf14e;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1126
  },
  {
    "role": "code",
    "lines": [
      "not | = 1 (+ 1 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "1",
        [
          "+",
          "1",
          "2"
        ]
      ]
    ],
    "code": "1210130231211302132121010302130210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14e;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1127
  },
  {
    "role": "code",
    "lines": [
      "not | = 0 (+ 0 2);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        "0",
        [
          "+",
          "0",
          "2"
        ]
      ]
    ],
    "code": "1210130231211302032121010302030210332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf24a;&#xf204;&#xf246;&#xf14e;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1128
  },
  {
    "role": "code",
    "lines": [
      "not (exists (? x | = $x (+ $x 2)));"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        "exists",
        [
          "?",
          "x",
          [
            -1,
            "=",
            [
              -2,
              "x"
            ],
            [
              "+",
              [
                -2,
                "x"
              ],
              "2"
            ]
          ]
        ]
      ]
    ],
    "code": "121013212101003212110031210101130231211312312101011321210103123121010113021033332233",
    "spider": "&#xf149;&#xf246;&#xf158;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf249;&#xf16f;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1129
  },
  {
    "role": "file",
    "lines": [
      "== COS_Implication =="
    ],
    "stanza": 1130
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "introduce logical implication",
    "section_category": "MATH",
    "section_index": 28,
    "stanza": 1131
  },
  {
    "role": "code",
    "lines": [
      "intro =>;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "=>"
    ],
    "code": "1210010312110100132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf16d;&#xf24b;",
    "stanza": 1132
  },
  {
    "role": "code",
    "lines": [
      "define => | ? x | ? y | not | and $x (not $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      "=>",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "not",
            [
              -1,
              "true:*",
              [
                -2,
                "x"
              ],
              [
                "not",
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312110100130231211003121010113023121100312110100302312101302312121312100133123121010113212101312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf149;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf16f;&#xf246;&#xf149;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 1133
  },
  {
    "role": "code",
    "lines": [
      "=> $true $true;"
    ],
    "dt": false,
    "parse": [
      "=>",
      [
        -2,
        "true"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "1211010013123121312312132233",
    "spider": "&#xf145;&#xf16d;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1134
  },
  {
    "role": "code",
    "lines": [
      "not | => $true $false;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=>",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "1210130231211010013123121312312032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16d;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1135
  },
  {
    "role": "code",
    "lines": [
      "=> $false $true;"
    ],
    "dt": false,
    "parse": [
      "=>",
      [
        -2,
        "false"
      ],
      [
        -2,
        "true"
      ]
    ],
    "code": "1211010013123120312312132233",
    "spider": "&#xf145;&#xf16d;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1136
  },
  {
    "role": "code",
    "lines": [
      "=> $false $false;"
    ],
    "dt": false,
    "parse": [
      "=>",
      [
        -2,
        "false"
      ],
      [
        -2,
        "false"
      ]
    ],
    "code": "1211010013123120312312032233",
    "spider": "&#xf145;&#xf16d;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1137
  },
  {
    "role": "code",
    "lines": [
      "forall (? x | forall (? y | => (=> $x $y) (=> (not $y) (not $x))));"
    ],
    "dt": false,
    "parse": [
      "forall",
      [
        "?",
        "x",
        [
          -1,
          "forall",
          [
            "?",
            "y",
            [
              -1,
              "=>",
              [
                "=>",
                [
                  -2,
                  "x"
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                "=>",
                [
                  "not",
                  [
                    -2,
                    "y"
                  ]
                ],
                [
                  "not",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1210011321211003121010113023121001132121100312110100302312110100132121101001312312101011312312110100332121101001321210131231211010033212101312312101011333332233",
    "spider": "&#xf157;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf157;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf145;&#xf16d;&#xf246;&#xf145;&#xf16d;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf145;&#xf16d;&#xf246;&#xf149;&#xf249;&#xf178;&#xf245;&#xf246;&#xf149;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1138
  },
  {
    "role": "file",
    "lines": [
      "== COS_Set =="
    ],
    "stanza": 1139
  },
  {
    "role": "doc",
    "lines": [
      ""
    ],
    "section_description": "introduce sets and set membership",
    "section_category": "MATH",
    "section_index": 29,
    "stanza": 1140
  },
  {
    "role": "code",
    "lines": [
      "intro element;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "element"
    ],
    "code": "1210010312110101032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf16e;&#xf24b;",
    "stanza": 1141
  },
  {
    "role": "code",
    "lines": [
      "define element | ? x | ? y:list | not | = $undefined | list:find $y:list $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "element",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y:list",
          [
            -1,
            "not",
            [
              -1,
              "=",
              [
                -2,
                "undefined"
              ],
              [
                -1,
                "list:find",
                [
                  -2,
                  "y:list"
                ],
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211010103023121100312101011302312110031212110100312111110330231210130231211312312100000302312121111103121001100331231212110100312111110331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf182;&#xf248;&#xf149;&#xf248;&#xf147;&#xf249;&#xf164;&#xf248;&#xf182;&#xf145;&#xf150;&#xf249;&#xf178;&#xf182;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1142
  },
  {
    "role": "code",
    "lines": [
      "element 1 | vector 3 8 2 1 0;"
    ],
    "dt": false,
    "parse": [
      "element",
      "1",
      [
        -1,
        "vector",
        "3",
        "8",
        "2",
        "1",
        "0"
      ]
    ],
    "code": "121101010302130231210000302113021000302103021302032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1143
  },
  {
    "role": "code",
    "lines": [
      "element 3 | vector 3 8 2 1 0;"
    ],
    "dt": false,
    "parse": [
      "element",
      "3",
      [
        -1,
        "vector",
        "3",
        "8",
        "2",
        "1",
        "0"
      ]
    ],
    "code": "1211010103021130231210000302113021000302103021302032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1144
  },
  {
    "role": "code",
    "lines": [
      "element 1 | vector 3 8 2 1 0;"
    ],
    "dt": false,
    "parse": [
      "element",
      "1",
      [
        -1,
        "vector",
        "3",
        "8",
        "2",
        "1",
        "0"
      ]
    ],
    "code": "121101010302130231210000302113021000302103021302032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1145
  },
  {
    "role": "code",
    "lines": [
      "element 4 | vector 9 5 4 0 8;"
    ],
    "dt": false,
    "parse": [
      "element",
      "4",
      [
        -1,
        "vector",
        "9",
        "5",
        "4",
        "0",
        "8"
      ]
    ],
    "code": "1211010103021003023121000030210013021013021003020302100032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf208;&#xf248;&#xf154;&#xf24a;&#xf20d;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 1146
  },
  {
    "role": "code",
    "lines": [
      "element 8 | vector 9 5 4 0 8;"
    ],
    "dt": false,
    "parse": [
      "element",
      "8",
      [
        -1,
        "vector",
        "9",
        "5",
        "4",
        "0",
        "8"
      ]
    ],
    "code": "12110101030210003023121000030210013021013021003020302100032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20c;&#xf248;&#xf154;&#xf24a;&#xf20d;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 1147
  },
  {
    "role": "code",
    "lines": [
      "element 4 | vector 9 5 4 0 8;"
    ],
    "dt": false,
    "parse": [
      "element",
      "4",
      [
        -1,
        "vector",
        "9",
        "5",
        "4",
        "0",
        "8"
      ]
    ],
    "code": "1211010103021003023121000030210013021013021003020302100032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf208;&#xf248;&#xf154;&#xf24a;&#xf20d;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 1148
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 8 5 4 2;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "8",
        "5",
        "4",
        "2"
      ]
    ],
    "code": "121101010302030231210000302030210003021013021003021032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1149
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 8 5 4 2;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "8",
        "5",
        "4",
        "2"
      ]
    ],
    "code": "121101010302030231210000302030210003021013021003021032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1150
  },
  {
    "role": "code",
    "lines": [
      "element 8 | vector 0 8 5 4 2;"
    ],
    "dt": false,
    "parse": [
      "element",
      "8",
      [
        -1,
        "vector",
        "0",
        "8",
        "5",
        "4",
        "2"
      ]
    ],
    "code": "121101010302100030231210000302030210003021013021003021032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20c;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1151
  },
  {
    "role": "code",
    "lines": [
      "element 6 | vector 5 8 7 6 2;"
    ],
    "dt": false,
    "parse": [
      "element",
      "6",
      [
        -1,
        "vector",
        "5",
        "8",
        "7",
        "6",
        "2"
      ]
    ],
    "code": "1211010103021103023121000030210130210003021113021103021032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20a;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf20b;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1152
  },
  {
    "role": "code",
    "lines": [
      "element 8 | vector 5 8 7 6 2;"
    ],
    "dt": false,
    "parse": [
      "element",
      "8",
      [
        -1,
        "vector",
        "5",
        "8",
        "7",
        "6",
        "2"
      ]
    ],
    "code": "12110101030210003023121000030210130210003021113021103021032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20c;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf20b;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1153
  },
  {
    "role": "code",
    "lines": [
      "element 6 | vector 5 8 7 6 2;"
    ],
    "dt": false,
    "parse": [
      "element",
      "6",
      [
        -1,
        "vector",
        "5",
        "8",
        "7",
        "6",
        "2"
      ]
    ],
    "code": "1211010103021103023121000030210130210003021113021103021032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20a;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf20c;&#xf24a;&#xf20b;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1154
  },
  {
    "role": "code",
    "lines": [
      "element 3 | vector 0 3 9 2 1;"
    ],
    "dt": false,
    "parse": [
      "element",
      "3",
      [
        -1,
        "vector",
        "0",
        "3",
        "9",
        "2",
        "1"
      ]
    ],
    "code": "1211010103021130231210000302030211302100130210302132233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1155
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 3 9 2 1;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "3",
        "9",
        "2",
        "1"
      ]
    ],
    "code": "121101010302030231210000302030211302100130210302132233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1156
  },
  {
    "role": "code",
    "lines": [
      "element 0 | vector 0 3 9 2 1;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -1,
        "vector",
        "0",
        "3",
        "9",
        "2",
        "1"
      ]
    ],
    "code": "121101010302030231210000302030211302100130210302132233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1157
  },
  {
    "role": "code",
    "lines": [
      "not | element 1 | vector 5 6 3 7;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "1",
        [
          -1,
          "vector",
          "5",
          "6",
          "3",
          "7"
        ]
      ]
    ],
    "code": "1210130231211010103021302312100003021013021103021130211132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf207;&#xf24a;&#xf20b;&#xf24b;",
    "stanza": 1158
  },
  {
    "role": "code",
    "lines": [
      "not | element 1 | vector 9 8 5 3;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "1",
        [
          -1,
          "vector",
          "9",
          "8",
          "5",
          "3"
        ]
      ]
    ],
    "code": "121013023121101010302130231210000302100130210003021013021132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20d;&#xf24a;&#xf20c;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1159
  },
  {
    "role": "code",
    "lines": [
      "not | element 4 | vector 6 9 1 7;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "4",
        [
          -1,
          "vector",
          "6",
          "9",
          "1",
          "7"
        ]
      ]
    ],
    "code": "121013023121101010302100302312100003021103021001302130211132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf208;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20d;&#xf24a;&#xf205;&#xf24a;&#xf20b;&#xf24b;",
    "stanza": 1160
  },
  {
    "role": "code",
    "lines": [
      "not | element 2 | vector 1 5 6 4;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "2",
        [
          -1,
          "vector",
          "1",
          "5",
          "6",
          "4"
        ]
      ]
    ],
    "code": "1210130231211010103021030231210000302130210130211030210032233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1161
  },
  {
    "role": "code",
    "lines": [
      "not | element 3 | vector 6 9 7 5;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "3",
        [
          -1,
          "vector",
          "6",
          "9",
          "7",
          "5"
        ]
      ]
    ],
    "code": "1210130231211010103021130231210000302110302100130211130210132233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20d;&#xf24a;&#xf20b;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1162
  },
  {
    "role": "doc",
    "lines": [
      "Set some rules for set equality."
    ],
    "stanza": 1163
  },
  {
    "role": "code",
    "lines": [
      "intro set:<=;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "set:<="
    ],
    "code": "1210010312121101011312111100332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf16f;&#xf180;&#xf24b;",
    "stanza": 1164
  },
  {
    "role": "code",
    "lines": [
      "define set:<= | ? x | ? y |",
      "  if (= 0 | list-length $x) $true |",
      "  and (element (head $x) $y) |",
      "    set:<= (tail $x) $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "set:<=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -2,
              "true"
            ],
            [
              -1,
              "true:*",
              [
                "element",
                [
                  "list:0",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                -1,
                "set:<=",
                [
                  "list:remainder",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  -2,
                  "y"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121211010113121111003302312110031210101130231211003121101003023121111321211302030231210000103123121010113312312130231212131210013321211010103212121111103020331231210101133123121101003302312121101011312111100332121211111031210000013312312101011331231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16f;&#xf180;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf145;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf145;&#xf16e;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf178;&#xf245;&#xf248;&#xf145;&#xf16f;&#xf180;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1165
  },
  {
    "role": "code",
    "lines": [
      "intro set:=;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "set:="
    ],
    "code": "121001031212110101131211332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf16f;&#xf147;&#xf24b;",
    "stanza": 1166
  },
  {
    "role": "code",
    "lines": [
      "define set:= | ? x | ? y |",
      "  and (set:<= $x $y) (set:<= $y $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "set:=",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "true:*",
            [
              "set:<=",
              [
                -2,
                "x"
              ],
              [
                -2,
                "y"
              ]
            ],
            [
              "set:<=",
              [
                -2,
                "y"
              ],
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121101011312113302312110031210101130231211003121101003023121213121001332121211010113121111003312312101011312312110100332121211010113121111003312312110100312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16f;&#xf147;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf145;&#xf16f;&#xf180;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf245;&#xf246;&#xf145;&#xf16f;&#xf180;&#xf249;&#xf178;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1167
  },
  {
    "role": "code",
    "lines": [
      "set:= (vector 1 5 9) (vector 5 1 9);"
    ],
    "dt": false,
    "parse": [
      "set:=",
      [
        "vector",
        "1",
        "5",
        "9"
      ],
      [
        "vector",
        "5",
        "1",
        "9"
      ]
    ],
    "code": "1212110101131211332121000030213021013021001332121000030210130213021001332233",
    "spider": "&#xf145;&#xf16f;&#xf147;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf205;&#xf24a;&#xf20d;&#xf245;&#xf24b;",
    "stanza": 1168
  },
  {
    "role": "code",
    "lines": [
      "set:= (vector 1 5 9) (vector 9 1 5);"
    ],
    "dt": false,
    "parse": [
      "set:=",
      [
        "vector",
        "1",
        "5",
        "9"
      ],
      [
        "vector",
        "9",
        "1",
        "5"
      ]
    ],
    "code": "1212110101131211332121000030213021013021001332121000030210013021302101332233",
    "spider": "&#xf145;&#xf16f;&#xf147;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20d;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1169
  },
  {
    "role": "code",
    "lines": [
      "not | set:= (vector 1 5 9) (vector 1 5);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "set:=",
        [
          "vector",
          "1",
          "5",
          "9"
        ],
        [
          "vector",
          "1",
          "5"
        ]
      ]
    ],
    "code": "121013023121211010113121133212100003021302101302100133212100003021302101332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16f;&#xf147;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1170
  },
  {
    "role": "doc",
    "lines": [
      "let's go leave ourselves wide open to Russell's paradox",
      "  by using characteristic functions since it doesn't really matter",
      "  within the bounds of this message"
    ],
    "stanza": 1171
  },
  {
    "role": "code",
    "lines": [
      "element 5 | all | ? x | = 15 | + $x 10;"
    ],
    "dt": false,
    "parse": [
      "element",
      "5",
      [
        -1,
        "all",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "=",
            "15",
            [
              -1,
              "+",
              [
                -2,
                "x"
              ],
              "10"
            ]
          ]
        ]
      ]
    ],
    "code": "1211010103021013023121111030231211003121010113023121130211113023121010312312101011302101032233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf209;&#xf248;&#xf162;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf24a;&#xf213;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 1172
  },
  {
    "role": "code",
    "lines": [
      "element 3 | all | ? x | = (* $x 3) (+ $x 6);"
    ],
    "dt": false,
    "parse": [
      "element",
      "3",
      [
        -1,
        "all",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "=",
            [
              "*",
              [
                -2,
                "x"
              ],
              "3"
            ],
            [
              "+",
              [
                -2,
                "x"
              ],
              "6"
            ]
          ]
        ]
      ]
    ],
    "code": "12110101030211302312111103023121100312101011302312113212100131231210101130211332121010312312101011302110332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf248;&#xf162;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf246;&#xf14d;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 1173
  },
  {
    "role": "code",
    "lines": [
      "intro set:0;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "set:0"
    ],
    "code": "12100103121211010113020332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf16f;&#xf204;&#xf24b;",
    "stanza": 1174
  },
  {
    "role": "code",
    "lines": [
      "define set:0 | vector;"
    ],
    "dt": true,
    "parse": [
      "@",
      "set:0",
      [
        -1,
        "vector"
      ]
    ],
    "code": "121101312121101011302033023121000032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16f;&#xf204;&#xf248;&#xf154;&#xf24b;",
    "stanza": 1175
  },
  {
    "role": "code",
    "lines": [
      "element 0 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "12110101030203123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1176
  },
  {
    "role": "code",
    "lines": [
      "forall | ? x | => (element $x $set:int:+) (element (+ $x 1) $set:int:+);"
    ],
    "dt": false,
    "parse": [
      "forall",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "=>",
          [
            "element",
            [
              -2,
              "x"
            ],
            [
              -2,
              "set:int:+"
            ]
          ],
          [
            "element",
            [
              "+",
              [
                -2,
                "x"
              ],
              "1"
            ],
            [
              -2,
              "set:int:+"
            ]
          ]
        ]
      ]
    ],
    "code": "1210011302312110031210101130231211010013212110101031231210101131231212110101131211000031210103332121101010321210103123121010113021331231212110101131211000031210103332233",
    "spider": "&#xf157;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf16d;&#xf246;&#xf145;&#xf16e;&#xf249;&#xf16f;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf245;&#xf246;&#xf145;&#xf16e;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf245;&#xf24b;",
    "stanza": 1177
  },
  {
    "role": "code",
    "lines": [
      "element 1 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "1",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "12110101030213123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1178
  },
  {
    "role": "code",
    "lines": [
      "element 2 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "2",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "121101010302103123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1179
  },
  {
    "role": "code",
    "lines": [
      "element 3 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "3",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "121101010302113123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1180
  },
  {
    "role": "code",
    "lines": [
      "element 4 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "4",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021003123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1181
  },
  {
    "role": "code",
    "lines": [
      "element 5 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "5",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021013123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf209;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1182
  },
  {
    "role": "code",
    "lines": [
      "element 6 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "6",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021103123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1183
  },
  {
    "role": "code",
    "lines": [
      "element 7 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "7",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021113123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20b;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1184
  },
  {
    "role": "code",
    "lines": [
      "element 8 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "8",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "12110101030210003123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1185
  },
  {
    "role": "code",
    "lines": [
      "element 9 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "9",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "12110101030210013123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20d;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1186
  },
  {
    "role": "code",
    "lines": [
      "define set:true:false | vector $true $false;"
    ],
    "dt": true,
    "parse": [
      "@",
      "set:true:false",
      [
        -1,
        "vector",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "121101312121101011312131203302312100003123121312312032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16f;&#xf145;&#xf144;&#xf248;&#xf154;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1187
  },
  {
    "role": "code",
    "lines": [
      "element $true $set:true:false;"
    ],
    "dt": false,
    "parse": [
      "element",
      [
        -2,
        "true"
      ],
      [
        -2,
        "set:true:false"
      ]
    ],
    "code": "121101010312312131231212110101131213120332233",
    "spider": "&#xf145;&#xf16e;&#xf249;&#xf145;&#xf249;&#xf145;&#xf16f;&#xf145;&#xf144;&#xf24b;",
    "stanza": 1188
  },
  {
    "role": "code",
    "lines": [
      "element $false $set:true:false;"
    ],
    "dt": false,
    "parse": [
      "element",
      [
        -2,
        "false"
      ],
      [
        -2,
        "set:true:false"
      ]
    ],
    "code": "121101010312312031231212110101131213120332233",
    "spider": "&#xf145;&#xf16e;&#xf249;&#xf144;&#xf249;&#xf145;&#xf16f;&#xf145;&#xf144;&#xf24b;",
    "stanza": 1189
  },
  {
    "role": "code",
    "lines": [
      "define set:even | all | ? x | exists | ? y |",
      "  and (element $y $set:int:+) (= $x | * 2 $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      "set:even",
      [
        -1,
        "all",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "exists",
            [
              -1,
              "?",
              "y",
              [
                -1,
                "true:*",
                [
                  "element",
                  [
                    -2,
                    "y"
                  ],
                  [
                    -2,
                    "set:int:+"
                  ]
                ],
                [
                  "=",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -1,
                    "*",
                    "2",
                    [
                      -2,
                      "y"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212110101131210111033023121111030231211003121010113023121010030231211003121101003023121213121001332121101010312312110100312312121101011312110000312101033321211312312101011302312100130210312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf16f;&#xf172;&#xf248;&#xf162;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf158;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf145;&#xf16e;&#xf249;&#xf178;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf245;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf248;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 1190
  },
  {
    "role": "code",
    "lines": [
      "element 0 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "12110101030203123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1191
  },
  {
    "role": "code",
    "lines": [
      "element 0 $set:even;"
    ],
    "dt": false,
    "parse": [
      "element",
      "0",
      [
        -2,
        "set:even"
      ]
    ],
    "code": "1211010103020312312121101011312101110332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf204;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1192
  },
  {
    "role": "code",
    "lines": [
      "element 1 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "1",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "12110101030213123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1193
  },
  {
    "role": "code",
    "lines": [
      "not | element 1 $set:even;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "1",
        [
          -2,
          "set:even"
        ]
      ]
    ],
    "code": "1210130231211010103021312312121101011312101110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf205;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1194
  },
  {
    "role": "code",
    "lines": [
      "element 2 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "2",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "121101010302103123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1195
  },
  {
    "role": "code",
    "lines": [
      "element 2 $set:even;"
    ],
    "dt": false,
    "parse": [
      "element",
      "2",
      [
        -2,
        "set:even"
      ]
    ],
    "code": "12110101030210312312121101011312101110332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1196
  },
  {
    "role": "code",
    "lines": [
      "element 3 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "3",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "121101010302113123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1197
  },
  {
    "role": "code",
    "lines": [
      "not | element 3 $set:even;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "3",
        [
          -2,
          "set:even"
        ]
      ]
    ],
    "code": "12101302312110101030211312312121101011312101110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf207;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1198
  },
  {
    "role": "code",
    "lines": [
      "element 4 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "4",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021003123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1199
  },
  {
    "role": "code",
    "lines": [
      "element 4 $set:even;"
    ],
    "dt": false,
    "parse": [
      "element",
      "4",
      [
        -2,
        "set:even"
      ]
    ],
    "code": "121101010302100312312121101011312101110332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1200
  },
  {
    "role": "code",
    "lines": [
      "element 5 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "5",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021013123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf209;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1201
  },
  {
    "role": "code",
    "lines": [
      "not | element 5 $set:even;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "element",
        "5",
        [
          -2,
          "set:even"
        ]
      ]
    ],
    "code": "121013023121101010302101312312121101011312101110332233",
    "spider": "&#xf149;&#xf248;&#xf145;&#xf16e;&#xf24a;&#xf209;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1202
  },
  {
    "role": "code",
    "lines": [
      "element 6 $set:int:+;"
    ],
    "dt": false,
    "parse": [
      "element",
      "6",
      [
        -2,
        "set:int:+"
      ]
    ],
    "code": "1211010103021103123121211010113121100003121010332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf16f;&#xf174;&#xf14e;&#xf24b;",
    "stanza": 1203
  },
  {
    "role": "code",
    "lines": [
      "element 6 $set:even;"
    ],
    "dt": false,
    "parse": [
      "element",
      "6",
      [
        -2,
        "set:even"
      ]
    ],
    "code": "121101010302110312312121101011312101110332233",
    "spider": "&#xf145;&#xf16e;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf16f;&#xf172;&#xf24b;",
    "stanza": 1204
  },
  {
    "role": "file",
    "lines": [
      "== COS_Graph =="
    ],
    "stanza": 1205
  },
  {
    "role": "doc",
    "lines": [
      "",
      ""
    ],
    "section_description": "introduce graph structures",
    "section_category": "MATH",
    "section_index": 30,
    "stanza": 1206
  },
  {
    "role": "code",
    "lines": [
      "intro graph:make;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "graph:make"
    ],
    "code": "121001031212110110031211011332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf170;&#xf15f;&#xf24b;",
    "stanza": 1207
  },
  {
    "role": "code",
    "lines": [
      "define graph:make | lambda (x:graph:1 x:graph:2) | pair $x:graph:1 $x:graph:2;"
    ],
    "dt": true,
    "parse": [
      "@",
      "graph:make",
      [
        -1,
        "lambda",
        [
          "x:graph:1",
          "x:graph:2"
        ],
        [
          -1,
          "list:2",
          [
            -2,
            "x:graph:1"
          ],
          [
            -2,
            "x:graph:2"
          ]
        ]
      ]
    ],
    "code": "121101312121101100312110113302312110103212121010113121101100302133121210101131211011003021033302312121111103021033123121210101131211011003021331231212101011312110110030210332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf170;&#xf15f;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf145;&#xf170;&#xf205;&#xf16f;&#xf145;&#xf170;&#xf206;&#xf245;&#xf248;&#xf182;&#xf206;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf205;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf206;&#xf24b;",
    "stanza": 1208
  },
  {
    "role": "code",
    "lines": [
      "define demo:graph | graph:make",
      "  (vector 1 2 3 4)",
      "  (vector (pair 1 2) (pair 2 3) (pair 1 4));"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:graph",
      [
        -1,
        "graph:make",
        [
          "vector",
          "1",
          "2",
          "3",
          "4"
        ],
        [
          "vector",
          [
            "list:2",
            "1",
            "2"
          ],
          [
            "list:2",
            "2",
            "3"
          ],
          [
            "list:2",
            "1",
            "4"
          ]
        ]
      ]
    ],
    "code": "121101312121001003121101100330231212110110031211011332121000030213021030211302100332121000032121211111030210330213021033212121111103021033021030211332121211111030210330213021003332233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf145;&#xf170;&#xf248;&#xf145;&#xf170;&#xf15f;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf154;&#xf246;&#xf182;&#xf206;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf24a;&#xf208;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1209
  },
  {
    "role": "code",
    "lines": [
      "intro exists:graph:2;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "exists:graph:2"
    ],
    "code": "12100103121210100312110110030210332233",
    "spider": "&#xf156;&#xf24a;&#xf158;&#xf145;&#xf170;&#xf206;&#xf24b;",
    "stanza": 1210
  },
  {
    "role": "code",
    "lines": [
      "define exists:graph:2 | lambda (x:graph y:graph:1 z:graph:1) |",
      "  exists | ? n |",
      "    if (or (< $n 0) (>= $n | list-length | list-ref $x:graph 1)) $false |",
      "    list= (list-ref (list-ref $x:graph 1) $n) (pair $y:graph:1 $z:graph:1);"
    ],
    "dt": true,
    "parse": [
      "@",
      "exists:graph:2",
      [
        -1,
        "lambda",
        [
          "x:graph",
          "y:graph:1",
          "z:graph:1"
        ],
        [
          -1,
          "exists",
          [
            -1,
            "?",
            "n",
            [
              -1,
              "if",
              [
                "true:+",
                [
                  "<",
                  [
                    -2,
                    "n"
                  ],
                  "0"
                ],
                [
                  ">=",
                  [
                    -2,
                    "n"
                  ],
                  [
                    -1,
                    "list-length",
                    [
                      -1,
                      "list-ref",
                      [
                        -2,
                        "x:graph"
                      ],
                      "1"
                    ]
                  ]
                ]
              ],
              [
                -2,
                "false"
              ],
              [
                -1,
                "list=",
                [
                  "list-ref",
                  [
                    "list-ref",
                    [
                      -2,
                      "x:graph"
                    ],
                    "1"
                  ],
                  [
                    -2,
                    "n"
                  ]
                ],
                [
                  "list:2",
                  [
                    -2,
                    "y:graph:1"
                  ],
                  [
                    -2,
                    "z:graph:1"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212101003121101100302103302312110103212121010113121101100331212110100312110110030213312121101013121101100302133302312101003023121100312111111302312111132121213121010332121031231211111130203321211101131231211111130231210000103023121000011312312121010113121101100330213331231203023121000101321210000113212100001131231212101011312110110033021331231211111133212121111103021033123121211010031211011003021331231212110101312110110030213332233",
    "spider": "&#xf151;&#xf24a;&#xf158;&#xf145;&#xf170;&#xf206;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf145;&#xf170;&#xf178;&#xf145;&#xf170;&#xf205;&#xf179;&#xf145;&#xf170;&#xf205;&#xf245;&#xf248;&#xf158;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf145;&#xf14e;&#xf246;&#xf146;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf17f;&#xf249;&#xf183;&#xf248;&#xf145;&#xf146;&#xf248;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf205;&#xf245;&#xf245;&#xf249;&#xf144;&#xf248;&#xf145;&#xf149;&#xf246;&#xf145;&#xf147;&#xf246;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf205;&#xf245;&#xf249;&#xf183;&#xf245;&#xf246;&#xf182;&#xf206;&#xf249;&#xf178;&#xf145;&#xf170;&#xf205;&#xf249;&#xf179;&#xf145;&#xf170;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1211
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2 $demo:graph 1 2;"
    ],
    "dt": false,
    "parse": [
      "exists:graph:2",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "2"
    ],
    "code": "1212101003121101100302103312312121001003121101100330213021032233",
    "spider": "&#xf158;&#xf145;&#xf170;&#xf206;&#xf249;&#xf168;&#xf145;&#xf170;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1212
  },
  {
    "role": "code",
    "lines": [
      "not | exists:graph:2 $demo:graph 1 3;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "exists:graph:2",
        [
          -2,
          "demo:graph"
        ],
        "1",
        "3"
      ]
    ],
    "code": "1210130231212101003121101100302103312312121001003121101100330213021132233",
    "spider": "&#xf149;&#xf248;&#xf158;&#xf145;&#xf170;&#xf206;&#xf249;&#xf168;&#xf145;&#xf170;&#xf205;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1213
  },
  {
    "role": "code",
    "lines": [
      "not | exists:graph:2 $demo:graph 2 4;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "exists:graph:2",
        [
          -2,
          "demo:graph"
        ],
        "2",
        "4"
      ]
    ],
    "code": "121013023121210100312110110030210331231212100100312110110033021030210032233",
    "spider": "&#xf149;&#xf248;&#xf158;&#xf145;&#xf170;&#xf206;&#xf249;&#xf168;&#xf145;&#xf170;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1214
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2 $demo:graph 1 4;"
    ],
    "dt": false,
    "parse": [
      "exists:graph:2",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "4"
    ],
    "code": "12121010031211011003021033123121210010031211011003302130210032233",
    "spider": "&#xf158;&#xf145;&#xf170;&#xf206;&#xf249;&#xf168;&#xf145;&#xf170;&#xf205;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1215
  },
  {
    "role": "code",
    "lines": [
      "intro exists:graph:2:list;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "exists:graph:2:list"
    ],
    "code": "12100103121210100312110110030210312111110332233",
    "spider": "&#xf156;&#xf24a;&#xf158;&#xf145;&#xf170;&#xf206;&#xf182;&#xf24b;",
    "stanza": 1216
  },
  {
    "role": "code",
    "lines": [
      "define exists:graph:2:list | lambda (x:graph y:graph:1 z:graph:1) |",
      "  if (= $y:graph:1 $z:graph:1) $true |",
      "  if (exists:graph:2 $x:graph $y:graph:1 $z:graph:1) $true |",
      "  exists | ? n:graph:1 |",
      "    if (not | exists:graph:2 $x:graph $y:graph:1 $n:graph:1) $false |",
      "    exists:graph:2:list $x:graph $n:graph:1 $z:graph:1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "exists:graph:2:list",
      [
        -1,
        "lambda",
        [
          "x:graph",
          "y:graph:1",
          "z:graph:1"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "y:graph:1"
            ],
            [
              -2,
              "z:graph:1"
            ]
          ],
          [
            -2,
            "true"
          ],
          [
            -1,
            "if",
            [
              "exists:graph:2",
              [
                -2,
                "x:graph"
              ],
              [
                -2,
                "y:graph:1"
              ],
              [
                -2,
                "z:graph:1"
              ]
            ],
            [
              -2,
              "true"
            ],
            [
              -1,
              "exists",
              [
                -1,
                "?",
                "n:graph:1",
                [
                  -1,
                  "if",
                  [
                    "not",
                    [
                      -1,
                      "exists:graph:2",
                      [
                        -2,
                        "x:graph"
                      ],
                      [
                        -2,
                        "y:graph:1"
                      ],
                      [
                        -2,
                        "n:graph:1"
                      ]
                    ]
                  ],
                  [
                    -2,
                    "false"
                  ],
                  [
                    -1,
                    "exists:graph:2:list",
                    [
                      -2,
                      "x:graph"
                    ],
                    [
                      -2,
                      "n:graph:1"
                    ],
                    [
                      -2,
                      "z:graph:1"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf158;&#xf145;&#xf170;&#xf206;&#xf182;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf145;&#xf170;&#xf178;&#xf145;&#xf170;&#xf205;&#xf179;&#xf145;&#xf170;&#xf205;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf178;&#xf145;&#xf170;&#xf205;&#xf249;&#xf179;&#xf145;&#xf170;&#xf205;&#xf245;&#xf249;&#xf145;&#xf248;&#xf153;&#xf246;&#xf158;&#xf145;&#xf170;&#xf206;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf249;&#xf178;&#xf145;&#xf170;&#xf205;&#xf249;&#xf179;&#xf145;&#xf170;&#xf205;&#xf245;&#xf249;&#xf145;&#xf248;&#xf158;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf145;&#xf170;&#xf205;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf158;&#xf145;&#xf170;&#xf206;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf249;&#xf178;&#xf145;&#xf170;&#xf205;&#xf249;&#xf183;&#xf145;&#xf170;&#xf205;&#xf245;&#xf249;&#xf144;&#xf248;&#xf158;&#xf145;&#xf170;&#xf206;&#xf182;&#xf249;&#xf16f;&#xf145;&#xf170;&#xf249;&#xf183;&#xf145;&#xf170;&#xf205;&#xf249;&#xf179;&#xf145;&#xf170;&#xf205;&#xf24b;",
    "stanza": 1217
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2:list $demo:graph 1 2;"
    ],
    "dt": false,
    "parse": [
      "exists:graph:2:list",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "2"
    ],
    "code": "1212101003121101100302103121111103312312121001003121101100330213021032233",
    "spider": "&#xf158;&#xf145;&#xf170;&#xf206;&#xf182;&#xf249;&#xf168;&#xf145;&#xf170;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1218
  },
  {
    "role": "code",
    "lines": [
      "exists:graph:2:list $demo:graph 1 3;"
    ],
    "dt": false,
    "parse": [
      "exists:graph:2:list",
      [
        -2,
        "demo:graph"
      ],
      "1",
      "3"
    ],
    "code": "1212101003121101100302103121111103312312121001003121101100330213021132233",
    "spider": "&#xf158;&#xf145;&#xf170;&#xf206;&#xf182;&#xf249;&#xf168;&#xf145;&#xf170;&#xf205;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1219
  },
  {
    "role": "code",
    "lines": [
      "not | exists:graph:2:list $demo:graph 2 4;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "exists:graph:2:list",
        [
          -2,
          "demo:graph"
        ],
        "2",
        "4"
      ]
    ],
    "code": "121013023121210100312110110030210312111110331231212100100312110110033021030210032233",
    "spider": "&#xf149;&#xf248;&#xf158;&#xf145;&#xf170;&#xf206;&#xf182;&#xf249;&#xf168;&#xf145;&#xf170;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1220
  },
  {
    "role": "file",
    "lines": [
      "== COS_Begin =="
    ],
    "stanza": 1221
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "show how to execute a sequence of instructions",
    "section_category": "MATH",
    "section_index": 31,
    "stanza": 1222
  },
  {
    "role": "code",
    "lines": [
      "intro begin;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "begin"
    ],
    "code": "1210010312100101132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf14f;&#xf24b;",
    "stanza": 1223
  },
  {
    "role": "code",
    "lines": [
      "define translate:begin:prev $translate;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate:begin:prev",
      [
        -2,
        "translate"
      ]
    ],
    "code": "12110131212110013121001011312110011133123121100132233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf145;&#xf14f;&#xf145;&#xf16b;&#xf249;&#xf15d;&#xf24b;",
    "stanza": 1224
  },
  {
    "role": "code",
    "lines": [
      "define translate | let ((prev $translate:begin:prev)) | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = (head $x) begin) (prev $x) |",
      "  translate | vector (vector ? x (vector last (vector x))) (prepend vector | tail $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "let",
        [
          [
            "prev",
            [
              -2,
              "translate:begin:prev"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  [
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  "begin"
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "translate",
                [
                  -1,
                  "vector",
                  [
                    "vector",
                    "?",
                    "x",
                    [
                      "vector",
                      "last",
                      [
                        "vector",
                        "x"
                      ]
                    ]
                  ],
                  [
                    "prepend",
                    "vector",
                    [
                      -1,
                      "list:remainder",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211001302312110010032212110011131231212110013121001011312110011133330231211003121010113023121111321210130231211101312312101011332121100111312312101011330231211113212101302312113212121111103020331231210101133121001011332121100111312312101011330231211001302312100003212100003121100312101011321210000312100110132121000031210101133332121000110312100003023121211111031210000013312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf15d;&#xf145;&#xf14f;&#xf145;&#xf16b;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf246;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf145;&#xf14f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf15d;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf150;&#xf24a;&#xf16f;&#xf246;&#xf154;&#xf24a;&#xf145;&#xf151;&#xf246;&#xf154;&#xf24a;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf154;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1225
  },
  {
    "role": "code",
    "lines": [
      "= 4 | begin 1 7 2 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "begin",
        "1",
        "7",
        "2",
        "4"
      ]
    ],
    "code": "1211302100302312100101130213021113021030210032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf14f;&#xf24a;&#xf205;&#xf24a;&#xf20b;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1226
  },
  {
    "role": "code",
    "lines": [
      "= 6 | begin (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:x);"
    ],
    "dt": false,
    "parse": [
      "=",
      "6",
      [
        -1,
        "begin",
        [
          "cell:assign",
          [
            -2,
            "demo:cell:make:x"
          ],
          "88"
        ],
        [
          "cell:assign",
          [
            -2,
            "demo:cell:make:x"
          ],
          "6"
        ],
        [
          "cell:get",
          [
            -2,
            "demo:cell:make:x"
          ]
        ]
      ]
    ],
    "code": "1211302110302312100101132121210010131211103312312121001003121001013121101131210101133021011000332121210010131211103312312121001003121001013121101131210101133021103321212100101312111101331231212100100312100101312110113121010113332233",
    "spider": "&#xf147;&#xf24a;&#xf20a;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf205;&#xf21c;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf20a;&#xf245;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1227
  },
  {
    "role": "code",
    "lines": [
      "= 88 | begin (set! $demo:make-cell:y 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:y);"
    ],
    "dt": false,
    "parse": [
      "=",
      "88",
      [
        -1,
        "begin",
        [
          "cell:assign",
          [
            -2,
            "demo:cell:make:y"
          ],
          "88"
        ],
        [
          "cell:assign",
          [
            -2,
            "demo:cell:make:x"
          ],
          "6"
        ],
        [
          "cell:get",
          [
            -2,
            "demo:cell:make:y"
          ]
        ]
      ]
    ],
    "code": "12113021011000302312100101132121210010131211103312312121001003121001013121101131211010033021011000332121210010131211103312312121001003121001013121101131210101133021103321212100101312111101331231212100100312100101312110113121101003332233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf21c;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf205;&#xf21c;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf20a;&#xf245;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf178;&#xf245;&#xf24b;",
    "stanza": 1228
  },
  {
    "role": "code",
    "lines": [
      "= 4 | begin (set! $demo:make-cell:x 88) (set! $demo:make-cell:x 6) (get! $demo:make-cell:x) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "4",
      [
        -1,
        "begin",
        [
          "cell:assign",
          [
            -2,
            "demo:cell:make:x"
          ],
          "88"
        ],
        [
          "cell:assign",
          [
            -2,
            "demo:cell:make:x"
          ],
          "6"
        ],
        [
          "cell:get",
          [
            -2,
            "demo:cell:make:x"
          ]
        ],
        "4"
      ]
    ],
    "code": "1211302100302312100101132121210010131211103312312121001003121001013121101131210101133021011000332121210010131211103312312121001003121001013121101131210101133021103321212100101312111101331231212100100312100101312110113121010113330210032233",
    "spider": "&#xf147;&#xf24a;&#xf208;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf205;&#xf21c;&#xf245;&#xf246;&#xf169;&#xf152;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf20a;&#xf245;&#xf246;&#xf169;&#xf181;&#xf249;&#xf168;&#xf169;&#xf15f;&#xf16f;&#xf245;&#xf208;&#xf24b;",
    "stanza": 1229
  },
  {
    "role": "file",
    "lines": [
      "== COS_Hash =="
    ],
    "stanza": 1230
  },
  {
    "role": "comment",
    "lines": [
      "# this section needs a LOT more examples :-)",
      "# note that at the time of writing (h 1 2) is same as ((h) 1 2)"
    ],
    "section_description": "introduce environment/hashmap structure",
    "section_category": "MATH",
    "section_index": 32,
    "stanza": 1231
  },
  {
    "role": "code",
    "lines": [
      "intro hash-add;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "hash-add"
    ],
    "code": "1210010312110110132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf171;&#xf24b;",
    "stanza": 1232
  },
  {
    "role": "code",
    "lines": [
      "define hash-add | lambda (x:hash x y z) (if (equal $z $x) $y (x:hash $z));"
    ],
    "dt": true,
    "parse": [
      "@",
      "hash-add",
      [
        -1,
        "lambda",
        [
          "x:hash",
          "x",
          "y",
          "z"
        ],
        [
          "if",
          [
            "equal",
            [
              -2,
              "z"
            ],
            [
              -2,
              "x"
            ]
          ],
          [
            -2,
            "y"
          ],
          [
            "x:hash",
            [
              -2,
              "z"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211011013023121101032121210101131211011103312101011312110100312110101332121111321210001003123121101013123121010113312312110100321212101011312110111033123121101013332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf171;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf145;&#xf172;&#xf16f;&#xf24a;&#xf178;&#xf24a;&#xf179;&#xf245;&#xf246;&#xf153;&#xf246;&#xf145;&#xf148;&#xf249;&#xf179;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf178;&#xf246;&#xf16f;&#xf145;&#xf172;&#xf249;&#xf179;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1233
  },
  {
    "role": "code",
    "lines": [
      "intro hash-ref;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "hash-ref"
    ],
    "code": "1210010312110111132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf173;&#xf24b;",
    "stanza": 1234
  },
  {
    "role": "code",
    "lines": [
      "define hash-ref | lambda (x:hash x) (x:hash $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "hash-ref",
      [
        -1,
        "lambda",
        [
          "x:hash",
          "x"
        ],
        [
          "x:hash",
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "12110131211011113023121101032121210101131211011103312101011332121210101131211011103312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf173;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf145;&#xf172;&#xf16f;&#xf245;&#xf246;&#xf16f;&#xf145;&#xf172;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1235
  },
  {
    "role": "code",
    "lines": [
      "intro hash-null;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "hash-null"
    ],
    "code": "1210010312111000032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf174;&#xf24b;",
    "stanza": 1236
  },
  {
    "role": "code",
    "lines": [
      "define hash-null | ? x $undefined;"
    ],
    "dt": true,
    "parse": [
      "@",
      "hash-null",
      [
        -1,
        "?",
        "x",
        [
          -2,
          "undefined"
        ]
      ]
    ],
    "code": "1211013121110000302312110031210101131231210000032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf174;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf164;&#xf24b;",
    "stanza": 1237
  },
  {
    "role": "code",
    "lines": [
      "intro hash-default;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "hash-default"
    ],
    "code": "1210010312111000132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf175;&#xf24b;",
    "stanza": 1238
  },
  {
    "role": "code",
    "lines": [
      "define hash-default | ? default | ? x $default;"
    ],
    "dt": true,
    "parse": [
      "@",
      "hash-default",
      [
        -1,
        "?",
        "default",
        [
          -1,
          "?",
          "x",
          [
            -2,
            "default"
          ]
        ]
      ]
    ],
    "code": "1211013121110001302312110031211100103023121100312101011312312111001032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf176;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf145;&#xf176;&#xf24b;",
    "stanza": 1239
  },
  {
    "role": "code",
    "lines": [
      "define demo:hash | hash-add (hash-add $hash-null 3 2) 4 9;"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:hash",
      [
        -1,
        "hash-add",
        [
          "hash-add",
          [
            -2,
            "hash-null"
          ],
          "3",
          "2"
        ],
        "4",
        "9"
      ]
    ],
    "code": "1211013121210010031211011103302312110110132121101101312312111000030211302103302100302100132233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf145;&#xf172;&#xf248;&#xf145;&#xf171;&#xf246;&#xf145;&#xf171;&#xf249;&#xf145;&#xf174;&#xf24a;&#xf207;&#xf24a;&#xf206;&#xf245;&#xf208;&#xf24a;&#xf20d;&#xf24b;",
    "stanza": 1240
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 4) 9;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "4"
      ],
      "9"
    ],
    "code": "12113212110111131231212100100312110111033021003302100132233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf249;&#xf168;&#xf145;&#xf172;&#xf208;&#xf245;&#xf20d;&#xf24b;",
    "stanza": 1241
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 3) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "3"
      ],
      "2"
    ],
    "code": "12113212110111131231212100100312110111033021133021032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf249;&#xf168;&#xf145;&#xf172;&#xf207;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1242
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 8) $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "8"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "12113212110111131231212100100312110111033021000331231210000032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf249;&#xf168;&#xf145;&#xf172;&#xf20c;&#xf245;&#xf249;&#xf164;&#xf24b;",
    "stanza": 1243
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 15) $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "15"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "12113212110111131231212100100312110111033021111331231210000032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf249;&#xf168;&#xf145;&#xf172;&#xf213;&#xf245;&#xf249;&#xf164;&#xf24b;",
    "stanza": 1244
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref (hash-add $demo:hash 15 33) 15) 33;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          "hash-add",
          [
            -2,
            "demo:hash"
          ],
          "15",
          "33"
        ],
        "15"
      ],
      "33"
    ],
    "code": "121132121101111321211011013123121210010031211011103302111130210000133021111330210000132233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf246;&#xf145;&#xf171;&#xf249;&#xf168;&#xf145;&#xf172;&#xf213;&#xf24a;&#xf225;&#xf245;&#xf213;&#xf245;&#xf225;&#xf24b;",
    "stanza": 1245
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref $demo:hash 15) $undefined;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          -2,
          "demo:hash"
        ],
        "15"
      ],
      [
        -2,
        "undefined"
      ]
    ],
    "code": "12113212110111131231212100100312110111033021111331231210000032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf249;&#xf168;&#xf145;&#xf172;&#xf213;&#xf245;&#xf249;&#xf164;&#xf24b;",
    "stanza": 1246
  },
  {
    "role": "code",
    "lines": [
      "intro make-hash;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "make-hash"
    ],
    "code": "1210010312111001132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf177;&#xf24b;",
    "stanza": 1247
  },
  {
    "role": "code",
    "lines": [
      "define make-hash | ? x | if (list= $x (vector)) $hash-null (hash-add (make-hash (tail $x)) (first | head $x) (second | head $x));"
    ],
    "dt": true,
    "parse": [
      "@",
      "make-hash",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "list=",
            [
              -2,
              "x"
            ],
            [
              "vector"
            ]
          ],
          [
            -2,
            "hash-null"
          ],
          [
            "hash-add",
            [
              "make-hash",
              [
                "list:remainder",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "first",
              [
                -1,
                "list:0",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "second",
              [
                -1,
                "list:0",
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312111001130231211003121010113023121111321210001013123121010113212100003331231211100003212110110132121110011321212111110312100000133123121010113332121000111302312121111103020331231210101133212100100030231212111110302033123121010113332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf177;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf145;&#xf149;&#xf249;&#xf16f;&#xf246;&#xf154;&#xf245;&#xf245;&#xf249;&#xf145;&#xf174;&#xf246;&#xf145;&#xf171;&#xf246;&#xf145;&#xf177;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf246;&#xf145;&#xf14b;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf14c;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1248
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref (make-hash | vector (pair 3 10) (pair 2 20) (pair 1 30)) 3) 10;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          "make-hash",
          [
            -1,
            "vector",
            [
              "list:2",
              "3",
              "10"
            ],
            [
              "list:2",
              "2",
              "20"
            ],
            [
              "list:2",
              "1",
              "30"
            ]
          ]
        ],
        "3"
      ],
      "10"
    ],
    "code": "121132121101111321211100113023121000032121211111030210330211302101033212121111103021033021030210100332121211111030210330213021111033302113302101032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf246;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf207;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf24a;&#xf218;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf24a;&#xf222;&#xf245;&#xf245;&#xf207;&#xf245;&#xf20e;&#xf24b;",
    "stanza": 1249
  },
  {
    "role": "code",
    "lines": [
      "= (hash-ref (make-hash | vector (pair 3 10) (pair 2 20) (pair 1 30)) 1) 30;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hash-ref",
        [
          "make-hash",
          [
            -1,
            "vector",
            [
              "list:2",
              "3",
              "10"
            ],
            [
              "list:2",
              "2",
              "20"
            ],
            [
              "list:2",
              "1",
              "30"
            ]
          ]
        ],
        "1"
      ],
      "30"
    ],
    "code": "121132121101111321211100113023121000032121211111030210330211302101033212121111103021033021030210100332121211111030210330213021111033302133021111032233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf173;&#xf246;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf207;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf24a;&#xf218;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf24a;&#xf222;&#xf245;&#xf245;&#xf205;&#xf245;&#xf222;&#xf24b;",
    "stanza": 1250
  },
  {
    "role": "file",
    "lines": [
      "== COS_MutableStructure =="
    ],
    "stanza": 1251
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "introduce simple mutable structures",
    "section_category": "OBJECT",
    "section_index": 33,
    "stanza": 1252
  },
  {
    "role": "code",
    "lines": [
      "intro mutable-struct;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "mutable-struct"
    ],
    "code": "1210010312111010032233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf178;&#xf24b;",
    "stanza": 1253
  },
  {
    "role": "code",
    "lines": [
      "define mutable-struct | ? x:list |",
      "  let ((cell:list | map (? x | make-cell 0) $x:list)) |",
      "  ? x:find | list-ref $cell:list | list:find $x:list $x:find;"
    ],
    "dt": true,
    "parse": [
      "@",
      "mutable-struct",
      [
        -1,
        "?",
        "x:list",
        [
          -1,
          "let",
          [
            [
              "cell:list",
              [
                -1,
                "map",
                [
                  "?",
                  "x",
                  [
                    -1,
                    "cell:make",
                    "0"
                  ]
                ],
                [
                  -2,
                  "x:list"
                ]
              ]
            ]
          ],
          [
            -1,
            "?",
            "x:find",
            [
              -1,
              "list-ref",
              [
                -2,
                "cell:list"
              ],
              [
                -1,
                "list:find",
                [
                  -2,
                  "x:list"
                ],
                [
                  -2,
                  "x:find"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312111010030231211003121210101131211111033023121100100322121210010131211111033023121001001321211003121010113023121210010131211011330203312312121010113121111103333023121100312121010113121001100330231210000113123121210010131211111033023121211111031210011003312312121010113121111103312312121010113121001100332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf178;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf169;&#xf182;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf145;&#xf150;&#xf248;&#xf145;&#xf147;&#xf249;&#xf169;&#xf182;&#xf248;&#xf182;&#xf145;&#xf150;&#xf249;&#xf16f;&#xf182;&#xf249;&#xf16f;&#xf145;&#xf150;&#xf24b;",
    "stanza": 1254
  },
  {
    "role": "code",
    "lines": [
      "define demo:mutable-struct | mutable-struct | vector x:1 x:2 x:3;"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:mutable-struct",
      [
        -1,
        "mutable-struct",
        [
          -1,
          "vector",
          "x:1",
          "x:2",
          "x:3"
        ]
      ]
    ],
    "code": "12110131212100100312111010033023121110100302312100003121210101130213312121010113021033121210101130211332233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf145;&#xf178;&#xf248;&#xf145;&#xf178;&#xf248;&#xf154;&#xf24a;&#xf16f;&#xf205;&#xf16f;&#xf206;&#xf16f;&#xf207;&#xf24b;",
    "stanza": 1255
  },
  {
    "role": "code",
    "lines": [
      "set! (demo:mutable-struct x:1) 15;"
    ],
    "dt": false,
    "parse": [
      "cell:assign",
      [
        "demo:mutable-struct",
        "x:1"
      ],
      "15"
    ],
    "code": "1212100101312111033212121001003121110100331212101011302133302111132233",
    "spider": "&#xf169;&#xf152;&#xf246;&#xf168;&#xf145;&#xf178;&#xf16f;&#xf205;&#xf245;&#xf213;&#xf24b;",
    "stanza": 1256
  },
  {
    "role": "code",
    "lines": [
      "= 15 | get! | demo:mutable-struct x:1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "cell:get",
        [
          -1,
          "demo:mutable-struct",
          "x:1"
        ]
      ]
    ],
    "code": "121130211113023121210010131211110133023121210010031211101003312121010113021332233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf169;&#xf181;&#xf248;&#xf168;&#xf145;&#xf178;&#xf16f;&#xf205;&#xf24b;",
    "stanza": 1257
  },
  {
    "role": "file",
    "lines": [
      "== COS_Turing =="
    ],
    "stanza": 1258
  },
  {
    "role": "doc",
    "lines": [
      "",
      "This is just for fun, as an exercise.",
      ""
    ],
    "section_description": "introduce turing machine model",
    "section_category": "TURING",
    "section_index": 34,
    "stanza": 1259
  },
  {
    "role": "code",
    "lines": [
      "define tape:tail | ? x |",
      "  if (>= 1 | list-length $x) (vector | vector) |",
      "  tail $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:list:remainder",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            ">=",
            "1",
            [
              -1,
              "list-length",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "vector",
            [
              -1,
              "vector"
            ]
          ],
          [
            -1,
            "list:remainder",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212111010131211111031210000013302312110031210101130231211113212111011302130231210000103123121010113321210000302312100003302312121111103121000001331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf182;&#xf145;&#xf145;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf17f;&#xf24a;&#xf205;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf154;&#xf248;&#xf154;&#xf245;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1260
  },
  {
    "role": "code",
    "lines": [
      "define tape:head | ? x |",
      "  if (= 0 | list-length $x) (vector) |",
      "  head $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:list:0",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "x"
              ]
            ]
          ],
          [
            "vector"
          ],
          [
            -1,
            "list:0",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212111010131211111030203302312110031210101130231211113212113020302312100001031231210101133212100003302312121111103020331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf182;&#xf204;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf154;&#xf245;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1261
  },
  {
    "role": "code",
    "lines": [
      "define tape:get | ? tape | tape:head | second $tape;"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:get",
      [
        -1,
        "?",
        "tape",
        [
          -1,
          "tape:list:0",
          [
            -1,
            "second",
            [
              -2,
              "tape"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121110101312111101330231211003121110101302312121110101312111110302033023121001000312312111010132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf179;&#xf248;&#xf145;&#xf179;&#xf182;&#xf204;&#xf248;&#xf145;&#xf14c;&#xf249;&#xf145;&#xf179;&#xf24b;",
    "stanza": 1262
  },
  {
    "role": "code",
    "lines": [
      "define tape:next | lambda (tape n x) |",
      "  if (= $n 1) (pair (prepend $x | first $tape) (tape:tail | second $tape)) |",
      "  if (= $n 0) (pair (tape:tail | first $tape) (prepend (tape:head | first $tape) (prepend $x (tape:tail | second $tape)))) |",
      "  pair (first $tape) (prepend $x (tape:tail | second $tape));"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:next",
      [
        -1,
        "lambda",
        [
          "tape",
          "n",
          "x"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "n"
            ],
            "1"
          ],
          [
            "list:2",
            [
              "prepend",
              [
                -2,
                "x"
              ],
              [
                -1,
                "first",
                [
                  -2,
                  "tape"
                ]
              ]
            ],
            [
              "tape:list:remainder",
              [
                -1,
                "second",
                [
                  -2,
                  "tape"
                ]
              ]
            ]
          ],
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "0"
            ],
            [
              "list:2",
              [
                "tape:list:remainder",
                [
                  -1,
                  "first",
                  [
                    -2,
                    "tape"
                  ]
                ]
              ],
              [
                "prepend",
                [
                  "tape:list:0",
                  [
                    -1,
                    "first",
                    [
                      -2,
                      "tape"
                    ]
                  ]
                ],
                [
                  "prepend",
                  [
                    -2,
                    "x"
                  ],
                  [
                    "tape:list:remainder",
                    [
                      -1,
                      "second",
                      [
                        -2,
                        "tape"
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              -1,
              "list:2",
              [
                "first",
                [
                  -2,
                  "tape"
                ]
              ],
              [
                "prepend",
                [
                  -2,
                  "x"
                ],
                [
                  "tape:list:remainder",
                  [
                    -1,
                    "second",
                    [
                      -2,
                      "tape"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf145;&#xf16a;&#xf248;&#xf15e;&#xf246;&#xf145;&#xf179;&#xf24a;&#xf183;&#xf24a;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf182;&#xf206;&#xf246;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf248;&#xf145;&#xf14b;&#xf249;&#xf145;&#xf179;&#xf245;&#xf246;&#xf145;&#xf179;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf14c;&#xf249;&#xf145;&#xf179;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf182;&#xf206;&#xf246;&#xf145;&#xf179;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf14b;&#xf249;&#xf145;&#xf179;&#xf245;&#xf246;&#xf145;&#xf14a;&#xf246;&#xf145;&#xf179;&#xf182;&#xf204;&#xf248;&#xf145;&#xf14b;&#xf249;&#xf145;&#xf179;&#xf245;&#xf246;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf246;&#xf145;&#xf179;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf14c;&#xf249;&#xf145;&#xf179;&#xf245;&#xf245;&#xf245;&#xf245;&#xf248;&#xf182;&#xf206;&#xf246;&#xf145;&#xf14b;&#xf249;&#xf145;&#xf179;&#xf245;&#xf246;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf246;&#xf145;&#xf179;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf14c;&#xf249;&#xf145;&#xf179;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1263
  },
  {
    "role": "code",
    "lines": [
      "intro tape:do;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "tape:do"
    ],
    "code": "12100103121211101013121110110332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf179;&#xf145;&#xf17a;&#xf24b;",
    "stanza": 1264
  },
  {
    "role": "code",
    "lines": [
      "define tape:do | lambda (x:function current end tape) |",
      "  if (= $current $end) $tape |",
      "  let ((next | x:function $current | tape:get $tape)) | ",
      "    tape:do $x:function (list-ref $next 0) $end |",
      "    tape:next $tape (list-ref $next 1) (list-ref $next 2);"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:do",
      [
        -1,
        "lambda",
        [
          "x:function",
          "current",
          "end",
          "tape"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "current"
            ],
            [
              -2,
              "end"
            ]
          ],
          [
            -2,
            "tape"
          ],
          [
            -1,
            "let",
            [
              [
                "next",
                [
                  -1,
                  "x:function",
                  [
                    -2,
                    "current"
                  ],
                  [
                    -1,
                    "tape:get",
                    [
                      -2,
                      "tape"
                    ]
                  ]
                ]
              ]
            ],
            [
              -1,
              "tape:do",
              [
                -2,
                "x:function"
              ],
              [
                "list-ref",
                [
                  -2,
                  "next"
                ],
                "0"
              ],
              [
                -2,
                "end"
              ],
              [
                -1,
                "tape:next",
                [
                  -2,
                  "tape"
                ],
                [
                  "list-ref",
                  [
                    -2,
                    "next"
                  ],
                  "1"
                ],
                [
                  "list-ref",
                  [
                    -2,
                    "next"
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212111010131211101103302312110103212121010113121110111331211110003121111001312111010133023121111321211312312111100031231211110013312312111010130231211001003221211001103023121210101131211101113312312111100030231212111010131211110133123121110101333023121211101013121110110331231212101011312111011133212100001131231211001103020331231211110013023121211101013121100110331231211101013212100001131231211001103021332121000011312312110011030210332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf145;&#xf17a;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf145;&#xf17b;&#xf145;&#xf17c;&#xf24a;&#xf145;&#xf17d;&#xf24a;&#xf145;&#xf179;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf145;&#xf17c;&#xf249;&#xf145;&#xf17d;&#xf245;&#xf249;&#xf145;&#xf179;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf145;&#xf16a;&#xf248;&#xf16f;&#xf145;&#xf17b;&#xf249;&#xf145;&#xf17c;&#xf248;&#xf145;&#xf179;&#xf181;&#xf249;&#xf145;&#xf179;&#xf245;&#xf245;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17a;&#xf249;&#xf16f;&#xf145;&#xf17b;&#xf246;&#xf145;&#xf147;&#xf249;&#xf145;&#xf16a;&#xf24a;&#xf204;&#xf245;&#xf249;&#xf145;&#xf17d;&#xf248;&#xf145;&#xf179;&#xf145;&#xf16a;&#xf249;&#xf145;&#xf179;&#xf246;&#xf145;&#xf147;&#xf249;&#xf145;&#xf16a;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf145;&#xf147;&#xf249;&#xf145;&#xf16a;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1265
  },
  {
    "role": "code",
    "lines": [
      "intro tape:make;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "tape:make"
    ],
    "code": "121001031212111010131211011332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf179;&#xf15f;&#xf24b;",
    "stanza": 1266
  },
  {
    "role": "code",
    "lines": [
      "define tape:make | ? x | pair (vector) $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:make",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "list:2",
          [
            "vector"
          ],
          [
            -2,
            "x"
          ]
        ]
      ]
    ],
    "code": "121101312121110101312110113302312110031210101130231212111110302103321210000331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf15f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf182;&#xf206;&#xf246;&#xf154;&#xf245;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1267
  },
  {
    "role": "code",
    "lines": [
      "define tape:-:tail | ? x | ? x:list |",
      "  if (= 0 | list-length $x:list) $x:list |",
      "  if (not | equal $x | last $x:list) $x:list |",
      "  tape:-:tail $x (except-last $x:list);"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:-:list:remainder",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "x:list",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "x:list"
                ]
              ]
            ],
            [
              -2,
              "x:list"
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "equal",
                  [
                    -2,
                    "x"
                  ],
                  [
                    -1,
                    "last",
                    [
                      -2,
                      "x:list"
                    ]
                  ]
                ]
              ],
              [
                -2,
                "x:list"
              ],
              [
                -1,
                "tape:-:list:remainder",
                [
                  -2,
                  "x"
                ],
                [
                  "except-last",
                  [
                    -2,
                    "x:list"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121211101013121011312111110312100000133023121100312101011302312110031212101011312111110330231211113212113020302312100001031231212101011312111110333123121210101131211111033023121111321210130231210001003123121010113023121001101312312121010113121111103331231212101011312111110330231212111010131210113121111103121000001331231210101132121001110312312121010113121111103332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf14f;&#xf182;&#xf145;&#xf145;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf16f;&#xf182;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf145;&#xf148;&#xf249;&#xf16f;&#xf248;&#xf145;&#xf151;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf249;&#xf16f;&#xf182;&#xf248;&#xf145;&#xf179;&#xf14f;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf246;&#xf145;&#xf152;&#xf249;&#xf16f;&#xf182;&#xf245;&#xf24b;",
    "stanza": 1268
  },
  {
    "role": "code",
    "lines": [
      "intro tape:result;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "tape:result"
    ],
    "code": "12100103121211101013121111010332233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf179;&#xf145;&#xf17e;&#xf24b;",
    "stanza": 1269
  },
  {
    "role": "code",
    "lines": [
      "define tape:result | ? x | tape:-:tail (vector) (second $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "tape:result",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "tape:-:list:remainder",
          [
            "vector"
          ],
          [
            "second",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121110101312111101033023121100312101011302312121110101312101131211111031210000013321210000332121001000312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf179;&#xf145;&#xf17e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf179;&#xf14f;&#xf182;&#xf145;&#xf145;&#xf246;&#xf154;&#xf245;&#xf246;&#xf145;&#xf14c;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1270
  },
  {
    "role": "code",
    "lines": [
      "intro demo:tape:function:+:1;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "demo:tape:function:+:1"
    ],
    "code": "1210010312121001003121110101312111011131210103021332233",
    "spider": "&#xf156;&#xf24a;&#xf168;&#xf145;&#xf179;&#xf145;&#xf17b;&#xf14e;&#xf205;&#xf24b;",
    "stanza": 1271
  },
  {
    "role": "code",
    "lines": [
      "define demo:tape:function:+:1 | make-hash | vector ",
      "  (pair next (make-hash | vector",
      "    (pair 0 (vector next 1 0))",
      "    (pair 1 (vector next 1 1))",
      "    (pair (vector) (vector +:1 0 (vector)))))",
      "  (pair +:1 (make-hash | vector",
      "    (pair 0 (vector not:+:1 0 1))",
      "    (pair 1 (vector +:1 0 0))",
      "    (pair (vector) (vector end 2 1))))",
      "  (pair not:+:1 (make-hash | vector",
      "    (pair 0 (vector not:+:1 0 0))",
      "    (pair 1 (vector not:+:1 0 1))",
      "    (pair (vector) (vector end 1 (vector)))))",
      "  (pair end (make-hash | vector));"
    ],
    "dt": true,
    "parse": [
      "@",
      "demo:tape:function:+:1",
      [
        -1,
        "make-hash",
        [
          -1,
          "vector",
          [
            "list:2",
            "next",
            [
              "make-hash",
              [
                -1,
                "vector",
                [
                  "list:2",
                  "0",
                  [
                    "vector",
                    "next",
                    "1",
                    "0"
                  ]
                ],
                [
                  "list:2",
                  "1",
                  [
                    "vector",
                    "next",
                    "1",
                    "1"
                  ]
                ],
                [
                  "list:2",
                  [
                    "vector"
                  ],
                  [
                    "vector",
                    "+:1",
                    "0",
                    [
                      "vector"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "list:2",
            "+:1",
            [
              "make-hash",
              [
                -1,
                "vector",
                [
                  "list:2",
                  "0",
                  [
                    "vector",
                    "not:+:1",
                    "0",
                    "1"
                  ]
                ],
                [
                  "list:2",
                  "1",
                  [
                    "vector",
                    "+:1",
                    "0",
                    "0"
                  ]
                ],
                [
                  "list:2",
                  [
                    "vector"
                  ],
                  [
                    "vector",
                    "end",
                    "2",
                    "1"
                  ]
                ]
              ]
            ]
          ],
          [
            "list:2",
            "not:+:1",
            [
              "make-hash",
              [
                -1,
                "vector",
                [
                  "list:2",
                  "0",
                  [
                    "vector",
                    "not:+:1",
                    "0",
                    "0"
                  ]
                ],
                [
                  "list:2",
                  "1",
                  [
                    "vector",
                    "not:+:1",
                    "0",
                    "1"
                  ]
                ],
                [
                  "list:2",
                  [
                    "vector"
                  ],
                  [
                    "vector",
                    "end",
                    "1",
                    [
                      "vector"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "list:2",
            "end",
            [
              "make-hash",
              [
                -1,
                "vector"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312121001003121110101312111011131210103021330231211100113023121000032121211111030210331211001103212111001130231210000321212111110302103302032121000031211001103021302033321212111110302103302132121000031211001103021302133321212111110302103321210000332121000031212101030213302032121000033333321212111110302103312121010302133212111001130231210000321212111110302103302032121000031212101312101030213302030213332121211111030210330213212100003121210103021330203020333212121111103021033212100003321210000312111100130210302133333212121111103021033121210131210103021332121110011302312100003212121111103021033020321210000312121013121010302133020302033321212111110302103302132121000031212101312101030213302030213332121211111030210332121000033212100003121111001302132121000033333321212111110302103312111100132121110011302312100003332233",
    "spider": "&#xf151;&#xf24a;&#xf168;&#xf145;&#xf179;&#xf145;&#xf17b;&#xf14e;&#xf205;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf145;&#xf16a;&#xf246;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf246;&#xf154;&#xf24a;&#xf145;&#xf16a;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf145;&#xf16a;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf246;&#xf154;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf14e;&#xf205;&#xf204;&#xf246;&#xf154;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf14e;&#xf205;&#xf246;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf246;&#xf154;&#xf24a;&#xf149;&#xf14e;&#xf205;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf14e;&#xf205;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf246;&#xf154;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf145;&#xf17d;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf149;&#xf14e;&#xf205;&#xf246;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf246;&#xf154;&#xf24a;&#xf149;&#xf14e;&#xf205;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf149;&#xf14e;&#xf205;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf246;&#xf154;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf145;&#xf17d;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf182;&#xf206;&#xf145;&#xf17d;&#xf246;&#xf145;&#xf177;&#xf248;&#xf154;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1272
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 0 1 0) | tape:result |",
      "  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 0 0 1);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "0",
        "1",
        "0"
      ],
      [
        -1,
        "tape:result",
        [
          -1,
          "tape:do",
          [
            -2,
            "demo:tape:function:+:1"
          ],
          "next",
          "end",
          [
            "tape:make",
            [
              -1,
              "vector",
              "1",
              "0",
              "0",
              "1"
            ]
          ]
        ]
      ]
    ],
    "code": "1210001013212100003021302030213020330231212111010131211110103302312121110101312111011033123121210010031211101013121110111312101030213312110011031211110013212121110101312110113302312100003021302030203021332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17e;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17a;&#xf249;&#xf168;&#xf145;&#xf179;&#xf145;&#xf17b;&#xf14e;&#xf205;&#xf145;&#xf16a;&#xf24a;&#xf145;&#xf17d;&#xf246;&#xf145;&#xf179;&#xf15f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1273
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 0 0 0) | tape:result |",
      "  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 1 1);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "0",
        "0",
        "0"
      ],
      [
        -1,
        "tape:result",
        [
          -1,
          "tape:do",
          [
            -2,
            "demo:tape:function:+:1"
          ],
          "next",
          "end",
          [
            "tape:make",
            [
              -1,
              "vector",
              "1",
              "1",
              "1"
            ]
          ]
        ]
      ]
    ],
    "code": "121000101321210000302130203020302033023121211101013121111010330231212111010131211101103312312121001003121110101312111011131210103021331211001103121111001321212111010131211011330231210000302130213021332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17e;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17a;&#xf249;&#xf168;&#xf145;&#xf179;&#xf145;&#xf17b;&#xf14e;&#xf205;&#xf145;&#xf16a;&#xf24a;&#xf145;&#xf17d;&#xf246;&#xf145;&#xf179;&#xf15f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1274
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 1 1 0 0 1 0 0 0) | tape:result |",
      "  tape:do $demo:tape:function:+:1 next end (tape:make | vector 1 1 1 0 0 0 1 1 1);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "1",
        "1",
        "0",
        "0",
        "1",
        "0",
        "0",
        "0"
      ],
      [
        -1,
        "tape:result",
        [
          -1,
          "tape:do",
          [
            -2,
            "demo:tape:function:+:1"
          ],
          "next",
          "end",
          [
            "tape:make",
            [
              -1,
              "vector",
              "1",
              "1",
              "1",
              "0",
              "0",
              "0",
              "1",
              "1",
              "1"
            ]
          ]
        ]
      ]
    ],
    "code": "12100010132121000030213021302130203020302130203020302033023121211101013121111010330231212111010131211101103312312121001003121110101312111011131210103021331211001103121111001321212111010131211011330231210000302130213021302030203020302130213021332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17e;&#xf248;&#xf145;&#xf179;&#xf145;&#xf17a;&#xf249;&#xf168;&#xf145;&#xf179;&#xf145;&#xf17b;&#xf14e;&#xf205;&#xf145;&#xf16a;&#xf24a;&#xf145;&#xf17d;&#xf246;&#xf145;&#xf179;&#xf15f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1275
  },
  {
    "role": "file",
    "lines": [
      "== COS_Quote =="
    ],
    "stanza": 1276
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "quoting syntax",
    "section_category": "MATH",
    "section_index": 35,
    "stanza": 1277
  },
  {
    "role": "code",
    "lines": [
      "define quote-f | ? key | ? x |",
      "  if (not | function? $x) $x |",
      "  if (= $key | list-ref $x 0) (tail $x) |",
      "  prepend vector | map (quote-f $key) $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "quote-f",
      [
        -1,
        "?",
        "key",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "key"
                ],
                [
                  -1,
                  "list-ref",
                  [
                    -2,
                    "x"
                  ],
                  "0"
                ]
              ],
              [
                "list:remainder",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "prepend",
                "vector",
                [
                  -1,
                  "map",
                  [
                    "quote-f",
                    [
                      -2,
                      "key"
                    ]
                  ],
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312111101130231211003121111100302312110031210101130231211113212101302312111013123121010113312312101011302312111132121131231211111003023121000011312312101011302033212121111103121000001331231210101133023121000110312100003023121001001321211110113123121111100331231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf180;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf145;&#xf180;&#xf248;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf24a;&#xf154;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf145;&#xf17f;&#xf249;&#xf145;&#xf180;&#xf245;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1278
  },
  {
    "role": "code",
    "lines": [
      "= (quote-f x 1) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "quote-f",
        "x",
        "1"
      ],
      "1"
    ],
    "code": "12113212111101131210101130213302132233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf17f;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1279
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1) | vector vector 1;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1"
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1"
      ]
    ],
    "code": "1210001013212111101131210101130231210000302133023121000031210000302132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf17f;&#xf24a;&#xf16f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf154;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1280
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1 2 3) | vector vector 1 2 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1",
        "2",
        "3"
      ]
    ],
    "code": "121000101321211110113121010113023121000030213021030211330231210000312100003021302103021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf17f;&#xf24a;&#xf16f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1281
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1 (vector 5 2) 3) | vector vector 1 (vector vector 5 2) 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1",
          [
            "vector",
            "5",
            "2"
          ],
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1",
        [
          "vector",
          "vector",
          "5",
          "2"
        ],
        "3"
      ]
    ],
    "code": "1210001013212111101131210101130231210000302132121000030210130210330211330231210000312100003021321210000312100003021013021033021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf17f;&#xf24a;&#xf16f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf207;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf154;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1282
  },
  {
    "role": "code",
    "lines": [
      "list= (quote-f x | vector 1 (vector 5 2) (vector x + 5 2)) | vector vector 1 (vector vector 5 2) (vector + 5 2);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote-f",
        "x",
        [
          -1,
          "vector",
          "1",
          [
            "vector",
            "5",
            "2"
          ],
          [
            "vector",
            "x",
            "+",
            "5",
            "2"
          ]
        ]
      ],
      [
        -1,
        "vector",
        "vector",
        "1",
        [
          "vector",
          "vector",
          "5",
          "2"
        ],
        [
          "vector",
          "+",
          "5",
          "2"
        ]
      ]
    ],
    "code": "12100010132121111011312101011302312100003021321210000302101302103321210000312101011312101030210130210333023121000031210000302132121000031210000302101302103321210000312101030210130210332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf17f;&#xf24a;&#xf16f;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf16f;&#xf24a;&#xf14e;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf154;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf14e;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1283
  },
  {
    "role": "code",
    "lines": [
      "intro quote;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "quote"
    ],
    "code": "1210010312111110132233",
    "spider": "&#xf156;&#xf24a;&#xf145;&#xf181;&#xf24b;",
    "stanza": 1284
  },
  {
    "role": "code",
    "lines": [
      "define translate | assign prev $translate | ? x |",
      "  if (not | function? $x) $x |",
      "  if (not | = quote | head $x) (prev $x) |",
      "  translate | quote-f (list-ref $x 1) (list-ref $x 2);"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "assign",
        "prev",
        [
          -2,
          "translate"
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              -2,
              "x"
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "quote",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "translate",
                [
                  -1,
                  "quote-f",
                  [
                    "list-ref",
                    [
                      -2,
                      "x"
                    ],
                    "1"
                  ],
                  [
                    "list-ref",
                    [
                      -2,
                      "x"
                    ],
                    "2"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312110013023121110312110011131231211001302312110031210101130231211113212101302312111013123121010113312312101011302312111132121013023121131211111013023121211111030203312312101011332121100111312312101011330231211001302312111101132121000011312312101011302133212100001131231210101130210332233",
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf16b;&#xf249;&#xf15d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf145;&#xf181;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf15d;&#xf248;&#xf145;&#xf17f;&#xf246;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf24b;",
    "stanza": 1285
  },
  {
    "role": "code",
    "lines": [
      "= (quote x 1) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "quote",
        "x",
        "1"
      ],
      "1"
    ],
    "code": "12113212111110131210101130213302132233",
    "spider": "&#xf147;&#xf246;&#xf145;&#xf181;&#xf24a;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1286
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1) | vector 1;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1"
        ]
      ],
      [
        -1,
        "vector",
        "1"
      ]
    ],
    "code": "121000101321211111013121010113023021330231210000302132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf181;&#xf24a;&#xf16f;&#xf248;&#xf205;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1287
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1 2 3) | vector 1 2 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1",
          "2",
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "1",
        "2",
        "3"
      ]
    ],
    "code": "12100010132121111101312101011302302130210302113302312100003021302103021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf181;&#xf24a;&#xf16f;&#xf248;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1288
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1 (5 2) 3) | vector 1 (vector 5 2) 3;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1",
          [
            "5",
            "2"
          ],
          "3"
        ]
      ],
      [
        -1,
        "vector",
        "1",
        [
          "vector",
          "5",
          "2"
        ],
        "3"
      ]
    ],
    "code": "12100010132121111101312101011302302132021013021033021133023121000030213212100003021013021033021132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf181;&#xf24a;&#xf16f;&#xf248;&#xf205;&#xf246;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf207;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1289
  },
  {
    "role": "code",
    "lines": [
      "list= (quote x | 1 (5 2) (x + 5 2)) | vector 1 (vector 5 2) 7;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "quote",
        "x",
        [
          -1,
          "1",
          [
            "5",
            "2"
          ],
          [
            "x",
            "+",
            "5",
            "2"
          ]
        ]
      ],
      [
        -1,
        "vector",
        "1",
        [
          "vector",
          "5",
          "2"
        ],
        "7"
      ]
    ],
    "code": "121000101321211111013121010113023021320210130210332121010113121010302101302103330231210000302132121000030210130210330211132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf145;&#xf181;&#xf24a;&#xf16f;&#xf248;&#xf205;&#xf246;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf16f;&#xf24a;&#xf14e;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf246;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 1290
  },
  {
    "role": "file",
    "lines": [
      "== COS_NewType =="
    ],
    "stanza": 1291
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "introduce simple form of typing, for ease of documentation.",
    "section_category": "OBJECT",
    "section_index": 36,
    "stanza": 1292
  },
  {
    "role": "doc",
    "lines": [
      "",
      "An object is simply a function that takes an argument.",
      "The argument is the method to call on the object.",
      "Types are here taken to be just the existence of a particular method,",
      "with that method returning an object of the appropriate type.",
      ""
    ],
    "stanza": 1293
  },
  {
    "role": "code",
    "lines": [
      "define make-integer | ? x | ? n |",
      "  if (= $n int) $x 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "make-integer",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "if",
            [
              "=",
              [
                -2,
                "n"
              ],
              "int"
            ],
            [
              -2,
              "x"
            ],
            "0"
          ]
        ]
      ]
    ],
    "code": "12110131211111103023121100312101011302312110031211111130231211113212113123121111113121100003312312101011302032233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf182;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf174;&#xf245;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1294
  },
  {
    "role": "code",
    "lines": [
      "define objectify | ? x |",
      "  if (function? $x) $x |",
      "  make-integer $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "objectify",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "if",
          [
            "function?",
            [
              -2,
              "x"
            ]
          ],
          [
            -2,
            "x"
          ],
          [
            -1,
            "make-integer",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121111111302312110031210101130231211113212111013123121010113312312101011302312111111031231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf183;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf248;&#xf145;&#xf182;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1295
  },
  {
    "role": "doc",
    "lines": [
      "add version of lambda that allows types to be declared"
    ],
    "stanza": 1296
  },
  {
    "role": "code",
    "lines": [
      "define translate | let ((prev $translate)) | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = lambda | head $x) (prev $x) |",
      "  let ((formals | head | tail $x)",
      "       (body | head | tail | tail $x)) |",
      "    if (= 0 | list-length $formals) (translate $body) |",
      "    if (not | function? | last $formals)",
      "      (translate | vector lambda (except-last $formals) (vector  ? (last $formals) $body)) |",
      "      let ((formal-name | first | last $formals)",
      "           (formal-type | second | last $formals)) |",
      "        translate | vector",
      "          lambda (except-last $formals) |",
      "            vector ? $formal-name |",
      "              vector let (vector (vector $formal-name (vector",
      "                (vector objectify | vector $formal-name)",
      "                $formal-type))) $body;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "let",
        [
          [
            "prev",
            [
              -2,
              "translate"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "lambda",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "formals",
                    [
                      -1,
                      "list:0",
                      [
                        -1,
                        "list:remainder",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ],
                  [
                    "body",
                    [
                      -1,
                      "list:0",
                      [
                        -1,
                        "list:remainder",
                        [
                          -1,
                          "list:remainder",
                          [
                            -2,
                            "x"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "if",
                  [
                    "=",
                    "0",
                    [
                      -1,
                      "list-length",
                      [
                        -2,
                        "formals"
                      ]
                    ]
                  ],
                  [
                    "translate",
                    [
                      -2,
                      "body"
                    ]
                  ],
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "function?",
                        [
                          -1,
                          "last",
                          [
                            -2,
                            "formals"
                          ]
                        ]
                      ]
                    ],
                    [
                      "translate",
                      [
                        -1,
                        "vector",
                        "lambda",
                        [
                          "except-last",
                          [
                            -2,
                            "formals"
                          ]
                        ],
                        [
                          "vector",
                          "?",
                          [
                            "last",
                            [
                              -2,
                              "formals"
                            ]
                          ],
                          [
                            -2,
                            "body"
                          ]
                        ]
                      ]
                    ],
                    [
                      -1,
                      "let",
                      [
                        [
                          "formal-name",
                          [
                            -1,
                            "first",
                            [
                              -1,
                              "last",
                              [
                                -2,
                                "formals"
                              ]
                            ]
                          ]
                        ],
                        [
                          "formal-type",
                          [
                            -1,
                            "second",
                            [
                              -1,
                              "last",
                              [
                                -2,
                                "formals"
                              ]
                            ]
                          ]
                        ]
                      ],
                      [
                        -1,
                        "translate",
                        [
                          -1,
                          "vector",
                          "lambda",
                          [
                            "except-last",
                            [
                              -2,
                              "formals"
                            ]
                          ],
                          [
                            -1,
                            "vector",
                            "?",
                            [
                              -2,
                              "formal-name"
                            ],
                            [
                              -1,
                              "vector",
                              "let",
                              [
                                "vector",
                                [
                                  "vector",
                                  [
                                    -2,
                                    "formal-name"
                                  ],
                                  [
                                    "vector",
                                    [
                                      "vector",
                                      "objectify",
                                      [
                                        -1,
                                        "vector",
                                        [
                                          -2,
                                          "formal-name"
                                        ]
                                      ]
                                    ],
                                    [
                                      -2,
                                      "formal-type"
                                    ]
                                  ]
                                ]
                              ],
                              [
                                -2,
                                "body"
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf15d;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf15e;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf144;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf145;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf146;&#xf144;&#xf245;&#xf246;&#xf15d;&#xf249;&#xf146;&#xf145;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf248;&#xf145;&#xf151;&#xf249;&#xf146;&#xf144;&#xf245;&#xf246;&#xf15d;&#xf248;&#xf154;&#xf24a;&#xf15e;&#xf246;&#xf145;&#xf152;&#xf249;&#xf146;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf150;&#xf246;&#xf145;&#xf151;&#xf249;&#xf146;&#xf144;&#xf245;&#xf249;&#xf146;&#xf145;&#xf245;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf146;&#xf248;&#xf145;&#xf14b;&#xf248;&#xf145;&#xf151;&#xf249;&#xf146;&#xf144;&#xf245;&#xf246;&#xf146;&#xf147;&#xf248;&#xf145;&#xf14c;&#xf248;&#xf145;&#xf151;&#xf249;&#xf146;&#xf144;&#xf245;&#xf245;&#xf248;&#xf15d;&#xf248;&#xf154;&#xf24a;&#xf15e;&#xf246;&#xf145;&#xf152;&#xf249;&#xf146;&#xf144;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf150;&#xf249;&#xf146;&#xf146;&#xf248;&#xf154;&#xf24a;&#xf145;&#xf168;&#xf246;&#xf154;&#xf246;&#xf154;&#xf249;&#xf146;&#xf146;&#xf246;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf145;&#xf183;&#xf248;&#xf154;&#xf249;&#xf146;&#xf146;&#xf245;&#xf249;&#xf146;&#xf147;&#xf245;&#xf245;&#xf245;&#xf249;&#xf146;&#xf145;&#xf24b;",
    "stanza": 1297
  },
  {
    "role": "doc",
    "lines": [
      "add conditional form"
    ],
    "stanza": 1298
  },
  {
    "role": "code",
    "lines": [
      "intro cond;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cond"
    ],
    "code": "12100103121000010032233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf148;&#xf24b;",
    "stanza": 1299
  },
  {
    "role": "code",
    "lines": [
      "define translate | let ((prev $translate)) | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = cond | head $x) (prev $x) |",
      "  let ((cnd | head | tail $x)",
      "       (rem | tail | tail $x)) |",
      "    if (= 0 | list-length $rem) (translate $cnd) |",
      "    translate (vector if (first $cnd) (second $cnd) (prepend cond $rem));"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "let",
        [
          [
            "prev",
            [
              -2,
              "translate"
            ]
          ]
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "cond",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "cnd",
                    [
                      -1,
                      "list:0",
                      [
                        -1,
                        "list:remainder",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ],
                  [
                    "rem",
                    [
                      -1,
                      "list:remainder",
                      [
                        -1,
                        "list:remainder",
                        [
                          -2,
                          "x"
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "if",
                  [
                    "=",
                    "0",
                    [
                      -1,
                      "list-length",
                      [
                        -2,
                        "rem"
                      ]
                    ]
                  ],
                  [
                    "translate",
                    [
                      -2,
                      "cnd"
                    ]
                  ],
                  [
                    -1,
                    "translate",
                    [
                      "vector",
                      "if",
                      [
                        "first",
                        [
                          -2,
                          "cnd"
                        ]
                      ],
                      [
                        "second",
                        [
                          -2,
                          "cnd"
                        ]
                      ],
                      [
                        "prepend",
                        "cond",
                        [
                          -2,
                          "rem"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf15d;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf146;&#xf148;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf149;&#xf248;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf14a;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf146;&#xf14a;&#xf245;&#xf246;&#xf15d;&#xf249;&#xf146;&#xf149;&#xf245;&#xf248;&#xf15d;&#xf246;&#xf154;&#xf24a;&#xf153;&#xf246;&#xf145;&#xf14b;&#xf249;&#xf146;&#xf149;&#xf245;&#xf246;&#xf145;&#xf14c;&#xf249;&#xf146;&#xf149;&#xf245;&#xf246;&#xf145;&#xf14a;&#xf24a;&#xf146;&#xf148;&#xf249;&#xf146;&#xf14a;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1300
  },
  {
    "role": "code",
    "lines": [
      "= 99 | cond 99;"
    ],
    "dt": false,
    "parse": [
      "=",
      "99",
      [
        -1,
        "cond",
        "99"
      ]
    ],
    "code": "1211302110001130231210000100302110001132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf227;&#xf248;&#xf146;&#xf148;&#xf24a;&#xf205;&#xf227;&#xf24b;",
    "stanza": 1301
  },
  {
    "role": "code",
    "lines": [
      "= 8 | cond ($true 8) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "8",
      [
        -1,
        "cond",
        [
          [
            -2,
            "true"
          ],
          "8"
        ],
        "11"
      ]
    ],
    "code": "12113021000302312100001003212312130210003302101132233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf248;&#xf146;&#xf148;&#xf246;&#xf249;&#xf145;&#xf24a;&#xf20c;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 1302
  },
  {
    "role": "code",
    "lines": [
      "= 11 | cond ($false 8) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        "cond",
        [
          [
            -2,
            "false"
          ],
          "8"
        ],
        "11"
      ]
    ],
    "code": "12113021011302312100001003212312030210003302101132233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf249;&#xf144;&#xf24a;&#xf20c;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 1303
  },
  {
    "role": "code",
    "lines": [
      "= 7 | cond ($false 3) ($true 7) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "7",
      [
        -1,
        "cond",
        [
          [
            -2,
            "false"
          ],
          "3"
        ],
        [
          [
            -2,
            "true"
          ],
          "7"
        ],
        "11"
      ]
    ],
    "code": "12113021113023121000010032123120302113321231213021113302101132233",
    "spider": "&#xf147;&#xf24a;&#xf20b;&#xf248;&#xf146;&#xf148;&#xf246;&#xf249;&#xf144;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf249;&#xf145;&#xf24a;&#xf20b;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 1304
  },
  {
    "role": "code",
    "lines": [
      "= 3 | cond ($true 3) ($true 7) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "cond",
        [
          [
            -2,
            "true"
          ],
          "3"
        ],
        [
          [
            -2,
            "true"
          ],
          "7"
        ],
        "11"
      ]
    ],
    "code": "1211302113023121000010032123121302113321231213021113302101132233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf146;&#xf148;&#xf246;&#xf249;&#xf145;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf249;&#xf145;&#xf24a;&#xf20b;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 1305
  },
  {
    "role": "code",
    "lines": [
      "= 11 | cond ($false 3) ($false 7) 11;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        "cond",
        [
          [
            -2,
            "false"
          ],
          "3"
        ],
        [
          [
            -2,
            "false"
          ],
          "7"
        ],
        "11"
      ]
    ],
    "code": "121130210113023121000010032123120302113321231203021113302101132233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf249;&#xf144;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf249;&#xf144;&#xf24a;&#xf20b;&#xf245;&#xf20f;&#xf24b;",
    "stanza": 1306
  },
  {
    "role": "code",
    "lines": [
      "define remove-match | lambda (test lst) |",
      "  if (= 0 | list-length $lst) $lst |",
      "  if (test | head $lst) (remove-match $test (tail $lst)) |",
      "  prepend (head $lst) (remove-match $test (tail $lst));"
    ],
    "dt": true,
    "parse": [
      "@",
      "remove-match",
      [
        -1,
        "lambda",
        [
          "test",
          "lst"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst"
              ]
            ]
          ],
          [
            -2,
            "lst"
          ],
          [
            -1,
            "if",
            [
              "test",
              [
                -1,
                "list:0",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "remove-match",
              [
                -2,
                "test"
              ],
              [
                "list:remainder",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              -1,
              "prepend",
              [
                "list:0",
                [
                  -2,
                  "lst"
                ]
              ],
              [
                "remove-match",
                [
                  -2,
                  "test"
                ],
                [
                  "list:remainder",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100001113023121101032121010011312101000133023121111321211302030231210000103123121010001331231210100013023121111321210100113023121211111030203312312101000133212100001113123121010011321212111110312100000133123121010001333023121000110321212111110302033123121010001332121000011131231210100113212121111103121000001331231210100013332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf14b;&#xf248;&#xf15e;&#xf246;&#xf145;&#xf157;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf145;&#xf155;&#xf248;&#xf153;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf146;&#xf14b;&#xf249;&#xf145;&#xf157;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf146;&#xf14b;&#xf249;&#xf145;&#xf157;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1307
  },
  {
    "role": "code",
    "lines": [
      "define remove-element | ? x |",
      "  remove-match (? y | = $y $x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "remove-element",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "remove-match",
          [
            "?",
            "y",
            [
              -1,
              "=",
              [
                -2,
                "y"
              ],
              [
                -2,
                "x"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100010003023121100312101011302312100001113212110031211010030231211312312110100312312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf14b;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf147;&#xf249;&#xf178;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1308
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3 5) | remove-element 4 | vector 1 2 3 4 5;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3",
        "5"
      ],
      [
        -1,
        "remove-element",
        "4",
        [
          -1,
          "vector",
          "1",
          "2",
          "3",
          "4",
          "5"
        ]
      ]
    ],
    "code": "12100010132121000030213021030211302101330231210001000302100302312100003021302103021130210030210132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf146;&#xf14c;&#xf24a;&#xf208;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1309
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3 5) | remove-element 4 | vector 1 4 2 4 3 4 5;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3",
        "5"
      ],
      [
        -1,
        "remove-element",
        "4",
        [
          -1,
          "vector",
          "1",
          "4",
          "2",
          "4",
          "3",
          "4",
          "5"
        ]
      ]
    ],
    "code": "12100010132121000030213021030211302101330231210001000302100302312100003021302100302103021003021130210030210132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf146;&#xf14c;&#xf24a;&#xf208;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1310
  },
  {
    "role": "code",
    "lines": [
      "intro instanceof;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "instanceof"
    ],
    "code": "12100103121000100132233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf14d;&#xf24b;",
    "stanza": 1311
  },
  {
    "role": "code",
    "lines": [
      "define instanceof | ? T | ? t |",
      "  if (not | function? $t) (= $T int) |",
      "  function? | (objectify $t) $T;"
    ],
    "dt": true,
    "parse": [
      "@",
      "instanceof",
      [
        -1,
        "?",
        "T",
        [
          -1,
          "?",
          "t",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "t"
                ]
              ]
            ],
            [
              "=",
              [
                -2,
                "T"
              ],
              "int"
            ],
            [
              -1,
              "function?",
              [
                -1,
                [
                  "objectify",
                  [
                    -2,
                    "t"
                  ]
                ],
                [
                  -2,
                  "T"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210001001302312110031210001010302312110031210001011302312111132121013023121110131231210001011332121131231210001010312110000330231211101302321211111113123121000101133123121000101032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf14d;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf14e;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf14f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf146;&#xf14f;&#xf245;&#xf246;&#xf147;&#xf249;&#xf146;&#xf14e;&#xf24a;&#xf174;&#xf245;&#xf248;&#xf161;&#xf248;&#xf246;&#xf145;&#xf183;&#xf249;&#xf146;&#xf14f;&#xf245;&#xf249;&#xf146;&#xf14e;&#xf24b;",
    "stanza": 1312
  },
  {
    "role": "code",
    "lines": [
      "define return | ? T | ? t |",
      "  let ((obj | objectify $t)) |",
      "    obj $T;"
    ],
    "dt": true,
    "parse": [
      "@",
      "return",
      [
        -1,
        "?",
        "T",
        [
          -1,
          "?",
          "t",
          [
            -1,
            "let",
            [
              [
                "obj",
                [
                  -1,
                  "objectify",
                  [
                    -2,
                    "t"
                  ]
                ]
              ]
            ],
            [
              -1,
              "obj",
              [
                -2,
                "T"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100011003023121100312100010103023121100312100010113023121100100322121000110130231211111113123121000101133302312100011013123121000101032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf150;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf14e;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf14f;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf151;&#xf248;&#xf145;&#xf183;&#xf249;&#xf146;&#xf14f;&#xf245;&#xf245;&#xf248;&#xf146;&#xf151;&#xf249;&#xf146;&#xf14e;&#xf24b;",
    "stanza": 1313
  },
  {
    "role": "code",
    "lines": [
      "define tester | lambda ((x int) (y int)) |",
      "  return int | + $x $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "tester",
      [
        -1,
        "lambda",
        [
          [
            "x",
            "int"
          ],
          [
            "y",
            "int"
          ]
        ],
        [
          -1,
          "return",
          "int",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            [
              -2,
              "y"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100011103023121101032212101011312110000332121101003121100003330231210001100312110000302312101031231210101131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf152;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf16f;&#xf24a;&#xf174;&#xf245;&#xf246;&#xf178;&#xf24a;&#xf174;&#xf245;&#xf245;&#xf248;&#xf146;&#xf150;&#xf24a;&#xf174;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1314
  },
  {
    "role": "code",
    "lines": [
      "instanceof int 10;"
    ],
    "dt": false,
    "parse": [
      "instanceof",
      "int",
      "10"
    ],
    "code": "1210001001312110000302101032233",
    "spider": "&#xf146;&#xf14d;&#xf24a;&#xf174;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 1315
  },
  {
    "role": "code",
    "lines": [
      "= 42 | tester (make-integer 10) (make-integer 32);"
    ],
    "dt": false,
    "parse": [
      "=",
      "42",
      [
        -1,
        "tester",
        [
          "make-integer",
          "10"
        ],
        [
          "make-integer",
          "32"
        ]
      ]
    ],
    "code": "121130210101030231210001110321211111103021010332121111110302100000332233",
    "spider": "&#xf147;&#xf24a;&#xf22e;&#xf248;&#xf146;&#xf152;&#xf246;&#xf145;&#xf182;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf145;&#xf182;&#xf24a;&#xf224;&#xf245;&#xf24b;",
    "stanza": 1316
  },
  {
    "role": "code",
    "lines": [
      "= 42 | tester 10 32;"
    ],
    "dt": false,
    "parse": [
      "=",
      "42",
      [
        -1,
        "tester",
        "10",
        "32"
      ]
    ],
    "code": "121130210101030231210001110302101030210000032233",
    "spider": "&#xf147;&#xf24a;&#xf22e;&#xf248;&#xf146;&#xf152;&#xf24a;&#xf20e;&#xf24a;&#xf224;&#xf24b;",
    "stanza": 1317
  },
  {
    "role": "code",
    "lines": [
      "intro reflective;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "reflective"
    ],
    "code": "12100103121000111132233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf153;&#xf24b;",
    "stanza": 1318
  },
  {
    "role": "code",
    "lines": [
      "define reflective | ? f |",
      "  (? x | f | ? y | (x $x) $y)",
      "  (? x | f | ? y | (x $x) $y);"
    ],
    "dt": true,
    "parse": [
      "@",
      "reflective",
      [
        -1,
        "?",
        "f",
        [
          -1,
          [
            "?",
            "x",
            [
              -1,
              "f",
              [
                -1,
                "?",
                "y",
                [
                  -1,
                  [
                    "x",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ]
          ],
          [
            "?",
            "x",
            [
              -1,
              "f",
              [
                -1,
                "?",
                "y",
                [
                  -1,
                  [
                    "x",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -2,
                    "y"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210001111302312110031210010000302321211003121010113023121001000030231211003121101003023212101011312312101011331231211010033212110031210101130231210010000302312110031211010030232121010113123121010113312312110100332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf153;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf154;&#xf248;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf154;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf246;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf178;&#xf245;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf154;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf246;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf178;&#xf245;&#xf24b;",
    "stanza": 1319
  },
  {
    "role": "code",
    "lines": [
      "define woop | reflective | ? self | ? x | if (= $x 10) 22 (self 10);"
    ],
    "dt": true,
    "parse": [
      "@",
      "woop",
      [
        -1,
        "reflective",
        [
          -1,
          "?",
          "self",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "x"
                ],
                "10"
              ],
              "22",
              [
                "self",
                "10"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210010001302312100011113023121100312100100103023121100312101011302312111132121131231210101130210103302101103212100100103021010332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf155;&#xf248;&#xf146;&#xf153;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf156;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf21a;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf20e;&#xf245;&#xf24b;",
    "stanza": 1320
  },
  {
    "role": "code",
    "lines": [
      "= (woop 1) 22;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "woop",
        "1"
      ],
      "22"
    ],
    "code": "1211321210010001302133021011032233",
    "spider": "&#xf147;&#xf246;&#xf146;&#xf155;&#xf24a;&#xf205;&#xf245;&#xf21a;&#xf24b;",
    "stanza": 1321
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "message passing / object example - a 2D point",
    "section_category": "OBJECT",
    "section_index": 37,
    "stanza": 1322
  },
  {
    "role": "code",
    "lines": [
      "intro point;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "point"
    ],
    "code": "12100103121001001132233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf157;&#xf24b;",
    "stanza": 1323
  },
  {
    "role": "code",
    "lines": [
      "define point | lambda (x y) | reflective |",
      "  lambda (self msg) | cond",
      "    ((= $msg x) $x)",
      "    ((= $msg y) $y)",
      "    ((= $msg point) $self)",
      "    ((= $msg +) | lambda ((p point)) |",
      "                    point (+ $x | p x) (+ $y | p y))",
      "    ((= $msg =) | lambda ((p point)) |",
      "                    and (= $x | p x) (= $y | p y))",
      "    0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "point",
      [
        -1,
        "lambda",
        [
          "x",
          "y"
        ],
        [
          -1,
          "reflective",
          [
            -1,
            "lambda",
            [
              "self",
              "msg"
            ],
            [
              -1,
              "cond",
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "x"
                ],
                [
                  -2,
                  "x"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "y"
                ],
                [
                  -2,
                  "y"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "point"
                ],
                [
                  -2,
                  "self"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "+"
                ],
                [
                  -1,
                  "lambda",
                  [
                    [
                      "p",
                      "point"
                    ]
                  ],
                  [
                    -1,
                    "point",
                    [
                      "+",
                      [
                        -2,
                        "x"
                      ],
                      [
                        -1,
                        "p",
                        "x"
                      ]
                    ],
                    [
                      "+",
                      [
                        -2,
                        "y"
                      ],
                      [
                        -1,
                        "p",
                        "y"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "msg"
                  ],
                  "="
                ],
                [
                  -1,
                  "lambda",
                  [
                    [
                      "p",
                      "point"
                    ]
                  ],
                  [
                    -1,
                    "true:*",
                    [
                      "=",
                      [
                        -2,
                        "x"
                      ],
                      [
                        -1,
                        "p",
                        "x"
                      ]
                    ],
                    [
                      "=",
                      [
                        -2,
                        "y"
                      ],
                      [
                        -1,
                        "p",
                        "y"
                      ]
                    ]
                  ]
                ]
              ],
              "0"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100100113023121101032121010113121101003302312100011113023121101032121001001031210010100330231210000100322121131231210010100312101011331231210101133221211312312100101003121101003312312110100332212113123121001010031210010011331231210010010332212113123121001010031210103302312110103221210010101312100100113330231210010011321210103123121010113023121001010131210101133212101031231211010030231210010101312110100333221211312312100101003121133023121101032212100101013121001001133302312121312100133212113123121010113023121001010131210101133212113123121101003023121001010131211010033302032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf157;&#xf248;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf248;&#xf146;&#xf153;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf158;&#xf245;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf178;&#xf245;&#xf249;&#xf178;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf157;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf14e;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf146;&#xf159;&#xf24a;&#xf146;&#xf157;&#xf245;&#xf245;&#xf248;&#xf146;&#xf157;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf16f;&#xf245;&#xf246;&#xf14e;&#xf249;&#xf178;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf178;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf147;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf146;&#xf159;&#xf24a;&#xf146;&#xf157;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf16f;&#xf245;&#xf246;&#xf147;&#xf249;&#xf178;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf178;&#xf245;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1324
  },
  {
    "role": "code",
    "lines": [
      "define point1 | point 1 11;"
    ],
    "dt": true,
    "parse": [
      "@",
      "point1",
      [
        -1,
        "point",
        "1",
        "11"
      ]
    ],
    "code": "12110131210010110302312100100113021302101132233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf15a;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf205;&#xf24a;&#xf20f;&#xf24b;",
    "stanza": 1325
  },
  {
    "role": "code",
    "lines": [
      "define point2 | point 2 22;"
    ],
    "dt": true,
    "parse": [
      "@",
      "point2",
      [
        -1,
        "point",
        "2",
        "22"
      ]
    ],
    "code": "1211013121001011130231210010011302103021011032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf15b;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf206;&#xf24a;&#xf21a;&#xf24b;",
    "stanza": 1326
  },
  {
    "role": "code",
    "lines": [
      "= 1 | point1 x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "point1",
        "x"
      ]
    ],
    "code": "121130213023121001011031210101132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf15a;&#xf24a;&#xf16f;&#xf24b;",
    "stanza": 1327
  },
  {
    "role": "code",
    "lines": [
      "= 22 | point2 y;"
    ],
    "dt": false,
    "parse": [
      "=",
      "22",
      [
        -1,
        "point2",
        "y"
      ]
    ],
    "code": "1211302101103023121001011131211010032233",
    "spider": "&#xf147;&#xf24a;&#xf21a;&#xf248;&#xf146;&#xf15b;&#xf24a;&#xf178;&#xf24b;",
    "stanza": 1328
  },
  {
    "role": "code",
    "lines": [
      "= 11 | (point 11 12) x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          "point",
          "11",
          "12"
        ],
        "x"
      ]
    ],
    "code": "1211302101130232121001001130210113021100331210101132233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf20f;&#xf24a;&#xf210;&#xf245;&#xf16f;&#xf24b;",
    "stanza": 1329
  },
  {
    "role": "code",
    "lines": [
      "= 11 | ((point 11 12) point) x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          [
            "point",
            "11",
            "12"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "code": "12113021011302322121001001130210113021100331210010011331210101132233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf246;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf20f;&#xf24a;&#xf210;&#xf245;&#xf146;&#xf157;&#xf245;&#xf16f;&#xf24b;",
    "stanza": 1330
  },
  {
    "role": "code",
    "lines": [
      "= 16 | ((point 16 17) point) x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          [
            "point",
            "16",
            "17"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "code": "12113021000030232212100100113021000030210001331210010011331210101132233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf246;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf214;&#xf24a;&#xf215;&#xf245;&#xf146;&#xf157;&#xf245;&#xf16f;&#xf24b;",
    "stanza": 1331
  },
  {
    "role": "code",
    "lines": [
      "= 33 | (point1 + $point2) y;"
    ],
    "dt": false,
    "parse": [
      "=",
      "33",
      [
        -1,
        [
          "point1",
          "+",
          [
            -2,
            "point2"
          ]
        ],
        "y"
      ]
    ],
    "code": "1211302100001302321210010110312101031231210010111331211010032233",
    "spider": "&#xf147;&#xf24a;&#xf225;&#xf248;&#xf246;&#xf146;&#xf15a;&#xf24a;&#xf14e;&#xf249;&#xf146;&#xf15b;&#xf245;&#xf178;&#xf24b;",
    "stanza": 1332
  },
  {
    "role": "code",
    "lines": [
      "point1 + $point2 = | point 3 33;"
    ],
    "dt": false,
    "parse": [
      "point1",
      "+",
      [
        -2,
        "point2"
      ],
      "=",
      [
        -1,
        "point",
        "3",
        "33"
      ]
    ],
    "code": "121001011031210103123121001011131211302312100100113021130210000132233",
    "spider": "&#xf146;&#xf15a;&#xf24a;&#xf14e;&#xf249;&#xf146;&#xf15b;&#xf24a;&#xf147;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf207;&#xf24a;&#xf225;&#xf24b;",
    "stanza": 1333
  },
  {
    "role": "code",
    "lines": [
      "point2 + $point1 = | point 3 33;"
    ],
    "dt": false,
    "parse": [
      "point2",
      "+",
      [
        -2,
        "point1"
      ],
      "=",
      [
        -1,
        "point",
        "3",
        "33"
      ]
    ],
    "code": "121001011131210103123121001011031211302312100100113021130210000132233",
    "spider": "&#xf146;&#xf15b;&#xf24a;&#xf14e;&#xf249;&#xf146;&#xf15a;&#xf24a;&#xf147;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf207;&#xf24a;&#xf225;&#xf24b;",
    "stanza": 1334
  },
  {
    "role": "code",
    "lines": [
      "(point 100 200) + (point 200 100) = (point 300 300);"
    ],
    "dt": false,
    "parse": [
      [
        "point",
        "100",
        "200"
      ],
      "+",
      [
        "point",
        "200",
        "100"
      ],
      "=",
      [
        "point",
        "300",
        "300"
      ]
    ],
    "code": "2121001001130211001003021100100033121010321210010011302110010003021100100331211321210010011302100101100302100101100332233",
    "spider": "&#xf246;&#xf146;&#xf157;&#xf24a;&#xf205;&#xf228;&#xf24a;&#xf207;&#xf20c;&#xf245;&#xf14e;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf207;&#xf20c;&#xf24a;&#xf205;&#xf228;&#xf245;&#xf147;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf208;&#xf230;&#xf24a;&#xf208;&#xf230;&#xf245;&#xf24b;",
    "stanza": 1335
  },
  {
    "role": "code",
    "lines": [
      "instanceof point $point1;"
    ],
    "dt": false,
    "parse": [
      "instanceof",
      "point",
      [
        -2,
        "point1"
      ]
    ],
    "code": "1210001001312100100113123121001011032233",
    "spider": "&#xf146;&#xf14d;&#xf24a;&#xf146;&#xf157;&#xf249;&#xf146;&#xf15a;&#xf24b;",
    "stanza": 1336
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof int $point1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "int",
        [
          -2,
          "point1"
        ]
      ]
    ],
    "code": "12101302312100010013121100003123121001011032233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf14d;&#xf24a;&#xf174;&#xf249;&#xf146;&#xf15a;&#xf24b;",
    "stanza": 1337
  },
  {
    "role": "code",
    "lines": [
      "instanceof int 5;"
    ],
    "dt": false,
    "parse": [
      "instanceof",
      "int",
      "5"
    ],
    "code": "121000100131211000030210132233",
    "spider": "&#xf146;&#xf14d;&#xf24a;&#xf174;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1338
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof point 5;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "point",
        "5"
      ]
    ],
    "code": "12101302312100010013121001001130210132233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf14d;&#xf24a;&#xf146;&#xf157;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1339
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "message passing / object example - a container",
    "section_category": "OBJECT",
    "section_index": 38,
    "stanza": 1340
  },
  {
    "role": "code",
    "lines": [
      "intro container;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "container"
    ],
    "code": "12100103121001100032233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf15c;&#xf24b;",
    "stanza": 1341
  },
  {
    "role": "code",
    "lines": [
      "define container | ? x | assign contents (make-cell | vector) | reflective |",
      "  lambda (self msg) | cond",
      "    ((= $msg container) $self)",
      "    ((= $msg inventory) | get! $contents)",
      "    ((= $msg add) | ? x | if (element $x | get! $contents) $false | ",
      "                         set! $contents | prepend $x | get! $contents)",
      "    ((= $msg remove) | ? x | set! $contents | remove-element $x | get! $contents)",
      "    ((= $msg =) | lambda ((c container)) | set:= (self inventory) (c inventory))",
      "    0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "container",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "assign",
          "contents",
          [
            "cell:make",
            [
              -1,
              "vector"
            ]
          ],
          [
            -1,
            "reflective",
            [
              -1,
              "lambda",
              [
                "self",
                "msg"
              ],
              [
                -1,
                "cond",
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "container"
                  ],
                  [
                    -2,
                    "self"
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "inventory"
                  ],
                  [
                    -1,
                    "cell:get",
                    [
                      -2,
                      "contents"
                    ]
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "add"
                  ],
                  [
                    -1,
                    "?",
                    "x",
                    [
                      -1,
                      "if",
                      [
                        "element",
                        [
                          -2,
                          "x"
                        ],
                        [
                          -1,
                          "cell:get",
                          [
                            -2,
                            "contents"
                          ]
                        ]
                      ],
                      [
                        -2,
                        "false"
                      ],
                      [
                        -1,
                        "cell:assign",
                        [
                          -2,
                          "contents"
                        ],
                        [
                          -1,
                          "prepend",
                          [
                            -2,
                            "x"
                          ],
                          [
                            -1,
                            "cell:get",
                            [
                              -2,
                              "contents"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "remove"
                  ],
                  [
                    -1,
                    "?",
                    "x",
                    [
                      -1,
                      "cell:assign",
                      [
                        -2,
                        "contents"
                      ],
                      [
                        -1,
                        "remove-element",
                        [
                          -2,
                          "x"
                        ],
                        [
                          -1,
                          "cell:get",
                          [
                            -2,
                            "contents"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "="
                  ],
                  [
                    -1,
                    "lambda",
                    [
                      [
                        "c",
                        "container"
                      ]
                    ],
                    [
                      -1,
                      "set:=",
                      [
                        "self",
                        "inventory"
                      ],
                      [
                        "c",
                        "inventory"
                      ]
                    ]
                  ]
                ],
                "0"
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf15c;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf146;&#xf15d;&#xf246;&#xf169;&#xf15f;&#xf248;&#xf154;&#xf245;&#xf248;&#xf146;&#xf153;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf158;&#xf245;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf15c;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf248;&#xf169;&#xf181;&#xf249;&#xf146;&#xf15d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf15f;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf145;&#xf16e;&#xf249;&#xf16f;&#xf248;&#xf169;&#xf181;&#xf249;&#xf146;&#xf15d;&#xf245;&#xf249;&#xf144;&#xf248;&#xf169;&#xf152;&#xf249;&#xf146;&#xf15d;&#xf248;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf248;&#xf169;&#xf181;&#xf249;&#xf146;&#xf15d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf160;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf169;&#xf152;&#xf249;&#xf146;&#xf15d;&#xf248;&#xf146;&#xf14c;&#xf249;&#xf16f;&#xf248;&#xf169;&#xf181;&#xf249;&#xf146;&#xf15d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf147;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf17c;&#xf24a;&#xf146;&#xf15c;&#xf245;&#xf245;&#xf248;&#xf145;&#xf16f;&#xf147;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf246;&#xf17c;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1342
  },
  {
    "role": "code",
    "lines": [
      "define pocket | container new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pocket",
      [
        -1,
        "container",
        "new"
      ]
    ],
    "code": "12110131210011101302312100110003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf161;&#xf248;&#xf146;&#xf15c;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1343
  },
  {
    "role": "code",
    "lines": [
      "pocket add 77;"
    ],
    "dt": false,
    "parse": [
      "pocket",
      "add",
      "77"
    ],
    "code": "121001110131210011011302100110132233",
    "spider": "&#xf146;&#xf161;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf211;&#xf24b;",
    "stanza": 1344
  },
  {
    "role": "code",
    "lines": [
      "pocket add 88;"
    ],
    "dt": false,
    "parse": [
      "pocket",
      "add",
      "88"
    ],
    "code": "121001110131210011011302101100032233",
    "spider": "&#xf146;&#xf161;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf21c;&#xf24b;",
    "stanza": 1345
  },
  {
    "role": "code",
    "lines": [
      "pocket add 99;"
    ],
    "dt": false,
    "parse": [
      "pocket",
      "add",
      "99"
    ],
    "code": "121001110131210011011302110001132233",
    "spider": "&#xf146;&#xf161;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf227;&#xf24b;",
    "stanza": 1346
  },
  {
    "role": "code",
    "lines": [
      "set:= (pocket inventory) | vector 77 88 99;"
    ],
    "dt": false,
    "parse": [
      "set:=",
      [
        "pocket",
        "inventory"
      ],
      [
        -1,
        "vector",
        "77",
        "88",
        "99"
      ]
    ],
    "code": "121211010113121133212100111013121001101033023121000030210011013021011000302110001132233",
    "spider": "&#xf145;&#xf16f;&#xf147;&#xf246;&#xf146;&#xf161;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf211;&#xf24a;&#xf205;&#xf21c;&#xf24a;&#xf205;&#xf227;&#xf24b;",
    "stanza": 1347
  },
  {
    "role": "code",
    "lines": [
      "pocket remove 88;"
    ],
    "dt": false,
    "parse": [
      "pocket",
      "remove",
      "88"
    ],
    "code": "121001110131210011100302101100032233",
    "spider": "&#xf146;&#xf161;&#xf24a;&#xf146;&#xf160;&#xf24a;&#xf205;&#xf21c;&#xf24b;",
    "stanza": 1348
  },
  {
    "role": "code",
    "lines": [
      "set:= (pocket inventory) | vector 77 99;"
    ],
    "dt": false,
    "parse": [
      "set:=",
      [
        "pocket",
        "inventory"
      ],
      [
        -1,
        "vector",
        "77",
        "99"
      ]
    ],
    "code": "12121101011312113321210011101312100110103302312100003021001101302110001132233",
    "spider": "&#xf145;&#xf16f;&#xf147;&#xf246;&#xf146;&#xf161;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf211;&#xf24a;&#xf205;&#xf227;&#xf24b;",
    "stanza": 1349
  },
  {
    "role": "code",
    "lines": [
      "define pocket2 | container new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pocket2",
      [
        -1,
        "container",
        "new"
      ]
    ],
    "code": "12110131210011111302312100110003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf163;&#xf248;&#xf146;&#xf15c;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1350
  },
  {
    "role": "code",
    "lines": [
      "pocket2 add 77;"
    ],
    "dt": false,
    "parse": [
      "pocket2",
      "add",
      "77"
    ],
    "code": "121001111131210011011302100110132233",
    "spider": "&#xf146;&#xf163;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf211;&#xf24b;",
    "stanza": 1351
  },
  {
    "role": "code",
    "lines": [
      "pocket2 add 99;"
    ],
    "dt": false,
    "parse": [
      "pocket2",
      "add",
      "99"
    ],
    "code": "121001111131210011011302110001132233",
    "spider": "&#xf146;&#xf163;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf227;&#xf24b;",
    "stanza": 1352
  },
  {
    "role": "code",
    "lines": [
      "pocket2 = $pocket;"
    ],
    "dt": false,
    "parse": [
      "pocket2",
      "=",
      [
        -2,
        "pocket"
      ]
    ],
    "code": "1210011111312113123121001110132233",
    "spider": "&#xf146;&#xf163;&#xf24a;&#xf147;&#xf249;&#xf146;&#xf161;&#xf24b;",
    "stanza": 1353
  },
  {
    "role": "doc",
    "lines": [
      "a sketch of inheritance - add one method to container (count)"
    ],
    "stanza": 1354
  },
  {
    "role": "code",
    "lines": [
      "define counter-container | ? x | assign super (container new) | reflective |",
      "  lambda (self msg) | cond",
      "    ((= $msg counter-container) $self)",
      "    ((= $msg count) | list-length | super inventory)",
      "    (super $msg);"
    ],
    "dt": true,
    "parse": [
      "@",
      "counter-container",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "assign",
          "super",
          [
            "container",
            "new"
          ],
          [
            -1,
            "reflective",
            [
              -1,
              "lambda",
              [
                "self",
                "msg"
              ],
              [
                -1,
                "cond",
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "counter-container"
                  ],
                  [
                    -2,
                    "self"
                  ]
                ],
                [
                  [
                    "=",
                    [
                      -2,
                      "msg"
                    ],
                    "count"
                  ],
                  [
                    -1,
                    "list-length",
                    [
                      -1,
                      "super",
                      "inventory"
                    ]
                  ]
                ],
                [
                  "super",
                  [
                    -2,
                    "msg"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210100000302312110031210101130231211103121010000132121001100031210011110330231210001111302312110103212100100103121001010033023121000010032212113123121001010031210100000331231210010010332212113123121001010031210100010330231210000103023121010000131210011010332121010000131231210010100332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf164;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf146;&#xf165;&#xf246;&#xf146;&#xf15c;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf248;&#xf146;&#xf153;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf158;&#xf245;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf164;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf158;&#xf24a;&#xf146;&#xf166;&#xf245;&#xf248;&#xf145;&#xf146;&#xf248;&#xf146;&#xf165;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf246;&#xf146;&#xf165;&#xf249;&#xf146;&#xf158;&#xf245;&#xf24b;",
    "stanza": 1355
  },
  {
    "role": "code",
    "lines": [
      "define cc1 | counter-container new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cc1",
      [
        -1,
        "counter-container",
        "new"
      ]
    ],
    "code": "12110131210100011302312101000003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf167;&#xf248;&#xf146;&#xf164;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1356
  },
  {
    "role": "code",
    "lines": [
      "= 0 | cc1 count;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "cc1",
        "count"
      ]
    ],
    "code": "12113020302312101000113121010001032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf167;&#xf24a;&#xf146;&#xf166;&#xf24b;",
    "stanza": 1357
  },
  {
    "role": "code",
    "lines": [
      "cc1 add 4;"
    ],
    "dt": false,
    "parse": [
      "cc1",
      "add",
      "4"
    ],
    "code": "12101000113121001101130210032233",
    "spider": "&#xf146;&#xf167;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1358
  },
  {
    "role": "code",
    "lines": [
      "= 1 | cc1 count;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "cc1",
        "count"
      ]
    ],
    "code": "12113021302312101000113121010001032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf167;&#xf24a;&#xf146;&#xf166;&#xf24b;",
    "stanza": 1359
  },
  {
    "role": "code",
    "lines": [
      "cc1 add 8;"
    ],
    "dt": false,
    "parse": [
      "cc1",
      "add",
      "8"
    ],
    "code": "121010001131210011011302100032233",
    "spider": "&#xf146;&#xf167;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf20c;&#xf24b;",
    "stanza": 1360
  },
  {
    "role": "code",
    "lines": [
      "= 2 | cc1 count;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "cc1",
        "count"
      ]
    ],
    "code": "121130210302312101000113121010001032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf146;&#xf167;&#xf24a;&#xf146;&#xf166;&#xf24b;",
    "stanza": 1361
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "adding a special form for classes",
    "section_category": "OBJECT",
    "section_index": 39,
    "stanza": 1362
  },
  {
    "role": "code",
    "lines": [
      "intro list-append;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "list-append"
    ],
    "code": "12100103121010010032233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf168;&#xf24b;",
    "stanza": 1363
  },
  {
    "role": "code",
    "lines": [
      "define list-append | lambda (lst1 lst2) |",
      "  if (= 0 | list-length $lst1) $lst2 |",
      "  list-append (except-last $lst1) | prepend (last | $lst1) $lst2;"
    ],
    "dt": true,
    "parse": [
      "@",
      "list-append",
      [
        -1,
        "lambda",
        [
          "lst1",
          "lst2"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst1"
              ]
            ]
          ],
          [
            -2,
            "lst2"
          ],
          [
            -1,
            "list-append",
            [
              "except-last",
              [
                -2,
                "lst1"
              ]
            ],
            [
              -1,
              "prepend",
              [
                "last",
                [
                  -1,
                  [
                    -2,
                    "lst1"
                  ]
                ]
              ],
              [
                -2,
                "lst2"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210100100302312110103212101001013121010011033023121111321211302030231210000103123121010010133123121010011030231210100100321210011103123121010010133023121000110321210011013023123121010010133123121010011032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf168;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf169;&#xf24a;&#xf146;&#xf16a;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf146;&#xf169;&#xf245;&#xf249;&#xf146;&#xf16a;&#xf248;&#xf146;&#xf168;&#xf246;&#xf145;&#xf152;&#xf249;&#xf146;&#xf169;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf145;&#xf151;&#xf248;&#xf249;&#xf146;&#xf169;&#xf245;&#xf249;&#xf146;&#xf16a;&#xf24b;",
    "stanza": 1364
  },
  {
    "role": "code",
    "lines": [
      "list= (vector 1 2 3 4 5 6) | list-append (vector 1 2 3) (vector 4 5 6);"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "vector",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ],
      [
        -1,
        "list-append",
        [
          "vector",
          "1",
          "2",
          "3"
        ],
        [
          "vector",
          "4",
          "5",
          "6"
        ]
      ]
    ],
    "code": "12100010132121000030213021030211302100302101302110330231210100100321210000302130210302113321210000302100302101302110332233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf146;&#xf168;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf24b;",
    "stanza": 1365
  },
  {
    "role": "code",
    "lines": [
      "define unique | assign store (make-cell 0) | ? x |",
      "  assign id (get! $store) |",
      "  begin (set! $store (+ $id 1)) $id;"
    ],
    "dt": true,
    "parse": [
      "@",
      "unique",
      [
        -1,
        "assign",
        "store",
        [
          "cell:make",
          "0"
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "assign",
            "id",
            [
              "cell:get",
              [
                -2,
                "store"
              ]
            ],
            [
              -1,
              "begin",
              [
                "cell:assign",
                [
                  -2,
                  "store"
                ],
                [
                  "+",
                  [
                    -2,
                    "id"
                  ],
                  "1"
                ]
              ],
              [
                -2,
                "id"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121010011130231211103121010100032121210010131211011330203302312110031210101130231211103121010100132121210010131211110133123121010100033023121001011321212100101312111033123121010100032121010312312101010013021333123121010100132233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf16b;&#xf248;&#xf152;&#xf24a;&#xf146;&#xf16c;&#xf246;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf146;&#xf16d;&#xf246;&#xf169;&#xf181;&#xf249;&#xf146;&#xf16c;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf169;&#xf152;&#xf249;&#xf146;&#xf16c;&#xf246;&#xf14e;&#xf249;&#xf146;&#xf16d;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf249;&#xf146;&#xf16d;&#xf24b;",
    "stanza": 1366
  },
  {
    "role": "code",
    "lines": [
      "= 0 | unique new;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "unique",
        "new"
      ]
    ],
    "code": "12113020302312101001113121001111032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf146;&#xf16b;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1367
  },
  {
    "role": "code",
    "lines": [
      "= 1 | unique new;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "unique",
        "new"
      ]
    ],
    "code": "12113021302312101001113121001111032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf16b;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1368
  },
  {
    "role": "code",
    "lines": [
      "= 2 | unique new;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "unique",
        "new"
      ]
    ],
    "code": "121130210302312101001113121001111032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf146;&#xf16b;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1369
  },
  {
    "role": "code",
    "lines": [
      "not | = (unique new) (unique new);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "=",
        [
          "unique",
          "new"
        ],
        [
          "unique",
          "new"
        ]
      ]
    ],
    "code": "121013023121132121010011131210011110332121010011131210011110332233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf246;&#xf146;&#xf16b;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf16b;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf24b;",
    "stanza": 1370
  },
  {
    "role": "code",
    "lines": [
      "define setup-this | lambda (this self) | if (function? $this) $this $self;"
    ],
    "dt": true,
    "parse": [
      "@",
      "setup-this",
      [
        -1,
        "lambda",
        [
          "this",
          "self"
        ],
        [
          -1,
          "if",
          [
            "function?",
            [
              -2,
              "this"
            ]
          ],
          [
            -2,
            "this"
          ],
          [
            -2,
            "self"
          ]
        ]
      ]
    ],
    "code": "12110131210101010302312110103212101010113121001001033023121111321211101312312101010113312312101010113123121001001032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf16e;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf16f;&#xf24a;&#xf146;&#xf156;&#xf245;&#xf248;&#xf153;&#xf246;&#xf161;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf249;&#xf146;&#xf156;&#xf24b;",
    "stanza": 1371
  },
  {
    "role": "code",
    "lines": [
      "define standard-class-methods | ? name | quote @@ |",
      "  ((= $method self) $self)",
      "  ((= $method (@@ name)) (self self))",
      "  ((= $method classname) (@@ name))",
      "  ((= $method unknown) | ? x 0)",
      "  ((= $method new) 0)",
      "  ((= $method unique-id) $unique-id)",
      "  ((= $method ==) | ? x | = $unique-id | x unique-id)",
      "  (self unknown $method);"
    ],
    "dt": true,
    "parse": [
      "@",
      "standard-class-methods",
      [
        -1,
        "?",
        "name",
        [
          -1,
          "quote",
          "@@",
          [
            -1,
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "self"
              ],
              [
                -2,
                "self"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                [
                  "@@",
                  "name"
                ]
              ],
              [
                "self",
                "self"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "classname"
              ],
              [
                "@@",
                "name"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "unknown"
              ],
              [
                -1,
                "?",
                "x",
                "0"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "new"
              ],
              "0"
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "unique-id"
              ],
              [
                -2,
                "unique-id"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "method"
                ],
                "=="
              ],
              [
                -1,
                "?",
                "x",
                [
                  -1,
                  "=",
                  [
                    -2,
                    "unique-id"
                  ],
                  [
                    -1,
                    "x",
                    "unique-id"
                  ]
                ]
              ]
            ],
            [
              "self",
              "unknown",
              [
                -2,
                "method"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121010110030231211003121010110130231211111013121010111030232212113123121010111131210010010331231210010010332212113123121010111132121010111031210101101333212100100103121001001033322121131231210101111312101100003321210101110312101011013332212113123121010111131210110001330231211003121010113020332212113123121010111131210011110330203322121131231210101111312101100103312312101100103322121131231210101111312101100113302312110031210101130231211312312101100103023121010113121011001033212100100103121011000131231210101111332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf170;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf171;&#xf248;&#xf145;&#xf181;&#xf24a;&#xf146;&#xf172;&#xf248;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf156;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf146;&#xf171;&#xf245;&#xf245;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf174;&#xf245;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf146;&#xf171;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf176;&#xf245;&#xf249;&#xf146;&#xf176;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf177;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf249;&#xf146;&#xf176;&#xf248;&#xf16f;&#xf24a;&#xf146;&#xf176;&#xf245;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf175;&#xf249;&#xf146;&#xf173;&#xf245;&#xf24b;",
    "stanza": 1372
  },
  {
    "role": "code",
    "lines": [
      "define custom-class-methods | lambda (name args fields) | list-append",
      "  (map (? x | quote @@ | (= $method | @@ first $x) (@@ second $x))",
      "       (map $tail | select-match (? x | = method | first $x) $fields))",
      "  (map (? x | quote @@ | (= $method | @@ x) ((@@ x)))",
      "       (map $second | select-match (? x | = field | first $x) $fields));"
    ],
    "dt": true,
    "parse": [
      "@",
      "custom-class-methods",
      [
        -1,
        "lambda",
        [
          "name",
          "args",
          "fields"
        ],
        [
          -1,
          "list-append",
          [
            "map",
            [
              "?",
              "x",
              [
                -1,
                "quote",
                "@@",
                [
                  -1,
                  [
                    "=",
                    [
                      -2,
                      "method"
                    ],
                    [
                      -1,
                      "@@",
                      "first",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ],
                  [
                    "@@",
                    "second",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ]
            ],
            [
              "map",
              [
                -2,
                "list:remainder"
              ],
              [
                -1,
                "select-match",
                [
                  "?",
                  "x",
                  [
                    -1,
                    "=",
                    "method",
                    [
                      -1,
                      "first",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "fields"
                ]
              ]
            ]
          ],
          [
            "map",
            [
              "?",
              "x",
              [
                -1,
                "quote",
                "@@",
                [
                  -1,
                  [
                    "=",
                    [
                      -2,
                      "method"
                    ],
                    [
                      -1,
                      "@@",
                      "x"
                    ]
                  ],
                  [
                    [
                      "@@",
                      "x"
                    ]
                  ]
                ]
              ]
            ],
            [
              "map",
              [
                -2,
                "second"
              ],
              [
                -1,
                "select-match",
                [
                  "?",
                  "x",
                  [
                    -1,
                    "=",
                    "field",
                    [
                      -1,
                      "first",
                      [
                        -2,
                        "x"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "fields"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf178;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf171;&#xf24a;&#xf146;&#xf179;&#xf24a;&#xf146;&#xf17a;&#xf245;&#xf248;&#xf146;&#xf168;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf181;&#xf24a;&#xf146;&#xf172;&#xf248;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf248;&#xf146;&#xf172;&#xf24a;&#xf145;&#xf14b;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf145;&#xf14c;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf249;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf24a;&#xf146;&#xf173;&#xf248;&#xf145;&#xf14b;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf146;&#xf17a;&#xf245;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf181;&#xf24a;&#xf146;&#xf172;&#xf248;&#xf246;&#xf147;&#xf249;&#xf146;&#xf173;&#xf248;&#xf146;&#xf172;&#xf24a;&#xf16f;&#xf245;&#xf246;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf249;&#xf145;&#xf14c;&#xf248;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf24a;&#xf146;&#xf17b;&#xf248;&#xf145;&#xf14b;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf146;&#xf17a;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1373
  },
  {
    "role": "code",
    "lines": [
      "define class-cond | lambda (name args fields) | prepend cond | list-append",
      "  (custom-class-methods $name $args $fields)",
      "  (standard-class-methods $name);"
    ],
    "dt": true,
    "parse": [
      "@",
      "class-cond",
      [
        -1,
        "lambda",
        [
          "name",
          "args",
          "fields"
        ],
        [
          -1,
          "prepend",
          "cond",
          [
            -1,
            "list-append",
            [
              "custom-class-methods",
              [
                -2,
                "name"
              ],
              [
                -2,
                "args"
              ],
              [
                -2,
                "fields"
              ]
            ],
            [
              "standard-class-methods",
              [
                -2,
                "name"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210111000302312110103212101011013121011010131210110110330231210001103121000010030231210100100321210110100312312101011013123121011010131231210110110332121010110031231210101101332233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf17c;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf171;&#xf24a;&#xf146;&#xf179;&#xf24a;&#xf146;&#xf17a;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf24a;&#xf146;&#xf148;&#xf248;&#xf146;&#xf168;&#xf246;&#xf146;&#xf178;&#xf249;&#xf146;&#xf171;&#xf249;&#xf146;&#xf179;&#xf249;&#xf146;&#xf17a;&#xf245;&#xf246;&#xf146;&#xf170;&#xf249;&#xf146;&#xf171;&#xf245;&#xf24b;",
    "stanza": 1374
  },
  {
    "role": "code",
    "lines": [
      "intro class;"
    ],
    "dt": true,
    "parse": [
      "intro",
      "class"
    ],
    "code": "12100103121011100132233",
    "spider": "&#xf156;&#xf24a;&#xf146;&#xf17d;&#xf24b;",
    "stanza": 1375
  },
  {
    "role": "code",
    "lines": [
      "define translate | assign prev $translate | ? x |",
      "  if (not | function? $x) (prev $x) |",
      "  if (not | = class | head $x) (prev $x) |",
      "  let ((name | list-ref $x 1)",
      "       (args | list-ref $x 2)",
      "       (fields | tail | tail | tail $x)) |",
      "    translate | quote @@ |",
      "      define (@@ name) | lambda (@@ prepend ext-this $args) |",
      "        let (@@ append (vector unique-id | vector unique new)",
      "                       (map $tail | select-match (? x | = field | first $x) $fields)) |",
      "          let ((self | reflective | lambda (self) |",
      "            let ((this | setup-this $ext-this $self)) |",
      "              lambda (method) |",
      "                 @@ class-cond $name $args $fields)) |",
      "            begin (self new) $self;"
    ],
    "dt": true,
    "parse": [
      "@",
      "translate",
      [
        -1,
        "assign",
        "prev",
        [
          -2,
          "translate"
        ],
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "prev",
              [
                -2,
                "x"
              ]
            ],
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "=",
                  "class",
                  [
                    -1,
                    "list:0",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                "prev",
                [
                  -2,
                  "x"
                ]
              ],
              [
                -1,
                "let",
                [
                  [
                    "name",
                    [
                      -1,
                      "list-ref",
                      [
                        -2,
                        "x"
                      ],
                      "1"
                    ]
                  ],
                  [
                    "args",
                    [
                      -1,
                      "list-ref",
                      [
                        -2,
                        "x"
                      ],
                      "2"
                    ]
                  ],
                  [
                    "fields",
                    [
                      -1,
                      "list:remainder",
                      [
                        -1,
                        "list:remainder",
                        [
                          -1,
                          "list:remainder",
                          [
                            -2,
                            "x"
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  -1,
                  "translate",
                  [
                    -1,
                    "quote",
                    "@@",
                    [
                      -1,
                      "@",
                      [
                        "@@",
                        "name"
                      ],
                      [
                        -1,
                        "lambda",
                        [
                          "@@",
                          "prepend",
                          "ext-this",
                          [
                            -2,
                            "args"
                          ]
                        ],
                        [
                          -1,
                          "let",
                          [
                            "@@",
                            "append",
                            [
                              "vector",
                              "unique-id",
                              [
                                -1,
                                "vector",
                                "unique",
                                "new"
                              ]
                            ],
                            [
                              "map",
                              [
                                -2,
                                "list:remainder"
                              ],
                              [
                                -1,
                                "select-match",
                                [
                                  "?",
                                  "x",
                                  [
                                    -1,
                                    "=",
                                    "field",
                                    [
                                      -1,
                                      "first",
                                      [
                                        -2,
                                        "x"
                                      ]
                                    ]
                                  ]
                                ],
                                [
                                  -2,
                                  "fields"
                                ]
                              ]
                            ]
                          ],
                          [
                            -1,
                            "let",
                            [
                              [
                                "self",
                                [
                                  -1,
                                  "reflective",
                                  [
                                    -1,
                                    "lambda",
                                    [
                                      "self"
                                    ],
                                    [
                                      -1,
                                      "let",
                                      [
                                        [
                                          "this",
                                          [
                                            -1,
                                            "setup-this",
                                            [
                                              -2,
                                              "ext-this"
                                            ],
                                            [
                                              -2,
                                              "self"
                                            ]
                                          ]
                                        ]
                                      ],
                                      [
                                        -1,
                                        "lambda",
                                        [
                                          "method"
                                        ],
                                        [
                                          -1,
                                          "@@",
                                          "class-cond",
                                          [
                                            -2,
                                            "name"
                                          ],
                                          [
                                            -2,
                                            "args"
                                          ],
                                          [
                                            -2,
                                            "fields"
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ],
                            [
                              -1,
                              "begin",
                              [
                                "self",
                                "new"
                              ],
                              [
                                -2,
                                "self"
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf15d;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf16b;&#xf249;&#xf15d;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf146;&#xf17d;&#xf248;&#xf182;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf171;&#xf248;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf179;&#xf248;&#xf145;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf146;&#xf17a;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf16f;&#xf245;&#xf245;&#xf248;&#xf15d;&#xf248;&#xf145;&#xf181;&#xf24a;&#xf146;&#xf172;&#xf248;&#xf151;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf146;&#xf171;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf145;&#xf14a;&#xf24a;&#xf146;&#xf17e;&#xf249;&#xf146;&#xf179;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf146;&#xf172;&#xf24a;&#xf145;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf146;&#xf176;&#xf248;&#xf154;&#xf24a;&#xf146;&#xf16b;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf249;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf24a;&#xf146;&#xf17b;&#xf248;&#xf145;&#xf14b;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf146;&#xf17a;&#xf245;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf156;&#xf248;&#xf146;&#xf153;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf156;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf146;&#xf16f;&#xf248;&#xf146;&#xf16e;&#xf249;&#xf146;&#xf17e;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf146;&#xf173;&#xf245;&#xf248;&#xf146;&#xf172;&#xf24a;&#xf146;&#xf17c;&#xf249;&#xf146;&#xf171;&#xf249;&#xf146;&#xf179;&#xf249;&#xf146;&#xf17a;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf249;&#xf146;&#xf156;&#xf24b;",
    "stanza": 1376
  },
  {
    "role": "code",
    "lines": [
      "class point (x y)",
      "  (method x $x)",
      "  (method y $y)",
      "  (method + | lambda ((p point)) | point new (+ $x | p x) (+ $y | p y))",
      "  (method = | lambda ((p point)) | and (= $x | p x) (= $y | p y));"
    ],
    "dt": true,
    "parse": [
      "class",
      "point",
      [
        "x",
        "y"
      ],
      [
        "method",
        "x",
        [
          -2,
          "x"
        ]
      ],
      [
        "method",
        "y",
        [
          -2,
          "y"
        ]
      ],
      [
        "method",
        "+",
        [
          -1,
          "lambda",
          [
            [
              "p",
              "point"
            ]
          ],
          [
            -1,
            "point",
            "new",
            [
              "+",
              [
                -2,
                "x"
              ],
              [
                -1,
                "p",
                "x"
              ]
            ],
            [
              "+",
              [
                -2,
                "y"
              ],
              [
                -1,
                "p",
                "y"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "=",
        [
          -1,
          "lambda",
          [
            [
              "p",
              "point"
            ]
          ],
          [
            -1,
            "true:*",
            [
              "=",
              [
                -2,
                "x"
              ],
              [
                -1,
                "p",
                "x"
              ]
            ],
            [
              "=",
              [
                -2,
                "y"
              ],
              [
                -1,
                "p",
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12101110013121001001132121010113121101003321210101111312101011312312101011332121010111131211010031231211010033212101011113121010302312110103221210010101312100100113330231210010011312100111103212101031231210101130231210010101312101011332121010312312110100302312100101013121101003332121010111131211302312110103221210010101312100100113330231212131210013321211312312101011302312100101013121010113321211312312110100302312100101013121101003332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf146;&#xf157;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf178;&#xf249;&#xf178;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14e;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf146;&#xf159;&#xf24a;&#xf146;&#xf157;&#xf245;&#xf245;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf14e;&#xf249;&#xf16f;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf16f;&#xf245;&#xf246;&#xf14e;&#xf249;&#xf178;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf178;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf146;&#xf159;&#xf24a;&#xf146;&#xf157;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf16f;&#xf245;&#xf246;&#xf147;&#xf249;&#xf178;&#xf248;&#xf146;&#xf159;&#xf24a;&#xf178;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1377
  },
  {
    "role": "code",
    "lines": [
      "define point1 | point new 1 11;"
    ],
    "dt": true,
    "parse": [
      "@",
      "point1",
      [
        -1,
        "point",
        "new",
        "1",
        "11"
      ]
    ],
    "code": "1211013121001011030231210010011312100111103021302101132233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf15a;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf205;&#xf24a;&#xf20f;&#xf24b;",
    "stanza": 1378
  },
  {
    "role": "code",
    "lines": [
      "define point2 | point new 2 22;"
    ],
    "dt": true,
    "parse": [
      "@",
      "point2",
      [
        -1,
        "point",
        "new",
        "2",
        "22"
      ]
    ],
    "code": "121101312100101113023121001001131210011110302103021011032233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf15b;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf206;&#xf24a;&#xf21a;&#xf24b;",
    "stanza": 1379
  },
  {
    "role": "code",
    "lines": [
      "= 1 | point1 x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "point1",
        "x"
      ]
    ],
    "code": "121130213023121001011031210101132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf146;&#xf15a;&#xf24a;&#xf16f;&#xf24b;",
    "stanza": 1380
  },
  {
    "role": "code",
    "lines": [
      "= 22 | point2 y;"
    ],
    "dt": false,
    "parse": [
      "=",
      "22",
      [
        -1,
        "point2",
        "y"
      ]
    ],
    "code": "1211302101103023121001011131211010032233",
    "spider": "&#xf147;&#xf24a;&#xf21a;&#xf248;&#xf146;&#xf15b;&#xf24a;&#xf178;&#xf24b;",
    "stanza": 1381
  },
  {
    "role": "code",
    "lines": [
      "= 11 | (point new 11 12) x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          "point",
          "new",
          "11",
          "12"
        ],
        "x"
      ]
    ],
    "code": "121130210113023212100100113121001111030210113021100331210101132233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf20f;&#xf24a;&#xf210;&#xf245;&#xf16f;&#xf24b;",
    "stanza": 1382
  },
  {
    "role": "code",
    "lines": [
      "= 11 | ((point new 11 12) point) x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "11",
      [
        -1,
        [
          [
            "point",
            "new",
            "11",
            "12"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "code": "1211302101130232212100100113121001111030210113021100331210010011331210101132233",
    "spider": "&#xf147;&#xf24a;&#xf20f;&#xf248;&#xf246;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf20f;&#xf24a;&#xf210;&#xf245;&#xf146;&#xf157;&#xf245;&#xf16f;&#xf24b;",
    "stanza": 1383
  },
  {
    "role": "code",
    "lines": [
      "= 16 | ((point new 16 17) point) x;"
    ],
    "dt": false,
    "parse": [
      "=",
      "16",
      [
        -1,
        [
          [
            "point",
            "new",
            "16",
            "17"
          ],
          "point"
        ],
        "x"
      ]
    ],
    "code": "1211302100003023221210010011312100111103021000030210001331210010011331210101132233",
    "spider": "&#xf147;&#xf24a;&#xf214;&#xf248;&#xf246;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf214;&#xf24a;&#xf215;&#xf245;&#xf146;&#xf157;&#xf245;&#xf16f;&#xf24b;",
    "stanza": 1384
  },
  {
    "role": "code",
    "lines": [
      "= 33 | (point1 + $point2) y;"
    ],
    "dt": false,
    "parse": [
      "=",
      "33",
      [
        -1,
        [
          "point1",
          "+",
          [
            -2,
            "point2"
          ]
        ],
        "y"
      ]
    ],
    "code": "1211302100001302321210010110312101031231210010111331211010032233",
    "spider": "&#xf147;&#xf24a;&#xf225;&#xf248;&#xf246;&#xf146;&#xf15a;&#xf24a;&#xf14e;&#xf249;&#xf146;&#xf15b;&#xf245;&#xf178;&#xf24b;",
    "stanza": 1385
  },
  {
    "role": "code",
    "lines": [
      "point1 + $point2 = | point new 3 33;"
    ],
    "dt": false,
    "parse": [
      "point1",
      "+",
      [
        -2,
        "point2"
      ],
      "=",
      [
        -1,
        "point",
        "new",
        "3",
        "33"
      ]
    ],
    "code": "12100101103121010312312100101113121130231210010011312100111103021130210000132233",
    "spider": "&#xf146;&#xf15a;&#xf24a;&#xf14e;&#xf249;&#xf146;&#xf15b;&#xf24a;&#xf147;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf207;&#xf24a;&#xf225;&#xf24b;",
    "stanza": 1386
  },
  {
    "role": "code",
    "lines": [
      "point2 + $point1 = | point new 3 33;"
    ],
    "dt": false,
    "parse": [
      "point2",
      "+",
      [
        -2,
        "point1"
      ],
      "=",
      [
        -1,
        "point",
        "new",
        "3",
        "33"
      ]
    ],
    "code": "12100101113121010312312100101103121130231210010011312100111103021130210000132233",
    "spider": "&#xf146;&#xf15b;&#xf24a;&#xf14e;&#xf249;&#xf146;&#xf15a;&#xf24a;&#xf147;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf207;&#xf24a;&#xf225;&#xf24b;",
    "stanza": 1387
  },
  {
    "role": "code",
    "lines": [
      "(point new 100 200) + (point new 200 100) = (point new 300 300);"
    ],
    "dt": false,
    "parse": [
      [
        "point",
        "new",
        "100",
        "200"
      ],
      "+",
      [
        "point",
        "new",
        "200",
        "100"
      ],
      "=",
      [
        "point",
        "new",
        "300",
        "300"
      ]
    ],
    "code": "2121001001131210011110302110010030211001000331210103212100100113121001111030211001000302110010033121132121001001131210011110302100101100302100101100332233",
    "spider": "&#xf246;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf205;&#xf228;&#xf24a;&#xf207;&#xf20c;&#xf245;&#xf14e;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf207;&#xf20c;&#xf24a;&#xf205;&#xf228;&#xf245;&#xf147;&#xf246;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf208;&#xf230;&#xf24a;&#xf208;&#xf230;&#xf245;&#xf24b;",
    "stanza": 1388
  },
  {
    "role": "code",
    "lines": [
      "instanceof point $point1;"
    ],
    "dt": false,
    "parse": [
      "instanceof",
      "point",
      [
        -2,
        "point1"
      ]
    ],
    "code": "1210001001312100100113123121001011032233",
    "spider": "&#xf146;&#xf14d;&#xf24a;&#xf146;&#xf157;&#xf249;&#xf146;&#xf15a;&#xf24b;",
    "stanza": 1389
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof int $point1;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "int",
        [
          -2,
          "point1"
        ]
      ]
    ],
    "code": "12101302312100010013121100003123121001011032233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf14d;&#xf24a;&#xf174;&#xf249;&#xf146;&#xf15a;&#xf24b;",
    "stanza": 1390
  },
  {
    "role": "code",
    "lines": [
      "instanceof int 5;"
    ],
    "dt": false,
    "parse": [
      "instanceof",
      "int",
      "5"
    ],
    "code": "121000100131211000030210132233",
    "spider": "&#xf146;&#xf14d;&#xf24a;&#xf174;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1391
  },
  {
    "role": "code",
    "lines": [
      "not | instanceof point 5;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "instanceof",
        "point",
        "5"
      ]
    ],
    "code": "12101302312100010013121001001130210132233",
    "spider": "&#xf149;&#xf248;&#xf146;&#xf14d;&#xf24a;&#xf146;&#xf157;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1392
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "wrapper class for cells",
    "section_category": "OBJECT",
    "section_index": 40,
    "stanza": 1393
  },
  {
    "role": "code",
    "lines": [
      "intro cell;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cell"
    ],
    "code": "121001031210010132233",
    "spider": "&#xf156;&#xf24a;&#xf169;&#xf24b;",
    "stanza": 1394
  },
  {
    "role": "code",
    "lines": [
      "class cell (initial-value)",
      "  (field content | make-cell $initial-value)",
      "  (method get | get! $content)",
      "  (method set | ? new-value | set! $content $new-value)",
      "  (method reset | self set $initial-value)",
      "  (method unknown | ? x | (objectify | self get) $x);"
    ],
    "dt": true,
    "parse": [
      "class",
      "cell",
      [
        "initial-value"
      ],
      [
        "field",
        "content",
        [
          -1,
          "cell:make",
          [
            -2,
            "initial-value"
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "cell:get",
          [
            -2,
            "content"
          ]
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "new-value",
          [
            -1,
            "cell:assign",
            [
              -2,
              "content"
            ],
            [
              -2,
              "new-value"
            ]
          ]
        ]
      ],
      [
        "method",
        "reset",
        [
          -1,
          "self",
          "set",
          [
            -2,
            "initial-value"
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "objectify",
              [
                -1,
                "self",
                "get"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "12101110013121001013212101110113321210110111312101111003023121210010131211011331231210111011332121010111131211110130231212100101312111101331231210111100332121010111131211010113023121100312101111013023121210010131211103312312101111003123121011110133212101011113121011111030231210010010312110101131231210111011332121010111131210110001302312110031210101130232121111111302312100100103121111013312312101011332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf169;&#xf246;&#xf146;&#xf17f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf180;&#xf248;&#xf169;&#xf15f;&#xf249;&#xf146;&#xf17f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf169;&#xf181;&#xf249;&#xf146;&#xf180;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf181;&#xf248;&#xf169;&#xf152;&#xf249;&#xf146;&#xf180;&#xf249;&#xf146;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf182;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf146;&#xf17f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf145;&#xf183;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1395
  },
  {
    "role": "code",
    "lines": [
      "define cell-test1 | cell new 15;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cell-test1",
      [
        -1,
        "cell",
        "new",
        "15"
      ]
    ],
    "code": "1211013121011111130231210010131210011110302111132233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf183;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf213;&#xf24b;",
    "stanza": 1396
  },
  {
    "role": "code",
    "lines": [
      "= 15 | cell-test1 get;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "cell-test1",
        "get"
      ]
    ],
    "code": "121130211113023121011111131211110132233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf146;&#xf183;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1397
  },
  {
    "role": "code",
    "lines": [
      "cell-test1 set 82;"
    ],
    "dt": false,
    "parse": [
      "cell-test1",
      "set",
      "82"
    ],
    "code": "12101111113121101011302101001032233",
    "spider": "&#xf146;&#xf183;&#xf24a;&#xf145;&#xf16f;&#xf24a;&#xf205;&#xf216;&#xf24b;",
    "stanza": 1398
  },
  {
    "role": "code",
    "lines": [
      "= 82 | cell-test1 get;"
    ],
    "dt": false,
    "parse": [
      "=",
      "82",
      [
        -1,
        "cell-test1",
        "get"
      ]
    ],
    "code": "121130210100103023121011111131211110132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf216;&#xf248;&#xf146;&#xf183;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1399
  },
  {
    "role": "code",
    "lines": [
      "= 82 | get! | cell-test1 content;"
    ],
    "dt": false,
    "parse": [
      "=",
      "82",
      [
        -1,
        "cell:get",
        [
          -1,
          "cell-test1",
          "content"
        ]
      ]
    ],
    "code": "12113021010010302312121001013121111013302312101111113121011110032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf216;&#xf248;&#xf169;&#xf181;&#xf248;&#xf146;&#xf183;&#xf24a;&#xf146;&#xf180;&#xf24b;",
    "stanza": 1400
  },
  {
    "role": "code",
    "lines": [
      "define cell-test2 | cell new | point new 120 150;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cell-test2",
      [
        -1,
        "cell",
        "new",
        [
          -1,
          "point",
          "new",
          "120",
          "150"
        ]
      ]
    ],
    "code": "1211013121100000030231210010131210011110302312100100113121001111030211110003021001011032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf144;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf205;&#xf23c;&#xf24a;&#xf206;&#xf21a;&#xf24b;",
    "stanza": 1401
  },
  {
    "role": "code",
    "lines": [
      "define cell-test3 | cell new | point new 300 300;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cell-test3",
      [
        -1,
        "cell",
        "new",
        [
          -1,
          "point",
          "new",
          "300",
          "300"
        ]
      ]
    ],
    "code": "1211013121100000130231210010131210011110302312100100113121001111030210010110030210010110032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf145;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf208;&#xf230;&#xf24a;&#xf208;&#xf230;&#xf24b;",
    "stanza": 1402
  },
  {
    "role": "code",
    "lines": [
      "cell-test2 + $cell-test3 = | point new 420 450;"
    ],
    "dt": false,
    "parse": [
      "cell-test2",
      "+",
      [
        -2,
        "cell-test3"
      ],
      "=",
      [
        -1,
        "point",
        "new",
        "420",
        "450"
      ]
    ],
    "code": "121100000031210103123121100000131211302312100100113121001111030211010010030211100001032233",
    "spider": "&#xf147;&#xf144;&#xf24a;&#xf14e;&#xf249;&#xf147;&#xf145;&#xf24a;&#xf147;&#xf248;&#xf146;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf20a;&#xf228;&#xf24a;&#xf20b;&#xf206;&#xf24b;",
    "stanza": 1403
  },
  {
    "role": "code",
    "lines": [
      "not | cell-test2 = $cell-test3;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "cell-test2",
        "=",
        [
          -2,
          "cell-test3"
        ]
      ]
    ],
    "code": "1210130231211000000312113123121100000132233",
    "spider": "&#xf149;&#xf248;&#xf147;&#xf144;&#xf24a;&#xf147;&#xf249;&#xf147;&#xf145;&#xf24b;",
    "stanza": 1404
  },
  {
    "role": "code",
    "lines": [
      "cell-test3 set $cell-test2;"
    ],
    "dt": false,
    "parse": [
      "cell-test3",
      "set",
      [
        -2,
        "cell-test2"
      ]
    ],
    "code": "121100000131211010113123121100000032233",
    "spider": "&#xf147;&#xf145;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf147;&#xf144;&#xf24b;",
    "stanza": 1405
  },
  {
    "role": "code",
    "lines": [
      "cell-test2 = $cell-test3;"
    ],
    "dt": false,
    "parse": [
      "cell-test2",
      "=",
      [
        -2,
        "cell-test3"
      ]
    ],
    "code": "1211000000312113123121100000132233",
    "spider": "&#xf147;&#xf144;&#xf24a;&#xf147;&#xf249;&#xf147;&#xf145;&#xf24b;",
    "stanza": 1406
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "playing around with doors and rooms",
    "section_category": "MUD",
    "section_index": 41,
    "stanza": 1407
  },
  {
    "role": "code",
    "lines": [
      "intro door;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "door"
    ],
    "code": "12100103121100001032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf146;&#xf24b;",
    "stanza": 1408
  },
  {
    "role": "code",
    "lines": [
      "class door ((src room) (dest room))",
      "  (method new | begin (src add $self) (dest add $self))",
      "  (method access-from | lambda ((current room)) |",
      "     cond ((current == $src) $dest) ((current == $dest) $src) 0)",
      "  (method is-present | lambda ((current room)) |",
      "     or (current == $src) (current == $dest));"
    ],
    "dt": true,
    "parse": [
      "class",
      "door",
      [
        [
          "src",
          "room"
        ],
        [
          "dest",
          "room"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "begin",
          [
            "src",
            "add",
            [
              -2,
              "self"
            ]
          ],
          [
            "dest",
            "add",
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "access-from",
        [
          -1,
          "lambda",
          [
            [
              "current",
              "room"
            ]
          ],
          [
            -1,
            "cond",
            [
              [
                "current",
                "==",
                [
                  -2,
                  "src"
                ]
              ],
              [
                -2,
                "dest"
              ]
            ],
            [
              [
                "current",
                "==",
                [
                  -2,
                  "dest"
                ]
              ],
              [
                -2,
                "src"
              ]
            ],
            "0"
          ]
        ]
      ],
      [
        "method",
        "is-present",
        [
          -1,
          "lambda",
          [
            [
              "current",
              "room"
            ]
          ],
          [
            -1,
            "true:+",
            [
              "current",
              "==",
              [
                -2,
                "src"
              ]
            ],
            [
              "current",
              "==",
              [
                -2,
                "dest"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12101110013121100001032212110000113121100010033212110001013121100010033321210101111312100111103023121001011321211000011312100110113123121001001033212110001013121001101131231210010010333212101011113121100011030231211010322121111000312110001003330231210000100322121111000312101100113123121100001133123121100010133221211110003121011001131231211000101331231211000011330203321210101111312110001113023121101032212111100031211000100333023121213121010332121111000312101100113123121100001133212111100031210110011312312110001013332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf147;&#xf146;&#xf246;&#xf246;&#xf147;&#xf147;&#xf24a;&#xf147;&#xf148;&#xf245;&#xf246;&#xf147;&#xf149;&#xf24a;&#xf147;&#xf148;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf147;&#xf147;&#xf24a;&#xf146;&#xf15f;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf147;&#xf149;&#xf24a;&#xf146;&#xf15f;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf14a;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf145;&#xf17c;&#xf24a;&#xf147;&#xf148;&#xf245;&#xf245;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf145;&#xf17c;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf147;&#xf147;&#xf245;&#xf249;&#xf147;&#xf149;&#xf245;&#xf246;&#xf246;&#xf145;&#xf17c;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf147;&#xf149;&#xf245;&#xf249;&#xf147;&#xf147;&#xf245;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf14b;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf145;&#xf17c;&#xf24a;&#xf147;&#xf148;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf145;&#xf17c;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf147;&#xf147;&#xf245;&#xf246;&#xf145;&#xf17c;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf147;&#xf149;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1409
  },
  {
    "role": "code",
    "lines": [
      "intro room;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "room"
    ],
    "code": "12100103121100010032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf148;&#xf24b;",
    "stanza": 1410
  },
  {
    "role": "code",
    "lines": [
      "class room (name)",
      "  (field content | container new)",
      "  (method name $name)",
      "  (method unknown | ? x | content $x);"
    ],
    "dt": true,
    "parse": [
      "class",
      "room",
      [
        "name"
      ],
      [
        "field",
        "content",
        [
          -1,
          "container",
          "new"
        ]
      ],
      [
        "method",
        "name",
        [
          -2,
          "name"
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "content",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "121011100131211000100321210101101332121011011131210111100302312100110003121001111033212101011113121010110131231210101101332121010111131210110001302312110031210101130231210111100312312101011332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf147;&#xf148;&#xf246;&#xf146;&#xf171;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf180;&#xf248;&#xf146;&#xf15c;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf171;&#xf249;&#xf146;&#xf171;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf180;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1411
  },
  {
    "role": "doc",
    "lines": [
      "need to fix up containers to use object equality"
    ],
    "stanza": 1412
  },
  {
    "role": "code",
    "lines": [
      "define object-element | lambda (n lst) |",
      "  < 0 | list-length | select-match (? x | x == $n) $lst;"
    ],
    "dt": true,
    "parse": [
      "@",
      "object-element",
      [
        -1,
        "lambda",
        [
          "n",
          "lst"
        ],
        [
          -1,
          "<",
          "0",
          [
            -1,
            "list-length",
            [
              -1,
              "select-match",
              [
                "?",
                "x",
                [
                  -1,
                  "x",
                  "==",
                  [
                    -2,
                    "n"
                  ]
                ]
              ],
              [
                -2,
                "lst"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211001000302312110103212111111312101000133023121030203023121000010302312101001032121100312101011302312101011312101100113123121111113312312101000132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf14c;&#xf248;&#xf15e;&#xf246;&#xf183;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf146;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf248;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf16f;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf183;&#xf245;&#xf249;&#xf145;&#xf155;&#xf24b;",
    "stanza": 1413
  },
  {
    "role": "code",
    "lines": [
      "class container ()",
      "  (field contents | cell new (vector))",
      "  (method inventory | contents get)",
      "  (method add | ? x |",
      "     if (object-element $x | contents get) $false |",
      "     contents set | prepend $x | contents get);"
    ],
    "dt": true,
    "parse": [
      "class",
      "container",
      [],
      [
        "field",
        "contents",
        [
          -1,
          "cell",
          "new",
          [
            "vector"
          ]
        ]
      ],
      [
        "method",
        "inventory",
        [
          -1,
          "contents",
          "get"
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "if",
            [
              "object-element",
              [
                -2,
                "x"
              ],
              [
                -1,
                "contents",
                "get"
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "contents",
              "set",
              [
                -1,
                "prepend",
                [
                  -2,
                  "x"
                ],
                [
                  -1,
                  "contents",
                  "get"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121011100131210011000323212101101113121001100130231210010131210011110321210000333212101011113121001101030231210011001312111101332121010111131210011011302312110031210101130231211113212110010003123121010113023121001100131211110133123120302312100110013121101011302312100011031231210101130231210011001312111101332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf146;&#xf15c;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf15d;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf154;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf15e;&#xf248;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf15f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf14c;&#xf249;&#xf16f;&#xf248;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf144;&#xf248;&#xf146;&#xf15d;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf248;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf24b;",
    "stanza": 1414
  },
  {
    "role": "code",
    "lines": [
      "define hall | room new 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "hall",
      [
        -1,
        "room",
        "new",
        "0"
      ]
    ],
    "code": "121101312110010013023121100010031210011110302032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf14d;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1415
  },
  {
    "role": "code",
    "lines": [
      "define kitchen | room new 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "kitchen",
      [
        -1,
        "room",
        "new",
        "1"
      ]
    ],
    "code": "121101312110010103023121100010031210011110302132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf14e;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1416
  },
  {
    "role": "code",
    "lines": [
      "define door1 | door new $hall $kitchen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "door1",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "hall"
        ],
        [
          -2,
          "kitchen"
        ]
      ]
    ],
    "code": "121101312110010113023121100001031210011110312312110010013123121100101032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf14f;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf147;&#xf14d;&#xf249;&#xf147;&#xf14e;&#xf24b;",
    "stanza": 1417
  },
  {
    "role": "code",
    "lines": [
      "(first | hall inventory) == $door1;"
    ],
    "dt": false,
    "parse": [
      [
        "first",
        [
          -1,
          "hall",
          "inventory"
        ]
      ],
      "==",
      [
        -2,
        "door1"
      ]
    ],
    "code": "212100011130231211001001312100110103312101100113123121100101132233",
    "spider": "&#xf246;&#xf145;&#xf14b;&#xf248;&#xf147;&#xf14d;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf146;&#xf177;&#xf249;&#xf147;&#xf14f;&#xf24b;",
    "stanza": 1418
  },
  {
    "role": "code",
    "lines": [
      "(first | kitchen inventory) == $door1;"
    ],
    "dt": false,
    "parse": [
      [
        "first",
        [
          -1,
          "kitchen",
          "inventory"
        ]
      ],
      "==",
      [
        -2,
        "door1"
      ]
    ],
    "code": "212100011130231211001010312100110103312101100113123121100101132233",
    "spider": "&#xf246;&#xf145;&#xf14b;&#xf248;&#xf147;&#xf14e;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf146;&#xf177;&#xf249;&#xf147;&#xf14f;&#xf24b;",
    "stanza": 1419
  },
  {
    "role": "code",
    "lines": [
      "(door1 access-from $hall) == $kitchen;"
    ],
    "dt": false,
    "parse": [
      [
        "door1",
        "access-from",
        [
          -2,
          "hall"
        ]
      ],
      "==",
      [
        -2,
        "kitchen"
      ]
    ],
    "code": "2121100101131211000110312312110010013312101100113123121100101032233",
    "spider": "&#xf246;&#xf147;&#xf14f;&#xf24a;&#xf147;&#xf14a;&#xf249;&#xf147;&#xf14d;&#xf245;&#xf146;&#xf177;&#xf249;&#xf147;&#xf14e;&#xf24b;",
    "stanza": 1420
  },
  {
    "role": "code",
    "lines": [
      "(door1 access-from $kitchen) == $hall;"
    ],
    "dt": false,
    "parse": [
      [
        "door1",
        "access-from",
        [
          -2,
          "kitchen"
        ]
      ],
      "==",
      [
        -2,
        "hall"
      ]
    ],
    "code": "2121100101131211000110312312110010103312101100113123121100100132233",
    "spider": "&#xf246;&#xf147;&#xf14f;&#xf24a;&#xf147;&#xf14a;&#xf249;&#xf147;&#xf14e;&#xf245;&#xf146;&#xf177;&#xf249;&#xf147;&#xf14d;&#xf24b;",
    "stanza": 1421
  },
  {
    "role": "code",
    "lines": [
      "define stairs | room new 2;"
    ],
    "dt": true,
    "parse": [
      "@",
      "stairs",
      [
        -1,
        "room",
        "new",
        "2"
      ]
    ],
    "code": "1211013121100110030231211000100312100111103021032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf150;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1422
  },
  {
    "role": "code",
    "lines": [
      "define lawn | room new 3;"
    ],
    "dt": true,
    "parse": [
      "@",
      "lawn",
      [
        -1,
        "room",
        "new",
        "3"
      ]
    ],
    "code": "1211013121100110130231211000100312100111103021132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf151;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1423
  },
  {
    "role": "code",
    "lines": [
      "define bedroom | room new 4;"
    ],
    "dt": true,
    "parse": [
      "@",
      "bedroom",
      [
        -1,
        "room",
        "new",
        "4"
      ]
    ],
    "code": "12110131211001110302312110001003121001111030210032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf152;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1424
  },
  {
    "role": "code",
    "lines": [
      "define nowhere | room new 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "nowhere",
      [
        -1,
        "room",
        "new",
        "0"
      ]
    ],
    "code": "121101312110011113023121100010031210011110302032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf153;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1425
  },
  {
    "role": "code",
    "lines": [
      "define door2 | door new $hall $lawn;"
    ],
    "dt": true,
    "parse": [
      "@",
      "door2",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "hall"
        ],
        [
          -2,
          "lawn"
        ]
      ]
    ],
    "code": "121101312110100003023121100001031210011110312312110010013123121100110132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf154;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf147;&#xf14d;&#xf249;&#xf147;&#xf151;&#xf24b;",
    "stanza": 1426
  },
  {
    "role": "code",
    "lines": [
      "define door3 | door new $hall $stairs;"
    ],
    "dt": true,
    "parse": [
      "@",
      "door3",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "hall"
        ],
        [
          -2,
          "stairs"
        ]
      ]
    ],
    "code": "121101312110100013023121100001031210011110312312110010013123121100110032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf155;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf147;&#xf14d;&#xf249;&#xf147;&#xf150;&#xf24b;",
    "stanza": 1427
  },
  {
    "role": "code",
    "lines": [
      "define door4 | door new $stairs $bedroom;"
    ],
    "dt": true,
    "parse": [
      "@",
      "door4",
      [
        -1,
        "door",
        "new",
        [
          -2,
          "stairs"
        ],
        [
          -2,
          "bedroom"
        ]
      ]
    ],
    "code": "121101312110100103023121100001031210011110312312110011003123121100111032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf156;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf147;&#xf150;&#xf249;&#xf147;&#xf152;&#xf24b;",
    "stanza": 1428
  },
  {
    "role": "code",
    "lines": [
      "intro character;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "character"
    ],
    "code": "12100103121101001132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf157;&#xf24b;",
    "stanza": 1429
  },
  {
    "role": "code",
    "lines": [
      "class character ()",
      "  (field location | cell new 0)",
      "  (field name | cell new 0)",
      "  (method set-room | lambda ((r room)) | begin",
      "     (if (not | function? | location get) 0 | location get remove $self)",
      "     (r add $self)",
      "     (location set $r))",
      "  (method get-room | location get)",
      "  (method set-name | ? n | name set $n)",
      "  (method get-name | name get)",
      "  (method update 0);"
    ],
    "dt": true,
    "parse": [
      "class",
      "character",
      [],
      [
        "field",
        "location",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "name",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "set-room",
        [
          -1,
          "lambda",
          [
            [
              "r",
              "room"
            ]
          ],
          [
            -1,
            "begin",
            [
              "if",
              [
                "not",
                [
                  -1,
                  "function?",
                  [
                    -1,
                    "location",
                    "get"
                  ]
                ]
              ],
              "0",
              [
                -1,
                "location",
                "get",
                "remove",
                [
                  -2,
                  "self"
                ]
              ]
            ],
            [
              "r",
              "add",
              [
                -2,
                "self"
              ]
            ],
            [
              "location",
              "set",
              [
                -2,
                "r"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get-room",
        [
          -1,
          "location",
          "get"
        ]
      ],
      [
        "method",
        "set-name",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "name",
            "set",
            [
              -2,
              "n"
            ]
          ]
        ]
      ],
      [
        "method",
        "get-name",
        [
          -1,
          "name",
          "get"
        ]
      ],
      [
        "method",
        "update",
        "0"
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf147;&#xf157;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf147;&#xf158;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf171;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf159;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf147;&#xf15a;&#xf24a;&#xf147;&#xf148;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf248;&#xf147;&#xf158;&#xf24a;&#xf181;&#xf245;&#xf204;&#xf248;&#xf147;&#xf158;&#xf24a;&#xf181;&#xf24a;&#xf146;&#xf160;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf147;&#xf15a;&#xf24a;&#xf146;&#xf15f;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf147;&#xf158;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf147;&#xf15a;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15b;&#xf248;&#xf147;&#xf158;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15c;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf146;&#xf171;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf183;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15d;&#xf248;&#xf146;&#xf171;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15e;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 1430
  },
  {
    "role": "code",
    "lines": [
      "define find-max-helper | lambda (test max idx n lst) |",
      "  if (= 0 | list-length $lst) $idx |",
      "  if (> (test | head $lst) $max)",
      "     (find-max-helper $test (test | head $lst) $n (+ $n 1) (tail $lst))",
      "     (find-max-helper $test $max $idx (+ $n 1) (tail $lst));"
    ],
    "dt": true,
    "parse": [
      "@",
      "find-max-helper",
      [
        -1,
        "lambda",
        [
          "test",
          ">:>",
          "idx",
          "n",
          "lst"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst"
              ]
            ]
          ],
          [
            -2,
            "idx"
          ],
          [
            -1,
            "if",
            [
              ">",
              [
                "test",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                ">:>"
              ]
            ],
            [
              "find-max-helper",
              [
                -2,
                "test"
              ],
              [
                "test",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                "n"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "list:remainder",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "find-max-helper",
              [
                -2,
                "test"
              ],
              [
                -2,
                ">:>"
              ],
              [
                -2,
                "idx"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "list:remainder",
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312110110113023121101032121010011312121003121003312110111003121111113121010001330231211113212113020302312100001031231210100013312312110111003023121111321210032121010011302312121111103020331231210100013312312121003121003332121101101131231210100113212101001130231212111110302033123121010001331231211111132121010312312111111302133212121111103121000001331231210100013332121101101131231210100113123121210031210033123121101110032121010312312111111302133212121111103121000001331231210100013332233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf15f;&#xf248;&#xf15e;&#xf246;&#xf145;&#xf157;&#xf24a;&#xf148;&#xf148;&#xf147;&#xf160;&#xf24a;&#xf183;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf147;&#xf160;&#xf248;&#xf153;&#xf246;&#xf148;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf148;&#xf148;&#xf245;&#xf246;&#xf147;&#xf15f;&#xf249;&#xf145;&#xf157;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf183;&#xf246;&#xf14e;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf246;&#xf147;&#xf15f;&#xf249;&#xf145;&#xf157;&#xf249;&#xf148;&#xf148;&#xf249;&#xf147;&#xf160;&#xf246;&#xf14e;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1431
  },
  {
    "role": "code",
    "lines": [
      "define find-max-idx | lambda (test lst) |",
      "  find-max-helper $test (test | head $lst) 0 0 $lst;"
    ],
    "dt": true,
    "parse": [
      "@",
      "find-max-idx",
      [
        -1,
        "lambda",
        [
          "test",
          "lst"
        ],
        [
          -1,
          "find-max-helper",
          [
            -2,
            "test"
          ],
          [
            "test",
            [
              -1,
              "list:0",
              [
                -2,
                "lst"
              ]
            ]
          ],
          "0",
          "0",
          [
            -2,
            "lst"
          ]
        ]
      ]
    ],
    "code": "121101312110111013023121101032121010011312101000133023121101101131231210100113212101001130231212111110302033123121010001330203020312312101000132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf161;&#xf248;&#xf15e;&#xf246;&#xf145;&#xf157;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf147;&#xf15f;&#xf249;&#xf145;&#xf157;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf204;&#xf24a;&#xf204;&#xf249;&#xf145;&#xf155;&#xf24b;",
    "stanza": 1432
  },
  {
    "role": "code",
    "lines": [
      "define find-min-helper | lambda (test max idx n lst) |",
      "  if (= 0 | list-length $lst) $idx |",
      "  if (< (test | head $lst) $max)",
      "     (find-min-helper $test (test | head $lst) $n (+ $n 1) (tail $lst))",
      "     (find-min-helper $test $max $idx (+ $n 1) (tail $lst));"
    ],
    "dt": true,
    "parse": [
      "@",
      "find-min-helper",
      [
        -1,
        "lambda",
        [
          "test",
          ">:>",
          "idx",
          "n",
          "lst"
        ],
        [
          -1,
          "if",
          [
            "=",
            "0",
            [
              -1,
              "list-length",
              [
                -2,
                "lst"
              ]
            ]
          ],
          [
            -2,
            "idx"
          ],
          [
            -1,
            "if",
            [
              "<",
              [
                "test",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                ">:>"
              ]
            ],
            [
              "find-min-helper",
              [
                -2,
                "test"
              ],
              [
                "test",
                [
                  -1,
                  "list:0",
                  [
                    -2,
                    "lst"
                  ]
                ]
              ],
              [
                -2,
                "n"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "list:remainder",
                [
                  -2,
                  "lst"
                ]
              ]
            ],
            [
              "find-min-helper",
              [
                -2,
                "test"
              ],
              [
                -2,
                ">:>"
              ],
              [
                -2,
                "idx"
              ],
              [
                "+",
                [
                  -2,
                  "n"
                ],
                "1"
              ],
              [
                "list:remainder",
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211011110302312110103212101001131212100312100331211011100312111111312101000133023121111321211302030231210000103123121010001331231211011100302312111132121032121010011302312121111103020331231210100013312312121003121003332121101111031231210100113212101001130231212111110302033123121010001331231211111132121010312312111111302133212121111103121000001331231210100013332121101111031231210100113123121210031210033123121101110032121010312312111111302133212121111103121000001331231210100013332233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf162;&#xf248;&#xf15e;&#xf246;&#xf145;&#xf157;&#xf24a;&#xf148;&#xf148;&#xf147;&#xf160;&#xf24a;&#xf183;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf147;&#xf160;&#xf248;&#xf153;&#xf246;&#xf146;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf148;&#xf148;&#xf245;&#xf246;&#xf147;&#xf162;&#xf249;&#xf145;&#xf157;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf249;&#xf183;&#xf246;&#xf14e;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf246;&#xf147;&#xf162;&#xf249;&#xf145;&#xf157;&#xf249;&#xf148;&#xf148;&#xf249;&#xf147;&#xf160;&#xf246;&#xf14e;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1433
  },
  {
    "role": "code",
    "lines": [
      "define find-min-idx | lambda (test lst) |",
      "  find-min-helper $test (test | head $lst) 0 0 $lst;"
    ],
    "dt": true,
    "parse": [
      "@",
      "find-min-idx",
      [
        -1,
        "lambda",
        [
          "test",
          "lst"
        ],
        [
          -1,
          "find-min-helper",
          [
            -2,
            "test"
          ],
          [
            "test",
            [
              -1,
              "list:0",
              [
                -2,
                "lst"
              ]
            ]
          ],
          "0",
          "0",
          [
            -2,
            "lst"
          ]
        ]
      ]
    ],
    "code": "121101312110111113023121101032121010011312101000133023121101111031231210100113212101001130231212111110302033123121010001330203020312312101000132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf163;&#xf248;&#xf15e;&#xf246;&#xf145;&#xf157;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf147;&#xf162;&#xf249;&#xf145;&#xf157;&#xf246;&#xf145;&#xf157;&#xf248;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf204;&#xf24a;&#xf204;&#xf249;&#xf145;&#xf155;&#xf24b;",
    "stanza": 1434
  },
  {
    "role": "code",
    "lines": [
      "= 2 | find-max-idx (? x $x) | vector 3 4 5 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "find-max-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "4",
          "5",
          "0"
        ]
      ]
    ],
    "code": "121130210302312110111013212110031210101131231210101133023121000030211302100302101302032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf147;&#xf161;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf209;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1435
  },
  {
    "role": "code",
    "lines": [
      "= 1 | find-max-idx (? x $x) | vector 3 5 4 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "find-max-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "5",
          "4",
          "0"
        ]
      ]
    ],
    "code": "12113021302312110111013212110031210101131231210101133023121000030211302101302100302032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf161;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1436
  },
  {
    "role": "code",
    "lines": [
      "= 0 | find-max-idx (? x $x) | vector 5 3 4 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "find-max-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "5",
          "3",
          "4",
          "0"
        ]
      ]
    ],
    "code": "12113020302312110111013212110031210101131231210101133023121000030210130211302100302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf147;&#xf161;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1437
  },
  {
    "role": "code",
    "lines": [
      "= 2 | find-min-idx (? x $x) | vector 3 4 0 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "find-min-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "4",
          "0",
          "2"
        ]
      ]
    ],
    "code": "12113021030231211011111321211003121010113123121010113302312100003021130210030203021032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf147;&#xf163;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1438
  },
  {
    "role": "code",
    "lines": [
      "= 1 | find-min-idx (? x $x) | vector 3 1 4 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "find-min-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "3",
          "1",
          "4",
          "2"
        ]
      ]
    ],
    "code": "1211302130231211011111321211003121010113123121010113302312100003021130213021003021032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf163;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1439
  },
  {
    "role": "code",
    "lines": [
      "= 0 | find-min-idx (? x $x) | vector 1 3 4 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "find-min-idx",
        [
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ],
        [
          -1,
          "vector",
          "1",
          "3",
          "4",
          "2"
        ]
      ]
    ],
    "code": "1211302030231211011111321211003121010113123121010113302312100003021302113021003021032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf147;&#xf163;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1440
  },
  {
    "role": "doc",
    "lines": [
      "the 'robo' class makes a character that patrols from room to room"
    ],
    "stanza": 1441
  },
  {
    "role": "code",
    "lines": [
      "class robo ()",
      "  (field super | character new)",
      "  (field timestamp | cell new 1)",
      "  (field timestamp-map | cell new (? x 0))",
      "  (method unknown | ? x | super $x)",
      "  (method update |",
      "     assign exits (select-match (? x | instanceof door $x) (self location inventory)) |",
      "     assign timestamps (map (? x | timestamp-map get $x) $exits) |",
      "     assign chosen-exit (list-ref $exits | find-min-idx (? x $x) $timestamps) |",
      "     assign current-tmap (timestamp-map get) |",
      "     assign current-t (timestamp get) |",
      "     begin",
      "       (self location set | chosen-exit access-from | self location get)",
      "       (timestamp-map set | lambda ((d door)) |",
      "          if (d == $chosen-exit) $current-t (current-tmap $d))",
      "       (timestamp set | + 1 | timestamp get));"
    ],
    "dt": true,
    "parse": [
      "class",
      "robo",
      [],
      [
        "field",
        "super",
        [
          -1,
          "character",
          "new"
        ]
      ],
      [
        "field",
        "timestamp",
        [
          -1,
          "cell",
          "new",
          "1"
        ]
      ],
      [
        "field",
        "timestamp-map",
        [
          -1,
          "cell",
          "new",
          [
            "?",
            "x",
            "0"
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "assign",
          "exits",
          [
            "select-match",
            [
              "?",
              "x",
              [
                -1,
                "instanceof",
                "door",
                [
                  -2,
                  "x"
                ]
              ]
            ],
            [
              "self",
              "location",
              "inventory"
            ]
          ],
          [
            -1,
            "assign",
            "timestamps",
            [
              "map",
              [
                "?",
                "x",
                [
                  -1,
                  "timestamp-map",
                  "get",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -2,
                "exits"
              ]
            ],
            [
              -1,
              "assign",
              "chosen-exit",
              [
                "list-ref",
                [
                  -2,
                  "exits"
                ],
                [
                  -1,
                  "find-min-idx",
                  [
                    "?",
                    "x",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -2,
                    "timestamps"
                  ]
                ]
              ],
              [
                -1,
                "assign",
                "current-tmap",
                [
                  "timestamp-map",
                  "get"
                ],
                [
                  -1,
                  "assign",
                  "current-t",
                  [
                    "timestamp",
                    "get"
                  ],
                  [
                    -1,
                    "begin",
                    [
                      "self",
                      "location",
                      "set",
                      [
                        -1,
                        "chosen-exit",
                        "access-from",
                        [
                          -1,
                          "self",
                          "location",
                          "get"
                        ]
                      ]
                    ],
                    [
                      "timestamp-map",
                      "set",
                      [
                        -1,
                        "lambda",
                        [
                          [
                            "d",
                            "door"
                          ]
                        ],
                        [
                          -1,
                          "if",
                          [
                            "d",
                            "==",
                            [
                              -2,
                              "chosen-exit"
                            ]
                          ],
                          [
                            -2,
                            "current-t"
                          ],
                          [
                            "current-tmap",
                            [
                              -2,
                              "d"
                            ]
                          ]
                        ]
                      ]
                    ],
                    [
                      "timestamp",
                      "set",
                      [
                        -1,
                        "+",
                        "1",
                        [
                          -1,
                          "timestamp",
                          "get"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12101110013121110000032321210110111312101000013023121101001131210011110332121011011131211100001302312100101312100111103021332121011011131211100010302312100101312100111103212110031210101130203332121010111131210110001302312110031210101130231210100001312312101011332121010111131211011010302312111031211100011321210100103212110031210101130231210001001312110000103123121010113321210010010312110101003121001101033302312111031211100100321210010013212110031210101130231211100010312111101312312101011331231211100011330231211103121110010132121000011312312111000113023121101111132121100312101011312312101011331231211100100330231211103121110011032121110001031211110133023121110312111001113212111000013121111013302312100101132121001001031211010100312110101130231211100101312110001103023121001001031211010100312111101332121110001031211010113023121101032212111010003121100001033302312111132121110100031210110011312312111001013312312111001113212111001103123121110100033321211100001312110101130231210103021302312111000013121111013332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf147;&#xf164;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf147;&#xf157;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf147;&#xf165;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf147;&#xf166;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15e;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf167;&#xf246;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf14d;&#xf24a;&#xf147;&#xf146;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf147;&#xf158;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf168;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf166;&#xf24a;&#xf181;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf147;&#xf167;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf169;&#xf246;&#xf145;&#xf147;&#xf249;&#xf147;&#xf167;&#xf248;&#xf147;&#xf163;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf147;&#xf168;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf16a;&#xf246;&#xf147;&#xf166;&#xf24a;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf16b;&#xf246;&#xf147;&#xf165;&#xf24a;&#xf181;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf147;&#xf158;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf147;&#xf169;&#xf24a;&#xf147;&#xf14a;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf147;&#xf158;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf147;&#xf166;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf147;&#xf16c;&#xf24a;&#xf147;&#xf146;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf16c;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf147;&#xf169;&#xf245;&#xf249;&#xf147;&#xf16b;&#xf246;&#xf147;&#xf16a;&#xf249;&#xf147;&#xf16c;&#xf245;&#xf245;&#xf246;&#xf147;&#xf165;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf14e;&#xf24a;&#xf205;&#xf248;&#xf147;&#xf165;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1442
  },
  {
    "role": "code",
    "lines": [
      "define myrobo | robo new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "myrobo",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "code": "12110131211101001302312111000003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf16d;&#xf248;&#xf147;&#xf164;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1443
  },
  {
    "role": "code",
    "lines": [
      "myrobo set-room $stairs;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "set-room",
      [
        -2,
        "stairs"
      ]
    ],
    "code": "1211101001312110101013123121100110032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf159;&#xf249;&#xf147;&#xf150;&#xf24b;",
    "stanza": 1444
  },
  {
    "role": "code",
    "lines": [
      "define which-room | lambda ((rr robo)) |",
      "  find-max-idx",
      "    (lambda ((r room)) | if (r == | rr get-room) 1 0) |",
      "    vector $hall $kitchen $stairs $lawn $bedroom;"
    ],
    "dt": true,
    "parse": [
      "@",
      "which-room",
      [
        -1,
        "lambda",
        [
          [
            "rr",
            "robo"
          ]
        ],
        [
          -1,
          "find-max-idx",
          [
            "lambda",
            [
              [
                "r",
                "room"
              ]
            ],
            [
              -1,
              "if",
              [
                "r",
                "==",
                [
                  -1,
                  "rr",
                  "get-room"
                ]
              ],
              "1",
              "0"
            ]
          ],
          [
            -1,
            "vector",
            [
              -2,
              "hall"
            ],
            [
              -2,
              "kitchen"
            ],
            [
              -2,
              "stairs"
            ],
            [
              -2,
              "lawn"
            ],
            [
              -2,
              "bedroom"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211101010302312110103221211101011312111000003330231211011101321211010322121101011031211000100333023121111321211010110312101100113023121110101131211010111330213020330231210000312312110010013123121100101031231211001100312312110011013123121100111032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf16e;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf147;&#xf16f;&#xf24a;&#xf147;&#xf164;&#xf245;&#xf245;&#xf248;&#xf147;&#xf161;&#xf246;&#xf15e;&#xf246;&#xf246;&#xf147;&#xf15a;&#xf24a;&#xf147;&#xf148;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf15a;&#xf24a;&#xf146;&#xf177;&#xf248;&#xf147;&#xf16f;&#xf24a;&#xf147;&#xf15b;&#xf245;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf154;&#xf249;&#xf147;&#xf14d;&#xf249;&#xf147;&#xf14e;&#xf249;&#xf147;&#xf150;&#xf249;&#xf147;&#xf151;&#xf249;&#xf147;&#xf152;&#xf24b;",
    "stanza": 1445
  },
  {
    "role": "code",
    "lines": [
      "define sequencer | lambda (n current lst) |",
      "  if (>= $current $n) $lst | begin",
      "    (myrobo update)",
      "    (sequencer $n (+ $current 1) (append (which-room $myrobo) $lst));"
    ],
    "dt": true,
    "parse": [
      "@",
      "sequencer",
      [
        -1,
        "lambda",
        [
          "n",
          "current",
          "lst"
        ],
        [
          -1,
          "if",
          [
            ">=",
            [
              -2,
              "current"
            ],
            [
              -2,
              "n"
            ]
          ],
          [
            -2,
            "lst"
          ],
          [
            -1,
            "begin",
            [
              "myrobo",
              "update"
            ],
            [
              "sequencer",
              [
                -2,
                "n"
              ],
              [
                "+",
                [
                  -2,
                  "current"
                ],
                "1"
              ],
              [
                "append",
                [
                  "which-room",
                  [
                    -2,
                    "myrobo"
                  ]
                ],
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211101100302312110103212111111312111100031210100013302312111132121110113123121111000312312111111331231210100013023121001011321211101001312110110103321211101100312312111111321210103123121111000302133212101000032121110101031231211101001331231210100013332233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf170;&#xf248;&#xf15e;&#xf246;&#xf183;&#xf24a;&#xf145;&#xf17c;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf153;&#xf246;&#xf17f;&#xf249;&#xf145;&#xf17c;&#xf249;&#xf183;&#xf245;&#xf249;&#xf145;&#xf155;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf245;&#xf246;&#xf147;&#xf170;&#xf249;&#xf183;&#xf246;&#xf14e;&#xf249;&#xf145;&#xf17c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf145;&#xf154;&#xf246;&#xf147;&#xf16e;&#xf249;&#xf147;&#xf16d;&#xf245;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1446
  },
  {
    "role": "doc",
    "lines": [
      "here is a list of the first 30 rooms the robot character visits",
      "0=hall, 1=kitchen, 2=stairs, 3=lawn, 4=bedroom"
    ],
    "stanza": 1447
  },
  {
    "role": "code",
    "lines": [
      "list= (sequencer 30 0 (vector)) |",
      "  vector 4 2 0 3 0 1 0 2 4 2 0 3 0 1 0 2 4 2 0 3 0 1 0 2 4 2 0 3 0 1;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "sequencer",
        "30",
        "0",
        [
          "vector"
        ]
      ],
      [
        -1,
        "vector",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1",
        "0",
        "2",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1",
        "0",
        "2",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1",
        "0",
        "2",
        "4",
        "2",
        "0",
        "3",
        "0",
        "1"
      ]
    ],
    "code": "1210001013212111011003021111030203212100003330231210000302100302103020302113020302130203021030210030210302030211302030213020302103021003021030203021130203021302030210302100302103020302113020302132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf147;&#xf170;&#xf24a;&#xf222;&#xf24a;&#xf204;&#xf246;&#xf154;&#xf245;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24a;&#xf207;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1448
  },
  {
    "role": "doc",
    "lines": [
      "Now should start to introduce a language to talk about what is",
      "going on in the simulated world, and start to move away from detailed mechanism"
    ],
    "stanza": 1449
  },
  {
    "role": "file",
    "lines": [
      "== COS_Element =="
    ],
    "stanza": 1450
  },
  {
    "role": "doc",
    "lines": [
      "",
      "Introducing the elements is done well in the [DearET message](https://web.archive.org/web/20161017192136/http://www.dearet.org/testing-a-message) by [Michael Busch](https://seti.org/our-scientists/michael-busch).  We draw inspiration from that work.",
      "",
      "The general idea here is that there are some physical ratios that should be known by",
      "anybody with a handle on what is going on at the atomic level, and may be recognizable.",
      "The pattern of how elementary particles are combined into atoms, and atoms into",
      "molecules, may also ring a bell.",
      ""
    ],
    "section_description": "introduce the elements",
    "section_category": "PHYSICS",
    "section_index": 42,
    "stanza": 1451
  },
  {
    "role": "code",
    "lines": [
      "intro proton;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "proton"
    ],
    "code": "12100103121110110132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf171;&#xf24b;",
    "stanza": 1452
  },
  {
    "role": "code",
    "lines": [
      "intro electron;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "electron"
    ],
    "code": "12100103121110111032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf172;&#xf24b;",
    "stanza": 1453
  },
  {
    "role": "code",
    "lines": [
      "intro neutron;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "neutron"
    ],
    "code": "12100103121110111132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf173;&#xf24b;",
    "stanza": 1454
  },
  {
    "role": "code",
    "lines": [
      "intro mass;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "mass"
    ],
    "code": "12100103121111000032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf174;&#xf24b;",
    "stanza": 1455
  },
  {
    "role": "doc",
    "lines": [
      "The following definitions are not included in the message, since they are",
      "unit-specific.  The message will only present ratios."
    ],
    "stanza": 1456
  },
  {
    "role": "code",
    "lines": [
      "assume | define proton | make-hash | vector",
      "  (pair mass | decimal:power (minus 27) 1 | vector 6 7 2 6 1 9 2 3 6 9)",
      "  (pair charge 1);"
    ],
    "dt": true,
    "parse": [
      "assume",
      [
        -1,
        "@",
        "proton",
        [
          -1,
          "make-hash",
          [
            -1,
            "vector",
            [
              "list:2",
              "mass",
              [
                -1,
                "decimal:power",
                [
                  "minus",
                  "27"
                ],
                "1",
                [
                  -1,
                  "vector",
                  "6",
                  "7",
                  "2",
                  "6",
                  "1",
                  "9",
                  "2",
                  "3",
                  "6",
                  "9"
                ]
              ]
            ],
            [
              "list:2",
              "charge",
              "1"
            ]
          ]
        ]
      ]
    ],
    "code": "12100111000100003023121101312111011013023121110011302312100003212121111103021033121111000030231212101101031210111103321210101003021101133021302312100003021103021113021030211030213021001302103021130211030210013321212111110302103312111100013021332233",
    "spider": "&#xf146;&#xf160;&#xf154;&#xf248;&#xf151;&#xf24a;&#xf147;&#xf171;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf147;&#xf174;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf21f;&#xf245;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20b;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf205;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf20a;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf182;&#xf206;&#xf147;&#xf175;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "assume": true,
    "stanza": 1457
  },
  {
    "role": "code",
    "lines": [
      "assume | define electron | make-hash | vector",
      "  (pair mass | decimal:power (minus 31) 9 | vector 1 0 9 3 8 3 5 6)",
      "  (pair charge | minus 1);"
    ],
    "dt": true,
    "parse": [
      "assume",
      [
        -1,
        "@",
        "electron",
        [
          -1,
          "make-hash",
          [
            -1,
            "vector",
            [
              "list:2",
              "mass",
              [
                -1,
                "decimal:power",
                [
                  "minus",
                  "31"
                ],
                "9",
                [
                  -1,
                  "vector",
                  "1",
                  "0",
                  "9",
                  "3",
                  "8",
                  "3",
                  "5",
                  "6"
                ]
              ]
            ],
            [
              "list:2",
              "charge",
              [
                -1,
                "minus",
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12100111000100003023121101312111011103023121110011302312100003212121111103021033121111000030231212101101031210111103321210101003021111133021001302312100003021302030210013021130210003021130210130211033212121111103021033121111000130231210101003021332233",
    "spider": "&#xf146;&#xf160;&#xf154;&#xf248;&#xf151;&#xf24a;&#xf147;&#xf172;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf147;&#xf174;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf223;&#xf245;&#xf20d;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24a;&#xf20d;&#xf24a;&#xf207;&#xf24a;&#xf20c;&#xf24a;&#xf207;&#xf24a;&#xf209;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf182;&#xf206;&#xf147;&#xf175;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "assume": true,
    "stanza": 1458
  },
  {
    "role": "code",
    "lines": [
      "assume | define neutron | make-hash | vector",
      "  (pair mass | decimal:power (minus 27) 1 | vector 6 7 4 9 2 7 4 7 1)",
      "  (pair charge 0);"
    ],
    "dt": true,
    "parse": [
      "assume",
      [
        -1,
        "@",
        "neutron",
        [
          -1,
          "make-hash",
          [
            -1,
            "vector",
            [
              "list:2",
              "mass",
              [
                -1,
                "decimal:power",
                [
                  "minus",
                  "27"
                ],
                "1",
                [
                  -1,
                  "vector",
                  "6",
                  "7",
                  "4",
                  "9",
                  "2",
                  "7",
                  "4",
                  "7",
                  "1"
                ]
              ]
            ],
            [
              "list:2",
              "charge",
              "0"
            ]
          ]
        ]
      ]
    ],
    "code": "121001110001000030231211013121110111130231211100113023121000032121211111030210331211110000302312121011010312101111033212101010030211011330213023121000030211030211130210030210013021030211130210030211130213321212111110302103312111100013020332233",
    "spider": "&#xf146;&#xf160;&#xf154;&#xf248;&#xf151;&#xf24a;&#xf147;&#xf173;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf147;&#xf174;&#xf248;&#xf145;&#xf15e;&#xf145;&#xf162;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf21f;&#xf245;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20b;&#xf24a;&#xf208;&#xf24a;&#xf20d;&#xf24a;&#xf206;&#xf24a;&#xf20b;&#xf24a;&#xf208;&#xf24a;&#xf20b;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf182;&#xf206;&#xf147;&#xf175;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "assume": true,
    "stanza": 1459
  },
  {
    "role": "code",
    "lines": [
      "float:= (proton mass) | * (electron mass) | decimal 1836 | vector 1 5 2 6 7 3;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "proton",
        "mass"
      ],
      [
        -1,
        "*",
        [
          "electron",
          "mass"
        ],
        [
          -1,
          "decimal",
          "1836",
          [
            -1,
            "vector",
            "1",
            "5",
            "2",
            "6",
            "7",
            "3"
          ]
        ]
      ]
    ],
    "code": "121210110113121133212111011013121111000033023121001321211101110312111100003302312101101030211100101100302312100003021302101302103021103021113021132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf147;&#xf171;&#xf24a;&#xf147;&#xf174;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf147;&#xf172;&#xf24a;&#xf147;&#xf174;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf220;&#xf230;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf209;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf20b;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1460
  },
  {
    "role": "code",
    "lines": [
      "float:= (electron mass) | * (proton mass) | decimal 0 | vector 0 0 0 5 4 4 6 1 7;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "electron",
        "mass"
      ],
      [
        -1,
        "*",
        [
          "proton",
          "mass"
        ],
        [
          -1,
          "decimal",
          "0",
          [
            -1,
            "vector",
            "0",
            "0",
            "0",
            "5",
            "4",
            "4",
            "6",
            "1",
            "7"
          ]
        ]
      ]
    ],
    "code": "1212101101131211332121110111031211110000330231210013212111011013121111000033023121011010302030231210000302030203020302101302100302100302110302130211132233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf147;&#xf172;&#xf24a;&#xf147;&#xf174;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf147;&#xf171;&#xf24a;&#xf147;&#xf174;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf204;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf209;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf205;&#xf24a;&#xf20b;&#xf24b;",
    "stanza": 1461
  },
  {
    "role": "code",
    "lines": [
      "float:= (neutron mass) | * (proton mass) | decimal 1 | vector 0 0 1 3 7 8 4 2;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "neutron",
        "mass"
      ],
      [
        -1,
        "*",
        [
          "proton",
          "mass"
        ],
        [
          -1,
          "decimal",
          "1",
          [
            -1,
            "vector",
            "0",
            "0",
            "1",
            "3",
            "7",
            "8",
            "4",
            "2"
          ]
        ]
      ]
    ],
    "code": "12121011011312113321211101111312111100003302312100132121110110131211110000330231210110103021302312100003020302030213021130211130210003021003021032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf147;&#xf173;&#xf24a;&#xf147;&#xf174;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf147;&#xf171;&#xf24a;&#xf147;&#xf174;&#xf245;&#xf248;&#xf145;&#xf15e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf207;&#xf24a;&#xf20b;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1462
  },
  {
    "role": "code",
    "lines": [
      "float:= (proton charge) | * (electron charge) (minus 1);"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "proton",
        "charge"
      ],
      [
        -1,
        "*",
        [
          "electron",
          "charge"
        ],
        [
          "minus",
          "1"
        ]
      ]
    ],
    "code": "121210110113121133212111011013121111000133023121001321211101110312111100013321210101003021332233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf147;&#xf171;&#xf24a;&#xf147;&#xf175;&#xf245;&#xf248;&#xf14d;&#xf246;&#xf147;&#xf172;&#xf24a;&#xf147;&#xf175;&#xf245;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf245;&#xf24b;",
    "stanza": 1463
  },
  {
    "role": "code",
    "lines": [
      "float:= (neutron charge) 0;"
    ],
    "dt": false,
    "parse": [
      "float:=",
      [
        "neutron",
        "charge"
      ],
      "0"
    ],
    "code": "12121011011312113321211101111312111100013302032233",
    "spider": "&#xf145;&#xf15f;&#xf147;&#xf246;&#xf147;&#xf173;&#xf24a;&#xf147;&#xf175;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1464
  },
  {
    "role": "code",
    "lines": [
      "define atom | ? x:proton | ? x:proton:neutron | make-hash | vector",
      "  (pair proton $x:proton)",
      "  (pair neutron | - $x:proton:neutron $x:proton)",
      "  (pair electron $x:proton);"
    ],
    "dt": true,
    "parse": [
      "@",
      "atom",
      [
        -1,
        "?",
        "x:proton",
        [
          -1,
          "?",
          "x:proton:neutron",
          [
            -1,
            "make-hash",
            [
              -1,
              "vector",
              [
                "list:2",
                "proton",
                [
                  -2,
                  "x:proton"
                ]
              ],
              [
                "list:2",
                "neutron",
                [
                  -1,
                  "-",
                  [
                    -2,
                    "x:proton:neutron"
                  ],
                  [
                    -2,
                    "x:proton"
                  ]
                ]
              ],
              [
                "list:2",
                "electron",
                [
                  -2,
                  "x:proton"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211110010302312110031212101011312111011013302312110031212101011312111011013121110111133023121110011302312100003212121111103021033121110110131231212101011312111011013332121211111030210331211101111302312101131231212101011312111011013121110111133123121210101131211101101333212121111103021033121110111031231212101011312111011013332233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf176;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf147;&#xf171;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf147;&#xf171;&#xf147;&#xf173;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf147;&#xf171;&#xf249;&#xf16f;&#xf147;&#xf171;&#xf245;&#xf246;&#xf182;&#xf206;&#xf147;&#xf173;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf147;&#xf171;&#xf147;&#xf173;&#xf249;&#xf16f;&#xf147;&#xf171;&#xf245;&#xf246;&#xf182;&#xf206;&#xf147;&#xf172;&#xf249;&#xf16f;&#xf147;&#xf171;&#xf245;&#xf24b;",
    "stanza": 1465
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 1) proton) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "1"
        ],
        "proton"
      ],
      "1"
    ],
    "code": "12113221211110010302130213312111011013302132233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf147;&#xf176;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf147;&#xf171;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1466
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 1) electron) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "1"
        ],
        "electron"
      ],
      "1"
    ],
    "code": "12113221211110010302130213312111011103302132233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf147;&#xf176;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf147;&#xf172;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1467
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 1) neutron) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "1"
        ],
        "neutron"
      ],
      "0"
    ],
    "code": "12113221211110010302130213312111011113302032233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf147;&#xf176;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf147;&#xf173;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1468
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 2) proton) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "2"
        ],
        "proton"
      ],
      "1"
    ],
    "code": "121132212111100103021302103312111011013302132233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf147;&#xf176;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf147;&#xf171;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1469
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 2) electron) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "2"
        ],
        "electron"
      ],
      "1"
    ],
    "code": "121132212111100103021302103312111011103302132233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf147;&#xf176;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf147;&#xf172;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1470
  },
  {
    "role": "code",
    "lines": [
      "= ((atom 1 2) neutron) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "atom",
          "1",
          "2"
        ],
        "neutron"
      ],
      "1"
    ],
    "code": "121132212111100103021302103312111011113302132233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf147;&#xf176;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf147;&#xf173;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1471
  },
  {
    "role": "code",
    "lines": [
      "class elemental (proton isotope:list)",
      "  (method proton $proton)",
      "  (method isotope:list $isotope:list)",
      "  (method electron $proton)",
      "  (method neutron:list | map (? x | - $x $proton) $isotope:list);"
    ],
    "dt": true,
    "parse": [
      "class",
      "elemental",
      [
        "proton",
        "isotope:list"
      ],
      [
        "method",
        "proton",
        [
          -2,
          "proton"
        ]
      ],
      [
        "method",
        "isotope:list",
        [
          -2,
          "isotope:list"
        ]
      ],
      [
        "method",
        "electron",
        [
          -2,
          "proton"
        ]
      ],
      [
        "method",
        "neutron:list",
        [
          -1,
          "map",
          [
            "?",
            "x",
            [
              -1,
              "-",
              [
                -2,
                "x"
              ],
              [
                -2,
                "proton"
              ]
            ]
          ],
          [
            -2,
            "isotope:list"
          ]
        ]
      ]
    ],
    "code": "12101110013121111001132121110110131212111101003121111103332121010111131211101101312312111011013321210101111312121111010031211111033123121211110100312111110333212101011113121110111031231211101101332121010111131212111011113121111103302312100100132121100312101011302312101131231210101131231211101101331231212111101003121111103332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf147;&#xf177;&#xf246;&#xf147;&#xf171;&#xf24a;&#xf147;&#xf178;&#xf182;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf171;&#xf249;&#xf147;&#xf171;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf178;&#xf182;&#xf249;&#xf147;&#xf178;&#xf182;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf172;&#xf249;&#xf147;&#xf171;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf173;&#xf182;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14f;&#xf249;&#xf16f;&#xf249;&#xf147;&#xf171;&#xf245;&#xf249;&#xf147;&#xf178;&#xf182;&#xf245;&#xf24b;",
    "stanza": 1472
  },
  {
    "role": "code",
    "lines": [
      "intro hydrogen;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "hydrogen"
    ],
    "code": "12100103121111010132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf179;&#xf24b;",
    "stanza": 1473
  },
  {
    "role": "code",
    "lines": [
      "intro helium;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "helium"
    ],
    "code": "12100103121111011032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17a;&#xf24b;",
    "stanza": 1474
  },
  {
    "role": "code",
    "lines": [
      "intro carbon;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "carbon"
    ],
    "code": "12100103121111011132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17b;&#xf24b;",
    "stanza": 1475
  },
  {
    "role": "code",
    "lines": [
      "intro nitrogen;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "nitrogen"
    ],
    "code": "12100103121111100032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17c;&#xf24b;",
    "stanza": 1476
  },
  {
    "role": "code",
    "lines": [
      "intro oxygen;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "oxygen"
    ],
    "code": "12100103121111100132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17d;&#xf24b;",
    "stanza": 1477
  },
  {
    "role": "code",
    "lines": [
      "define hydrogen | elemental new 1 | vector 1 2;"
    ],
    "dt": true,
    "parse": [
      "@",
      "hydrogen",
      [
        -1,
        "elemental",
        "new",
        "1",
        [
          -1,
          "vector",
          "1",
          "2"
        ]
      ]
    ],
    "code": "12110131211110101302312111100113121001111030213023121000030213021032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf179;&#xf248;&#xf147;&#xf177;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1478
  },
  {
    "role": "code",
    "lines": [
      "define helium | elemental new 2 | vector 2 4;"
    ],
    "dt": true,
    "parse": [
      "@",
      "helium",
      [
        -1,
        "elemental",
        "new",
        "2",
        [
          -1,
          "vector",
          "2",
          "4"
        ]
      ]
    ],
    "code": "12110131211110110302312111100113121001111030210302312100003021030210032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17a;&#xf248;&#xf147;&#xf177;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf206;&#xf248;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1479
  },
  {
    "role": "code",
    "lines": [
      "define carbon | elemental new 6 | vector 12 13;"
    ],
    "dt": true,
    "parse": [
      "@",
      "carbon",
      [
        -1,
        "elemental",
        "new",
        "6",
        [
          -1,
          "vector",
          "12",
          "13"
        ]
      ]
    ],
    "code": "121101312111101113023121111001131210011110302110302312100003021100302110132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17b;&#xf248;&#xf147;&#xf177;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf20a;&#xf248;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf211;&#xf24b;",
    "stanza": 1480
  },
  {
    "role": "code",
    "lines": [
      "define nitrogen | elemental new 7 | vector 14 15;"
    ],
    "dt": true,
    "parse": [
      "@",
      "nitrogen",
      [
        -1,
        "elemental",
        "new",
        "7",
        [
          -1,
          "vector",
          "14",
          "15"
        ]
      ]
    ],
    "code": "121101312111110003023121111001131210011110302111302312100003021110302111132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17c;&#xf248;&#xf147;&#xf177;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf20b;&#xf248;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf213;&#xf24b;",
    "stanza": 1481
  },
  {
    "role": "code",
    "lines": [
      "define oxygen | elemental new 16 | vector 16 17 18;"
    ],
    "dt": true,
    "parse": [
      "@",
      "oxygen",
      [
        -1,
        "elemental",
        "new",
        "16",
        [
          -1,
          "vector",
          "16",
          "17",
          "18"
        ]
      ]
    ],
    "code": "121101312111110013023121111001131210011110302100003023121000030210000302100013021001032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17d;&#xf248;&#xf147;&#xf177;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf214;&#xf248;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf215;&#xf24a;&#xf216;&#xf24b;",
    "stanza": 1482
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen proton) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hydrogen",
        "proton"
      ],
      "1"
    ],
    "code": "1211321211110101312111011013302132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf179;&#xf24a;&#xf147;&#xf171;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1483
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen electron) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hydrogen",
        "electron"
      ],
      "1"
    ],
    "code": "1211321211110101312111011103302132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf179;&#xf24a;&#xf147;&#xf172;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1484
  },
  {
    "role": "code",
    "lines": [
      "list= (hydrogen isotope:list) | vector 1 2;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "hydrogen",
        "isotope:list"
      ],
      [
        -1,
        "vector",
        "1",
        "2"
      ]
    ],
    "code": "1210001013212111101013121211110100312111110333023121000030213021032233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf147;&#xf179;&#xf24a;&#xf147;&#xf178;&#xf182;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1485
  },
  {
    "role": "code",
    "lines": [
      "list= (hydrogen neutron:list) | vector 0 1;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "hydrogen",
        "neutron:list"
      ],
      [
        -1,
        "vector",
        "0",
        "1"
      ]
    ],
    "code": "121000101321211110101312121110111131211111033302312100003020302132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf147;&#xf179;&#xf24a;&#xf147;&#xf173;&#xf182;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1486
  },
  {
    "role": "code",
    "lines": [
      "= (carbon proton) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "carbon",
        "proton"
      ],
      "6"
    ],
    "code": "121132121111011131211101101330211032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17b;&#xf24a;&#xf147;&#xf171;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 1487
  },
  {
    "role": "code",
    "lines": [
      "= (carbon electron) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "carbon",
        "electron"
      ],
      "6"
    ],
    "code": "121132121111011131211101110330211032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17b;&#xf24a;&#xf147;&#xf172;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 1488
  },
  {
    "role": "code",
    "lines": [
      "list= (carbon isotope:list) | vector 12 13;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "carbon",
        "isotope:list"
      ],
      [
        -1,
        "vector",
        "12",
        "13"
      ]
    ],
    "code": "121000101321211110111312121111010031211111033302312100003021100302110132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf147;&#xf17b;&#xf24a;&#xf147;&#xf178;&#xf182;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf211;&#xf24b;",
    "stanza": 1489
  },
  {
    "role": "code",
    "lines": [
      "list= (carbon neutron:list) | vector 6 7;"
    ],
    "dt": false,
    "parse": [
      "list=",
      [
        "carbon",
        "neutron:list"
      ],
      [
        -1,
        "vector",
        "6",
        "7"
      ]
    ],
    "code": "1210001013212111101113121211101111312111110333023121000030211030211132233",
    "spider": "&#xf145;&#xf149;&#xf246;&#xf147;&#xf17b;&#xf24a;&#xf147;&#xf173;&#xf182;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20b;&#xf24b;",
    "stanza": 1490
  },
  {
    "role": "code",
    "lines": [
      "class molecule (elemental:list)",
      "  (method elemental:list $elemental:list)",
      "  (method count | lambda ((e elemental)) |",
      "    list-length | select-match (? x | = (x proton) (e proton)) $elemental:list);"
    ],
    "dt": true,
    "parse": [
      "class",
      "molecule",
      [
        "elemental:list"
      ],
      [
        "method",
        "elemental:list",
        [
          -2,
          "elemental:list"
        ]
      ],
      [
        "method",
        "count",
        [
          -1,
          "lambda",
          [
            [
              "e",
              "elemental"
            ]
          ],
          [
            -1,
            "list-length",
            [
              -1,
              "select-match",
              [
                "?",
                "x",
                [
                  -1,
                  "=",
                  [
                    "x",
                    "proton"
                  ],
                  [
                    "e",
                    "proton"
                  ]
                ]
              ],
              [
                -2,
                "elemental:list"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121011100131211111010321212111100113121111103332121010111131212111100113121111103312312121111001131211111033321210101111312101000103023121101032212101000312111100113330231210000103023121010010321211003121010113023121132121010113121110110133212101000312111011013331231212111100113121111103332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf147;&#xf17e;&#xf246;&#xf147;&#xf177;&#xf182;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf177;&#xf182;&#xf249;&#xf147;&#xf177;&#xf182;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf166;&#xf248;&#xf15e;&#xf246;&#xf246;&#xf16c;&#xf24a;&#xf147;&#xf177;&#xf245;&#xf245;&#xf248;&#xf145;&#xf146;&#xf248;&#xf145;&#xf156;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf147;&#xf246;&#xf16f;&#xf24a;&#xf147;&#xf171;&#xf245;&#xf246;&#xf16c;&#xf24a;&#xf147;&#xf171;&#xf245;&#xf245;&#xf249;&#xf147;&#xf177;&#xf182;&#xf245;&#xf24b;",
    "stanza": 1491
  },
  {
    "role": "code",
    "lines": [
      "intro hydrogen:2;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "hydrogen:2"
    ],
    "code": "1210010312121111010130210332233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf179;&#xf206;&#xf24b;",
    "stanza": 1492
  },
  {
    "role": "code",
    "lines": [
      "define hydrogen:2 | molecule new | vector $hydrogen $hydrogen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "hydrogen:2",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "code": "1211013121211110101302103302312111110103121001111030231210000312312111101013123121111010132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf179;&#xf206;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf24b;",
    "stanza": 1493
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $hydrogen) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "2"
    ],
    "code": "121132121211110101302103312101000103123121111010133021032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf179;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1494
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $carbon) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "code": "12113212121111010130210331210100010312312111101113302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf179;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1495
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $nitrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111010130210331210100010312312111110003302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf179;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1496
  },
  {
    "role": "code",
    "lines": [
      "= (hydrogen:2 count $oxygen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "hydrogen:2",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111010130210331210100010312312111110013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf179;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1497
  },
  {
    "role": "code",
    "lines": [
      "intro oxygen:2;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "oxygen:2"
    ],
    "code": "1210010312121111100130210332233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17d;&#xf206;&#xf24b;",
    "stanza": 1498
  },
  {
    "role": "code",
    "lines": [
      "define oxygen:2 | molecule new | vector $oxygen $oxygen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "oxygen:2",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "oxygen"
          ],
          [
            -2,
            "oxygen"
          ]
        ]
      ]
    ],
    "code": "1211013121211111001302103302312111110103121001111030231210000312312111110013123121111100132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17d;&#xf206;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf17d;&#xf249;&#xf147;&#xf17d;&#xf24b;",
    "stanza": 1499
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $hydrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100130210331210100010312312111101013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1500
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $carbon) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100130210331210100010312312111101113302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1501
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $nitrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100130210331210100010312312111110003302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1502
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:2 count $oxygen) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:2",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "2"
    ],
    "code": "121132121211111001302103312101000103123121111100133021032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1503
  },
  {
    "role": "code",
    "lines": [
      "intro oxygen:3;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "oxygen:3"
    ],
    "code": "1210010312121111100130211332233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17d;&#xf207;&#xf24b;",
    "stanza": 1504
  },
  {
    "role": "code",
    "lines": [
      "define oxygen:3 | molecule new | vector $oxygen $oxygen $oxygen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "oxygen:3",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "oxygen"
          ],
          [
            -2,
            "oxygen"
          ],
          [
            -2,
            "oxygen"
          ]
        ]
      ]
    ],
    "code": "121101312121111100130211330231211111010312100111103023121000031231211111001312312111110013123121111100132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17d;&#xf207;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf17d;&#xf249;&#xf147;&#xf17d;&#xf249;&#xf147;&#xf17d;&#xf24b;",
    "stanza": 1505
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $hydrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100130211331210100010312312111101013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf207;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1506
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $carbon) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100130211331210100010312312111101113302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf207;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1507
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $nitrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100130211331210100010312312111110003302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf207;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1508
  },
  {
    "role": "code",
    "lines": [
      "= (oxygen:3 count $oxygen) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "oxygen:3",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "3"
    ],
    "code": "121132121211111001302113312101000103123121111100133021132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17d;&#xf207;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1509
  },
  {
    "role": "code",
    "lines": [
      "intro water;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "water"
    ],
    "code": "12100103121111101132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17f;&#xf24b;",
    "stanza": 1510
  },
  {
    "role": "code",
    "lines": [
      "define water | molecule new | vector $hydrogen $hydrogen $oxygen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "water",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "oxygen"
          ]
        ]
      ]
    ],
    "code": "1211013121111101130231211111010312100111103023121000031231211110101312312111101013123121111100132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17f;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf17d;&#xf24b;",
    "stanza": 1511
  },
  {
    "role": "code",
    "lines": [
      "= (water count $hydrogen) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "2"
    ],
    "code": "1211321211111011312101000103123121111010133021032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17f;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1512
  },
  {
    "role": "code",
    "lines": [
      "= (water count $carbon) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "code": "121132121111101131210100010312312111101113302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17f;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1513
  },
  {
    "role": "code",
    "lines": [
      "= (water count $nitrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "code": "121132121111101131210100010312312111110003302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17f;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1514
  },
  {
    "role": "code",
    "lines": [
      "= (water count $oxygen) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "water",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "1"
    ],
    "code": "121132121111101131210100010312312111110013302132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17f;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1515
  },
  {
    "role": "code",
    "lines": [
      "intro nitrogen:2;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "nitrogen:2"
    ],
    "code": "1210010312121111100030210332233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf17c;&#xf206;&#xf24b;",
    "stanza": 1516
  },
  {
    "role": "code",
    "lines": [
      "define nitrogen:2 | molecule new | vector $nitrogen $nitrogen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "nitrogen:2",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "nitrogen"
          ],
          [
            -2,
            "nitrogen"
          ]
        ]
      ]
    ],
    "code": "1211013121211111000302103302312111110103121001111030231210000312312111110003123121111100032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf17c;&#xf206;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf17c;&#xf249;&#xf147;&#xf17c;&#xf24b;",
    "stanza": 1517
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $hydrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100030210331210100010312312111101013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17c;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1518
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $carbon) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100030210331210100010312312111101113302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17c;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1519
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $nitrogen) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "2"
    ],
    "code": "121132121211111000302103312101000103123121111100033021032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17c;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1520
  },
  {
    "role": "code",
    "lines": [
      "= (nitrogen:2 count $oxygen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "nitrogen:2",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "code": "12113212121111100030210331210100010312312111110013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf17c;&#xf206;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1521
  },
  {
    "role": "code",
    "lines": [
      "intro ammonia;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "ammonia"
    ],
    "code": "12100103121111110032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf180;&#xf24b;",
    "stanza": 1522
  },
  {
    "role": "code",
    "lines": [
      "define ammonia | molecule new | vector",
      "  $nitrogen $hydrogen $hydrogen $hydrogen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "ammonia",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "nitrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "code": "121101312111111003023121111101031210011110302312100003123121111100031231211110101312312111101013123121111010132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf180;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf17c;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf24b;",
    "stanza": 1523
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $hydrogen) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "3"
    ],
    "code": "1211321211111100312101000103123121111010133021132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf180;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1524
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $carbon) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "0"
    ],
    "code": "121132121111110031210100010312312111101113302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf180;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1525
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $nitrogen) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "1"
    ],
    "code": "121132121111110031210100010312312111110003302132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf180;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1526
  },
  {
    "role": "code",
    "lines": [
      "= (ammonia count $oxygen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ammonia",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "code": "121132121111110031210100010312312111110013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf180;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1527
  },
  {
    "role": "code",
    "lines": [
      "intro methane;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "methane"
    ],
    "code": "12100103121111110132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf181;&#xf24b;",
    "stanza": 1528
  },
  {
    "role": "code",
    "lines": [
      "define methane | molecule new | vector",
      "  $carbon $hydrogen $hydrogen $hydrogen $hydrogen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "methane",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "carbon"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "code": "12110131211111101302312111110103121001111030231210000312312111101113123121111010131231211110101312312111101013123121111010132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf181;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf17b;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf24b;",
    "stanza": 1529
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $hydrogen) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "4"
    ],
    "code": "12113212111111013121010001031231211110101330210032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf181;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf208;&#xf24b;",
    "stanza": 1530
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $carbon) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "1"
    ],
    "code": "121132121111110131210100010312312111101113302132233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf181;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1531
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $nitrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "code": "121132121111110131210100010312312111110003302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf181;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1532
  },
  {
    "role": "code",
    "lines": [
      "= (methane count $oxygen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "methane",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "code": "121132121111110131210100010312312111110013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf181;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1533
  },
  {
    "role": "code",
    "lines": [
      "intro ethane;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "ethane"
    ],
    "code": "12100103121111111032233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf182;&#xf24b;",
    "stanza": 1534
  },
  {
    "role": "code",
    "lines": [
      "define ethane | molecule new | vector",
      "  $hydrogen $hydrogen $hydrogen",
      "  $carbon $carbon",
      "  $hydrogen $hydrogen $hydrogen;"
    ],
    "dt": true,
    "parse": [
      "@",
      "ethane",
      [
        -1,
        "molecule",
        "new",
        [
          -1,
          "vector",
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "carbon"
          ],
          [
            -2,
            "carbon"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ],
          [
            -2,
            "hydrogen"
          ]
        ]
      ]
    ],
    "code": "12110131211111110302312111110103121001111030231210000312312111101013123121111010131231211110101312312111101113123121111011131231211110101312312111101013123121111010132233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf182;&#xf248;&#xf147;&#xf17e;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf17b;&#xf249;&#xf147;&#xf17b;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf249;&#xf147;&#xf179;&#xf24b;",
    "stanza": 1535
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $hydrogen) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "hydrogen"
        ]
      ],
      "6"
    ],
    "code": "12113212111111103121010001031231211110101330211032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf182;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf179;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 1536
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $carbon) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "carbon"
        ]
      ],
      "2"
    ],
    "code": "1211321211111110312101000103123121111011133021032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf182;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17b;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1537
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $nitrogen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "nitrogen"
        ]
      ],
      "0"
    ],
    "code": "121132121111111031210100010312312111110003302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf182;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17c;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1538
  },
  {
    "role": "code",
    "lines": [
      "= (ethane count $oxygen) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ethane",
        "count",
        [
          -2,
          "oxygen"
        ]
      ],
      "0"
    ],
    "code": "121132121111111031210100010312312111110013302032233",
    "spider": "&#xf147;&#xf246;&#xf147;&#xf182;&#xf24a;&#xf146;&#xf166;&#xf249;&#xf147;&#xf17d;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1539
  },
  {
    "role": "file",
    "lines": [
      "== COS_CommentBase2 =="
    ],
    "stanza": 1540
  },
  {
    "role": "comment",
    "lines": [
      "# The following parts of the message are the beginnings",
      "# of embedding an alternate visual primer"
    ],
    "section_description": "end of part 2, start of part 3",
    "section_category": "NOTE",
    "section_index": 43,
    "stanza": 1541
  },
  {
    "role": "code",
    "lines": [
      "intro part3;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "part3"
    ],
    "code": "12100103121111111132233",
    "spider": "&#xf156;&#xf24a;&#xf147;&#xf183;&#xf24b;",
    "stanza": 1542
  },
  {
    "role": "file",
    "lines": [
      "== COS_Unless =="
    ],
    "stanza": 1543
  },
  {
    "role": "comment",
    "lines": [
      "# for embedded image-and-logic-based primer"
    ],
    "section_description": "simulating unless gates",
    "section_category": "GATE",
    "section_index": 44,
    "stanza": 1544
  },
  {
    "role": "comment",
    "lines": [
      "# practice with pure logic gate"
    ],
    "stanza": 1545
  },
  {
    "role": "comment",
    "lines": [
      "# X unless Y = (X if Y=0, otherwise 0)"
    ],
    "stanza": 1546
  },
  {
    "role": "code",
    "lines": [
      "intro unless;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "unless"
    ],
    "code": "121001031210000000032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf144;&#xf24b;",
    "stanza": 1547
  },
  {
    "role": "code",
    "lines": [
      "define unless | ? x | ? y | and $x | not $y;"
    ],
    "dt": true,
    "parse": [
      "@",
      "unless",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "true:*",
            [
              -2,
              "x"
            ],
            [
              -1,
              "not",
              [
                -2,
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100000000302312110031210101130231211003121101003023121213121001331231210101130231210131231211010032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf144;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf145;&#xf14d;&#xf249;&#xf16f;&#xf248;&#xf149;&#xf249;&#xf178;&#xf24b;",
    "stanza": 1548
  },
  {
    "role": "comment",
    "lines": [
      "# if second input is true, output is blocked (false)",
      "# if second input is false, output copies first input"
    ],
    "stanza": 1549
  },
  {
    "role": "code",
    "lines": [
      "= $false | unless $false $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "121131231203023121000000003123120312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf144;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1550
  },
  {
    "role": "code",
    "lines": [
      "= $true | unless $true $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "121131231213023121000000003123121312312032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf148;&#xf144;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1551
  },
  {
    "role": "code",
    "lines": [
      "= $false | unless $false $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "121131231203023121000000003123120312312132233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf144;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1552
  },
  {
    "role": "code",
    "lines": [
      "= $false | unless $true $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "unless",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "121131231203023121000000003123121312312132233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf144;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1553
  },
  {
    "role": "comment",
    "lines": [
      "# To do: add a simple simulator for non-grid-based",
      "# logic -- much simpler to understand than",
      "# grid-based"
    ],
    "stanza": 1554
  },
  {
    "role": "comment",
    "lines": [
      "# On to a grid-based logic simulation",
      "# first, need unbounded, mutable matrices"
    ],
    "stanza": 1555
  },
  {
    "role": "code",
    "lines": [
      "intro make-matrix;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "make-matrix"
    ],
    "code": "121001031210000000132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf145;&#xf24b;",
    "stanza": 1556
  },
  {
    "role": "code",
    "lines": [
      "define make-matrix | ? default |",
      "   make-cell | hash-default $default;"
    ],
    "dt": true,
    "parse": [
      "@",
      "make-matrix",
      [
        -1,
        "?",
        "default",
        [
          -1,
          "cell:make",
          [
            -1,
            "hash-default",
            [
              -2,
              "default"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210000000130231211003121110010302312121001013121101133023121110001312312111001032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf145;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf176;&#xf248;&#xf169;&#xf15f;&#xf248;&#xf145;&#xf175;&#xf249;&#xf145;&#xf176;&#xf24b;",
    "stanza": 1557
  },
  {
    "role": "code",
    "lines": [
      "intro matrix-set;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "matrix-set"
    ],
    "code": "121001031210000001032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf146;&#xf24b;",
    "stanza": 1558
  },
  {
    "role": "code",
    "lines": [
      "define matrix-set | ? m | ? x | ? addr |",
      "  set! $m | hash-add (get! $m) $addr $x;"
    ],
    "dt": true,
    "parse": [
      "@",
      "matrix-set",
      [
        -1,
        "?",
        "m",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "?",
            "addr",
            [
              -1,
              "cell:assign",
              [
                -2,
                "m"
              ],
              [
                -1,
                "hash-add",
                [
                  "cell:get",
                  [
                    -2,
                    "m"
                  ]
                ],
                [
                  -2,
                  "addr"
                ],
                [
                  -2,
                  "x"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100000010302312110031210000001130231211003121010113023121100312100000100302312121001013121110331231210000001130231211011013212121001013121111013312312100000011331231210000010031231210101132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf146;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf147;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf148;&#xf248;&#xf169;&#xf152;&#xf249;&#xf148;&#xf147;&#xf248;&#xf145;&#xf171;&#xf246;&#xf169;&#xf181;&#xf249;&#xf148;&#xf147;&#xf245;&#xf249;&#xf148;&#xf148;&#xf249;&#xf16f;&#xf24b;",
    "stanza": 1559
  },
  {
    "role": "code",
    "lines": [
      "intro matrix-get;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "matrix-get"
    ],
    "code": "121001031210000010132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf149;&#xf24b;",
    "stanza": 1560
  },
  {
    "role": "code",
    "lines": [
      "define matrix-get | ? m | ? addr |",
      "  hash-ref (get! $m) $addr;"
    ],
    "dt": true,
    "parse": [
      "@",
      "matrix-get",
      [
        -1,
        "?",
        "m",
        [
          -1,
          "?",
          "addr",
          [
            -1,
            "hash-ref",
            [
              "cell:get",
              [
                -2,
                "m"
              ]
            ],
            [
              -2,
              "addr"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121000001013023121100312100000011302312110031210000010030231211011113212121001013121111013312312100000011331231210000010032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf149;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf147;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf148;&#xf248;&#xf145;&#xf173;&#xf246;&#xf169;&#xf181;&#xf249;&#xf148;&#xf147;&#xf245;&#xf249;&#xf148;&#xf148;&#xf24b;",
    "stanza": 1561
  },
  {
    "role": "code",
    "lines": [
      "define test-matrix | make-matrix 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "test-matrix",
      [
        -1,
        "make-matrix",
        "0"
      ]
    ],
    "code": "121101312100000110302312100000001302032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf14a;&#xf248;&#xf148;&#xf145;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1562
  },
  {
    "role": "code",
    "lines": [
      "= 0 | matrix-get $test-matrix | vector 1 2 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "matrix-get",
        [
          -2,
          "test-matrix"
        ],
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ]
    ],
    "code": "12113020302312100000101312312100000110302312100003021302103021132233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14a;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1563
  },
  {
    "role": "code",
    "lines": [
      "matrix-set $test-matrix 10 | vector 1 2 3;"
    ],
    "dt": false,
    "parse": [
      "matrix-set",
      [
        -2,
        "test-matrix"
      ],
      "10",
      [
        -1,
        "vector",
        "1",
        "2",
        "3"
      ]
    ],
    "code": "121000000103123121000001103021010302312100003021302103021132233",
    "spider": "&#xf148;&#xf146;&#xf249;&#xf148;&#xf14a;&#xf24a;&#xf20e;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1564
  },
  {
    "role": "code",
    "lines": [
      "= 10 | matrix-get $test-matrix | vector 1 2 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "10",
      [
        -1,
        "matrix-get",
        [
          -2,
          "test-matrix"
        ],
        [
          -1,
          "vector",
          "1",
          "2",
          "3"
        ]
      ]
    ],
    "code": "12113021010302312100000101312312100000110302312100003021302103021132233",
    "spider": "&#xf147;&#xf24a;&#xf20e;&#xf248;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14a;&#xf248;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1565
  },
  {
    "role": "comment",
    "lines": [
      "# go through a circuit of unless gates and analyze data flow"
    ],
    "stanza": 1566
  },
  {
    "role": "code",
    "lines": [
      "define unless-phase-1 | ? circuit |",
      "  assign state (make-matrix $false) |",
      "  begin",
      "    (map ",
      "     (? gate |",
      "    assign x1 (list-ref $gate 0) |",
      "    assign y1 (list-ref $gate 1) |",
      "    assign x2 (list-ref $gate 2) |",
      "    assign y2 (list-ref $gate 3) |",
      "    assign v (list-ref $gate 4) |",
      "    (if (= $x1 $x2)",
      "        (begin",
      "          (matrix-set $state $v | vector $x2 $y2 vert-value)",
      "          (matrix-set $state $true | vector $x2 $y2 vert-have)",
      "          (matrix-set $state $true | vector $x1 $y1 vert-want)",
      "            $gate)",
      "        (begin",
      "          (matrix-set $state $v | vector $x2 $y2 horiz-value)",
      "          (matrix-set $state $true | vector $x2 $y2 horiz-have)",
      "          (matrix-set $state $true | vector $x1 $y1 horiz-want)",
      "          $gate)))",
      "     $circuit)",
      "    $state;"
    ],
    "dt": true,
    "parse": [
      "@",
      "unless-phase-1",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "assign",
          "state",
          [
            "make-matrix",
            [
              -2,
              "false"
            ]
          ],
          [
            -1,
            "begin",
            [
              "map",
              [
                "?",
                "gate",
                [
                  -1,
                  "assign",
                  "x1",
                  [
                    "list-ref",
                    [
                      -2,
                      "gate"
                    ],
                    "0"
                  ],
                  [
                    -1,
                    "assign",
                    "y1",
                    [
                      "list-ref",
                      [
                        -2,
                        "gate"
                      ],
                      "1"
                    ],
                    [
                      -1,
                      "assign",
                      "x2",
                      [
                        "list-ref",
                        [
                          -2,
                          "gate"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "assign",
                        "y2",
                        [
                          "list-ref",
                          [
                            -2,
                            "gate"
                          ],
                          "3"
                        ],
                        [
                          -1,
                          "assign",
                          "v",
                          [
                            "list-ref",
                            [
                              -2,
                              "gate"
                            ],
                            "4"
                          ],
                          [
                            -1,
                            [
                              "if",
                              [
                                "=",
                                [
                                  -2,
                                  "x1"
                                ],
                                [
                                  -2,
                                  "x2"
                                ]
                              ],
                              [
                                "begin",
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "v"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "vert-value"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "vert-have"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-want"
                                  ]
                                ],
                                [
                                  -2,
                                  "gate"
                                ]
                              ],
                              [
                                "begin",
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "v"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "horiz-value"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x2"
                                    ],
                                    [
                                      -2,
                                      "y2"
                                    ],
                                    "horiz-have"
                                  ]
                                ],
                                [
                                  "matrix-set",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -2,
                                    "true"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-want"
                                  ]
                                ],
                                [
                                  -2,
                                  "gate"
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                -2,
                "circuit"
              ]
            ],
            [
              -2,
              "state"
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf14b;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf14d;&#xf246;&#xf148;&#xf145;&#xf249;&#xf144;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf148;&#xf14e;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf14f;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf150;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf151;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf152;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf170;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf246;&#xf153;&#xf246;&#xf147;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf151;&#xf245;&#xf246;&#xf145;&#xf14f;&#xf246;&#xf148;&#xf146;&#xf249;&#xf148;&#xf14d;&#xf249;&#xf170;&#xf248;&#xf154;&#xf249;&#xf148;&#xf151;&#xf249;&#xf148;&#xf152;&#xf24a;&#xf148;&#xf153;&#xf245;&#xf246;&#xf148;&#xf146;&#xf249;&#xf148;&#xf14d;&#xf249;&#xf145;&#xf248;&#xf154;&#xf249;&#xf148;&#xf151;&#xf249;&#xf148;&#xf152;&#xf24a;&#xf148;&#xf154;&#xf245;&#xf246;&#xf148;&#xf146;&#xf249;&#xf148;&#xf14d;&#xf249;&#xf145;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf155;&#xf245;&#xf249;&#xf148;&#xf14e;&#xf245;&#xf246;&#xf145;&#xf14f;&#xf246;&#xf148;&#xf146;&#xf249;&#xf148;&#xf14d;&#xf249;&#xf170;&#xf248;&#xf154;&#xf249;&#xf148;&#xf151;&#xf249;&#xf148;&#xf152;&#xf24a;&#xf148;&#xf156;&#xf245;&#xf246;&#xf148;&#xf146;&#xf249;&#xf148;&#xf14d;&#xf249;&#xf145;&#xf248;&#xf154;&#xf249;&#xf148;&#xf151;&#xf249;&#xf148;&#xf152;&#xf24a;&#xf148;&#xf157;&#xf245;&#xf246;&#xf148;&#xf146;&#xf249;&#xf148;&#xf14d;&#xf249;&#xf145;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf158;&#xf245;&#xf249;&#xf148;&#xf14e;&#xf245;&#xf245;&#xf245;&#xf249;&#xf148;&#xf14c;&#xf245;&#xf249;&#xf148;&#xf14d;&#xf24b;",
    "stanza": 1567
  },
  {
    "role": "comment",
    "lines": [
      "# move forward one simulation step"
    ],
    "stanza": 1568
  },
  {
    "role": "code",
    "lines": [
      "define unless-phase-2 | ? circuit | ? state | map",
      "   (? gate |",
      "      assign x1 (list-ref $gate 0) |",
      "      assign y1 (list-ref $gate 1) |",
      "      assign x2 (list-ref $gate 2) |",
      "      assign y2 (list-ref $gate 3) |",
      "      assign v (list-ref $gate 4) |",
      "      assign nv (if (= $x1 $x2)",
      "            (if (matrix-get $state | vector $x1 $y1 vert-have)",
      "            (and (matrix-get $state | vector $x1 $y1 vert-value)",
      "                 (not | and (matrix-get $state |",
      "                           vector $x1 $y1 horiz-value)",
      "                        (not  | matrix-get $state |",
      "                            vector $x1 $y1 horiz-want)))",
      "            (if (matrix-get $state | vector $x1 $y1 horiz-have)",
      "                (matrix-get $state | vector $x1 $y1 horiz-value)",
      "                $true))",
      "            (if (matrix-get $state | vector $x1 $y1 horiz-have)",
      "            (and (matrix-get $state | vector $x1 $y1 horiz-value)",
      "                 (not | and (matrix-get $state |",
      "                           vector $x1 $y1 vert-value)",
      "                        (not | matrix-get $state |",
      "                            vector $x1 $y1 vert-want)))",
      "            (if (matrix-get $state | vector $x1 $y1 vert-have)",
      "                (matrix-get $state | vector $x1 $y1 vert-value)",
      "                $true))) |",
      "      vector $x1 $y1 $x2 $y2 $nv)",
      "   $circuit;"
    ],
    "dt": true,
    "parse": [
      "@",
      "unless-phase-2",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "state",
          [
            -1,
            "map",
            [
              "?",
              "gate",
              [
                -1,
                "assign",
                "x1",
                [
                  "list-ref",
                  [
                    -2,
                    "gate"
                  ],
                  "0"
                ],
                [
                  -1,
                  "assign",
                  "y1",
                  [
                    "list-ref",
                    [
                      -2,
                      "gate"
                    ],
                    "1"
                  ],
                  [
                    -1,
                    "assign",
                    "x2",
                    [
                      "list-ref",
                      [
                        -2,
                        "gate"
                      ],
                      "2"
                    ],
                    [
                      -1,
                      "assign",
                      "y2",
                      [
                        "list-ref",
                        [
                          -2,
                          "gate"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "assign",
                        "v",
                        [
                          "list-ref",
                          [
                            -2,
                            "gate"
                          ],
                          "4"
                        ],
                        [
                          -1,
                          "assign",
                          "nv",
                          [
                            "if",
                            [
                              "=",
                              [
                                -2,
                                "x1"
                              ],
                              [
                                -2,
                                "x2"
                              ]
                            ],
                            [
                              "if",
                              [
                                "matrix-get",
                                [
                                  -2,
                                  "state"
                                ],
                                [
                                  -1,
                                  "vector",
                                  [
                                    -2,
                                    "x1"
                                  ],
                                  [
                                    -2,
                                    "y1"
                                  ],
                                  "vert-have"
                                ]
                              ],
                              [
                                "true:*",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-value"
                                  ]
                                ],
                                [
                                  "not",
                                  [
                                    -1,
                                    "true:*",
                                    [
                                      "matrix-get",
                                      [
                                        -2,
                                        "state"
                                      ],
                                      [
                                        -1,
                                        "vector",
                                        [
                                          -2,
                                          "x1"
                                        ],
                                        [
                                          -2,
                                          "y1"
                                        ],
                                        "horiz-value"
                                      ]
                                    ],
                                    [
                                      "not",
                                      [
                                        -1,
                                        "matrix-get",
                                        [
                                          -2,
                                          "state"
                                        ],
                                        [
                                          -1,
                                          "vector",
                                          [
                                            -2,
                                            "x1"
                                          ],
                                          [
                                            -2,
                                            "y1"
                                          ],
                                          "horiz-want"
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [
                                "if",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-have"
                                  ]
                                ],
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-value"
                                  ]
                                ],
                                [
                                  -2,
                                  "true"
                                ]
                              ]
                            ],
                            [
                              "if",
                              [
                                "matrix-get",
                                [
                                  -2,
                                  "state"
                                ],
                                [
                                  -1,
                                  "vector",
                                  [
                                    -2,
                                    "x1"
                                  ],
                                  [
                                    -2,
                                    "y1"
                                  ],
                                  "horiz-have"
                                ]
                              ],
                              [
                                "true:*",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "horiz-value"
                                  ]
                                ],
                                [
                                  "not",
                                  [
                                    -1,
                                    "true:*",
                                    [
                                      "matrix-get",
                                      [
                                        -2,
                                        "state"
                                      ],
                                      [
                                        -1,
                                        "vector",
                                        [
                                          -2,
                                          "x1"
                                        ],
                                        [
                                          -2,
                                          "y1"
                                        ],
                                        "vert-value"
                                      ]
                                    ],
                                    [
                                      "not",
                                      [
                                        -1,
                                        "matrix-get",
                                        [
                                          -2,
                                          "state"
                                        ],
                                        [
                                          -1,
                                          "vector",
                                          [
                                            -2,
                                            "x1"
                                          ],
                                          [
                                            -2,
                                            "y1"
                                          ],
                                          "vert-want"
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [
                                "if",
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-have"
                                  ]
                                ],
                                [
                                  "matrix-get",
                                  [
                                    -2,
                                    "state"
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -2,
                                      "x1"
                                    ],
                                    [
                                      -2,
                                      "y1"
                                    ],
                                    "vert-value"
                                  ]
                                ],
                                [
                                  -2,
                                  "true"
                                ]
                              ]
                            ]
                          ],
                          [
                            -1,
                            "vector",
                            [
                              -2,
                              "x1"
                            ],
                            [
                              -2,
                              "y1"
                            ],
                            [
                              -2,
                              "x2"
                            ],
                            [
                              -2,
                              "y2"
                            ],
                            [
                              -2,
                              "nv"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              -2,
              "circuit"
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf159;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14d;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf148;&#xf14e;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf14f;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf150;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf151;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf152;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf170;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14e;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf15a;&#xf246;&#xf153;&#xf246;&#xf147;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf151;&#xf245;&#xf246;&#xf153;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf154;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf153;&#xf245;&#xf246;&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf156;&#xf245;&#xf246;&#xf149;&#xf248;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf158;&#xf245;&#xf245;&#xf245;&#xf246;&#xf153;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf157;&#xf245;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf156;&#xf245;&#xf249;&#xf145;&#xf245;&#xf245;&#xf246;&#xf153;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf157;&#xf245;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf156;&#xf245;&#xf246;&#xf149;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf153;&#xf245;&#xf246;&#xf149;&#xf248;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf155;&#xf245;&#xf245;&#xf245;&#xf246;&#xf153;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf154;&#xf245;&#xf246;&#xf148;&#xf149;&#xf249;&#xf148;&#xf14d;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf24a;&#xf148;&#xf153;&#xf245;&#xf249;&#xf145;&#xf245;&#xf245;&#xf245;&#xf248;&#xf154;&#xf249;&#xf148;&#xf14f;&#xf249;&#xf148;&#xf150;&#xf249;&#xf148;&#xf151;&#xf249;&#xf148;&#xf152;&#xf249;&#xf148;&#xf15a;&#xf245;&#xf249;&#xf148;&#xf14c;&#xf24b;",
    "stanza": 1569
  },
  {
    "role": "comment",
    "lines": [
      "# wrap up both phases of simulation"
    ],
    "stanza": 1570
  },
  {
    "role": "code",
    "lines": [
      "intro simulate-unless;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "simulate-unless"
    ],
    "code": "121001031210001011132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf15b;&#xf24b;",
    "stanza": 1571
  },
  {
    "role": "code",
    "lines": [
      "define simulate-unless | ? circuit |",
      "  assign state (unless-phase-1 $circuit) |",
      "  unless-phase-2 $circuit $state;"
    ],
    "dt": true,
    "parse": [
      "@",
      "simulate-unless",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "assign",
          "state",
          [
            "unless-phase-1",
            [
              -2,
              "circuit"
            ]
          ],
          [
            -1,
            "unless-phase-2",
            [
              -2,
              "circuit"
            ],
            [
              -2,
              "state"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100010111302312110031210000100030231211103121000010013212100000111312312100001000330231210001010131231210000100031231210000100132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf15b;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf14d;&#xf246;&#xf148;&#xf14b;&#xf249;&#xf148;&#xf14c;&#xf245;&#xf248;&#xf148;&#xf159;&#xf249;&#xf148;&#xf14c;&#xf249;&#xf148;&#xf14d;&#xf24b;",
    "stanza": 1572
  },
  {
    "role": "comment",
    "lines": [
      "# A circuit is a list of gates",
      "# Each gate is a list (x1 y1 x2 y2 v)",
      "# where the coordinates (x1,y1) and (x2,y2) represent",
      "# start and end points of a wire on a plane, carrying a ",
      "# logic value v.",
      "# Wires copy values from their start point.",
      "#   |  ",
      "#   | (A)",
      "#   V        ",
      "# -->-->",
      "# (B)(C)",
      "#",
      "# Wire C here copies from wire B.",
      "# If wire A is on, it blocks (sets to 0) C."
    ],
    "stanza": 1573
  },
  {
    "role": "code",
    "lines": [
      "assign circuit1",
      "    (vector",
      "     (vector 2 2 4 2 $true)",
      "     (vector 4 2 6 2 $true)",
      "     (vector 6 2 8 2 $true)",
      "     (vector 6 4 6 2 $true)) |",
      "     assign circuit2",
      "     (vector",
      "      (vector 2 2 4 2 $true)",
      "      (vector 4 2 6 2 $true)",
      "      (vector 6 2 8 2 $false)",
      "      (vector 6 4 6 2 $true)) |",
      "      equal (simulate-unless $circuit1) $circuit2;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "circuit1",
      [
        "vector",
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "2",
          "8",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "4",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ]
      ],
      [
        -1,
        "assign",
        "circuit2",
        [
          "vector",
          [
            "vector",
            "2",
            "2",
            "4",
            "2",
            [
              -2,
              "true"
            ]
          ],
          [
            "vector",
            "4",
            "2",
            "6",
            "2",
            [
              -2,
              "true"
            ]
          ],
          [
            "vector",
            "6",
            "2",
            "8",
            "2",
            [
              -2,
              "false"
            ]
          ],
          [
            "vector",
            "6",
            "4",
            "6",
            "2",
            [
              -2,
              "true"
            ]
          ]
        ],
        [
          -1,
          "equal",
          [
            "simulate-unless",
            [
              -2,
              "circuit1"
            ]
          ],
          [
            -2,
            "circuit2"
          ]
        ]
      ]
    ],
    "code": "1211103121000110003212100003212100003021030210302100302103123121332121000030210030210302110302103123121332121000030211030210302100030210312312133212100003021103021003021103021031231213330231211103121000110013212100003212100003021030210302100302103123121332121000030210030210302110302103123121332121000030211030210302100030210312312033212100003021103021003021103021031231213330231210001003212100010111312312100011000331231210001100132233",
    "spider": "&#xf152;&#xf24a;&#xf148;&#xf15c;&#xf246;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf15d;&#xf246;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf245;&#xf248;&#xf145;&#xf148;&#xf246;&#xf148;&#xf15b;&#xf249;&#xf148;&#xf15c;&#xf245;&#xf249;&#xf148;&#xf15d;&#xf24b;",
    "stanza": 1574
  },
  {
    "role": "comment",
    "lines": [
      "# okay, now let us make a simple image class",
      "# we are going to encode each row as a single binary number,",
      "# rather than a vector, so that images will be pretty",
      "# obvious in the raw, uninterpreted message",
      "# TODO: introduce div somewhere!"
    ],
    "stanza": 1575
  },
  {
    "role": "code",
    "lines": [
      "intro bit-get;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "bit-get"
    ],
    "code": "121001031210001101032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf15e;&#xf24b;",
    "stanza": 1576
  },
  {
    "role": "code",
    "lines": [
      "define bit-get | lambda (n offset) |",
      "  assign div2 (div $n 2) |",
      "  if (= 0 | offset) (not | = $n | * 2 $div2) |",
      "  bit-get $div2 | - $offset 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "bit-get",
      [
        -1,
        "lambda",
        [
          "n",
          "offset"
        ],
        [
          -1,
          "assign",
          "div2",
          [
            "div",
            [
              -2,
              "n"
            ],
            "2"
          ],
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "offset"
              ]
            ],
            [
              "not",
              [
                -1,
                "=",
                [
                  -2,
                  "n"
                ],
                [
                  -1,
                  "*",
                  "2",
                  [
                    -2,
                    "div2"
                  ]
                ]
              ]
            ],
            [
              -1,
              "bit-get",
              [
                -2,
                "div2"
              ],
              [
                -1,
                "-",
                [
                  -2,
                  "offset"
                ],
                "1"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210001101030231211010321211111131210001101133023121110312100011100321210001031231211111130210330231211113212113020302312100011011332121013023121131231211111130231210013021031231210001110033023121000110103123121000111003023121011312312100011011302132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf15e;&#xf248;&#xf15e;&#xf246;&#xf183;&#xf24a;&#xf148;&#xf15f;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf160;&#xf246;&#xf166;&#xf249;&#xf183;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15f;&#xf245;&#xf246;&#xf149;&#xf248;&#xf147;&#xf249;&#xf183;&#xf248;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf148;&#xf160;&#xf245;&#xf248;&#xf148;&#xf15e;&#xf249;&#xf148;&#xf160;&#xf248;&#xf14f;&#xf249;&#xf148;&#xf15f;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1577
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::::::::::::::......:...:..::.) 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "0"
      ]
    ],
    "code": "1211302030231210001101032021111111111111100000010001001103302032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1578
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get (::::::::::::::......:...:..::.) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "1"
      ]
    ],
    "code": "1211302130231210001101032021111111111111100000010001001103302132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1579
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get (::::::::::::::......:...:..::.) 2;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "2"
      ]
    ],
    "code": "12113021302312100011010320211111111111111000000100010011033021032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf206;&#xf24b;",
    "stanza": 1580
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::::::::::::::......:...:..::.) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "3"
      ]
    ],
    "code": "12113020302312100011010320211111111111111000000100010011033021132233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1581
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::::::::::::::......:...:..::.) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "4"
      ]
    ],
    "code": "121130203023121000110103202111111111111110000001000100110330210032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf208;&#xf24b;",
    "stanza": 1582
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get (::::::::::::::......:...:..::.) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "5"
      ]
    ],
    "code": "121130213023121000110103202111111111111110000001000100110330210132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf209;&#xf24b;",
    "stanza": 1583
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::::::::::::::......:...:..::.) 6;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "6"
      ]
    ],
    "code": "121130203023121000110103202111111111111110000001000100110330211032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf20a;&#xf24b;",
    "stanza": 1584
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::::::::::::::......:...:..::.) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "7"
      ]
    ],
    "code": "121130203023121000110103202111111111111110000001000100110330211132233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 1585
  },
  {
    "role": "code",
    "lines": [
      "= 0 | bit-get (::::::::::::::......:...:..::.) 8;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "8"
      ]
    ],
    "code": "1211302030231210001101032021111111111111100000010001001103302100032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf20c;&#xf24b;",
    "stanza": 1586
  },
  {
    "role": "code",
    "lines": [
      "= 1 | bit-get (::::::::::::::......:...:..::.) 9;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "bit-get",
        [
          "::::::::::::::......:...:..::."
        ],
        "9"
      ]
    ],
    "code": "1211302130231210001101032021111111111111100000010001001103302100132233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf148;&#xf15e;&#xf246;&#xf243;&#xf243;&#xf234;&#xf20c;&#xf22a;&#xf245;&#xf20d;&#xf24b;",
    "stanza": 1587
  },
  {
    "role": "code",
    "lines": [
      "intro make-image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "make-image"
    ],
    "code": "121001031210001110132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf161;&#xf24b;",
    "stanza": 1588
  },
  {
    "role": "code",
    "lines": [
      "define make-image | lambda (h w lst) |",
      "  vector $h $w $lst;"
    ],
    "dt": true,
    "parse": [
      "@",
      "make-image",
      [
        -1,
        "lambda",
        [
          "h",
          "w",
          "lst"
        ],
        [
          -1,
          "vector",
          [
            -2,
            "h"
          ],
          [
            -2,
            "w"
          ],
          [
            -2,
            "lst"
          ]
        ]
      ]
    ],
    "code": "1211013121000111013023121101032121000111103121000111113121010001330231210000312312100011110312312100011111312312101000132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf161;&#xf248;&#xf15e;&#xf246;&#xf148;&#xf162;&#xf24a;&#xf148;&#xf163;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf248;&#xf154;&#xf249;&#xf148;&#xf162;&#xf249;&#xf148;&#xf163;&#xf249;&#xf145;&#xf155;&#xf24b;",
    "stanza": 1589
  },
  {
    "role": "code",
    "lines": [
      "intro image-get;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "image-get"
    ],
    "code": "121001031210010000032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf164;&#xf24b;",
    "stanza": 1590
  },
  {
    "role": "code",
    "lines": [
      "define image-get | lambda (image row col) |",
      "  assign h (list-ref $image 0) |",
      "  assign w (list-ref $image 1) |",
      "  assign lst (list-ref $image 2) |",
      "  assign bits (list-ref $lst $row) |",
      "  bit-get $bits | - (- $w $col) 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "image-get",
      [
        -1,
        "lambda",
        [
          "image",
          "row",
          "col"
        ],
        [
          -1,
          "assign",
          "h",
          [
            "list-ref",
            [
              -2,
              "image"
            ],
            "0"
          ],
          [
            -1,
            "assign",
            "w",
            [
              "list-ref",
              [
                -2,
                "image"
              ],
              "1"
            ],
            [
              -1,
              "assign",
              "lst",
              [
                "list-ref",
                [
                  -2,
                  "image"
                ],
                "2"
              ],
              [
                -1,
                "assign",
                "bits",
                [
                  "list-ref",
                  [
                    -2,
                    "lst"
                  ],
                  [
                    -2,
                    "row"
                  ]
                ],
                [
                  -1,
                  "bit-get",
                  [
                    -2,
                    "bits"
                  ],
                  [
                    -1,
                    "-",
                    [
                      "-",
                      [
                        -2,
                        "w"
                      ],
                      [
                        -2,
                        "col"
                      ]
                    ],
                    "1"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100100000302312110103212100100001312100100010312100100011330231211103121000111103212100001131231210010000130203302312111031210001111132121000011312312100100001302133023121110312101000132121000011312312100100001302103302312111031210010010032121000011312312101000131231210010001033023121000110103123121001001003023121011321210113123121000111113123121001000113302132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf164;&#xf248;&#xf15e;&#xf246;&#xf148;&#xf165;&#xf24a;&#xf148;&#xf166;&#xf24a;&#xf148;&#xf167;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf162;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf165;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf163;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf165;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf155;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf165;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf168;&#xf246;&#xf145;&#xf147;&#xf249;&#xf145;&#xf155;&#xf249;&#xf148;&#xf166;&#xf245;&#xf248;&#xf148;&#xf15e;&#xf249;&#xf148;&#xf168;&#xf248;&#xf14f;&#xf246;&#xf14f;&#xf249;&#xf148;&#xf163;&#xf249;&#xf148;&#xf167;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1591
  },
  {
    "role": "code",
    "lines": [
      "intro image-height;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "image-height"
    ],
    "code": "121001031210010010132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf169;&#xf24b;",
    "stanza": 1592
  },
  {
    "role": "code",
    "lines": [
      "define image-height | ? image |",
      "  list-ref $image 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "image-height",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "list-ref",
          [
            -2,
            "image"
          ],
          "0"
        ]
      ]
    ],
    "code": "12110131210010010130231211003121001000013023121000011312312100100001302032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf169;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf165;&#xf248;&#xf145;&#xf147;&#xf249;&#xf148;&#xf165;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1593
  },
  {
    "role": "code",
    "lines": [
      "intro image-width;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "image-width"
    ],
    "code": "121001031210010011032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf16a;&#xf24b;",
    "stanza": 1594
  },
  {
    "role": "code",
    "lines": [
      "define image-width | ? image |",
      "  list-ref $image 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "image-width",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "list-ref",
          [
            -2,
            "image"
          ],
          "1"
        ]
      ]
    ],
    "code": "12110131210010011030231211003121001000013023121000011312312100100001302132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf16a;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf165;&#xf248;&#xf145;&#xf147;&#xf249;&#xf148;&#xf165;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1595
  },
  {
    "role": "code",
    "lines": [
      "define test-image | make-image 3 20 |",
      "  vector (:...................) (:...:...............) (:...................);"
    ],
    "dt": true,
    "parse": [
      "@",
      "test-image",
      [
        -1,
        "make-image",
        "3",
        "20",
        [
          -1,
          "vector",
          [
            ":..................."
          ],
          [
            ":...:..............."
          ],
          [
            ":..................."
          ]
        ]
      ]
    ],
    "code": "12110131210010011130231210001110130211302101003023121000032021000000000000000000033202100010000000000000003320210000000000000000000332233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf16b;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf207;&#xf24a;&#xf218;&#xf248;&#xf154;&#xf246;&#xf206;&#xf204;&#xf204;&#xf204;&#xf245;&#xf246;&#xf206;&#xf20c;&#xf204;&#xf204;&#xf245;&#xf246;&#xf206;&#xf204;&#xf204;&#xf204;&#xf245;&#xf24b;",
    "stanza": 1596
  },
  {
    "role": "code",
    "lines": [
      "= 3 | image-height $test-image;"
    ],
    "dt": false,
    "parse": [
      "=",
      "3",
      [
        -1,
        "image-height",
        [
          -2,
          "test-image"
        ]
      ]
    ],
    "code": "12113021130231210010010131231210010011132233",
    "spider": "&#xf147;&#xf24a;&#xf207;&#xf248;&#xf148;&#xf169;&#xf249;&#xf148;&#xf16b;&#xf24b;",
    "stanza": 1597
  },
  {
    "role": "code",
    "lines": [
      "= 20 | image-width $test-image;"
    ],
    "dt": false,
    "parse": [
      "=",
      "20",
      [
        -1,
        "image-width",
        [
          -2,
          "test-image"
        ]
      ]
    ],
    "code": "12113021010030231210010011031231210010011132233",
    "spider": "&#xf147;&#xf24a;&#xf218;&#xf248;&#xf148;&#xf16a;&#xf249;&#xf148;&#xf16b;&#xf24b;",
    "stanza": 1598
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 0 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "0",
        "0"
      ]
    ],
    "code": "121131231213023121001000003123121001001113020302032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf16b;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1599
  },
  {
    "role": "code",
    "lines": [
      "= $false | image-get $test-image 0 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "0",
        "1"
      ]
    ],
    "code": "121131231203023121001000003123121001001113020302132233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf16b;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1600
  },
  {
    "role": "code",
    "lines": [
      "= $false | image-get $test-image 0 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "0",
        "4"
      ]
    ],
    "code": "12113123120302312100100000312312100100111302030210032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf16b;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1601
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 1 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "1",
        "0"
      ]
    ],
    "code": "121131231213023121001000003123121001001113021302032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1602
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 2 0;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "2",
        "0"
      ]
    ],
    "code": "1211312312130231210010000031231210010011130210302032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf16b;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1603
  },
  {
    "role": "code",
    "lines": [
      "= $true | image-get $test-image 1 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "image-get",
        [
          -2,
          "test-image"
        ],
        "1",
        "4"
      ]
    ],
    "code": "12113123121302312100100000312312100100111302130210032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf16b;&#xf24a;&#xf205;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1604
  },
  {
    "role": "comment",
    "lines": [
      "# need a way to join two lists",
      "# TODO: is this similar to \"list-append\" in NewType?"
    ],
    "stanza": 1605
  },
  {
    "role": "code",
    "lines": [
      "define merge-list | ? lst1 | ? lst2 |",
      "  if (= 0 | list-length $lst1) $lst2 |",
      "  prepend (head $lst1) | merge-list (tail $lst1) $lst2;"
    ],
    "dt": true,
    "parse": [
      "@",
      "merge-list",
      [
        -1,
        "?",
        "lst1",
        [
          -1,
          "?",
          "lst2",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst1"
                ]
              ]
            ],
            [
              -2,
              "lst2"
            ],
            [
              -1,
              "prepend",
              [
                "list:0",
                [
                  -2,
                  "lst1"
                ]
              ],
              [
                -1,
                "merge-list",
                [
                  "list:remainder",
                  [
                    -2,
                    "lst1"
                  ]
                ],
                [
                  -2,
                  "lst2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210010100030231211003121010010130231211003121010011030231211113212113020302312100001031231210100101331231210100110302312100011032121211111030203312312101001013302312100101000321212111110312100000133123121010010133123121010011032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf16c;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf169;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf16a;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf146;&#xf169;&#xf245;&#xf249;&#xf146;&#xf16a;&#xf248;&#xf145;&#xf14a;&#xf246;&#xf182;&#xf204;&#xf249;&#xf146;&#xf169;&#xf245;&#xf248;&#xf148;&#xf16c;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf146;&#xf169;&#xf245;&#xf249;&#xf146;&#xf16a;&#xf24b;",
    "stanza": 1606
  },
  {
    "role": "code",
    "lines": [
      "define merge-lists | ? lst |",
      "   if (> (list-length $lst) 2)",
      "      (merge-list (head $lst) (merge-lists | tail $lst))",
      "      (if (= (list-length $lst) 2)",
      "      (merge-list (head $lst) | (head | tail $lst))",
      "      (if (= (list-length $lst) 1)",
      "          (head $lst)",
      "          (vector)));"
    ],
    "dt": true,
    "parse": [
      "@",
      "merge-lists",
      [
        -1,
        "?",
        "lst",
        [
          -1,
          "if",
          [
            ">",
            [
              "list-length",
              [
                -2,
                "lst"
              ]
            ],
            "2"
          ],
          [
            "merge-list",
            [
              "list:0",
              [
                -2,
                "lst"
              ]
            ],
            [
              "merge-lists",
              [
                -1,
                "list:remainder",
                [
                  -2,
                  "lst"
                ]
              ]
            ]
          ],
          [
            "if",
            [
              "=",
              [
                "list-length",
                [
                  -2,
                  "lst"
                ]
              ],
              "2"
            ],
            [
              "merge-list",
              [
                "list:0",
                [
                  -2,
                  "lst"
                ]
              ],
              [
                -1,
                [
                  "list:0",
                  [
                    -1,
                    "list:remainder",
                    [
                      -2,
                      "lst"
                    ]
                  ]
                ]
              ]
            ],
            [
              "if",
              [
                "=",
                [
                  "list-length",
                  [
                    -2,
                    "lst"
                  ]
                ],
                "1"
              ],
              [
                "list:0",
                [
                  -2,
                  "lst"
                ]
              ],
              [
                "vector"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121001010013023121100312101000130231211113212100321210000103123121010001330210332121001010003212121111103020331231210100013321210010100130231212111110312100000133123121010001333212111132121132121000010312312101000133021033212100101000321212111110302033123121010001330232121211111030203302312121111103121000001331231210100013332121111321211321210000103123121010001330213321212111110302033123121010001332121000033332233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf16d;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf155;&#xf248;&#xf153;&#xf246;&#xf148;&#xf246;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf206;&#xf245;&#xf246;&#xf148;&#xf16c;&#xf246;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf148;&#xf16d;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf246;&#xf153;&#xf246;&#xf147;&#xf246;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf206;&#xf245;&#xf246;&#xf148;&#xf16c;&#xf246;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf248;&#xf246;&#xf182;&#xf204;&#xf248;&#xf182;&#xf145;&#xf145;&#xf249;&#xf145;&#xf155;&#xf245;&#xf245;&#xf246;&#xf153;&#xf246;&#xf147;&#xf246;&#xf145;&#xf146;&#xf249;&#xf145;&#xf155;&#xf245;&#xf205;&#xf245;&#xf246;&#xf182;&#xf204;&#xf249;&#xf145;&#xf155;&#xf245;&#xf246;&#xf154;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1607
  },
  {
    "role": "code",
    "lines": [
      "equal (vector 1 2 3 4) | merge-list (vector 1 2) (vector 3 4);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        "1",
        "2",
        "3",
        "4"
      ],
      [
        -1,
        "merge-list",
        [
          "vector",
          "1",
          "2"
        ],
        [
          "vector",
          "3",
          "4"
        ]
      ]
    ],
    "code": "121000100321210000302130210302113021003302312100101000321210000302130210332121000030211302100332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf148;&#xf16c;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 1608
  },
  {
    "role": "code",
    "lines": [
      "equal (vector 1 2 3 4) | merge-lists (vector (vector 1 2) (vector 3) (vector 4));"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        "1",
        "2",
        "3",
        "4"
      ],
      [
        -1,
        "merge-lists",
        [
          "vector",
          [
            "vector",
            "1",
            "2"
          ],
          [
            "vector",
            "3"
          ],
          [
            "vector",
            "4"
          ]
        ]
      ]
    ],
    "code": "12100010032121000030213021030211302100330231210010100132121000032121000030213021033212100003021133212100003021003332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf148;&#xf16d;&#xf246;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1609
  },
  {
    "role": "comment",
    "lines": [
      "# helper for pairing"
    ],
    "stanza": 1610
  },
  {
    "role": "code",
    "lines": [
      "define prefix | ? x | ? lst | map",
      "  (? y (vector (x) (y)))",
      "  $lst;"
    ],
    "dt": true,
    "parse": [
      "@",
      "prefix",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "lst",
          [
            -1,
            "map",
            [
              "?",
              "y",
              [
                "vector",
                [
                  "x"
                ],
                [
                  "y"
                ]
              ]
            ],
            [
              -2,
              "lst"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100101010302312110031210101130231211003121010001302312100100132121100312110100321210000321210101133212110100333312312101000132233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf16e;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf155;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf178;&#xf246;&#xf154;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf178;&#xf245;&#xf245;&#xf245;&#xf249;&#xf145;&#xf155;&#xf24b;",
    "stanza": 1611
  },
  {
    "role": "code",
    "lines": [
      "equal (vector (vector 1 10) (vector 1 11))",
      "       (prefix 1 | vector 10 11);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        [
          "vector",
          "1",
          "10"
        ],
        [
          "vector",
          "1",
          "11"
        ]
      ],
      [
        "prefix",
        "1",
        [
          -1,
          "vector",
          "10",
          "11"
        ]
      ]
    ],
    "code": "1210001003212100003212100003021302101033212100003021302101133321210010101030213023121000030210103021011332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf20f;&#xf245;&#xf245;&#xf246;&#xf148;&#xf16e;&#xf24a;&#xf205;&#xf248;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20f;&#xf245;&#xf24b;",
    "stanza": 1612
  },
  {
    "role": "comment",
    "lines": [
      "# need a way to take product of domains"
    ],
    "stanza": 1613
  },
  {
    "role": "code",
    "lines": [
      "define pairing | ? lst1 | ? lst2 |",
      "   if (= 0 | list-length $lst1) (vector) |",
      "   merge-list (prefix (head $lst1) $lst2)",
      "          (pairing (tail $lst1) $lst2);"
    ],
    "dt": true,
    "parse": [
      "@",
      "pairing",
      [
        -1,
        "?",
        "lst1",
        [
          -1,
          "?",
          "lst2",
          [
            -1,
            "if",
            [
              "=",
              "0",
              [
                -1,
                "list-length",
                [
                  -2,
                  "lst1"
                ]
              ]
            ],
            [
              "vector"
            ],
            [
              -1,
              "merge-list",
              [
                "prefix",
                [
                  "list:0",
                  [
                    -2,
                    "lst1"
                  ]
                ],
                [
                  -2,
                  "lst2"
                ]
              ],
              [
                "pairing",
                [
                  "list:remainder",
                  [
                    -2,
                    "lst1"
                  ]
                ],
                [
                  -2,
                  "lst2"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312100101011302312110031210100101302312110031210100110302312111132121130203023121000010312312101001013321210000330231210010100032121001010103212121111103020331231210100101331231210100110332121001010113212121111103121000001331231210100101331231210100110332233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf169;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf16a;&#xf248;&#xf153;&#xf246;&#xf147;&#xf24a;&#xf204;&#xf248;&#xf145;&#xf146;&#xf249;&#xf146;&#xf169;&#xf245;&#xf246;&#xf154;&#xf245;&#xf248;&#xf148;&#xf16c;&#xf246;&#xf148;&#xf16e;&#xf246;&#xf182;&#xf204;&#xf249;&#xf146;&#xf169;&#xf245;&#xf249;&#xf146;&#xf16a;&#xf245;&#xf246;&#xf148;&#xf16f;&#xf246;&#xf182;&#xf145;&#xf145;&#xf249;&#xf146;&#xf169;&#xf245;&#xf249;&#xf146;&#xf16a;&#xf245;&#xf24b;",
    "stanza": 1614
  },
  {
    "role": "code",
    "lines": [
      "equal (vector (vector 1 10) (vector 1 11) (vector 2 10) (vector 2 11)) |",
      "   pairing (vector 1 2) (vector 10 11);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        [
          "vector",
          "1",
          "10"
        ],
        [
          "vector",
          "1",
          "11"
        ],
        [
          "vector",
          "2",
          "10"
        ],
        [
          "vector",
          "2",
          "11"
        ]
      ],
      [
        -1,
        "pairing",
        [
          "vector",
          "1",
          "2"
        ],
        [
          "vector",
          "10",
          "11"
        ]
      ]
    ],
    "code": "121000100321210000321210000302130210103321210000302130210113321210000302103021010332121000030210302101133302312100101011321210000302130210332121000030210103021011332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf20f;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20f;&#xf245;&#xf245;&#xf248;&#xf148;&#xf16f;&#xf246;&#xf154;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20f;&#xf245;&#xf24b;",
    "stanza": 1615
  },
  {
    "role": "comment",
    "lines": [
      "# need a way to make counting sets",
      "# TODO: is this like range?"
    ],
    "stanza": 1616
  },
  {
    "role": "code",
    "lines": [
      "define count | ? lo | ? hi |",
      "  if (> $lo $hi) (vector) |",
      "  prepend $lo | count (+ $lo 1) $hi;"
    ],
    "dt": true,
    "parse": [
      "@",
      "count",
      [
        -1,
        "?",
        "lo",
        [
          -1,
          "?",
          "hi",
          [
            -1,
            "if",
            [
              ">",
              [
                -2,
                "lo"
              ],
              [
                -2,
                "hi"
              ]
            ],
            [
              "vector"
            ],
            [
              -1,
              "prepend",
              [
                -2,
                "lo"
              ],
              [
                -1,
                "count",
                [
                  "+",
                  [
                    -2,
                    "lo"
                  ],
                  "1"
                ],
                [
                  -2,
                  "hi"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210100010302312110031210010110030231211003121001011013023121111321210031231210010110031231210010110133212100003302312100011031231210010110030231210100010321210103123121001011003021331231210010110132233",
    "spider": "&#xf151;&#xf24a;&#xf146;&#xf166;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf170;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf171;&#xf248;&#xf153;&#xf246;&#xf148;&#xf249;&#xf148;&#xf170;&#xf249;&#xf148;&#xf171;&#xf245;&#xf246;&#xf154;&#xf245;&#xf248;&#xf145;&#xf14a;&#xf249;&#xf148;&#xf170;&#xf248;&#xf146;&#xf166;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf170;&#xf24a;&#xf205;&#xf245;&#xf249;&#xf148;&#xf171;&#xf24b;",
    "stanza": 1617
  },
  {
    "role": "code",
    "lines": [
      "equal (vector 0 1 2 3 4) (count 0 4);"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        "0",
        "1",
        "2",
        "3",
        "4"
      ],
      [
        "count",
        "0",
        "4"
      ]
    ],
    "code": "12100010032121000030203021302103021130210033212101000103020302100332233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf206;&#xf24a;&#xf207;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf146;&#xf166;&#xf24a;&#xf204;&#xf24a;&#xf208;&#xf245;&#xf24b;",
    "stanza": 1618
  },
  {
    "role": "comment",
    "lines": [
      "# given an image of a circuit, extract a model.",
      "# wire elements are centered on multiples of 8"
    ],
    "stanza": 1619
  },
  {
    "role": "comment",
    "lines": [
      "# individual element..."
    ],
    "stanza": 1620
  },
  {
    "role": "code",
    "lines": [
      "define distill-element |",
      "   ? image | ? xlogic | ? ylogic | ? xmid | ? ymid |",
      "   if (not | image-get $image $ymid $xmid) (vector) |",
      "   assign vert (image-get $image (+ $ymid 4) $xmid) |",
      "   assign dx (if $vert 0 1) |",
      "   assign dy (if $vert 1 0) |",
      "   assign pos (image-get $image",
      "                 (+ $ymid | + (* 4 $dy) (* 2 $dx))",
      "                 (+ $xmid | - (* 4 $dx) (* 2 $dy))) |",
      "   assign sgn (if $pos 1 (minus 1)) |",
      "   assign dx (* $sgn $dx) |",
      "   assign dy (* $sgn $dy) |",
      "   assign active (image-get $image (+ $ymid $dx) (- $xmid $dy)) |",
      "     vector | vector",
      "       (- $xlogic $dx) ",
      "       (- $ylogic $dy)",
      "       (+ $xlogic $dx)",
      "       (+ $ylogic $dy)",
      "       $active;"
    ],
    "dt": true,
    "parse": [
      "@",
      "distill-element",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "?",
          "xlogic",
          [
            -1,
            "?",
            "ylogic",
            [
              -1,
              "?",
              "xmid",
              [
                -1,
                "?",
                "ymid",
                [
                  -1,
                  "if",
                  [
                    "not",
                    [
                      -1,
                      "image-get",
                      [
                        -2,
                        "image"
                      ],
                      [
                        -2,
                        "ymid"
                      ],
                      [
                        -2,
                        "xmid"
                      ]
                    ]
                  ],
                  [
                    "vector"
                  ],
                  [
                    -1,
                    "assign",
                    "vert",
                    [
                      "image-get",
                      [
                        -2,
                        "image"
                      ],
                      [
                        "+",
                        [
                          -2,
                          "ymid"
                        ],
                        "4"
                      ],
                      [
                        -2,
                        "xmid"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "dx",
                      [
                        "if",
                        [
                          -2,
                          "vert"
                        ],
                        "0",
                        "1"
                      ],
                      [
                        -1,
                        "assign",
                        "dy",
                        [
                          "if",
                          [
                            -2,
                            "vert"
                          ],
                          "1",
                          "0"
                        ],
                        [
                          -1,
                          "assign",
                          "pos",
                          [
                            "image-get",
                            [
                              -2,
                              "image"
                            ],
                            [
                              "+",
                              [
                                -2,
                                "ymid"
                              ],
                              [
                                -1,
                                "+",
                                [
                                  "*",
                                  "4",
                                  [
                                    -2,
                                    "dy"
                                  ]
                                ],
                                [
                                  "*",
                                  "2",
                                  [
                                    -2,
                                    "dx"
                                  ]
                                ]
                              ]
                            ],
                            [
                              "+",
                              [
                                -2,
                                "xmid"
                              ],
                              [
                                -1,
                                "-",
                                [
                                  "*",
                                  "4",
                                  [
                                    -2,
                                    "dx"
                                  ]
                                ],
                                [
                                  "*",
                                  "2",
                                  [
                                    -2,
                                    "dy"
                                  ]
                                ]
                              ]
                            ]
                          ],
                          [
                            -1,
                            "assign",
                            "sgn",
                            [
                              "if",
                              [
                                -2,
                                "pos"
                              ],
                              "1",
                              [
                                "minus",
                                "1"
                              ]
                            ],
                            [
                              -1,
                              "assign",
                              "dx",
                              [
                                "*",
                                [
                                  -2,
                                  "sgn"
                                ],
                                [
                                  -2,
                                  "dx"
                                ]
                              ],
                              [
                                -1,
                                "assign",
                                "dy",
                                [
                                  "*",
                                  [
                                    -2,
                                    "sgn"
                                  ],
                                  [
                                    -2,
                                    "dy"
                                  ]
                                ],
                                [
                                  -1,
                                  "assign",
                                  "active",
                                  [
                                    "image-get",
                                    [
                                      -2,
                                      "image"
                                    ],
                                    [
                                      "+",
                                      [
                                        -2,
                                        "ymid"
                                      ],
                                      [
                                        -2,
                                        "dx"
                                      ]
                                    ],
                                    [
                                      "-",
                                      [
                                        -2,
                                        "xmid"
                                      ],
                                      [
                                        -2,
                                        "dy"
                                      ]
                                    ]
                                  ],
                                  [
                                    -1,
                                    "vector",
                                    [
                                      -1,
                                      "vector",
                                      [
                                        "-",
                                        [
                                          -2,
                                          "xlogic"
                                        ],
                                        [
                                          -2,
                                          "dx"
                                        ]
                                      ],
                                      [
                                        "-",
                                        [
                                          -2,
                                          "ylogic"
                                        ],
                                        [
                                          -2,
                                          "dy"
                                        ]
                                      ],
                                      [
                                        "+",
                                        [
                                          -2,
                                          "xlogic"
                                        ],
                                        [
                                          -2,
                                          "dx"
                                        ]
                                      ],
                                      [
                                        "+",
                                        [
                                          -2,
                                          "ylogic"
                                        ],
                                        [
                                          -2,
                                          "dy"
                                        ]
                                      ],
                                      [
                                        -2,
                                        "active"
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf172;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf173;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf174;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf176;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf148;&#xf164;&#xf249;&#xf148;&#xf165;&#xf249;&#xf148;&#xf176;&#xf249;&#xf148;&#xf175;&#xf245;&#xf246;&#xf154;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf177;&#xf246;&#xf148;&#xf164;&#xf249;&#xf148;&#xf165;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf176;&#xf24a;&#xf208;&#xf245;&#xf249;&#xf148;&#xf175;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf178;&#xf246;&#xf153;&#xf249;&#xf148;&#xf177;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf179;&#xf246;&#xf153;&#xf249;&#xf148;&#xf177;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf17a;&#xf246;&#xf148;&#xf164;&#xf249;&#xf148;&#xf165;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf176;&#xf248;&#xf14e;&#xf246;&#xf14d;&#xf24a;&#xf208;&#xf249;&#xf148;&#xf179;&#xf245;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf148;&#xf178;&#xf245;&#xf245;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf175;&#xf248;&#xf14f;&#xf246;&#xf14d;&#xf24a;&#xf208;&#xf249;&#xf148;&#xf178;&#xf245;&#xf246;&#xf14d;&#xf24a;&#xf206;&#xf249;&#xf148;&#xf179;&#xf245;&#xf245;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf17b;&#xf246;&#xf153;&#xf249;&#xf148;&#xf17a;&#xf24a;&#xf205;&#xf246;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf178;&#xf246;&#xf14d;&#xf249;&#xf148;&#xf17b;&#xf249;&#xf148;&#xf178;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf179;&#xf246;&#xf14d;&#xf249;&#xf148;&#xf17b;&#xf249;&#xf148;&#xf179;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf17c;&#xf246;&#xf148;&#xf164;&#xf249;&#xf148;&#xf165;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf176;&#xf249;&#xf148;&#xf178;&#xf245;&#xf246;&#xf14f;&#xf249;&#xf148;&#xf175;&#xf249;&#xf148;&#xf179;&#xf245;&#xf245;&#xf248;&#xf154;&#xf248;&#xf154;&#xf246;&#xf14f;&#xf249;&#xf148;&#xf173;&#xf249;&#xf148;&#xf178;&#xf245;&#xf246;&#xf14f;&#xf249;&#xf148;&#xf174;&#xf249;&#xf148;&#xf179;&#xf245;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf173;&#xf249;&#xf148;&#xf178;&#xf245;&#xf246;&#xf14e;&#xf249;&#xf148;&#xf174;&#xf249;&#xf148;&#xf179;&#xf245;&#xf249;&#xf148;&#xf17c;&#xf24b;",
    "stanza": 1621
  },
  {
    "role": "comment",
    "lines": [
      "# full circuit..."
    ],
    "stanza": 1622
  },
  {
    "role": "code",
    "lines": [
      "intro distill-circuit;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "distill-circuit"
    ],
    "code": "121001031210011100132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf17d;&#xf24b;",
    "stanza": 1623
  },
  {
    "role": "code",
    "lines": [
      "define distill-circuit | ? image |",
      "  assign h (div (image-height $image) 8) |",
      "  assign w (div (image-width $image) 8)  |",
      "  merge-lists |",
      "    map (? v |",
      "       assign xlogic (list-ref $v 0) |",
      "       assign ylogic (list-ref $v 1) |",
      "       assign xmid (* 8 $xlogic) |",
      "       assign ymid (* 8 $ylogic) |",
      "       distill-element $image $xlogic $ylogic $xmid $ymid)",
      "    (pairing (count 1 (- $w 1))",
      "         (count 1 (- $h 1)));"
    ],
    "dt": true,
    "parse": [
      "@",
      "distill-circuit",
      [
        -1,
        "?",
        "image",
        [
          -1,
          "assign",
          "h",
          [
            "div",
            [
              "image-height",
              [
                -2,
                "image"
              ]
            ],
            "8"
          ],
          [
            -1,
            "assign",
            "w",
            [
              "div",
              [
                "image-width",
                [
                  -2,
                  "image"
                ]
              ],
              "8"
            ],
            [
              -1,
              "merge-lists",
              [
                -1,
                "map",
                [
                  "?",
                  "v",
                  [
                    -1,
                    "assign",
                    "xlogic",
                    [
                      "list-ref",
                      [
                        -2,
                        "v"
                      ],
                      "0"
                    ],
                    [
                      -1,
                      "assign",
                      "ylogic",
                      [
                        "list-ref",
                        [
                          -2,
                          "v"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "assign",
                        "xmid",
                        [
                          "*",
                          "8",
                          [
                            -2,
                            "xlogic"
                          ]
                        ],
                        [
                          -1,
                          "assign",
                          "ymid",
                          [
                            "*",
                            "8",
                            [
                              -2,
                              "ylogic"
                            ]
                          ],
                          [
                            -1,
                            "distill-element",
                            [
                              -2,
                              "image"
                            ],
                            [
                              -2,
                              "xlogic"
                            ],
                            [
                              -2,
                              "ylogic"
                            ],
                            [
                              -2,
                              "xmid"
                            ],
                            [
                              -2,
                              "ymid"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  "pairing",
                  [
                    "count",
                    "1",
                    [
                      "-",
                      [
                        -2,
                        "w"
                      ],
                      "1"
                    ]
                  ],
                  [
                    "count",
                    "1",
                    [
                      "-",
                      [
                        -2,
                        "h"
                      ],
                      "1"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf17d;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf165;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf162;&#xf246;&#xf166;&#xf246;&#xf148;&#xf169;&#xf249;&#xf148;&#xf165;&#xf245;&#xf20c;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf163;&#xf246;&#xf166;&#xf246;&#xf148;&#xf16a;&#xf249;&#xf148;&#xf165;&#xf245;&#xf20c;&#xf245;&#xf248;&#xf148;&#xf16d;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf170;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf173;&#xf246;&#xf145;&#xf147;&#xf249;&#xf170;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf174;&#xf246;&#xf145;&#xf147;&#xf249;&#xf170;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf175;&#xf246;&#xf14d;&#xf24a;&#xf20c;&#xf249;&#xf148;&#xf173;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf148;&#xf176;&#xf246;&#xf14d;&#xf24a;&#xf20c;&#xf249;&#xf148;&#xf174;&#xf245;&#xf248;&#xf148;&#xf172;&#xf249;&#xf148;&#xf165;&#xf249;&#xf148;&#xf173;&#xf249;&#xf148;&#xf174;&#xf249;&#xf148;&#xf175;&#xf249;&#xf148;&#xf176;&#xf245;&#xf246;&#xf148;&#xf16f;&#xf246;&#xf146;&#xf166;&#xf24a;&#xf205;&#xf246;&#xf14f;&#xf249;&#xf148;&#xf163;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf246;&#xf146;&#xf166;&#xf24a;&#xf205;&#xf246;&#xf14f;&#xf249;&#xf148;&#xf162;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1624
  },
  {
    "role": "file",
    "lines": [
      "== COS_NOT =="
    ],
    "stanza": 1625
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_not circuit",
    "section_category": "GATE",
    "section_index": 45,
    "stanza": 1626
  },
  {
    "role": "code",
    "lines": [
      "intro cos_not_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_not_gate"
    ],
    "code": "121001031210011101032233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf17e;&#xf24b;",
    "stanza": 1627
  },
  {
    "role": "code",
    "lines": [
      "intro cos_not_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_not_image"
    ],
    "code": "121001031210011101132233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf17f;&#xf24b;",
    "stanza": 1628
  },
  {
    "role": "code",
    "lines": [
      "define cos_not_gate | vector ",
      "  (vector 0 6 2 6 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 8 4 8 6 $true)",
      "  (vector 8 6 8 8 $false)",
      "  (vector 8 8 10 8 $false)",
      "  (vector 10 8 12 8 $false)",
      "  (vector 12 8 12 6 $false)",
      "  (vector 12 6 14 6 $false)",
      "  (vector 14 6 16 6 $false)",
      "  (vector 16 6 18 6 $false)",
      "  (vector 18 6 20 6 $false);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_not_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "6",
          "2",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "8",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "12",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "14",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "6",
          "16",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "6",
          "18",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "18",
          "6",
          "20",
          "6",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf17e;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf24a;&#xf214;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf20a;&#xf24a;&#xf216;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf216;&#xf24a;&#xf20a;&#xf24a;&#xf218;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf24b;",
    "stanza": 1629
  },
  {
    "role": "code",
    "lines": [
      "define cos_not_image | make-image 109 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...........:...............:...............:...............:...:...........................................:...............:...............:...............:...........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:)",
      "  (:...........:...............:...............:...............:...................................:...........:...............:...............:...............:...........:)",
      "  (:...............................................................:..............................:::......................................................................:)",
      "  (:...............................................................:.............................:::::.....................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:.............................................................:::::.............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:...............................................................:...........:...............:...........................................................................:)",
      "  (:...........................................................................::..............::..........................................................................:)",
      "  (:..................................................................::::::::::::....::::::::::::.........................................................................:)",
      "  (:...........................................................................::..............::..........................................................................:)",
      "  (:...........................................................................:...............:...........................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_not_image",
      [
        -1,
        "make-image",
        "109",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...:...........................................:...............:...............:...............:...........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..........:"
          ],
          [
            ":...........:...............:...............:...............:...................................:...........:...............:...............:...............:...........:"
          ],
          [
            ":...............................................................:..............................:::......................................................................:"
          ],
          [
            ":...............................................................:.............................:::::.....................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":.............................................................:::::.............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":...............................................................:...........:...............:...........................................................................:"
          ],
          [
            ":...........................................................................::..............::..........................................................................:"
          ],
          [
            ":..................................................................::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":...........................................................................::..............::..........................................................................:"
          ],
          [
            ":...........................................................................:...............:...........................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf17f;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf231;&#xf24a;&#xf206;&#xf22d;&#xf248;&#xf154;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1630
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_not_gate | distill-circuit $cos_not_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_not_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_not_image"
        ]
      ]
    ],
    "code": "12100010031231210011101030231210011100131231210011101132233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf148;&#xf17e;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf148;&#xf17f;&#xf24b;",
    "stanza": 1631
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_NOT.gate",
      "5 6 1 0 1",
      "3 6 1 0 1",
      "1 6 1 0 1",
      "19 6 1 0 0",
      "17 6 1 0 0",
      "15 6 1 0 0",
      "13 6 1 0 0",
      "12 7 0 -1 0",
      "8 5 0 1 1",
      "11 8 1 0 0",
      "7 6 1 0 1",
      "8 7 0 1 0",
      "9 8 1 0 0"
    ],
    "thumbnail": "COS_NOT.gif",
    "page": "COS_NOT.html",
    "stanza": 1632
  },
  {
    "role": "file",
    "lines": [
      "== COS_AND =="
    ],
    "stanza": 1633
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_and circuit",
    "section_category": "GATE",
    "section_index": 46,
    "stanza": 1634
  },
  {
    "role": "code",
    "lines": [
      "intro cos_and_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_true:*_gate"
    ],
    "code": "121001031212100111100312100111101332233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf180;&#xf148;&#xf181;&#xf24b;",
    "stanza": 1635
  },
  {
    "role": "code",
    "lines": [
      "intro cos_and_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_true:*_image"
    ],
    "code": "121001031212100111100312100111110332233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf180;&#xf148;&#xf182;&#xf24b;",
    "stanza": 1636
  },
  {
    "role": "code",
    "lines": [
      "define cos_and_gate | vector ",
      "  (vector 0 2 2 2 $true)",
      "  (vector 0 8 2 8 $true)",
      "  (vector 2 2 4 2 $true)",
      "  (vector 2 4 4 4 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 2 8 4 8 $true)",
      "  (vector 4 2 4 4 $true)",
      "  (vector 4 8 4 6 $true)",
      "  (vector 4 4 6 4 $false)",
      "  (vector 4 6 6 6 $false)",
      "  (vector 6 4 8 4 $false)",
      "  (vector 6 6 8 6 $false)",
      "  (vector 8 4 10 4 $false)",
      "  (vector 8 6 10 6 $false)",
      "  (vector 10 2 10 4 $true)",
      "  (vector 10 4 10 6 $true)",
      "  (vector 10 6 10 8 $true)",
      "  (vector 10 8 12 8 $true)",
      "  (vector 12 8 14 8 $true)",
      "  (vector 14 8 16 8 $true)",
      "  (vector 16 8 18 8 $true);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_true:*_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "2",
          "2",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "8",
          "2",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "4",
          "4",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "8",
          "4",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "4",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "8",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "4",
          "6",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "6",
          "4",
          "8",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "10",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "10",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "8",
          "18",
          "8",
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf180;&#xf148;&#xf181;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1637
  },
  {
    "role": "code",
    "lines": [
      "define cos_and_image | make-image 88 153 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:...........:...............:...........................................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::..........................................................................................................................:)",
      "  (:..::::::::::::....::::::::::::.........................................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::..........................................................................................................................:)",
      "  (:...........:...............:...........................................................................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:.............................:::::...........................................:::::.....................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:...........................:...:...........:...............:...............:...:.......................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:...........................:...............:...............:...............:...........................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:.............................................................................:::::.....................................................................:)",
      "  (:..............................................................................:::......................................................................:)",
      "  (:...........................:...............:...............:...............:...:.......................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:...........................:...:...........:...............:...............:...........................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:.............................:::::............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:..............................:::............................................:::::.....................................................................:)",
      "  (:..............................:::.............................................:::......................................................................:)",
      "  (:...........:...............:...................................................:...........:...............:...............:...............:...........:)",
      "  (:..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:..::::::::::::....::::::::::::....................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:...........:...............:...............................................................:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:.......................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_true:*_image",
      [
        -1,
        "make-image",
        "88",
        "153",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":...........:...............:...........................................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::..........................................................................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::.........................................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::..........................................................................................................................:"
          ],
          [
            ":...........:...............:...........................................................................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":.............................:::::...........................................:::::.....................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":...........................:...:...........:...............:...............:...:.......................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...........................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...:.......................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":...........................:...:...........:...............:...............:...........................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":.............................:::::............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":..............................:::............................................:::::.....................................................................:"
          ],
          [
            ":..............................:::.............................................:::......................................................................:"
          ],
          [
            ":...........:...............:...................................................:...........:...............:...............:...............:...........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":..::::::::::::....::::::::::::....................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":...........:...............:...............................................................:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf180;&#xf148;&#xf182;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf21c;&#xf24a;&#xf206;&#xf21d;&#xf248;&#xf154;&#xf246;&#xf20b;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf215;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf215;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf215;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf215;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf205;&#xf245;&#xf246;&#xf208;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf205;&#xf245;&#xf246;&#xf208;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf20b;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1638
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_and_gate | distill-circuit $cos_and_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_true:*_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_true:*_image"
        ]
      ]
    ],
    "code": "12100010031231212100111100312100111101330231210011100131231212100111100312100111110332233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf148;&#xf180;&#xf148;&#xf181;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf148;&#xf180;&#xf148;&#xf182;&#xf24b;",
    "stanza": 1639
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_AND.gate",
      "1 2 1 0 1",
      "3 4 1 0 1",
      "5 6 1 0 0",
      "3 6 1 0 1",
      "4 7 0 -1 1",
      "3 8 1 0 1",
      "1 8 1 0 1",
      "17 8 1 0 1",
      "10 3 0 1 1",
      "15 8 1 0 1",
      "9 4 1 0 0",
      "10 5 0 1 1",
      "13 8 1 0 1",
      "7 4 1 0 0",
      "9 6 1 0 0",
      "10 7 0 1 1",
      "11 8 1 0 1",
      "3 2 1 0 1",
      "4 3 0 1 1",
      "5 4 1 0 0",
      "7 6 1 0 0"
    ],
    "thumbnail": "COS_AND.gif",
    "page": "COS_AND.html",
    "stanza": 1640
  },
  {
    "role": "file",
    "lines": [
      "== COS_OR =="
    ],
    "stanza": 1641
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_or circuit",
    "section_category": "GATE",
    "section_index": 47,
    "stanza": 1642
  },
  {
    "role": "code",
    "lines": [
      "intro cos_or_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_true:+_gate"
    ],
    "code": "121001031212100111100312100111111332233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf180;&#xf148;&#xf183;&#xf24b;",
    "stanza": 1643
  },
  {
    "role": "code",
    "lines": [
      "intro cos_or_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_true:+_image"
    ],
    "code": "121001031212100111100312101000000332233",
    "spider": "&#xf156;&#xf24a;&#xf148;&#xf180;&#xf149;&#xf144;&#xf24b;",
    "stanza": 1644
  },
  {
    "role": "code",
    "lines": [
      "define cos_or_gate | vector ",
      "  (vector 2 4 4 4 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 4 4 6 4 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 6 4 8 4 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 8 4 10 4 $true)",
      "  (vector 8 6 10 6 $true)",
      "  (vector 8 8 10 8 $true)",
      "  (vector 10 2 10 4 $true)",
      "  (vector 10 4 10 6 $false)",
      "  (vector 10 6 10 8 $false)",
      "  (vector 10 8 12 8 $true)",
      "  (vector 12 8 14 8 $true)",
      "  (vector 14 8 16 8 $true)",
      "  (vector 16 8 18 8 $true);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_true:+_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "2",
          "4",
          "4",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "4",
          "6",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "4",
          "8",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "10",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "8",
          "18",
          "8",
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf180;&#xf148;&#xf183;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1645
  },
  {
    "role": "code",
    "lines": [
      "define cos_or_image | make-image 93 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:.............................................................................:::::.....................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:...........................:...............:...............:...............:...:.......................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:...........................:...............:...............:...............:...........................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:.............................................................................:::::.....................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:...........................:...............:...............:...............:...:.......................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:)",
      "  (:..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:)",
      "  (:...........................:...............:...............:...............:...........................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:...............................................................................:.......................................................................................:)",
      "  (:.............................................................................:::::.....................................................................................:)",
      "  (:..............................................................................:::......................................................................................:)",
      "  (:...........................................................................:...:...........:...............:...............:...............:...........................:)",
      "  (:..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:)",
      "  (:..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................:)",
      "  (:..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:)",
      "  (:...........................................................................:...............:...............:...............:...............:...........................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_true:+_image",
      [
        -1,
        "make-image",
        "93",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...:.......................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...........................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...:.......................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":..................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................:"
          ],
          [
            ":..................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................:"
          ],
          [
            ":...........................:...............:...............:...............:...........................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":...............................................................................:.......................................................................................:"
          ],
          [
            ":.............................................................................:::::.....................................................................................:"
          ],
          [
            ":..............................................................................:::......................................................................................:"
          ],
          [
            ":...........................................................................:...:...........:...............:...............:...............:...........................:"
          ],
          [
            ":..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:"
          ],
          [
            ":..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................:"
          ],
          [
            ":..................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................:"
          ],
          [
            ":...........................................................................:...............:...............:...............:...............:...........................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf180;&#xf149;&#xf144;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf221;&#xf24a;&#xf206;&#xf22d;&#xf248;&#xf154;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf214;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1646
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_or_gate | distill-circuit $cos_or_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_true:+_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_true:+_image"
        ]
      ]
    ],
    "code": "12100010031231212100111100312100111111330231210011100131231212100111100312101000000332233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf148;&#xf180;&#xf148;&#xf183;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf148;&#xf180;&#xf149;&#xf144;&#xf24b;",
    "stanza": 1647
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_OR.gate",
      "3 4 1 0 1",
      "5 6 1 0 1",
      "3 6 1 0 1",
      "17 8 1 0 1",
      "10 3 0 1 1",
      "15 8 1 0 1",
      "9 4 1 0 1",
      "10 5 0 1 0",
      "13 8 1 0 1",
      "7 4 1 0 1",
      "9 6 1 0 1",
      "10 7 0 1 0",
      "11 8 1 0 1",
      "5 4 1 0 1",
      "7 6 1 0 1",
      "9 8 1 0 1"
    ],
    "thumbnail": "COS_OR.gif",
    "page": "COS_OR.html",
    "stanza": 1648
  },
  {
    "role": "file",
    "lines": [
      "== COS_NOR =="
    ],
    "stanza": 1649
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_nor circuit",
    "section_category": "GATE",
    "section_index": 48,
    "stanza": 1650
  },
  {
    "role": "code",
    "lines": [
      "intro cos_nor_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_nor_gate"
    ],
    "code": "121001031210100000132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf145;&#xf24b;",
    "stanza": 1651
  },
  {
    "role": "code",
    "lines": [
      "intro cos_nor_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_nor_image"
    ],
    "code": "121001031210100001032233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf146;&#xf24b;",
    "stanza": 1652
  },
  {
    "role": "code",
    "lines": [
      "define cos_nor_gate | vector ",
      "  (vector 0 6 2 6 $true)",
      "  (vector 0 8 2 8 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 2 8 4 8 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 4 8 6 8 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 6 8 8 8 $true)",
      "  (vector 8 4 8 6 $true)",
      "  (vector 8 6 8 8 $false)",
      "  (vector 8 8 8 10 $false)",
      "  (vector 8 10 10 10 $false)",
      "  (vector 10 10 12 10 $false)",
      "  (vector 12 10 14 10 $false)",
      "  (vector 14 10 16 10 $false)",
      "  (vector 16 10 18 10 $false)",
      "  (vector 18 10 20 10 $false);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_nor_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "6",
          "2",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "8",
          "2",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "8",
          "4",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "8",
          "6",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "8",
          "8",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "8",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "8",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "10",
          "10",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "10",
          "12",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "10",
          "14",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "10",
          "16",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "10",
          "18",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "18",
          "10",
          "20",
          "10",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf145;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20e;&#xf24a;&#xf212;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20e;&#xf24a;&#xf214;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf20e;&#xf24a;&#xf216;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf216;&#xf24a;&#xf20e;&#xf24a;&#xf218;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf24b;",
    "stanza": 1653
  },
  {
    "role": "code",
    "lines": [
      "define cos_nor_image | make-image 125 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...........:...............:...............:...............:...:.......................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:...........:...............:...............:...............:...........................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...........:...............:...............:...............:...:.......................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:)",
      "  (:...........:...............:...............:...............:...........................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:...............................................................:.......................................................................................................:)",
      "  (:.............................................................:::::.....................................................................................................:)",
      "  (:..............................................................:::......................................................................................................:)",
      "  (:...............................................................:...........:...............:...............:...............:...............:...............:...........:)",
      "  (:...........................................................................::..............::..............::..............::..............::..............::..........:)",
      "  (:..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:...........................................................................::..............::..............::..............::..............::..............::..........:)",
      "  (:...........................................................................:...............:...............:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_nor_image",
      [
        -1,
        "make-image",
        "125",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...:.......................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...........................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...:.......................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...........................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":...............................................................:.......................................................................................................:"
          ],
          [
            ":.............................................................:::::.....................................................................................................:"
          ],
          [
            ":..............................................................:::......................................................................................................:"
          ],
          [
            ":...............................................................:...........:...............:...............:...............:...............:...............:...........:"
          ],
          [
            ":...........................................................................::..............::..............::..............::..............::..............::..........:"
          ],
          [
            ":..................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":...........................................................................::..............::..............::..............::..............::..............::..........:"
          ],
          [
            ":...........................................................................:...............:...............:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code": "",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf146;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf241;&#xf24a;&#xf206;&#xf22d;&#xf248;&#xf154;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1654
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_nor_gate | distill-circuit $cos_nor_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_nor_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_nor_image"
        ]
      ]
    ],
    "code": "12100010031231210100000130231210011100131231210100001032233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf149;&#xf145;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf149;&#xf146;&#xf24b;",
    "stanza": 1655
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_NOR.gate",
      "5 6 1 0 1",
      "7 8 1 0 1",
      "8 9 0 1 0",
      "9 10 1 0 0",
      "3 6 1 0 1",
      "5 8 1 0 1",
      "1 6 1 0 1",
      "3 8 1 0 1",
      "1 8 1 0 1",
      "19 10 1 0 0",
      "17 10 1 0 0",
      "15 10 1 0 0",
      "8 5 0 1 1",
      "13 10 1 0 0",
      "7 6 1 0 1",
      "8 7 0 1 0",
      "11 10 1 0 0"
    ],
    "thumbnail": "COS_NOR.gif",
    "page": "COS_NOR.html",
    "stanza": 1656
  },
  {
    "role": "file",
    "lines": [
      "== COS_OSC =="
    ],
    "stanza": 1657
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_osc circuit",
    "section_category": "GATE",
    "section_index": 49,
    "stanza": 1658
  },
  {
    "role": "code",
    "lines": [
      "intro cos_osc_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_osc_gate"
    ],
    "code": "121001031210100001132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf147;&#xf24b;",
    "stanza": 1659
  },
  {
    "role": "code",
    "lines": [
      "intro cos_osc_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_osc_image"
    ],
    "code": "121001031210100010032233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf148;&#xf24b;",
    "stanza": 1660
  },
  {
    "role": "code",
    "lines": [
      "define cos_osc_gate | vector ",
      "  (vector 4 8 6 8 $true)",
      "  (vector 6 8 8 8 $true)",
      "  (vector 8 6 8 8 $true)",
      "  (vector 10 6 8 6 $true)",
      "  (vector 8 8 10 8 $false)",
      "  (vector 12 6 10 6 $false)",
      "  (vector 10 8 12 8 $false)",
      "  (vector 12 8 12 6 $false)",
      "  (vector 12 8 14 8 $false)",
      "  (vector 14 8 16 8 $false);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_osc_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "4",
          "8",
          "6",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "8",
          "8",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "8",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "8",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "12",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "code": "12110131210100001130231210000321210000302100302100030211030210003123121332121000030211030210003021000302100031231213321210000302100030211030210003021000312312133212100003021010302110302100030211031231213321210000302100030210003021010302100031231203321210000302110030211030210103021103123120332121000030210103021000302110030210003123120332121000030211003021000302110030211031231203321210000302110030210003021110302100031231203321210000302111030210003021000030210003123120332233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf147;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20c;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf24b;",
    "stanza": 1661
  },
  {
    "role": "code",
    "lines": [
      "define cos_osc_image | make-image 120 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:...................................................................:...............:...................................................................................:)",
      "  (:..................................................................:::::::::::.....::...................................................................................:)",
      "  (:.................................................................::::::::::::....::::::::::::..........................................................................:)",
      "  (:..................................................................:::::::::::.....::...................................................................................:)",
      "  (:...................................................................:...............:...........:.......................................................................:)",
      "  (:..............................................................:::.............................:::......................................................................:)",
      "  (:..............................................................:::............................:::::.....................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:.............................................................:::::.............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:...........................................:...............:...:...........:...............:...............:...............:...........................................:)",
      "  (:..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:)",
      "  (:..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................:)",
      "  (:..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:)",
      "  (:...........................................:...............:...............:...............:...............:...............:...........................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_osc_image",
      [
        -1,
        "make-image",
        "120",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":...................................................................:...............:...................................................................................:"
          ],
          [
            ":..................................................................:::::::::::.....::...................................................................................:"
          ],
          [
            ":.................................................................::::::::::::....::::::::::::..........................................................................:"
          ],
          [
            ":..................................................................:::::::::::.....::...................................................................................:"
          ],
          [
            ":...................................................................:...............:...........:.......................................................................:"
          ],
          [
            ":..............................................................:::.............................:::......................................................................:"
          ],
          [
            ":..............................................................:::............................:::::.....................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":.............................................................:::::.............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":...........................................:...............:...:...........:...............:...............:...............:...........................................:"
          ],
          [
            ":..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:"
          ],
          [
            ":..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................:"
          ],
          [
            ":..................................:::::::::::.....:::::::::::..............::..............::..............::..............::..........................................:"
          ],
          [
            ":...........................................:...............:...............:...............:...............:...............:...........................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf148;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf23c;&#xf24a;&#xf206;&#xf22d;&#xf248;&#xf154;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf243;&#xf242;&#xf20b;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf243;&#xf242;&#xf207;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1662
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_osc_gate | distill-circuit $cos_osc_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_osc_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_osc_image"
        ]
      ]
    ],
    "code": "12100010031231210100001130231210011100131231210100010032233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf149;&#xf147;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf149;&#xf148;&#xf24b;",
    "stanza": 1663
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_OSC.gate",
      "7 8 1 0 1",
      "5 8 1 0 1",
      "15 8 1 0 0",
      "11 6 -1 0 0",
      "12 7 0 -1 0",
      "13 8 1 0 0",
      "9 6 -1 0 1",
      "11 8 1 0 0",
      "8 7 0 1 1",
      "9 8 1 0 0"
    ],
    "thumbnail": "COS_OSC.gif",
    "page": "COS_OSC.html",
    "stanza": 1664
  },
  {
    "role": "file",
    "lines": [
      "== COS_SR =="
    ],
    "stanza": 1665
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_sr circuit",
    "section_category": "GATE",
    "section_index": 50,
    "stanza": 1666
  },
  {
    "role": "code",
    "lines": [
      "intro cos_sr_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_sr_gate"
    ],
    "code": "121001031210100010132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf149;&#xf24b;",
    "stanza": 1667
  },
  {
    "role": "code",
    "lines": [
      "intro cos_sr_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_sr_image"
    ],
    "code": "121001031210100011032233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf14a;&#xf24b;",
    "stanza": 1668
  },
  {
    "role": "code",
    "lines": [
      "define cos_sr_gate | vector ",
      "  (vector 0 2 2 2 $true)",
      "  (vector 0 8 2 8 $true)",
      "  (vector 2 2 4 2 $true)",
      "  (vector 2 8 4 8 $true)",
      "  (vector 4 2 6 2 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 4 8 6 8 $true)",
      "  (vector 6 8 6 6 $true)",
      "  (vector 6 2 8 2 $true)",
      "  (vector 6 6 8 6 $false)",
      "  (vector 8 4 8 6 $false)",
      "  (vector 8 2 10 2 $true)",
      "  (vector 10 4 8 4 $false)",
      "  (vector 8 6 10 6 $false)",
      "  (vector 10 6 10 8 $false)",
      "  (vector 10 2 12 2 $true)",
      "  (vector 12 4 10 4 $false)",
      "  (vector 10 6 12 6 $false)",
      "  (vector 10 8 12 8 $false)",
      "  (vector 12 6 12 4 $false)",
      "  (vector 12 2 14 2 $true)",
      "  (vector 14 4 12 4 $false)",
      "  (vector 12 8 14 8 $false)",
      "  (vector 14 2 14 4 $true)",
      "  (vector 16 4 14 4 $true)",
      "  (vector 14 8 16 8 $false)",
      "  (vector 16 8 18 8 $false)",
      "  (vector 18 8 20 8 $false);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_sr_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "2",
          "2",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "8",
          "2",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "8",
          "4",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "8",
          "6",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "8",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "2",
          "8",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "4",
          "8",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "2",
          "10",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "8",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "12",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "4",
          "10",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "12",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "12",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "2",
          "14",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "4",
          "12",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "2",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "4",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "16",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "8",
          "18",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "18",
          "8",
          "20",
          "8",
          [
            -2,
            "false"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf149;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf24a;&#xf20c;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf24a;&#xf212;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf208;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf206;&#xf24a;&#xf212;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf208;&#xf24a;&#xf212;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf20c;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf216;&#xf24a;&#xf20c;&#xf24a;&#xf218;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf24b;",
    "stanza": 1669
  },
  {
    "role": "code",
    "lines": [
      "define cos_sr_image | make-image 88 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...............:...........................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...............:...........................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:.............................................................................................................:::::.....................................................:)",
      "  (:..............................................................................................................:::......................................................:)",
      "  (:...................................................................:...............:...............:...........:...:...................................................:)",
      "  (:..................................................................::..............::..............::..............:::::::::::..........................................:)",
      "  (:.................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::..........................................:)",
      "  (:..................................................................::..............::..............::..............:::::::::::..........................................:)",
      "  (:...................................................................:...............:...........:...:...............:...................................................:)",
      "  (:...............................................................:..............................:::......................................................................:)",
      "  (:...............................................................:.............................:::::.....................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:...............................................................:...............................:.......................................................................:)",
      "  (:.............................................................:::::.............................:.......................................................................:)",
      "  (:..............................................................:::..............................:.......................................................................:)",
      "  (:...........................................:...............:...:...........:...............:...........................................................................:)",
      "  (:..................................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..................................:::::::::::..............::..............::..............::..........................................................................:)",
      "  (:...........................................:...:...........:...............:...............:...........................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:.............................................:::::.............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::..............................:.......................................................................................:)",
      "  (:..............................................:::............................:::::.....................................................................................:)",
      "  (:..............................................:::.............................:::......................................................................................:)",
      "  (:...........:...............:...............:...................................:...........:...............:...............:...............:...............:...........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:)",
      "  (:...........:...............:...............:...............................................:...............:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_sr_image",
      [
        -1,
        "make-image",
        "88",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...............:...........................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...............:...........................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":.............................................................................................................:::::.....................................................:"
          ],
          [
            ":..............................................................................................................:::......................................................:"
          ],
          [
            ":...................................................................:...............:...............:...........:...:...................................................:"
          ],
          [
            ":..................................................................::..............::..............::..............:::::::::::..........................................:"
          ],
          [
            ":.................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::..........................................:"
          ],
          [
            ":..................................................................::..............::..............::..............:::::::::::..........................................:"
          ],
          [
            ":...................................................................:...............:...........:...:...............:...................................................:"
          ],
          [
            ":...............................................................:..............................:::......................................................................:"
          ],
          [
            ":...............................................................:.............................:::::.....................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":...............................................................:...............................:.......................................................................:"
          ],
          [
            ":.............................................................:::::.............................:.......................................................................:"
          ],
          [
            ":..............................................................:::..............................:.......................................................................:"
          ],
          [
            ":...........................................:...............:...:...........:...............:...........................................................................:"
          ],
          [
            ":..................................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":..................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..................................:::::::::::..............::..............::..............::..........................................................................:"
          ],
          [
            ":...........................................:...:...........:...............:...............:...........................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":.............................................:::::.............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::..............................:.......................................................................................:"
          ],
          [
            ":..............................................:::............................:::::.....................................................................................:"
          ],
          [
            ":..............................................:::.............................:::......................................................................................:"
          ],
          [
            ":...........:...............:...............:...................................:...........:...............:...............:...............:...............:...........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....................................::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::..............................................::..............::..............::..............::..............::..........:"
          ],
          [
            ":...........:...............:...............:...............................................:...............:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf14a;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf21c;&#xf24a;&#xf206;&#xf22d;&#xf248;&#xf154;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf208;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf234;&#xf204;&#xf207;&#xf204;&#xf204;&#xf210;&#xf204;&#xf204;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf243;&#xf242;&#xf20b;&#xf243;&#xf23c;&#xf223;&#xf243;&#xf225;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf234;&#xf204;&#xf207;&#xf204;&#xf204;&#xf210;&#xf204;&#xf204;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf208;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf215;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf205;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf20a;&#xf204;&#xf204;&#xf21c;&#xf204;&#xf205;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1670
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_sr_gate | distill-circuit $cos_sr_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_sr_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_sr_image"
        ]
      ]
    ],
    "code": "12100010031231210100010130231210011100131231210100011032233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf149;&#xf149;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf149;&#xf14a;&#xf24b;",
    "stanza": 1671
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_SR.gate",
      "6 7 0 -1 1",
      "13 2 1 0 1",
      "15 4 -1 0 1",
      "19 8 1 0 0",
      "11 2 1 0 1",
      "13 4 -1 0 0",
      "17 8 1 0 0",
      "9 2 1 0 1",
      "11 4 -1 0 0",
      "15 8 1 0 0",
      "7 2 1 0 1",
      "9 4 -1 0 0",
      "11 6 1 0 0",
      "13 8 1 0 0",
      "5 2 1 0 1",
      "9 6 1 0 0",
      "11 8 1 0 0",
      "3 2 1 0 1",
      "7 6 1 0 0",
      "1 2 1 0 1",
      "5 6 1 0 1",
      "5 8 1 0 1",
      "3 8 1 0 1",
      "1 8 1 0 1",
      "14 3 0 1 1",
      "12 5 0 -1 0",
      "8 5 0 1 0",
      "10 7 0 1 0"
    ],
    "thumbnail": "COS_SR.gif",
    "page": "COS_SR.html",
    "stanza": 1672
  },
  {
    "role": "file",
    "lines": [
      "== COS_D =="
    ],
    "stanza": 1673
  },
  {
    "role": "comment",
    "lines": [
      "# This section contains one or more representations of a circuit",
      "# constructed using UNLESS gates."
    ],
    "section_description": "testing alternate primer based on gates: cos_d circuit",
    "section_category": "GATE",
    "section_index": 51,
    "stanza": 1674
  },
  {
    "role": "code",
    "lines": [
      "intro cos_d_gate;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_d_gate"
    ],
    "code": "121001031210100011132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf14b;&#xf24b;",
    "stanza": 1675
  },
  {
    "role": "code",
    "lines": [
      "intro cos_d_image;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "cos_d_image"
    ],
    "code": "121001031210100100032233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf14c;&#xf24b;",
    "stanza": 1676
  },
  {
    "role": "code",
    "lines": [
      "define cos_d_gate | vector ",
      "  (vector 0 2 2 2 $true)",
      "  (vector 0 6 2 6 $true)",
      "  (vector 2 2 4 2 $true)",
      "  (vector 2 6 4 6 $true)",
      "  (vector 4 2 6 2 $true)",
      "  (vector 4 6 6 6 $true)",
      "  (vector 6 2 8 2 $true)",
      "  (vector 6 6 8 6 $true)",
      "  (vector 8 2 10 2 $true)",
      "  (vector 8 6 10 6 $true)",
      "  (vector 10 6 10 4 $true)",
      "  (vector 10 10 10 8 $true)",
      "  (vector 10 2 12 2 $true)",
      "  (vector 10 4 12 4 $true)",
      "  (vector 10 6 12 6 $true)",
      "  (vector 10 8 12 8 $true)",
      "  (vector 12 10 10 10 $true)",
      "  (vector 12 0 12 2 $true)",
      "  (vector 12 2 12 4 $false)",
      "  (vector 12 6 12 8 $true)",
      "  (vector 12 10 12 12 $true)",
      "  (vector 12 4 14 4 $true)",
      "  (vector 12 8 14 8 $false)",
      "  (vector 14 10 12 10 $true)",
      "  (vector 12 12 14 12 $true)",
      "  (vector 14 0 14 2 $true)",
      "  (vector 14 2 14 4 $true)",
      "  (vector 14 4 14 6 $false)",
      "  (vector 14 6 14 8 $false)",
      "  (vector 14 8 14 10 $false)",
      "  (vector 16 10 14 10 $true)",
      "  (vector 14 12 16 12 $true)",
      "  (vector 16 12 18 12 $true)",
      "  (vector 18 12 20 12 $true);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_d_gate",
      [
        -1,
        "vector",
        [
          "vector",
          "0",
          "2",
          "2",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "0",
          "6",
          "2",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "2",
          "4",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "2",
          "6",
          "4",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "2",
          "6",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "4",
          "6",
          "6",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "2",
          "8",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "6",
          "6",
          "8",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "2",
          "10",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "8",
          "6",
          "10",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "10",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "10",
          "10",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "2",
          "12",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "4",
          "12",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "6",
          "12",
          "6",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "10",
          "8",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "10",
          "10",
          "10",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "0",
          "12",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "2",
          "12",
          "4",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "12",
          "6",
          "12",
          "8",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "10",
          "12",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "4",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "8",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "10",
          "12",
          "10",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "12",
          "12",
          "14",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "0",
          "14",
          "2",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "2",
          "14",
          "4",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "4",
          "14",
          "6",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "6",
          "14",
          "8",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "14",
          "8",
          "14",
          "10",
          [
            -2,
            "false"
          ]
        ],
        [
          "vector",
          "16",
          "10",
          "14",
          "10",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "14",
          "12",
          "16",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "16",
          "12",
          "18",
          "12",
          [
            -2,
            "true"
          ]
        ],
        [
          "vector",
          "18",
          "12",
          "20",
          "12",
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "code": "1211013121010001113023121000032121000030203021030210302103123121332121000030203021103021030211031231213321210000302103021030210030210312312133212100003021030211030210030211031231213321210000302100302103021103021031231213321210000302100302110302110302110312312133212100003021103021030210003021031231213321210000302110302110302100030211031231213321210000302100030210302101030210312312133212100003021000302110302101030211031231213321210000302101030211030210103021003123121332121000030210103021010302101030210003123121332121000030210103021030211003021031231213321210000302101030210030211003021003123121332121000030210103021103021100302110312312133212100003021010302100030211003021000312312133212100003021100302101030210103021010312312133212100003021100302030211003021031231213321210000302110030210302110030210031231203321210000302110030211030211003021000312312133212100003021100302101030211003021100312312133212100003021100302100302111030210031231213321210000302110030210003021110302100031231203321210000302111030210103021100302101031231213321210000302110030211003021110302110031231213321210000302111030203021110302103123121332121000030211103021030211103021003123121332121000030211103021003021110302110312312033212100003021110302110302111030210003123120332121000030211103021000302111030210103123120332121000030210000302101030211103021010312312133212100003021110302110030210000302110031231213321210000302100003021100302100103021100312312133212100003021001030211003021010030211003123121332233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf14b;&#xf248;&#xf154;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf206;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf206;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf208;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf206;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20a;&#xf24a;&#xf20a;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf206;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20c;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf206;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf208;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20a;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf20e;&#xf24a;&#xf20c;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf24a;&#xf20e;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf204;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf206;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20a;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf210;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf208;&#xf24a;&#xf212;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf20c;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20e;&#xf24a;&#xf210;&#xf24a;&#xf20e;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf210;&#xf24a;&#xf210;&#xf24a;&#xf212;&#xf24a;&#xf210;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf204;&#xf24a;&#xf212;&#xf24a;&#xf206;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf206;&#xf24a;&#xf212;&#xf24a;&#xf208;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf208;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20a;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf20c;&#xf24a;&#xf212;&#xf24a;&#xf20e;&#xf249;&#xf144;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf20e;&#xf24a;&#xf212;&#xf24a;&#xf20e;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf212;&#xf24a;&#xf210;&#xf24a;&#xf214;&#xf24a;&#xf210;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf214;&#xf24a;&#xf210;&#xf24a;&#xf216;&#xf24a;&#xf210;&#xf249;&#xf145;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf216;&#xf24a;&#xf210;&#xf24a;&#xf218;&#xf24a;&#xf210;&#xf249;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1677
  },
  {
    "role": "code",
    "lines": [
      "define cos_d_image | make-image 109 169 | vector ",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:.............................................................................................:::::...........:::::.....................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...:...............:.......................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...........................................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:...............................................................................................:..............:::......................................................:)",
      "  (:.............................................................................................:::::...........:::::.....................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:...........................................................................................:...:...........:...:.......................................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::..........................................................:)",
      "  (:..................................................................................::::::::::::....::::::::::::.........................................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::..........................................................:)",
      "  (:...............................................................................:...........:...............:...........................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:.............................................................................:::::.............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::............................:::::.....................................................:)",
      "  (:..............................................................................:::.............................:::......................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...................:.......................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:)",
      "  (:..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:)",
      "  (:...........:...............:...............:...............:...............:...............:...........................................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:..............................................................................................:::..............:.......................................................:)",
      "  (:.............................................................................................:::::...........:::::.....................................................:)",
      "  (:..............................................................................................:::.............:::......................................................:)",
      "  (:...........................................................................................:...:...........:...:.......................................................:)",
      "  (:..................................................................................:::::::::::..............::..........................................................:)",
      "  (:..................................................................................::::::::::::....::::::::::::.........................................................:)",
      "  (:..................................................................................:::::::::::..............::..........................................................:)",
      "  (:...............................................................................:...........:...............:...........................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:.............................................................................:::::.............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::..............................:.......................................................:)",
      "  (:..............................................................................:::............................:::::.....................................................:)",
      "  (:..............................................................................:::.............................:::......................................................:)",
      "  (:...................................................................................:...............:...........:...:...................................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:)",
      "  (:.................................................................................::::::::::::....::::::::::::....::::::::::::..........................................:)",
      "  (:..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:)",
      "  (:...................................................................................:...............:...............:...................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:.............................................................................................:::::.....................................................................:)",
      "  (:..............................................................................................:::......................................................................:)",
      "  (:...............................................................................................:...........:...............:...............:...............:...........:)",
      "  (:..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:..................................................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:)",
      "  (:..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:)",
      "  (:...........................................................................................................:...............:...............:...............:...........:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:.......................................................................................................................................................................:)",
      "  (:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::);"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_d_image",
      [
        -1,
        "make-image",
        "109",
        "169",
        [
          -1,
          "vector",
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":.............................................................................................:::::...........:::::.....................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...:...............:.......................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...........................................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":...............................................................................................:..............:::......................................................:"
          ],
          [
            ":.............................................................................................:::::...........:::::.....................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":...........................................................................................:...:...........:...:.......................................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":..................................................................................::::::::::::....::::::::::::.........................................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::..........................................................:"
          ],
          [
            ":...............................................................................:...........:...............:...........................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":.............................................................................:::::.............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::............................:::::.....................................................:"
          ],
          [
            ":..............................................................................:::.............................:::......................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...................:.......................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":..::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::....::::::::::::.........................................................................:"
          ],
          [
            ":..:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........................................................................:"
          ],
          [
            ":...........:...............:...............:...............:...............:...............:...........................................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":..............................................................................................:::..............:.......................................................:"
          ],
          [
            ":.............................................................................................:::::...........:::::.....................................................:"
          ],
          [
            ":..............................................................................................:::.............:::......................................................:"
          ],
          [
            ":...........................................................................................:...:...........:...:.......................................................:"
          ],
          [
            ":..................................................................................:::::::::::..............::..........................................................:"
          ],
          [
            ":..................................................................................::::::::::::....::::::::::::.........................................................:"
          ],
          [
            ":..................................................................................:::::::::::..............::..........................................................:"
          ],
          [
            ":...............................................................................:...........:...............:...........................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":.............................................................................:::::.............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::..............................:.......................................................:"
          ],
          [
            ":..............................................................................:::............................:::::.....................................................:"
          ],
          [
            ":..............................................................................:::.............................:::......................................................:"
          ],
          [
            ":...................................................................................:...............:...........:...:...................................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:"
          ],
          [
            ":.................................................................................::::::::::::....::::::::::::....::::::::::::..........................................:"
          ],
          [
            ":..................................................................................:::::::::::.....:::::::::::.....:::::::::::..........................................:"
          ],
          [
            ":...................................................................................:...............:...............:...................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":.............................................................................................:::::.....................................................................:"
          ],
          [
            ":..............................................................................................:::......................................................................:"
          ],
          [
            ":...............................................................................................:...........:...............:...............:...............:...........:"
          ],
          [
            ":..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":..................................................................................................::::::::::::....::::::::::::....::::::::::::....::::::::::::.........:"
          ],
          [
            ":..................................................................................................:::::::::::.....:::::::::::.....:::::::::::.....:::::::::::..........:"
          ],
          [
            ":...........................................................................................................:...............:...............:...............:...........:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":.......................................................................................................................................................................:"
          ],
          [
            ":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf14c;&#xf248;&#xf148;&#xf161;&#xf24a;&#xf205;&#xf231;&#xf24a;&#xf206;&#xf22d;&#xf248;&#xf154;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf215;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf215;&#xf204;&#xf205;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf215;&#xf204;&#xf205;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf204;&#xf205;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf214;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf240;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf223;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf23c;&#xf204;&#xf204;&#xf204;&#xf204;&#xf212;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf208;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf243;&#xf23c;&#xf223;&#xf243;&#xf225;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf20b;&#xf234;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf207;&#xf224;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf234;&#xf243;&#xf243;&#xf207;&#xf243;&#xf240;&#xf213;&#xf243;&#xf234;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf213;&#xf243;&#xf224;&#xf243;&#xf242;&#xf207;&#xf243;&#xf23c;&#xf213;&#xf243;&#xf224;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf204;&#xf204;&#xf208;&#xf204;&#xf204;&#xf214;&#xf204;&#xf205;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf204;&#xf205;&#xf245;&#xf246;&#xf205;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf243;&#xf245;&#xf24b;",
    "stanza": 1678
  },
  {
    "role": "code",
    "lines": [
      "equal $cos_d_gate | distill-circuit $cos_d_image;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        -2,
        "cos_d_gate"
      ],
      [
        -1,
        "distill-circuit",
        [
          -2,
          "cos_d_image"
        ]
      ]
    ],
    "code": "12100010031231210100011130231210011100131231210100100032233",
    "spider": "&#xf145;&#xf148;&#xf249;&#xf149;&#xf14b;&#xf248;&#xf148;&#xf17d;&#xf249;&#xf149;&#xf14c;&#xf24b;",
    "stanza": 1679
  },
  {
    "role": "gate",
    "lines": [
      ">>> COS_D.gate",
      "11 2 1 0 1",
      "13 4 1 0 1",
      "9 2 1 0 1",
      "11 4 1 0 1",
      "19 12 1 0 1",
      "7 2 1 0 1",
      "11 6 1 0 1",
      "13 8 1 0 0",
      "15 10 -1 0 1",
      "17 12 1 0 1",
      "5 2 1 0 1",
      "9 6 1 0 1",
      "11 8 1 0 1",
      "13 10 -1 0 1",
      "15 12 1 0 1",
      "3 2 1 0 1",
      "7 6 1 0 1",
      "11 10 -1 0 1",
      "13 12 1 0 1",
      "1 2 1 0 1",
      "5 6 1 0 1",
      "3 6 1 0 1",
      "1 6 1 0 1",
      "14 1 0 1 1",
      "12 1 0 1 1",
      "14 3 0 1 1",
      "12 3 0 1 0",
      "14 5 0 1 0",
      "14 7 0 1 0",
      "10 5 0 -1 1",
      "12 7 0 1 1",
      "14 9 0 1 0",
      "10 9 0 -1 1",
      "12 11 0 1 1"
    ],
    "thumbnail": "COS_D.gif",
    "page": "COS_D.html",
    "stanza": 1680
  },
  {
    "role": "file",
    "lines": [
      "== COS_UnlessProbe =="
    ],
    "stanza": 1681
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "probing networks of unless gates",
    "section_category": "GATE",
    "section_index": 52,
    "stanza": 1682
  },
  {
    "role": "code",
    "lines": [
      "define set-input | ? circuit | ? index | ? value |",
      "  assign wire (list-ref $circuit $index) |",
      "  map (? w | if (not | equal $w $wire) $w |",
      "         vector (list-ref $w 0)",
      "             (list-ref $w 1)",
      "                (list-ref $w 2)    ",
      "            (list-ref $w 3)",
      "            $value)",
      "      $circuit;"
    ],
    "dt": true,
    "parse": [
      "@",
      "set-input",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "index",
          [
            -1,
            "?",
            "value",
            [
              -1,
              "assign",
              "wire",
              [
                "list-ref",
                [
                  -2,
                  "circuit"
                ],
                [
                  -2,
                  "index"
                ]
              ],
              [
                -1,
                "map",
                [
                  "?",
                  "w",
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "equal",
                        [
                          -2,
                          "w"
                        ],
                        [
                          -2,
                          "wire"
                        ]
                      ]
                    ],
                    [
                      -2,
                      "w"
                    ],
                    [
                      -1,
                      "vector",
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "0"
                      ],
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "1"
                      ],
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "2"
                      ],
                      [
                        "list-ref",
                        [
                          -2,
                          "w"
                        ],
                        "3"
                      ],
                      [
                        -2,
                        "value"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "circuit"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121010010013023121100312100001000302312110031210100101030231211003121010010113023121110312101001100321210000113123121000010003123121010010103302312100100132121100312100011111302312111132121013023121000100312312100011111312312101001100331231210001111130231210000321210000113123121000111113020332121000011312312100011111302133212100001131231210001111130210332121000011312312100011111302113312312101001011331231210000100032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf14d;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf14e;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf14f;&#xf248;&#xf152;&#xf24a;&#xf149;&#xf150;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14c;&#xf249;&#xf149;&#xf14e;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf148;&#xf163;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf145;&#xf148;&#xf249;&#xf148;&#xf163;&#xf249;&#xf149;&#xf150;&#xf245;&#xf249;&#xf148;&#xf163;&#xf248;&#xf154;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf163;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf163;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf163;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf163;&#xf24a;&#xf207;&#xf245;&#xf249;&#xf149;&#xf14f;&#xf245;&#xf249;&#xf148;&#xf14c;&#xf24b;",
    "stanza": 1683
  },
  {
    "role": "code",
    "lines": [
      "define read-output | ? circuit | ? index |",
      "  assign len (list-length $circuit) |",
      "  assign wire (list-ref $circuit | - (- $len 1) $index) |",
      "  list-ref $wire 4;"
    ],
    "dt": true,
    "parse": [
      "@",
      "read-output",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "index",
          [
            -1,
            "assign",
            "len",
            [
              "list-length",
              [
                -2,
                "circuit"
              ]
            ],
            [
              -1,
              "assign",
              "wire",
              [
                "list-ref",
                [
                  -2,
                  "circuit"
                ],
                [
                  -1,
                  "-",
                  [
                    "-",
                    [
                      -2,
                      "len"
                    ],
                    "1"
                  ],
                  [
                    -2,
                    "index"
                  ]
                ]
              ],
              [
                -1,
                "list-ref",
                [
                  -2,
                  "wire"
                ],
                "4"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312101001101302312110031210000100030231211003121010010103023121110312101001110321210000103123121000010003302312111031210100110032121000011312312100001000302312101132121011312312101001110302133123121010010103302312100001131231210100110030210032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf151;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf14e;&#xf248;&#xf152;&#xf24a;&#xf149;&#xf152;&#xf246;&#xf145;&#xf146;&#xf249;&#xf148;&#xf14c;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf149;&#xf150;&#xf246;&#xf145;&#xf147;&#xf249;&#xf148;&#xf14c;&#xf248;&#xf14f;&#xf246;&#xf14f;&#xf249;&#xf149;&#xf152;&#xf24a;&#xf205;&#xf245;&#xf249;&#xf149;&#xf14e;&#xf245;&#xf248;&#xf145;&#xf147;&#xf249;&#xf149;&#xf150;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1684
  },
  {
    "role": "code",
    "lines": [
      "define sim | ? circuit | ? steps | ? setter |",
      "  if (= $steps 0) $circuit |",
      "  sim (simulate-unless | setter $circuit) (- $steps 1) $setter;"
    ],
    "dt": true,
    "parse": [
      "@",
      "sim",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "steps",
          [
            -1,
            "?",
            "setter",
            [
              -1,
              "if",
              [
                "=",
                [
                  -2,
                  "steps"
                ],
                "0"
              ],
              [
                -2,
                "circuit"
              ],
              [
                -1,
                "sim",
                [
                  "simulate-unless",
                  [
                    -1,
                    "setter",
                    [
                      -2,
                      "circuit"
                    ]
                  ]
                ],
                [
                  "-",
                  [
                    -2,
                    "steps"
                  ],
                  "1"
                ],
                [
                  -2,
                  "setter"
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210100111130231211003121000010003023121100312101010000302312110031210101000130231211113212113123121010100003020331231210000100030231210100111132121000101113023121010100013123121000010003321210113123121010100003021331231210101000132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf153;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf154;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf155;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf149;&#xf154;&#xf24a;&#xf204;&#xf245;&#xf249;&#xf148;&#xf14c;&#xf248;&#xf149;&#xf153;&#xf246;&#xf148;&#xf15b;&#xf248;&#xf149;&#xf155;&#xf249;&#xf148;&#xf14c;&#xf245;&#xf246;&#xf14f;&#xf249;&#xf149;&#xf154;&#xf24a;&#xf205;&#xf245;&#xf249;&#xf149;&#xf155;&#xf24b;",
    "stanza": 1685
  },
  {
    "role": "code",
    "lines": [
      "define smart-sim | ? circuit | ? setter |",
      "  sim $circuit (list-length $circuit) $setter;"
    ],
    "dt": true,
    "parse": [
      "@",
      "smart-sim",
      [
        -1,
        "?",
        "circuit",
        [
          -1,
          "?",
          "setter",
          [
            -1,
            "sim",
            [
              -2,
              "circuit"
            ],
            [
              "list-length",
              [
                -2,
                "circuit"
              ]
            ],
            [
              -2,
              "setter"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121010100103023121100312100001000302312110031210101000130231210100111131231210000100032121000010312312100001000331231210101000132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf156;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf14c;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf155;&#xf248;&#xf149;&#xf153;&#xf249;&#xf148;&#xf14c;&#xf246;&#xf145;&#xf146;&#xf249;&#xf148;&#xf14c;&#xf245;&#xf249;&#xf149;&#xf155;&#xf24b;",
    "stanza": 1686
  },
  {
    "role": "comment",
    "lines": [
      "# test cos_not gate"
    ],
    "stanza": 1687
  },
  {
    "role": "code",
    "lines": [
      "define cos_not_harness | ? x |",
      "  assign c $cos_not_gate | ",
      "  assign c (smart-sim $c | ? c | set-input $c 0 $x) |",
      "  read-output $c 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_not_harness",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "assign",
          "c",
          [
            -2,
            "cos_not_gate"
          ],
          [
            -1,
            "assign",
            "c",
            [
              "smart-sim",
              [
                -2,
                "c"
              ],
              [
                -1,
                "?",
                "c",
                [
                  -1,
                  "set-input",
                  [
                    -2,
                    "c"
                  ],
                  "0",
                  [
                    -2,
                    "x"
                  ]
                ]
              ]
            ],
            [
              -1,
              "read-output",
              [
                -2,
                "c"
              ],
              "0"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121010100113023121100312101011302312111031211100031231210011101030231211103121110003212101010010312312111000302312110031211100030231210100100131231211100030203123121010113302312101001101312312111000302032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf157;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf17c;&#xf249;&#xf148;&#xf17e;&#xf248;&#xf152;&#xf24a;&#xf17c;&#xf246;&#xf149;&#xf156;&#xf249;&#xf17c;&#xf248;&#xf150;&#xf24a;&#xf17c;&#xf248;&#xf149;&#xf14d;&#xf249;&#xf17c;&#xf24a;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf149;&#xf151;&#xf249;&#xf17c;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1688
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_not_harness $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_not_harness",
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "12113123120302312101010011312312132233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf149;&#xf157;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1689
  },
  {
    "role": "code",
    "lines": [
      "= $true | cos_not_harness $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "cos_not_harness",
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "12113123121302312101010011312312032233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf149;&#xf157;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1690
  },
  {
    "role": "comment",
    "lines": [
      "# test cos_and gate"
    ],
    "stanza": 1691
  },
  {
    "role": "code",
    "lines": [
      "define cos_and_harness | ? x | ? y |",
      "  assign c $cos_and_gate | ",
      "  assign c (smart-sim $c | ? c | set-input (set-input $c 0 $x) 1 $y) |",
      "  read-output $c 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "cos_true:*_harness",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "assign",
            "c",
            [
              -2,
              "cos_true:*_gate"
            ],
            [
              -1,
              "assign",
              "c",
              [
                "smart-sim",
                [
                  -2,
                  "c"
                ],
                [
                  -1,
                  "?",
                  "c",
                  [
                    -1,
                    "set-input",
                    [
                      "set-input",
                      [
                        -2,
                        "c"
                      ],
                      "0",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "1",
                    [
                      -2,
                      "y"
                    ]
                  ]
                ]
              ],
              [
                -1,
                "read-output",
                [
                  -2,
                  "c"
                ],
                "0"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131212100111100312101010100330231211003121010113023121100312110100302312111031211100031231212100111100312100111101330231211103121110003212101010010312312111000302312110031211100030231210100100132121010010013123121110003020312312101011330213123121101003302312101001101312312111000302032233",
    "spider": "&#xf151;&#xf24a;&#xf148;&#xf180;&#xf149;&#xf158;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf152;&#xf24a;&#xf17c;&#xf249;&#xf148;&#xf180;&#xf148;&#xf181;&#xf248;&#xf152;&#xf24a;&#xf17c;&#xf246;&#xf149;&#xf156;&#xf249;&#xf17c;&#xf248;&#xf150;&#xf24a;&#xf17c;&#xf248;&#xf149;&#xf14d;&#xf246;&#xf149;&#xf14d;&#xf249;&#xf17c;&#xf24a;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf205;&#xf249;&#xf178;&#xf245;&#xf248;&#xf149;&#xf151;&#xf249;&#xf17c;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1692
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_and_harness $false $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_true:*_harness",
        [
          -2,
          "false"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "121131231203023121210011110031210101010033123120312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf180;&#xf149;&#xf158;&#xf249;&#xf144;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1693
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_and_harness $false $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_true:*_harness",
        [
          -2,
          "false"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "121131231203023121210011110031210101010033123120312312132233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf180;&#xf149;&#xf158;&#xf249;&#xf144;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1694
  },
  {
    "role": "code",
    "lines": [
      "= $false | cos_and_harness $true $false;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "false"
      ],
      [
        -1,
        "cos_true:*_harness",
        [
          -2,
          "true"
        ],
        [
          -2,
          "false"
        ]
      ]
    ],
    "code": "121131231203023121210011110031210101010033123121312312032233",
    "spider": "&#xf147;&#xf249;&#xf144;&#xf248;&#xf148;&#xf180;&#xf149;&#xf158;&#xf249;&#xf145;&#xf249;&#xf144;&#xf24b;",
    "stanza": 1695
  },
  {
    "role": "code",
    "lines": [
      "= $true | cos_and_harness $true $true;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        -2,
        "true"
      ],
      [
        -1,
        "cos_true:*_harness",
        [
          -2,
          "true"
        ],
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "121131231213023121210011110031210101010033123121312312132233",
    "spider": "&#xf147;&#xf249;&#xf145;&#xf248;&#xf148;&#xf180;&#xf149;&#xf158;&#xf249;&#xf145;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1696
  },
  {
    "role": "comment",
    "lines": [
      "# this code is more awkward than it needs to be -",
      "# should make circuits mutable"
    ],
    "stanza": 1697
  },
  {
    "role": "file",
    "lines": [
      "== COS_CommentBase3 =="
    ],
    "stanza": 1698
  },
  {
    "role": "comment",
    "lines": [
      "# The following parts of the message start",
      "# to introduce some self-reference into the message"
    ],
    "section_description": "end of part 3, start of part 4",
    "section_category": "NOTE",
    "section_index": 53,
    "stanza": 1699
  },
  {
    "role": "code",
    "lines": [
      "intro part4;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "part4"
    ],
    "code": "121001031210101010132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf159;&#xf24b;",
    "stanza": 1700
  },
  {
    "role": "file",
    "lines": [
      "== COS_Message =="
    ],
    "stanza": 1701
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "a mechanism for referring to parts of the message",
    "section_category": "SELF",
    "section_index": 54,
    "stanza": 1702
  },
  {
    "role": "comment",
    "lines": [
      "# Many choices for how to do this.",
      "# Could do it without special machinery by using the",
      "# standard A-B trick for giving e.g. a Turing machine",
      "# access to its own description.",
      "# Instead, will simply introduce a \"primer\" function",
      "# that gives access to every statement made so far",
      "# (question: should future statements be included?",
      "# tentatively assume YES: will simplify",
      "# discussion of creating modified copies of the",
      "# complete message)."
    ],
    "stanza": 1703
  },
  {
    "role": "comment",
    "lines": [
      "# For now, assume primer is a list of statements,",
      "# with each statement being a list in the same",
      "# form as \"translate\" functions expect.",
      "# This means that there is, for now, no",
      "# distinction between unary or binary,",
      "# and the \"|\" structure is expanded."
    ],
    "stanza": 1704
  },
  {
    "role": "code",
    "lines": [
      "intro primer;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "primer"
    ],
    "code": "121001031210001132233",
    "spider": "&#xf156;&#xf24a;&#xf167;&#xf24b;",
    "stanza": 1705
  },
  {
    "role": "comment",
    "lines": [
      "# this line is referred to later - change/move carefully"
    ],
    "stanza": 1706
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 0) | vector intro unary;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "0"
      ],
      [
        -1,
        "vector",
        "intro",
        "unary"
      ]
    ],
    "code": "1210001003212100001131231210001130203302312100003121001031211132233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf156;&#xf24a;&#xf14b;&#xf24b;",
    "stanza": 1707
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 1) | vector intro is;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "1"
      ],
      [
        -1,
        "vector",
        "intro",
        "is"
      ]
    ],
    "code": "1210001003212100001131231210001130213302312100003121001031210111132233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf156;&#xf24a;&#xf173;&#xf24b;",
    "stanza": 1708
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 2) | vector intro int;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "2"
      ],
      [
        -1,
        "vector",
        "intro",
        "int"
      ]
    ],
    "code": "12100010032121000011312312100011302103302312100003121001031211000032233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf156;&#xf24a;&#xf174;&#xf24b;",
    "stanza": 1709
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 3) | vector is int | vector unary 0;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "3"
      ],
      [
        -1,
        "vector",
        "is",
        "int",
        [
          -1,
          "vector",
          "unary",
          "0"
        ]
      ]
    ],
    "code": "121000100321210000113123121000113021133023121000031210111131211000030231210000312111302032233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf173;&#xf24a;&#xf174;&#xf248;&#xf154;&#xf24a;&#xf14b;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1710
  },
  {
    "role": "code",
    "lines": [
      "equal (list-ref $primer 4) | vector is int | vector unary 1 0;"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "list-ref",
        [
          -2,
          "primer"
        ],
        "4"
      ],
      [
        -1,
        "vector",
        "is",
        "int",
        [
          -1,
          "vector",
          "unary",
          "1",
          "0"
        ]
      ]
    ],
    "code": "12100010032121000011312312100011302100330231210000312101111312110000302312100003121113021302032233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf173;&#xf24a;&#xf174;&#xf248;&#xf154;&#xf24a;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1711
  },
  {
    "role": "code",
    "lines": [
      "assign idx (list:find $primer | vector intro primer) |",
      "  equal (list-ref $primer | + $idx 1) |",
      "    quote @@ | equal (list-ref $primer 0) | vector intro unary;"
    ],
    "dt": false,
    "parse": [
      "assign",
      "idx",
      [
        "list:find",
        [
          -2,
          "primer"
        ],
        [
          -1,
          "vector",
          "intro",
          "primer"
        ]
      ],
      [
        -1,
        "equal",
        [
          "list-ref",
          [
            -2,
            "primer"
          ],
          [
            -1,
            "+",
            [
              -2,
              "idx"
            ],
            "1"
          ]
        ],
        [
          -1,
          "quote",
          "@@",
          [
            -1,
            "equal",
            [
              "list-ref",
              [
                -2,
                "primer"
              ],
              "0"
            ],
            [
              -1,
              "vector",
              "intro",
              "unary"
            ]
          ]
        ]
      ]
    ],
    "code": "1211103121101110032121211111031210011003312312100011302312100003121001031210001133023121000100321210000113123121000113023121010312312110111003021330231211111013121010111030231210001003212100001131231210001130203302312100003121001031211132233",
    "spider": "&#xf152;&#xf24a;&#xf147;&#xf160;&#xf246;&#xf182;&#xf145;&#xf150;&#xf249;&#xf167;&#xf248;&#xf154;&#xf24a;&#xf156;&#xf24a;&#xf167;&#xf245;&#xf248;&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf248;&#xf14e;&#xf249;&#xf147;&#xf160;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf145;&#xf181;&#xf24a;&#xf146;&#xf172;&#xf248;&#xf145;&#xf148;&#xf246;&#xf145;&#xf147;&#xf249;&#xf167;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf154;&#xf24a;&#xf156;&#xf24a;&#xf14b;&#xf24b;",
    "stanza": 1712
  },
  {
    "role": "comment",
    "lines": [
      "# Now, we could return to the MUD, simulate an agent A",
      "# transferring a copy of the primer to another agent B,",
      "# and then show B making a modified copy of that primer",
      "# and passing it back to A."
    ],
    "stanza": 1713
  },
  {
    "role": "comment",
    "lines": [
      "# We could also show agents experimenting with the",
      "# primer in various ways."
    ],
    "stanza": 1714
  },
  {
    "role": "file",
    "lines": [
      "== COS_MARK =="
    ],
    "stanza": 1715
  },
  {
    "role": "comment",
    "lines": [
      "# Message is pretty solid up to this point.",
      "# For testing purposes, useful to save state here to disk,",
      "# command: DISK-SAVE base"
    ],
    "stanza": 1716
  },
  {
    "role": "file",
    "lines": [
      "== COS_JavaPrep =="
    ],
    "stanza": 1717
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "some preparatory work for integrating with Java code",
    "section_category": "JAVA",
    "section_index": 55,
    "stanza": 1718
  },
  {
    "role": "code",
    "lines": [
      "intro Object;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "Object"
    ],
    "code": "121001031210101011032233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf15a;&#xf24b;",
    "stanza": 1719
  },
  {
    "role": "code",
    "lines": [
      "class Object ()",
      "   (method add-one | ? x | + $x 1)",
      "   (method unknown | ? x $x)",
      "   (method <init>-V $self)",
      "   (method <init> $self)",
      "   (method classname Object)",
      "   (method equals-Object-Z | this ==)",
      "   (method equals | self equals-Object-Z)",
      "   (method act $true)",
      "   (method isobj $true);"
    ],
    "dt": true,
    "parse": [
      "class",
      "Object",
      [],
      [
        "method",
        "add-one",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "+",
            [
              -2,
              "x"
            ],
            "1"
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -2,
            "x"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "classname",
        "Object"
      ],
      [
        "method",
        "equals-Object-Z",
        [
          -1,
          "this",
          "=="
        ]
      ],
      [
        "method",
        "equals",
        [
          -1,
          "self",
          "equals-Object-Z"
        ]
      ],
      [
        "method",
        "act",
        [
          -2,
          "true"
        ]
      ],
      [
        "method",
        "isobj",
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "1210111001312101010110323212101011113121010101113023121100312101011302312101031231210101130213321210101111312101100013023121100312101011312312101011332121010111131210101100031231210010010332121010111131210101100131231210010010332121010111131210110000312101010110332121010111131210101101030231210101011312101100113321210101111312101011011302312100100103121010110103321210101111312101011100312312133212101011113121010111013123121332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf149;&#xf15a;&#xf246;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15b;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14e;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf174;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15e;&#xf248;&#xf146;&#xf16f;&#xf24a;&#xf146;&#xf177;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15e;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf160;&#xf249;&#xf145;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf161;&#xf249;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1720
  },
  {
    "role": "code",
    "lines": [
      "define java-object $Object;"
    ],
    "dt": true,
    "parse": [
      "@",
      "java-object",
      [
        -2,
        "Object"
      ]
    ],
    "code": "12110131210101111031231210101011032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf162;&#xf249;&#xf149;&#xf15a;&#xf24b;",
    "stanza": 1721
  },
  {
    "role": "code",
    "lines": [
      "define act | ? x $true;"
    ],
    "dt": true,
    "parse": [
      "@",
      "act",
      [
        -1,
        "?",
        "x",
        [
          -2,
          "true"
        ]
      ]
    ],
    "code": "1211013121010111003023121100312101011312312132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf160;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf249;&#xf145;&#xf24b;",
    "stanza": 1722
  },
  {
    "role": "comment",
    "lines": [
      "# inconsistency of various kinds of equality throughout message",
      "# needs to be cleaned up"
    ],
    "stanza": 1723
  },
  {
    "role": "code",
    "lines": [
      "intro Integer;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "Integer"
    ],
    "code": "121001031210101111132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf163;&#xf24b;",
    "stanza": 1724
  },
  {
    "role": "code",
    "lines": [
      "class Integer ()",
      "   (field super | java-object new)",
      "   (field value | cell new 0)",
      "   (method <init> $self)",
      "   (method <init>-V $self)",
      "   (method <init>-I-V | ? v | begin (value set $v) $self)",
      "   (method intValue-V | value get)",
      "   (method intValue | self intValue-V)",
      "   (method equals-Object-Z | ? o |",
      "      if (not | = Integer | o classname) $false |",
      "      = (value get) (o value get))",
      "   (method equals | self equals-Object-Z)",
      "   (method get | value get)",
      "   (method set | ? x | value set | if (not | function? $x) $x | x intValue)",
      "   (method classname Integer)",
      "   (method unknown | ? x | super $x);"
    ],
    "dt": true,
    "parse": [
      "class",
      "Integer",
      [],
      [
        "field",
        "super",
        [
          -1,
          "java-object",
          "new"
        ]
      ],
      [
        "field",
        "value",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-I-V",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "begin",
            [
              "value",
              "set",
              [
                -2,
                "v"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "intValue-V",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "intValue",
        [
          -1,
          "self",
          "intValue-V"
        ]
      ],
      [
        "method",
        "equals-Object-Z",
        [
          -1,
          "?",
          "o",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "Integer",
                [
                  -1,
                  "o",
                  "classname"
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "=",
              [
                "value",
                "get"
              ],
              [
                "o",
                "value",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "equals",
        [
          -1,
          "self",
          "equals-Object-Z"
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "value",
            "set",
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "function?",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -2,
                "x"
              ],
              [
                -1,
                "x",
                "intValue"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "classname",
        "Integer"
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf149;&#xf163;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf149;&#xf162;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf149;&#xf14f;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf164;&#xf248;&#xf150;&#xf24a;&#xf170;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf149;&#xf14f;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf170;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf165;&#xf248;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf166;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf165;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15e;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf167;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf149;&#xf163;&#xf248;&#xf149;&#xf167;&#xf24a;&#xf146;&#xf174;&#xf245;&#xf249;&#xf144;&#xf248;&#xf147;&#xf246;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf149;&#xf167;&#xf24a;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15e;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf149;&#xf14f;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf248;&#xf16f;&#xf24a;&#xf149;&#xf166;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf174;&#xf24a;&#xf149;&#xf163;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1725
  },
  {
    "role": "comment",
    "lines": [
      "# string is basically the same as an integer"
    ],
    "stanza": 1726
  },
  {
    "role": "code",
    "lines": [
      "intro String;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "String"
    ],
    "code": "121001031210110010032233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf168;&#xf24b;",
    "stanza": 1727
  },
  {
    "role": "code",
    "lines": [
      "class String ()",
      "   (field super | java-object new)",
      "   (field value | cell new 0)",
      "   (method <init> $self)",
      "   (method <init>-V $self)",
      "   (method <init>-String-V | ? v | begin (value set | v value get) $self)",
      "   (method int-init | ? x | begin (value set $x) $self)",
      "   (method intValue-V | value get)",
      "   (method intValue | self intValue-V)",
      "   (method equals-Object-Z | ? o |",
      "      if (not | = String | o classname) $false |",
      "      = (value get) (o value get))",
      "   (method equals | self equals-Object-Z)",
      "   (method get | value get)",
      "   (method set | ? x | value set | if (not | function? $x) $x | x intValue)",
      "   (method classname String)",
      "   (method unknown | ? x | super $x);"
    ],
    "dt": true,
    "parse": [
      "class",
      "String",
      [],
      [
        "field",
        "super",
        [
          -1,
          "java-object",
          "new"
        ]
      ],
      [
        "field",
        "value",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          -2,
          "self"
        ]
      ],
      [
        "method",
        "<init>-String-V",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "begin",
            [
              "value",
              "set",
              [
                -1,
                "v",
                "value",
                "get"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "int-init",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "begin",
            [
              "value",
              "set",
              [
                -2,
                "x"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "intValue-V",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "intValue",
        [
          -1,
          "self",
          "intValue-V"
        ]
      ],
      [
        "method",
        "equals-Object-Z",
        [
          -1,
          "?",
          "o",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "=",
                "String",
                [
                  -1,
                  "o",
                  "classname"
                ]
              ]
            ],
            [
              -2,
              "false"
            ],
            [
              -1,
              "=",
              [
                "value",
                "get"
              ],
              [
                "o",
                "value",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "equals",
        [
          -1,
          "self",
          "equals-Object-Z"
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "value",
          "get"
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "value",
            "set",
            [
              -1,
              "if",
              [
                "not",
                [
                  -1,
                  "function?",
                  [
                    -2,
                    "x"
                  ]
                ]
              ],
              [
                -2,
                "x"
              ],
              [
                -1,
                "x",
                "intValue"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "classname",
        "String"
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf149;&#xf168;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf149;&#xf162;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf149;&#xf14f;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf169;&#xf248;&#xf150;&#xf24a;&#xf170;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf149;&#xf14f;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf170;&#xf24a;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf16a;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf149;&#xf14f;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf165;&#xf248;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf166;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf165;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15e;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf167;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf24a;&#xf149;&#xf168;&#xf248;&#xf149;&#xf167;&#xf24a;&#xf146;&#xf174;&#xf245;&#xf249;&#xf144;&#xf248;&#xf147;&#xf246;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf149;&#xf167;&#xf24a;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15e;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf149;&#xf14f;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf149;&#xf14f;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf16f;&#xf245;&#xf249;&#xf16f;&#xf248;&#xf16f;&#xf24a;&#xf149;&#xf166;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf174;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1728
  },
  {
    "role": "comment",
    "lines": [
      "# will need to install class hierarchy, just hardcode a few things for now"
    ],
    "stanza": 1729
  },
  {
    "role": "code",
    "lines": [
      "intro java;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "java"
    ],
    "code": "121001031210110011132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf16b;&#xf24b;",
    "stanza": 1730
  },
  {
    "role": "code",
    "lines": [
      "define java | ? x | ? y |",
      "  cond ((= $y String) $String)",
      "       ((= $y Object) $java-object)",
      "       ((= $y Integer) $Integer)",
      "       $java-object;"
    ],
    "dt": true,
    "parse": [
      "@",
      "java",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "?",
          "y",
          [
            -1,
            "cond",
            [
              [
                "=",
                [
                  -2,
                  "y"
                ],
                "String"
              ],
              [
                -2,
                "String"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "y"
                ],
                "Object"
              ],
              [
                -2,
                "java-object"
              ]
            ],
            [
              [
                "=",
                [
                  -2,
                  "y"
                ],
                "Integer"
              ],
              [
                -2,
                "Integer"
              ]
            ],
            [
              -2,
              "java-object"
            ]
          ]
        ]
      ]
    ],
    "code": "121101312101100111302312110031210101130231211003121101003023121000010032212113123121101003121011001003312312101100100332212113123121101003121010101103312312101011110332212113123121101003121010111113312312101011111331231210101111032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf16b;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf178;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf178;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf249;&#xf149;&#xf168;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf178;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf249;&#xf149;&#xf162;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf178;&#xf24a;&#xf149;&#xf163;&#xf245;&#xf249;&#xf149;&#xf163;&#xf245;&#xf249;&#xf149;&#xf162;&#xf24b;",
    "stanza": 1731
  },
  {
    "role": "code",
    "lines": [
      "(java util String) new isobj;"
    ],
    "dt": false,
    "parse": [
      [
        "java",
        "util",
        "String"
      ],
      "new",
      "isobj"
    ],
    "code": "21210110011131210110100031210110010033121001111031210101110132233",
    "spider": "&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf149;&#xf16c;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf161;&#xf24b;",
    "stanza": 1732
  },
  {
    "role": "code",
    "lines": [
      "= ((java util String) new add-one 15) 16;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "java",
          "util",
          "String"
        ],
        "new",
        "add-one",
        "15"
      ],
      "16"
    ],
    "code": "121132212101100111312101101000312101100100331210011110312101010111302111133021000032233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf149;&#xf16c;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15b;&#xf24a;&#xf213;&#xf245;&#xf214;&#xf24b;",
    "stanza": 1733
  },
  {
    "role": "code",
    "lines": [
      "class java-numeric ()",
      "   (field super (java-object new))",
      "   (method unknown | ? x | super $x)",
      "   (field java-content | cell new 0)",
      "   (method get | java-content get)",
      "   (method init | ? v | begin (self set $v) $self)",
      "   (method set | ? v | java-content set $v);"
    ],
    "dt": true,
    "parse": [
      "class",
      "java-numeric",
      [],
      [
        "field",
        "super",
        [
          "java-object",
          "new"
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "java-content",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "java-content",
          "get"
        ]
      ],
      [
        "method",
        "init",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "begin",
            [
              "self",
              "set",
              [
                -2,
                "v"
              ]
            ],
            [
              -2,
              "self"
            ]
          ]
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "?",
          "v",
          [
            -1,
            "java-content",
            "set",
            [
              -2,
              "v"
            ]
          ]
        ]
      ]
    ],
    "code": "1210111001312101101001323212101101113121010000132121010111103121001111033321210101111312101100013023121100312101011302312101000013123121010113321210110111312101101010302312100101312100111103020332121010111131211110130231210110101031211110133212101011113121011010113023121100312101100302312100101132121001001031211010113123121011003312312100100103321210101111312110101130231211003121011003023121011010103121101011312312101100332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf149;&#xf16d;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf165;&#xf246;&#xf149;&#xf162;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf149;&#xf16e;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf149;&#xf16e;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf170;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf170;&#xf245;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf170;&#xf248;&#xf149;&#xf16e;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf170;&#xf245;&#xf24b;",
    "stanza": 1734
  },
  {
    "role": "code",
    "lines": [
      "define byte $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "byte",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210110110031231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf170;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1735
  },
  {
    "role": "code",
    "lines": [
      "define char $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "char",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210110110131231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf171;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1736
  },
  {
    "role": "code",
    "lines": [
      "define double $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "double",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210110111031231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf172;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1737
  },
  {
    "role": "code",
    "lines": [
      "define float $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "float",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "121101312101101131231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf145;&#xf15f;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1738
  },
  {
    "role": "code",
    "lines": [
      "define int $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "int",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131211000031231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf174;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1739
  },
  {
    "role": "code",
    "lines": [
      "define long $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "long",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210110111131231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf173;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1740
  },
  {
    "role": "code",
    "lines": [
      "define short $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "short",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210111000031231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf174;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1741
  },
  {
    "role": "code",
    "lines": [
      "define boolean $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "boolean",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210111000131231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf175;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1742
  },
  {
    "role": "code",
    "lines": [
      "define void $java-numeric;"
    ],
    "dt": true,
    "parse": [
      "@",
      "void",
      [
        -2,
        "java-numeric"
      ]
    ],
    "code": "12110131210111001031231210110100132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf176;&#xf249;&#xf149;&#xf16d;&#xf24b;",
    "stanza": 1743
  },
  {
    "role": "code",
    "lines": [
      "define java-test1 | int new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "java-test1",
      [
        -1,
        "int",
        "new"
      ]
    ],
    "code": "1211013121011100113023121100003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf177;&#xf248;&#xf174;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1744
  },
  {
    "role": "code",
    "lines": [
      "java-test1 set 15;"
    ],
    "dt": false,
    "parse": [
      "java-test1",
      "set",
      "15"
    ],
    "code": "121011100113121101011302111132233",
    "spider": "&#xf149;&#xf177;&#xf24a;&#xf145;&#xf16f;&#xf24a;&#xf213;&#xf24b;",
    "stanza": 1745
  },
  {
    "role": "code",
    "lines": [
      "= 15 | java-test1 get;"
    ],
    "dt": false,
    "parse": [
      "=",
      "15",
      [
        -1,
        "java-test1",
        "get"
      ]
    ],
    "code": "1211302111130231210111001131211110132233",
    "spider": "&#xf147;&#xf24a;&#xf213;&#xf248;&#xf149;&#xf177;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1746
  },
  {
    "role": "code",
    "lines": [
      "define java-test2 | int new init 17;"
    ],
    "dt": true,
    "parse": [
      "@",
      "java-test2",
      [
        -1,
        "int",
        "new",
        "init",
        "17"
      ]
    ],
    "code": "121101312101110100302312110000312100111103121011010113021000132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf178;&#xf248;&#xf174;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf16f;&#xf24a;&#xf215;&#xf24b;",
    "stanza": 1747
  },
  {
    "role": "code",
    "lines": [
      "= 17 | java-test2 get;"
    ],
    "dt": false,
    "parse": [
      "=",
      "17",
      [
        -1,
        "java-test2",
        "get"
      ]
    ],
    "code": "12113021000130231210111010031211110132233",
    "spider": "&#xf147;&#xf24a;&#xf215;&#xf248;&#xf149;&#xf178;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1748
  },
  {
    "role": "code",
    "lines": [
      "define state-machine-test1 | ? x | cond",
      "  ((= $x 1) 20)",
      "  ((= $x 2) 40)",
      "  ((= $x 3) 60)",
      "  0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "state-machine-test1",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "cond",
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "1"
            ],
            "20"
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "2"
            ],
            "40"
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "3"
            ],
            "60"
          ],
          "0"
        ]
      ]
    ],
    "code": "1211013121011101013023121100312101011302312100001003221211312312101011302133021010033221211312312101011302103302101000332212113123121010113021133021111003302032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf179;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf218;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf22c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf240;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1749
  },
  {
    "role": "code",
    "lines": [
      "= 60 | state-machine-test1 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      "60",
      [
        -1,
        "state-machine-test1",
        "3"
      ]
    ],
    "code": "12113021111003023121011101013021132233",
    "spider": "&#xf147;&#xf24a;&#xf240;&#xf248;&#xf149;&#xf179;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1750
  },
  {
    "role": "code",
    "lines": [
      "define state-machine-test2 | ? x | cond",
      "  ((= $x 1) | java-test1 set 20)",
      "  ((= $x 2) | java-test1 set 40)",
      "  ((= $x 3) | java-test1 set 60)",
      "  0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "state-machine-test2",
      [
        -1,
        "?",
        "x",
        [
          -1,
          "cond",
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "1"
            ],
            [
              -1,
              "java-test1",
              "set",
              "20"
            ]
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "2"
            ],
            [
              -1,
              "java-test1",
              "set",
              "40"
            ]
          ],
          [
            [
              "=",
              [
                -2,
                "x"
              ],
              "3"
            ],
            [
              -1,
              "java-test1",
              "set",
              "60"
            ]
          ],
          "0"
        ]
      ]
    ],
    "code": "1211013121011101103023121100312101011302312100001003221211312312101011302133023121011100113121101011302101003322121131231210101130210330231210111001131211010113021010003322121131231210101130211330231210111001131211010113021111003302032233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf17a;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf149;&#xf177;&#xf24a;&#xf145;&#xf16f;&#xf24a;&#xf218;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf149;&#xf177;&#xf24a;&#xf145;&#xf16f;&#xf24a;&#xf22c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf149;&#xf177;&#xf24a;&#xf145;&#xf16f;&#xf24a;&#xf240;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1751
  },
  {
    "role": "code",
    "lines": [
      "state-machine-test2 2;"
    ],
    "dt": false,
    "parse": [
      "state-machine-test2",
      "2"
    ],
    "code": "121011101103021032233",
    "spider": "&#xf149;&#xf17a;&#xf24a;&#xf206;&#xf24b;",
    "stanza": 1752
  },
  {
    "role": "code",
    "lines": [
      "= 40 | java-test1 get;"
    ],
    "dt": false,
    "parse": [
      "=",
      "40",
      [
        -1,
        "java-test1",
        "get"
      ]
    ],
    "code": "121130210100030231210111001131211110132233",
    "spider": "&#xf147;&#xf24a;&#xf22c;&#xf248;&#xf149;&#xf177;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1753
  },
  {
    "role": "code",
    "lines": [
      "define compare-object-reference | ? o1 | ? o2 |",
      "   if (not | function? $o1) (not | function? $o2) |",
      "   = (o1 unique-id) (o2 unique-id);"
    ],
    "dt": true,
    "parse": [
      "@",
      "compare-object-reference",
      [
        -1,
        "?",
        "o1",
        [
          -1,
          "?",
          "o2",
          [
            -1,
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "o1"
                ]
              ]
            ],
            [
              "not",
              [
                -1,
                "function?",
                [
                  -2,
                  "o2"
                ]
              ]
            ],
            [
              -1,
              "=",
              [
                "o1",
                "unique-id"
              ],
              [
                "o2",
                "unique-id"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131210111011130231211003121011110003023121100312101111001302312111132121013023121110131231210111100033212101302312111013123121011110013302312113212101111000312101100103321210111100131210110010332233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf17b;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf17c;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf17d;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf149;&#xf17c;&#xf245;&#xf246;&#xf149;&#xf248;&#xf161;&#xf249;&#xf149;&#xf17d;&#xf245;&#xf248;&#xf147;&#xf246;&#xf149;&#xf17c;&#xf24a;&#xf146;&#xf176;&#xf245;&#xf246;&#xf149;&#xf17d;&#xf24a;&#xf146;&#xf176;&#xf245;&#xf24b;",
    "stanza": 1754
  },
  {
    "role": "code",
    "lines": [
      "define minus-one | minus 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "minus-one",
      [
        -1,
        "minus",
        "1"
      ]
    ],
    "code": "1211013121011110103023121010100302132233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf17e;&#xf248;&#xf145;&#xf158;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1755
  },
  {
    "role": "code",
    "lines": [
      "intro jvm-maker;"
    ],
    "dt": false,
    "parse": [
      "intro",
      "jvm-maker"
    ],
    "code": "121001031210111101132233",
    "spider": "&#xf156;&#xf24a;&#xf149;&#xf17f;&#xf24b;",
    "stanza": 1756
  },
  {
    "role": "code",
    "lines": [
      "define jvm-maker | lambda (vars stack pc ret) | ? op | begin",
      "   (pc set | + (pc get) 1) |",
      "   cond",
      "     ((= $op new) | ? type | stack-push $stack | $type new)",
      "     ((= $op dup) | stack-push $stack | stack-peek $stack)",
      "     ((= $op checkcast) | ? t 1)",
      "     ((or (= $op astore) (= $op istore)) | ? index |",
      "        vars set | hash-add (vars get) $index | stack-pop $stack)",
      "     ((or (= $op aload) (= $op iload)) | ? index |",
      "        stack-push $stack | hash-ref (vars get) $index)",
      "     ((or (= $op iconst) (= $op ldc)) | ? val | stack-push $stack $val)",
      "     ((= $op aconst_null) | stack-push $stack 0)",
      "     ((= $op instanceof) | ? t |",
      "        stack-push $stack | function? | (stack-pop $stack) (t new classname))",
      "     ((= $op getfield) | ? key | ? ignore |",
      "    stack-push $stack | (stack-pop $stack) $key get)",
      "     ((= $op putfield) | ? key | ? ignore |",
      "        assign val (stack-pop $stack) |",
      "        (stack-pop $stack) $key set $val)",
      "     ((= $op imul) |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        stack-push $stack | * $v1 $v2)",
      "     ((= $op iadd) |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        stack-push $stack | + $v1 $v2)",
      "     ((= $op isub) |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        stack-push $stack | - $v1 $v2)",
      "     ((= $op goto) | ? x | pc set $x)",
      "     ((= $op iflt) | ? x |",
      "        if (< (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifle) | ? x |",
      "        if (<= (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifgt) | ? x |",
      "        if (> (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifge) | ? x |",
      "        if (>= (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifne) | ? x |",
      "        if (not | = (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op ifeq) | ? x |",
      "        if (= (stack-pop $stack) 0) (pc set $x) 0)",
      "     ((= $op if_icmpne) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (not | = $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmpeq) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (= $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_acmpne) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (not | compare-object-reference $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_acmpeq) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (compare-object-reference $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmpge) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (>= $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmpgt) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (> $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmple) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (<= $v1 $v2) (pc set $x) 0)",
      "     ((= $op if_icmplt) | ? x |",
      "        assign v2 (stack-pop $stack) |",
      "        assign v1 (stack-pop $stack) |",
      "        if (< $v1 $v2) (pc set $x) 0)",
      "     ((= $op ifnull) | ? x |",
      "    if (not | function? | stack-pop $stack) (pc set $x) 0)",
      "     ((= $op ifnonnull) | ? x |",
      "    if (function? | stack-pop $stack) (pc set $x) 0)",
      "     ((= $op return) | begin",
      "    (ret set | hash-ref (vars get) 0)",
      "        (pc set $minus-one))",
      "     ((= $op ireturn) | begin",
      "    (ret set | stack-pop $stack)",
      "        (pc set $minus-one))",
      "     ((= $op areturn) | begin",
      "    (ret set | stack-pop $stack)",
      "        (pc set $minus-one))",
      "     ((= $op invokevirtual) | lambda (target m n) |",
      "         assign result (stack-call $stack $target $m) |",
      "         if (not | = $n 1) 0 |",
      "         stack-push $stack $result)",
      "     ((= $op invokeinterface) | lambda (target m n ignore) |",
      "         assign result (stack-call $stack $target $m) |",
      "         if (not | = $n 1) 0 |",
      "         stack-push $stack $result)",
      "     ((= $op invokespecial) | lambda (target m n) |",
      "         assign result (stack-call-special $stack (hash-ref (vars get) 0) $target $m) |",
      "         if (not | = $n 1) 0 |",
      "         stack-push $stack $result)",
      "     0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "jvm-maker",
      [
        -1,
        "lambda",
        [
          "vars",
          "stack",
          "pc",
          "ret"
        ],
        [
          -1,
          "?",
          "op",
          [
            -1,
            "begin",
            [
              "pc",
              "set",
              [
                -1,
                "+",
                [
                  "pc",
                  "get"
                ],
                "1"
              ]
            ],
            [
              -1,
              "cond",
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "new"
                ],
                [
                  -1,
                  "?",
                  "type",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -1,
                      [
                        -2,
                        "type"
                      ],
                      "new"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "dup"
                ],
                [
                  -1,
                  "stack-push",
                  [
                    -2,
                    "stack"
                  ],
                  [
                    -1,
                    "stack-peek",
                    [
                      -2,
                      "stack"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "checkcast"
                ],
                [
                  -1,
                  "?",
                  "t",
                  "1"
                ]
              ],
              [
                [
                  "true:+",
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "astore"
                  ],
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "istore"
                  ]
                ],
                [
                  -1,
                  "?",
                  "index",
                  [
                    -1,
                    "vars",
                    "set",
                    [
                      -1,
                      "hash-add",
                      [
                        "vars",
                        "get"
                      ],
                      [
                        -2,
                        "index"
                      ],
                      [
                        -1,
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "true:+",
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "aload"
                  ],
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "iload"
                  ]
                ],
                [
                  -1,
                  "?",
                  "index",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -1,
                      "hash-ref",
                      [
                        "vars",
                        "get"
                      ],
                      [
                        -2,
                        "index"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "true:+",
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "iconst"
                  ],
                  [
                    "=",
                    [
                      -2,
                      "op"
                    ],
                    "ldc"
                  ]
                ],
                [
                  -1,
                  "?",
                  "val",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -2,
                      "val"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "aconst_null"
                ],
                [
                  -1,
                  "stack-push",
                  [
                    -2,
                    "stack"
                  ],
                  "0"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "instanceof"
                ],
                [
                  -1,
                  "?",
                  "t",
                  [
                    -1,
                    "stack-push",
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -1,
                      "function?",
                      [
                        -1,
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        [
                          "t",
                          "new",
                          "classname"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "getfield"
                ],
                [
                  -1,
                  "?",
                  "key",
                  [
                    -1,
                    "?",
                    "ignore",
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        [
                          -2,
                          "key"
                        ],
                        "get"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "putfield"
                ],
                [
                  -1,
                  "?",
                  "key",
                  [
                    -1,
                    "?",
                    "ignore",
                    [
                      -1,
                      "assign",
                      "val",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        [
                          -2,
                          "key"
                        ],
                        "set",
                        [
                          -2,
                          "val"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "imul"
                ],
                [
                  -1,
                  "assign",
                  "v2",
                  [
                    "stack-pop",
                    [
                      -2,
                      "stack"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "v1",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        "*",
                        [
                          -2,
                          "v1"
                        ],
                        [
                          -2,
                          "v2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "iadd"
                ],
                [
                  -1,
                  "assign",
                  "v2",
                  [
                    "stack-pop",
                    [
                      -2,
                      "stack"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "v1",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        "+",
                        [
                          -2,
                          "v1"
                        ],
                        [
                          -2,
                          "v2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "isub"
                ],
                [
                  -1,
                  "assign",
                  "v2",
                  [
                    "stack-pop",
                    [
                      -2,
                      "stack"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "v1",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "stack-push",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -1,
                        "-",
                        [
                          -2,
                          "v1"
                        ],
                        [
                          -2,
                          "v2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "goto"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "pc",
                    "set",
                    [
                      -2,
                      "x"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "iflt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "<",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifle"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "<=",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifgt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      ">",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifge"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      ">=",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifne"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "=",
                        [
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ],
                        "0"
                      ]
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifeq"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "=",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      "0"
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpne"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "not",
                          [
                            -1,
                            "=",
                            [
                              -2,
                              "v1"
                            ],
                            [
                              -2,
                              "v2"
                            ]
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpeq"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "=",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_acmpne"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "not",
                          [
                            -1,
                            "compare-object-reference",
                            [
                              -2,
                              "v1"
                            ],
                            [
                              -2,
                              "v2"
                            ]
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_acmpeq"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "compare-object-reference",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpge"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          ">=",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmpgt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          ">",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmple"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "<=",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "if_icmplt"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "assign",
                    "v2",
                    [
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ],
                    [
                      -1,
                      "assign",
                      "v1",
                      [
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ],
                      [
                        -1,
                        "if",
                        [
                          "<",
                          [
                            -2,
                            "v1"
                          ],
                          [
                            -2,
                            "v2"
                          ]
                        ],
                        [
                          "pc",
                          "set",
                          [
                            -2,
                            "x"
                          ]
                        ],
                        "0"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifnull"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "not",
                      [
                        -1,
                        "function?",
                        [
                          -1,
                          "stack-pop",
                          [
                            -2,
                            "stack"
                          ]
                        ]
                      ]
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ifnonnull"
                ],
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "if",
                    [
                      "function?",
                      [
                        -1,
                        "stack-pop",
                        [
                          -2,
                          "stack"
                        ]
                      ]
                    ],
                    [
                      "pc",
                      "set",
                      [
                        -2,
                        "x"
                      ]
                    ],
                    "0"
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "return"
                ],
                [
                  -1,
                  "begin",
                  [
                    "ret",
                    "set",
                    [
                      -1,
                      "hash-ref",
                      [
                        "vars",
                        "get"
                      ],
                      "0"
                    ]
                  ],
                  [
                    "pc",
                    "set",
                    [
                      -2,
                      "minus-one"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "ireturn"
                ],
                [
                  -1,
                  "begin",
                  [
                    "ret",
                    "set",
                    [
                      -1,
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ]
                  ],
                  [
                    "pc",
                    "set",
                    [
                      -2,
                      "minus-one"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "areturn"
                ],
                [
                  -1,
                  "begin",
                  [
                    "ret",
                    "set",
                    [
                      -1,
                      "stack-pop",
                      [
                        -2,
                        "stack"
                      ]
                    ]
                  ],
                  [
                    "pc",
                    "set",
                    [
                      -2,
                      "minus-one"
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "invokevirtual"
                ],
                [
                  -1,
                  "lambda",
                  [
                    "target",
                    "m",
                    "n"
                  ],
                  [
                    -1,
                    "assign",
                    "result",
                    [
                      "stack-call",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -2,
                        "target"
                      ],
                      [
                        -2,
                        "m"
                      ]
                    ],
                    [
                      -1,
                      "if",
                      [
                        "not",
                        [
                          -1,
                          "=",
                          [
                            -2,
                            "n"
                          ],
                          "1"
                        ]
                      ],
                      "0",
                      [
                        -1,
                        "stack-push",
                        [
                          -2,
                          "stack"
                        ],
                        [
                          -2,
                          "result"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "invokeinterface"
                ],
                [
                  -1,
                  "lambda",
                  [
                    "target",
                    "m",
                    "n",
                    "ignore"
                  ],
                  [
                    -1,
                    "assign",
                    "result",
                    [
                      "stack-call",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        -2,
                        "target"
                      ],
                      [
                        -2,
                        "m"
                      ]
                    ],
                    [
                      -1,
                      "if",
                      [
                        "not",
                        [
                          -1,
                          "=",
                          [
                            -2,
                            "n"
                          ],
                          "1"
                        ]
                      ],
                      "0",
                      [
                        -1,
                        "stack-push",
                        [
                          -2,
                          "stack"
                        ],
                        [
                          -2,
                          "result"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "op"
                  ],
                  "invokespecial"
                ],
                [
                  -1,
                  "lambda",
                  [
                    "target",
                    "m",
                    "n"
                  ],
                  [
                    -1,
                    "assign",
                    "result",
                    [
                      "stack-call-special",
                      [
                        -2,
                        "stack"
                      ],
                      [
                        "hash-ref",
                        [
                          "vars",
                          "get"
                        ],
                        "0"
                      ],
                      [
                        -2,
                        "target"
                      ],
                      [
                        -2,
                        "m"
                      ]
                    ],
                    [
                      -1,
                      "if",
                      [
                        "not",
                        [
                          -1,
                          "=",
                          [
                            -2,
                            "n"
                          ],
                          "1"
                        ]
                      ],
                      "0",
                      [
                        -1,
                        "stack-push",
                        [
                          -2,
                          "stack"
                        ],
                        [
                          -2,
                          "result"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              "0"
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf17f;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf180;&#xf24a;&#xf149;&#xf181;&#xf24a;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf144;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf183;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf14e;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf181;&#xf245;&#xf205;&#xf245;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf144;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf249;&#xf14a;&#xf144;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf14a;&#xf147;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf148;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf14f;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf145;&#xf14e;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf149;&#xf245;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf14a;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf14e;&#xf248;&#xf149;&#xf180;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf145;&#xf171;&#xf246;&#xf149;&#xf180;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf149;&#xf14e;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf246;&#xf145;&#xf14e;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf14c;&#xf245;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf14d;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf149;&#xf14e;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf145;&#xf173;&#xf246;&#xf149;&#xf180;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf149;&#xf14e;&#xf245;&#xf246;&#xf246;&#xf145;&#xf14e;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf14e;&#xf245;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf14f;&#xf245;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf150;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf249;&#xf14a;&#xf150;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf151;&#xf245;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf146;&#xf14d;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf146;&#xf14f;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf161;&#xf248;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf146;&#xf14f;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf146;&#xf174;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf152;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf180;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf153;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf249;&#xf145;&#xf180;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf154;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf180;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf153;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf150;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf249;&#xf145;&#xf180;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf14a;&#xf150;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf155;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf14d;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf158;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf14e;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf159;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf248;&#xf14f;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf15a;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf15b;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf146;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf15c;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf180;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf15d;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf148;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf15e;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf17f;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf15f;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf160;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf161;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf162;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf163;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf149;&#xf17b;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf164;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf17b;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf165;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf17f;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf166;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf148;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf167;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf180;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf168;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf156;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf14a;&#xf157;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf153;&#xf246;&#xf146;&#xf249;&#xf14a;&#xf157;&#xf249;&#xf14a;&#xf156;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf169;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf16a;&#xf245;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf153;&#xf246;&#xf161;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf145;&#xf144;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf145;&#xf173;&#xf246;&#xf149;&#xf180;&#xf24a;&#xf181;&#xf245;&#xf204;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf149;&#xf17e;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf145;&#xf144;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf149;&#xf17e;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf145;&#xf144;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf145;&#xf16f;&#xf249;&#xf149;&#xf17e;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf16d;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf14a;&#xf16e;&#xf24a;&#xf148;&#xf147;&#xf24a;&#xf183;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf17e;&#xf246;&#xf14a;&#xf16f;&#xf249;&#xf149;&#xf181;&#xf249;&#xf14a;&#xf16e;&#xf249;&#xf148;&#xf147;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf204;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf249;&#xf145;&#xf17e;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf170;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf14a;&#xf16e;&#xf24a;&#xf148;&#xf147;&#xf24a;&#xf183;&#xf24a;&#xf14a;&#xf153;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf17e;&#xf246;&#xf14a;&#xf16f;&#xf249;&#xf149;&#xf181;&#xf249;&#xf14a;&#xf16e;&#xf249;&#xf148;&#xf147;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf204;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf249;&#xf145;&#xf17e;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf149;&#xf183;&#xf24a;&#xf14a;&#xf171;&#xf245;&#xf248;&#xf15e;&#xf246;&#xf14a;&#xf16e;&#xf24a;&#xf148;&#xf147;&#xf24a;&#xf183;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf145;&#xf17e;&#xf246;&#xf14a;&#xf172;&#xf249;&#xf149;&#xf181;&#xf246;&#xf145;&#xf173;&#xf246;&#xf149;&#xf180;&#xf24a;&#xf181;&#xf245;&#xf204;&#xf245;&#xf249;&#xf14a;&#xf16e;&#xf249;&#xf148;&#xf147;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf248;&#xf147;&#xf249;&#xf183;&#xf24a;&#xf205;&#xf245;&#xf204;&#xf248;&#xf14a;&#xf145;&#xf249;&#xf149;&#xf181;&#xf249;&#xf145;&#xf17e;&#xf245;&#xf204;&#xf24b;",
    "stanza": 1757
  },
  {
    "role": "code",
    "lines": [
      "define stack-call | lambda (stack target ct) |",
      "  if (= $ct 0)",
      "     ((stack-pop $stack) $target)",
      "     (assign arg (stack-pop $stack) |",
      "      (stack-call $stack $target (- $ct 1)) $arg);"
    ],
    "dt": true,
    "parse": [
      "@",
      "stack-call",
      [
        -1,
        "lambda",
        [
          "stack",
          "target",
          "ct"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              -2,
              "ct"
            ],
            "0"
          ],
          [
            [
              "stack-pop",
              [
                -2,
                "stack"
              ]
            ],
            [
              -2,
              "target"
            ]
          ],
          [
            "assign",
            "arg",
            [
              "stack-pop",
              [
                -2,
                "stack"
              ]
            ],
            [
              -1,
              [
                "stack-call",
                [
                  -2,
                  "stack"
                ],
                [
                  -2,
                  "target"
                ],
                [
                  "-",
                  [
                    -2,
                    "ct"
                  ],
                  "1"
                ]
              ],
              [
                -2,
                "arg"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312110101011302312110103212101111101312110101010312110101111330231211113212113123121101011113020332212110000111312312101111101331231211010101033212111031211011000032121100001113123121011111013302321211010101131231210111110131231211010101032121011312312110101111302133312312110110000332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf16f;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf181;&#xf24a;&#xf14a;&#xf16e;&#xf24a;&#xf14a;&#xf173;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf249;&#xf14a;&#xf173;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf249;&#xf14a;&#xf16e;&#xf245;&#xf246;&#xf152;&#xf24a;&#xf14a;&#xf174;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf248;&#xf246;&#xf14a;&#xf16f;&#xf249;&#xf149;&#xf181;&#xf249;&#xf14a;&#xf16e;&#xf246;&#xf14f;&#xf249;&#xf14a;&#xf173;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf249;&#xf14a;&#xf174;&#xf245;&#xf24b;",
    "stanza": 1758
  },
  {
    "role": "code",
    "lines": [
      "define stack-call-special |",
      "  lambda (stack self target ct) |",
      "    if (= (ct) 0)",
      "    (let ((act | stack-pop $stack)) |",
      "       if (act == $self)",
      "          (act super $target)",
      "          (act $target))",
      "    (let ((arg | stack-pop $stack)) |",
      "       (stack-call-special $stack $self $target (- $ct 1)) $arg);"
    ],
    "dt": true,
    "parse": [
      "@",
      "stack-call-special",
      [
        -1,
        "lambda",
        [
          "stack",
          "self",
          "target",
          "ct"
        ],
        [
          -1,
          "if",
          [
            "=",
            [
              "ct"
            ],
            "0"
          ],
          [
            "let",
            [
              [
                "act",
                [
                  -1,
                  "stack-pop",
                  [
                    -2,
                    "stack"
                  ]
                ]
              ]
            ],
            [
              -1,
              "if",
              [
                "act",
                "==",
                [
                  -2,
                  "self"
                ]
              ],
              [
                "act",
                "super",
                [
                  -2,
                  "target"
                ]
              ],
              [
                "act",
                [
                  -2,
                  "target"
                ]
              ]
            ]
          ],
          [
            "let",
            [
              [
                "arg",
                [
                  -1,
                  "stack-pop",
                  [
                    -2,
                    "stack"
                  ]
                ]
              ]
            ],
            [
              -1,
              [
                "stack-call-special",
                [
                  -2,
                  "stack"
                ],
                [
                  -2,
                  "self"
                ],
                [
                  -2,
                  "target"
                ],
                [
                  "-",
                  [
                    -2,
                    "ct"
                  ],
                  "1"
                ]
              ],
              [
                -2,
                "arg"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312110101110302312110103212101111101312100100103121101010103121101011113302312111132121132121101011113302033212110010032212101011100302312110000111312312101111101333023121111321210101110031210110011312312100100103321210101110031210100001312312110101010332121010111003123121101010103332121100100322121101100003023121100001113123121011111013330232121101011103123121011111013123121001001031231211010101032121011312312110101111302133312312110110000332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf172;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf181;&#xf24a;&#xf146;&#xf156;&#xf24a;&#xf14a;&#xf16e;&#xf24a;&#xf14a;&#xf173;&#xf245;&#xf248;&#xf153;&#xf246;&#xf147;&#xf246;&#xf14a;&#xf173;&#xf245;&#xf204;&#xf245;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf160;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf245;&#xf248;&#xf153;&#xf246;&#xf149;&#xf160;&#xf24a;&#xf146;&#xf177;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf149;&#xf160;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf14a;&#xf16e;&#xf245;&#xf246;&#xf149;&#xf160;&#xf249;&#xf14a;&#xf16e;&#xf245;&#xf245;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf14a;&#xf174;&#xf248;&#xf14a;&#xf14b;&#xf249;&#xf149;&#xf181;&#xf245;&#xf245;&#xf248;&#xf246;&#xf14a;&#xf172;&#xf249;&#xf149;&#xf181;&#xf249;&#xf146;&#xf156;&#xf249;&#xf14a;&#xf16e;&#xf246;&#xf14f;&#xf249;&#xf14a;&#xf173;&#xf24a;&#xf205;&#xf245;&#xf245;&#xf249;&#xf14a;&#xf174;&#xf245;&#xf24b;",
    "stanza": 1759
  },
  {
    "role": "code",
    "lines": [
      "define stack-push | lambda (stack x) |",
      "   stack set | prepend $x | stack get;"
    ],
    "dt": true,
    "parse": [
      "@",
      "stack-push",
      [
        -1,
        "lambda",
        [
          "stack",
          "x"
        ],
        [
          -1,
          "stack",
          "set",
          [
            -1,
            "prepend",
            [
              -2,
              "x"
            ],
            [
              -1,
              "stack",
              "get"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211000000130231211010321210111110131210101133023121011111013121101011302312100011031231210101130231210111110131211110132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf145;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf181;&#xf24a;&#xf16f;&#xf245;&#xf248;&#xf149;&#xf181;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf145;&#xf14a;&#xf249;&#xf16f;&#xf248;&#xf149;&#xf181;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1760
  },
  {
    "role": "code",
    "lines": [
      "define stack-pop | lambda (stack) |",
      "   let ((v | head | stack get)) |",
      "     begin",
      "    (stack set | tail | stack get)",
      "        $v;"
    ],
    "dt": true,
    "parse": [
      "@",
      "stack-pop",
      [
        -1,
        "lambda",
        [
          "stack"
        ],
        [
          -1,
          "let",
          [
            [
              "v",
              [
                -1,
                "list:0",
                [
                  -1,
                  "stack",
                  "get"
                ]
              ]
            ]
          ],
          [
            -1,
            "begin",
            [
              "stack",
              "set",
              [
                -1,
                "list:remainder",
                [
                  -1,
                  "stack",
                  "get"
                ]
              ]
            ],
            [
              -2,
              "v"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211000011130231211010321210111110133023121100100322121011003023121211111030203302312101111101312111101333023121001011321210111110131211010113023121211111031210000013302312101111101312111101331231210110032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf14b;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf181;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf170;&#xf248;&#xf182;&#xf204;&#xf248;&#xf149;&#xf181;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf149;&#xf181;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf149;&#xf181;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf170;&#xf24b;",
    "stanza": 1761
  },
  {
    "role": "code",
    "lines": [
      "define stack-peek | lambda (stack) |",
      "   head | stack get;"
    ],
    "dt": true,
    "parse": [
      "@",
      "stack-peek",
      [
        -1,
        "lambda",
        [
          "stack"
        ],
        [
          -1,
          "list:0",
          [
            -1,
            "stack",
            "get"
          ]
        ]
      ]
    ],
    "code": "1211013121100000113023121101032121011111013302312121111103020330231210111110131211110132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf147;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf181;&#xf245;&#xf248;&#xf182;&#xf204;&#xf248;&#xf149;&#xf181;&#xf24a;&#xf181;&#xf24b;",
    "stanza": 1762
  },
  {
    "role": "code",
    "lines": [
      "define stack-test1 | cell new | vector 5 3 1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "stack-test1",
      [
        -1,
        "cell",
        "new",
        [
          -1,
          "vector",
          "5",
          "3",
          "1"
        ]
      ]
    ],
    "code": "121101312110110001302312100101312100111103023121000030210130211302132233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf175;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf24a;&#xf209;&#xf24a;&#xf207;&#xf24a;&#xf205;&#xf24b;",
    "stanza": 1763
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "5"
    ],
    "code": "12113212110000111312312110110001330210132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf209;&#xf24b;",
    "stanza": 1764
  },
  {
    "role": "code",
    "lines": [
      "= (stack-peek $stack-test1) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-peek",
        [
          -2,
          "stack-test1"
        ]
      ],
      "3"
    ],
    "code": "1211321211000001131231211011000133021132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf147;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1765
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 3;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "3"
    ],
    "code": "1211321211000011131231211011000133021132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf207;&#xf24b;",
    "stanza": 1766
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 7;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "7"
    ],
    "code": "1211000000131231211011000130211132233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf20b;&#xf24b;",
    "stanza": 1767
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 7;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "7"
    ],
    "code": "12113212110000111312312110110001330211132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf20b;&#xf24b;",
    "stanza": 1768
  },
  {
    "role": "code",
    "lines": [
      "define vars-test1 | cell new $hash-null;"
    ],
    "dt": true,
    "parse": [
      "@",
      "vars-test1",
      [
        -1,
        "cell",
        "new",
        [
          -2,
          "hash-null"
        ]
      ]
    ],
    "code": "12110131211011001030231210010131210011110312312111000032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf176;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf145;&#xf174;&#xf24b;",
    "stanza": 1769
  },
  {
    "role": "code",
    "lines": [
      "define pc-test1 | cell new 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "pc-test1",
      [
        -1,
        "cell",
        "new",
        "0"
      ]
    ],
    "code": "12110131211011001130231210010131210011110302032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf177;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1770
  },
  {
    "role": "code",
    "lines": [
      "define ret-test1 | cell new 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "ret-test1",
      [
        -1,
        "cell",
        "new",
        "0"
      ]
    ],
    "code": "12110131211011010030231210010131210011110302032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf178;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1771
  },
  {
    "role": "code",
    "lines": [
      "define test-jvm | jvm-maker $vars-test1 $stack-test1 $pc-test1 $ret-test1;"
    ],
    "dt": true,
    "parse": [
      "@",
      "test-jvm",
      [
        -1,
        "jvm-maker",
        [
          -2,
          "vars-test1"
        ],
        [
          -2,
          "stack-test1"
        ],
        [
          -2,
          "pc-test1"
        ],
        [
          -2,
          "ret-test1"
        ]
      ]
    ],
    "code": "12110131211011010130231210111101131231211011001031231211011000131231211011001131231211011010032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf179;&#xf248;&#xf149;&#xf17f;&#xf249;&#xf14a;&#xf176;&#xf249;&#xf14a;&#xf175;&#xf249;&#xf14a;&#xf177;&#xf249;&#xf14a;&#xf178;&#xf24b;",
    "stanza": 1772
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 4;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "4"
    ],
    "code": "1211000000131231211011000130210032233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf208;&#xf24b;",
    "stanza": 1773
  },
  {
    "role": "code",
    "lines": [
      "test-jvm dup;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "dup"
    ],
    "code": "1211011010131211000001032233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf146;&#xf24b;",
    "stanza": 1774
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "4"
    ],
    "code": "12113212110000111312312110110001330210032233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf208;&#xf24b;",
    "stanza": 1775
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 4;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "4"
    ],
    "code": "12113212110000111312312110110001330210032233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf208;&#xf24b;",
    "stanza": 1776
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 66;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "66"
    ],
    "code": "12110000001312312110110001302100001032233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf205;&#xf206;&#xf24b;",
    "stanza": 1777
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 77;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "77"
    ],
    "code": "12110000001312312110110001302100110132233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf205;&#xf211;&#xf24b;",
    "stanza": 1778
  },
  {
    "role": "code",
    "lines": [
      "test-jvm astore 3;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "astore",
      "3"
    ],
    "code": "121101101013121100001013021132233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1779
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 66;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "66"
    ],
    "code": "121132121100001113123121101100013302100001032233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf205;&#xf206;&#xf24b;",
    "stanza": 1780
  },
  {
    "role": "code",
    "lines": [
      "test-jvm aload 3;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "aload",
      "3"
    ],
    "code": "121101101013121100010003021132233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf207;&#xf24b;",
    "stanza": 1781
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 77;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "77"
    ],
    "code": "121132121100001113123121101100013302100110132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf205;&#xf211;&#xf24b;",
    "stanza": 1782
  },
  {
    "role": "code",
    "lines": [
      "class test-class ()",
      "   (field x | int new)",
      "   (field y | int new);"
    ],
    "dt": true,
    "parse": [
      "class",
      "test-class",
      [],
      [
        "field",
        "x",
        [
          -1,
          "int",
          "new"
        ]
      ],
      [
        "field",
        "y",
        [
          -1,
          "int",
          "new"
        ]
      ]
    ],
    "code": "12101110013121101101103232121011011131210101130231211000031210011110332121011011131211010030231211000031210011110332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14a;&#xf17a;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf16f;&#xf248;&#xf174;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf178;&#xf248;&#xf174;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf24b;",
    "stanza": 1783
  },
  {
    "role": "code",
    "lines": [
      "define test-this | test-class new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "test-this",
      [
        -1,
        "test-class",
        "new"
      ]
    ],
    "code": "1211013121101101113023121101101103121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf17b;&#xf248;&#xf14a;&#xf17a;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1784
  },
  {
    "role": "code",
    "lines": [
      "test-this x set 5;"
    ],
    "dt": false,
    "parse": [
      "test-this",
      "x",
      "set",
      "5"
    ],
    "code": "12110110111312101011312110101130210132233",
    "spider": "&#xf14a;&#xf17b;&#xf24a;&#xf16f;&#xf24a;&#xf145;&#xf16f;&#xf24a;&#xf209;&#xf24b;",
    "stanza": 1785
  },
  {
    "role": "code",
    "lines": [
      "= (test-this x get) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test-this",
        "x",
        "get"
      ],
      "5"
    ],
    "code": "12113212110110111312101011312111101330210132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf17b;&#xf24a;&#xf16f;&#xf24a;&#xf181;&#xf245;&#xf209;&#xf24b;",
    "stanza": 1786
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 $test-this;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      [
        -2,
        "test-this"
      ]
    ],
    "code": "1211000000131231211011000131231211011011132233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf249;&#xf14a;&#xf17b;&#xf24b;",
    "stanza": 1787
  },
  {
    "role": "code",
    "lines": [
      "= ((stack-pop $stack-test1) x get) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        [
          "stack-pop",
          [
            -2,
            "stack-test1"
          ]
        ],
        "x",
        "get"
      ],
      "5"
    ],
    "code": "1211322121100001113123121101100013312101011312111101330210132233",
    "spider": "&#xf147;&#xf246;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf16f;&#xf24a;&#xf181;&#xf245;&#xf209;&#xf24b;",
    "stanza": 1788
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 $test-this;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      [
        -2,
        "test-this"
      ]
    ],
    "code": "1211000000131231211011000131231211011011132233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf249;&#xf14a;&#xf17b;&#xf24b;",
    "stanza": 1789
  },
  {
    "role": "code",
    "lines": [
      "test-jvm astore 0;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "astore",
      "0"
    ],
    "code": "12110110101312110000101302032233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1790
  },
  {
    "role": "code",
    "lines": [
      "test-jvm aload 0;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "aload",
      "0"
    ],
    "code": "12110110101312110001000302032233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1791
  },
  {
    "role": "code",
    "lines": [
      "test-jvm getfield x $int;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "getfield",
      "x",
      [
        -2,
        "int"
      ]
    ],
    "code": "1211011010131211000111031210101131231211000032233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf16f;&#xf249;&#xf174;&#xf24b;",
    "stanza": 1792
  },
  {
    "role": "code",
    "lines": [
      "= (stack-pop $stack-test1) 5;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "stack-pop",
        [
          -2,
          "stack-test1"
        ]
      ],
      "5"
    ],
    "code": "12113212110000111312312110110001330210132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf14b;&#xf249;&#xf14a;&#xf175;&#xf245;&#xf209;&#xf24b;",
    "stanza": 1793
  },
  {
    "role": "code",
    "lines": [
      "test-jvm aload 0;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "aload",
      "0"
    ],
    "code": "12110110101312110001000302032233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1794
  },
  {
    "role": "code",
    "lines": [
      "test-jvm iconst 15;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "iconst",
      "15"
    ],
    "code": "12110110101312110001010302111132233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf213;&#xf24b;",
    "stanza": 1795
  },
  {
    "role": "code",
    "lines": [
      "test-jvm putfield y $int;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "putfield",
      "y",
      [
        -2,
        "int"
      ]
    ],
    "code": "1211011010131211001000031211010031231211000032233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf178;&#xf249;&#xf174;&#xf24b;",
    "stanza": 1796
  },
  {
    "role": "code",
    "lines": [
      "= (test-this y get) 15;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test-this",
        "y",
        "get"
      ],
      "15"
    ],
    "code": "121132121101101113121101003121111013302111132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf17b;&#xf24a;&#xf178;&#xf24a;&#xf181;&#xf245;&#xf213;&#xf24b;",
    "stanza": 1797
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 7;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "7"
    ],
    "code": "1211000000131231211011000130211132233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf20b;&#xf24b;",
    "stanza": 1798
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 10;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "10"
    ],
    "code": "12110000001312312110110001302101032233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 1799
  },
  {
    "role": "code",
    "lines": [
      "test-jvm imul;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "imul"
    ],
    "code": "1211011010131211001000132233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf155;&#xf24b;",
    "stanza": 1800
  },
  {
    "role": "code",
    "lines": [
      "test-jvm ireturn;"
    ],
    "dt": false,
    "parse": [
      "test-jvm",
      "ireturn"
    ],
    "code": "1211011010131211010011132233",
    "spider": "&#xf14a;&#xf179;&#xf24a;&#xf14a;&#xf16b;&#xf24b;",
    "stanza": 1801
  },
  {
    "role": "code",
    "lines": [
      "= (ret-test1 get) 70;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "ret-test1",
        "get"
      ],
      "70"
    ],
    "code": "121132121101101003121111013302100011032233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf178;&#xf24a;&#xf181;&#xf245;&#xf205;&#xf20a;&#xf24b;",
    "stanza": 1802
  },
  {
    "role": "code",
    "lines": [
      "define state-machine-helper | ? at |",
      "  lambda (vars stack machine) |",
      "  let ((pc | cell new $at)",
      "       (ret | cell new $true)) |",
      "  let ((jvm | jvm-maker $vars $stack $pc $ret)) |",
      "  begin",
      "    (machine $jvm | pc get)",
      "    (if (= (pc get) $minus-one) (ret get) |",
      "      state-machine-helper (pc get) $vars $stack $machine);"
    ],
    "dt": true,
    "parse": [
      "@",
      "state-machine-helper",
      [
        -1,
        "?",
        "at",
        [
          -1,
          "lambda",
          [
            "vars",
            "stack",
            "machine"
          ],
          [
            -1,
            "let",
            [
              [
                "pc",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -2,
                    "at"
                  ]
                ]
              ],
              [
                "ret",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -2,
                    "true"
                  ]
                ]
              ]
            ],
            [
              -1,
              "let",
              [
                [
                  "jvm",
                  [
                    -1,
                    "jvm-maker",
                    [
                      -2,
                      "vars"
                    ],
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -2,
                      "pc"
                    ],
                    [
                      -2,
                      "ret"
                    ]
                  ]
                ]
              ],
              [
                -1,
                "begin",
                [
                  "machine",
                  [
                    -2,
                    "jvm"
                  ],
                  [
                    -1,
                    "pc",
                    "get"
                  ]
                ],
                [
                  "if",
                  [
                    "=",
                    [
                      "pc",
                      "get"
                    ],
                    [
                      -2,
                      "minus-one"
                    ]
                  ],
                  [
                    "ret",
                    "get"
                  ],
                  [
                    -1,
                    "state-machine-helper",
                    [
                      "pc",
                      "get"
                    ],
                    [
                      -2,
                      "vars"
                    ],
                    [
                      -2,
                      "stack"
                    ],
                    [
                      -2,
                      "machine"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121101110003023121100312110111001302312110103212101111100312101111101312110111010330231211001003221210111111030231210010131210011110312312110111001332121000000302312100101312100111103123121333023121100100322121101110113023121011110113123121011111003123121011111013123121011111103123121000000333023121001011321211011101031231211011101130231210111111031211110133212111132121132121011111103121111013312312101111010332121000000312111101330231211011100032121011111103121111013312312101111100312312101111101312312110111010332233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf17c;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17d;&#xf248;&#xf15e;&#xf246;&#xf149;&#xf180;&#xf24a;&#xf149;&#xf181;&#xf24a;&#xf14a;&#xf17e;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf182;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf14a;&#xf17d;&#xf245;&#xf246;&#xf145;&#xf144;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf145;&#xf245;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf14a;&#xf17f;&#xf248;&#xf149;&#xf17f;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf249;&#xf149;&#xf182;&#xf249;&#xf145;&#xf144;&#xf245;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf14a;&#xf17e;&#xf249;&#xf14a;&#xf17f;&#xf248;&#xf149;&#xf182;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf153;&#xf246;&#xf147;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf149;&#xf17e;&#xf245;&#xf246;&#xf145;&#xf144;&#xf24a;&#xf181;&#xf245;&#xf248;&#xf14a;&#xf17c;&#xf246;&#xf149;&#xf182;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf249;&#xf14a;&#xf17e;&#xf245;&#xf24b;",
    "stanza": 1803
  },
  {
    "role": "code",
    "lines": [
      "define state-machine | state-machine-helper 0;"
    ],
    "dt": true,
    "parse": [
      "@",
      "state-machine",
      [
        -1,
        "state-machine-helper",
        "0"
      ]
    ],
    "code": "121101312110111100302312110111000302032233",
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf180;&#xf248;&#xf14a;&#xf17c;&#xf24a;&#xf204;&#xf24b;",
    "stanza": 1804
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 10;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "10"
    ],
    "code": "12110000001312312110110001302101032233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 1805
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 33;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "33"
    ],
    "code": "1211000000131231211011000130210000132233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf225;&#xf24b;",
    "stanza": 1806
  },
  {
    "role": "code",
    "lines": [
      "= 33 | state-machine $vars-test1 $stack-test1 | ? jvm | ? x |",
      "  cond",
      "    ((= $x 0) | jvm istore 4)",
      "    ((= $x 1) | jvm iload 4)",
      "    (jvm ireturn);"
    ],
    "dt": false,
    "parse": [
      "=",
      "33",
      [
        -1,
        "state-machine",
        [
          -2,
          "vars-test1"
        ],
        [
          -2,
          "stack-test1"
        ],
        [
          -1,
          "?",
          "jvm",
          [
            -1,
            "?",
            "x",
            [
              -1,
              "cond",
              [
                [
                  "=",
                  [
                    -2,
                    "x"
                  ],
                  "0"
                ],
                [
                  -1,
                  "jvm",
                  "istore",
                  "4"
                ]
              ],
              [
                [
                  "=",
                  [
                    -2,
                    "x"
                  ],
                  "1"
                ],
                [
                  -1,
                  "jvm",
                  "iload",
                  "4"
                ]
              ],
              [
                "jvm",
                "ireturn"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12113021000013023121101111003123121101100103123121101100013023121100312110111011302312110031210101130231210000100322121131231210101130203302312110111011312110000110302100332212113123121010113021330231211011101131211000100130210033212110111011312110100111332233",
    "spider": "&#xf147;&#xf24a;&#xf225;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf14a;&#xf176;&#xf249;&#xf14a;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf24b;",
    "stanza": 1807
  },
  {
    "role": "code",
    "lines": [
      "stack-push $stack-test1 10;"
    ],
    "dt": false,
    "parse": [
      "stack-push",
      [
        -2,
        "stack-test1"
      ],
      "10"
    ],
    "code": "12110000001312312110110001302101032233",
    "spider": "&#xf14a;&#xf145;&#xf249;&#xf14a;&#xf175;&#xf24a;&#xf20e;&#xf24b;",
    "stanza": 1808
  },
  {
    "role": "code",
    "lines": [
      "define bytecode-test-mul | lambda (arg0 arg1) |",
      "  let ((vars | cell new | make-hash | vector (pair 0 0) (pair 1 $arg0) (pair 2 $arg1))",
      "       (stack | cell new | vector)) |",
      "  state-machine $vars $stack | ? jvm | ? x | cond",
      "    ((= (x) 0) | jvm iload 1)",
      "    ((= (x) 1) | jvm iload 2)",
      "    ((= (x) 2) | jvm imul)",
      "    ((= (x) 3) | jvm ireturn)",
      "    (jvm return);"
    ],
    "dt": true,
    "parse": [
      "@",
      "bytecode-test-mul",
      [
        -1,
        "lambda",
        [
          "arg0",
          "arg1"
        ],
        [
          -1,
          "let",
          [
            [
              "vars",
              [
                -1,
                "cell",
                "new",
                [
                  -1,
                  "make-hash",
                  [
                    -1,
                    "vector",
                    [
                      "list:2",
                      "0",
                      "0"
                    ],
                    [
                      "list:2",
                      "1",
                      [
                        -2,
                        "arg0"
                      ]
                    ],
                    [
                      "list:2",
                      "2",
                      [
                        -2,
                        "arg1"
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              "stack",
              [
                -1,
                "cell",
                "new",
                [
                  -1,
                  "vector"
                ]
              ]
            ]
          ],
          [
            -1,
            "state-machine",
            [
              -2,
              "vars"
            ],
            [
              -2,
              "stack"
            ],
            [
              -1,
              "?",
              "jvm",
              [
                -1,
                "?",
                "x",
                [
                  -1,
                  "cond",
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "0"
                    ],
                    [
                      -1,
                      "jvm",
                      "iload",
                      "1"
                    ]
                  ],
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "1"
                    ],
                    [
                      -1,
                      "jvm",
                      "iload",
                      "2"
                    ]
                  ],
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "2"
                    ],
                    [
                      -1,
                      "jvm",
                      "imul"
                    ]
                  ],
                  [
                    [
                      "=",
                      [
                        "x"
                      ],
                      "3"
                    ],
                    [
                      -1,
                      "jvm",
                      "ireturn"
                    ]
                  ],
                  [
                    "jvm",
                    "return"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf14a;&#xf181;&#xf248;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf155;&#xf245;&#xf246;&#xf246;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf24b;",
    "stanza": 1809
  },
  {
    "role": "code",
    "lines": [
      "= (bytecode-test-mul 5 9) 45;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "bytecode-test-mul",
        "5",
        "9"
      ],
      "45"
    ],
    "code": "121132121101111013021013021001330210110132233",
    "spider": "&#xf147;&#xf246;&#xf14a;&#xf181;&#xf24a;&#xf209;&#xf24a;&#xf20d;&#xf245;&#xf231;&#xf24b;",
    "stanza": 1810
  },
  {
    "role": "file",
    "lines": [
      "== COS_JavaTest =="
    ],
    "stanza": 1811
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# public class COS_JavaTest {",
      "#     private int q = 0;",
      "#     public int add(int x, int y) {",
      "#     return x + y;",
      "#     }",
      "#     public int sub(int x, int y) {",
      "#     return x - y;",
      "#     }",
      "#     public int mult(int x, int y) {",
      "#     return x * y;",
      "#     }",
      "#     public int addmult(int x, int y, int z) {",
      "#     return add(x, mult(y, z));",
      "#     }",
      "#     public void set(int x) {",
      "#     q = x;",
      "#     }",
      "#     public int get() {",
      "#     return q;",
      "#     }",
      "#     public int fact(int x) {",
      "#     return ( x> 0) ? (x * fact(sub(x, 1))) : 1;",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JavaTest'",
    "section_category": "JAVA",
    "section_index": 56,
    "stanza": 1812
  },
  {
    "role": "code",
    "lines": [
      "class COS_JavaTest ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field q | (int) new)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm iconst 0)",
      "         ((= $x 4) | jvm putfield q $int)",
      "         ((= $x 5) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method add-I-I-I",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm iload 2)",
      "         ((= $x 2) | jvm iadd)",
      "         ((= $x 3) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method add | self add-I-I-I)",
      "",
      "   (method sub-I-I-I",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm iload 2)",
      "         ((= $x 2) | jvm isub)",
      "         ((= $x 3) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method sub | self sub-I-I-I)",
      "",
      "   (method mult-I-I-I",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm iload 2)",
      "         ((= $x 2) | jvm imul)",
      "         ((= $x 3) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method mult | self mult-I-I-I)",
      "",
      "   (method addmult-I-I-I-I",
      "     (lambda (arg0 arg1 arg2) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1) (pair 3 $arg2))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm iload 1)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm iload 2)",
      "         ((= $x 4) | jvm iload 3)",
      "         ((= $x 5) | jvm invokevirtual mult-I-I-I 2 1)",
      "         ((= $x 6) | jvm invokevirtual add-I-I-I 2 1)",
      "         ((= $x 7) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method addmult | self addmult-I-I-I-I)",
      "",
      "   (method set-I-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm iload 1)",
      "         ((= $x 2) | jvm putfield q $int)",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method set | self set-I-V)",
      "",
      "   (method get-I",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield q $int)",
      "         ((= $x 2) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method get | self get-I)",
      "",
      "   (method fact-I-I",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm iload 1)",
      "         ((= $x 1) | jvm ifle 11)",
      "         ((= $x 2) | jvm iload 1)",
      "         ((= $x 3) | jvm aload 0)",
      "         ((= $x 4) | jvm aload 0)",
      "         ((= $x 5) | jvm iload 1)",
      "         ((= $x 6) | jvm iconst 1)",
      "         ((= $x 7) | jvm invokevirtual sub-I-I-I 2 1)",
      "         ((= $x 8) | jvm invokevirtual fact-I-I 1 1)",
      "         ((= $x 9) | jvm imul)",
      "         ((= $x 10) | jvm goto 12)",
      "         ((= $x 11) | jvm iconst 1)",
      "         ((= $x 12) | jvm ireturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method fact | self fact-I-I)",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JavaTest",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "q",
        [
          -1,
          [
            "int"
          ],
          "new"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "q",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "add-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "iadd"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "self",
          "add-I-I-I"
        ]
      ],
      [
        "method",
        "sub-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "isub"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "sub",
        [
          -1,
          "self",
          "sub-I-I-I"
        ]
      ],
      [
        "method",
        "mult-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "imul"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "mult",
        [
          -1,
          "self",
          "mult-I-I-I"
        ]
      ],
      [
        "method",
        "addmult-I-I-I-I",
        [
          "lambda",
          [
            "arg0",
            "arg1",
            "arg2"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ],
                      [
                        "list:2",
                        "3",
                        [
                          -2,
                          "arg2"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "mult-I-I-I",
                        "2",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-I-I-I",
                        "2",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "addmult",
        [
          -1,
          "self",
          "addmult-I-I-I-I"
        ]
      ],
      [
        "method",
        "set-I-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "q",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "set",
        [
          -1,
          "self",
          "set-I-V"
        ]
      ],
      [
        "method",
        "get-I",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "q",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "self",
          "get-I"
        ]
      ],
      [
        "method",
        "fact-I-I",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifle",
                        "11"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "sub-I-I-I",
                        "2",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "fact-I-I",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "imul"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "12"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "ireturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "fact",
        [
          -1,
          "self",
          "fact-I-I"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf144;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf147;&#xf248;&#xf246;&#xf174;&#xf245;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14b;&#xf147;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf148;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf158;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf15f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf148;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf149;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf159;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf14a;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf149;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf14b;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf155;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf14c;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf14b;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf14d;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf24a;&#xf14b;&#xf14e;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf246;&#xf182;&#xf206;&#xf207;&#xf249;&#xf14b;&#xf14e;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf14b;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf148;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf14f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf14d;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf150;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14b;&#xf147;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf150;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf151;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14b;&#xf147;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf151;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf152;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf15c;&#xf24a;&#xf20f;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf149;&#xf24a;&#xf206;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf152;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf155;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf15a;&#xf24a;&#xf210;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16b;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf153;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf152;&#xf245;&#xf24b;",
    "stanza": 1813
  },
  {
    "role": "file",
    "lines": [
      "== COS_JavaValidate =="
    ],
    "stanza": 1814
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "check that automatic conversion is workable",
    "section_category": "JAVA",
    "section_index": 57,
    "stanza": 1815
  },
  {
    "role": "code",
    "lines": [
      "define test1 | COS_JavaTest new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "test1",
      [
        -1,
        "COS_JavaTest",
        "new"
      ]
    ],
    "code": "1211013121110100003023121110000003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf154;&#xf248;&#xf14b;&#xf144;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1816
  },
  {
    "role": "comment",
    "lines": [
      "# Note that the names of methods include type information.",
      "# This could easily be removed, but is retained so that overloading",
      "# is possible in the Java code.",
      "# I is integer, V is void.  The last type in the name is the return type."
    ],
    "stanza": 1817
  },
  {
    "role": "code",
    "lines": [
      "= (test1 mult-I-I-I 15 10) 150;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test1",
        "mult-I-I-I",
        "15",
        "10"
      ],
      "150"
    ],
    "code": "121132121110100003121110001113021111302101033021001011032233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf14b;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf245;&#xf206;&#xf21a;&#xf24b;",
    "stanza": 1818
  },
  {
    "role": "comment",
    "lines": [
      "# The type information can be safely omitted if there is no ambiguity"
    ],
    "stanza": 1819
  },
  {
    "role": "code",
    "lines": [
      "= (test1 mult 15 10) 150;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test1",
        "mult",
        "15",
        "10"
      ],
      "150"
    ],
    "code": "121132121110100003121110010003021111302101033021001011032233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf14c;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf245;&#xf206;&#xf21a;&#xf24b;",
    "stanza": 1820
  },
  {
    "role": "code",
    "lines": [
      "= (test1 addmult-I-I-I-I 4 15 10) 154;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test1",
        "addmult-I-I-I-I",
        "4",
        "15",
        "10"
      ],
      "154"
    ],
    "code": "121132121110100003121110010013021003021111302101033021001101032233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf14d;&#xf24a;&#xf208;&#xf24a;&#xf213;&#xf24a;&#xf20e;&#xf245;&#xf206;&#xf21e;&#xf24b;",
    "stanza": 1821
  },
  {
    "role": "code",
    "lines": [
      "begin",
      "  (test1 set-I-V 87)",
      "  (= (test1 get-I) 87);"
    ],
    "dt": false,
    "parse": [
      "begin",
      [
        "test1",
        "set-I-V",
        "87"
      ],
      [
        "=",
        [
          "test1",
          "get-I"
        ],
        "87"
      ]
    ],
    "code": "121001011321211101000031211100110030210101113321211321211101000031211100110133021010111332233",
    "spider": "&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf150;&#xf24a;&#xf205;&#xf21b;&#xf245;&#xf246;&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf151;&#xf245;&#xf205;&#xf21b;&#xf245;&#xf24b;",
    "stanza": 1822
  },
  {
    "role": "code",
    "lines": [
      "= (test1 fact-I-I 0) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test1",
        "fact-I-I",
        "0"
      ],
      "1"
    ],
    "code": "1211321211101000031211100111030203302132233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf152;&#xf24a;&#xf204;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1823
  },
  {
    "role": "code",
    "lines": [
      "= (test1 fact-I-I 1) 1;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test1",
        "fact-I-I",
        "1"
      ],
      "1"
    ],
    "code": "1211321211101000031211100111030213302132233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf152;&#xf24a;&#xf205;&#xf245;&#xf205;&#xf24b;",
    "stanza": 1824
  },
  {
    "role": "code",
    "lines": [
      "= (test1 fact-I-I 5) 120;"
    ],
    "dt": false,
    "parse": [
      "=",
      [
        "test1",
        "fact-I-I",
        "5"
      ],
      "120"
    ],
    "code": "121132121110100003121110011103021013302111100032233",
    "spider": "&#xf147;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf152;&#xf24a;&#xf209;&#xf245;&#xf205;&#xf23c;&#xf24b;",
    "stanza": 1825
  },
  {
    "role": "comment",
    "lines": [
      "# Yay! testing says this works.",
      "# So structure for bytecode interpretation is in place.",
      "# Very few opcodes actually implemented yet though."
    ],
    "stanza": 1826
  },
  {
    "role": "file",
    "lines": [
      "== COS_Geo =="
    ],
    "stanza": 1827
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "another simple little text-adventure space",
    "section_category": "MUD",
    "section_index": 58,
    "stanza": 1828
  },
  {
    "role": "comment",
    "lines": [
      "# let us try to make a slightly more interesting world"
    ],
    "stanza": 1829
  },
  {
    "role": "code",
    "lines": [
      "define make-table | ? lst |",
      "   reduce",
      "     (? x | ? h |",
      "        assign name (car $x) |",
      "    assign obj (cdr $x) |",
      "    hash-add $h $name $obj)",
      "     (append $hash-null $lst);"
    ],
    "dt": true,
    "parse": [
      "@",
      "make-table",
      [
        -1,
        "?",
        "lst",
        [
          -1,
          "reduce",
          [
            "?",
            "x",
            [
              -1,
              "?",
              "h",
              [
                -1,
                "assign",
                "name",
                [
                  "cons:0",
                  [
                    -2,
                    "x"
                  ]
                ],
                [
                  -1,
                  "assign",
                  "obj",
                  [
                    "cons:1",
                    [
                      -2,
                      "x"
                    ]
                  ],
                  [
                    -1,
                    "hash-add",
                    [
                      -2,
                      "h"
                    ],
                    [
                      -2,
                      "name"
                    ],
                    [
                      -2,
                      "obj"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "append",
            [
              -2,
              "hash-null"
            ],
            [
              -2,
              "lst"
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211101000130231211003121010001302312100101032121100312101011302312110031210001111030231211103121010110132121210101302033123121010113302312111031210001101321212101013021331231210101133023121101101312312100011110312312101011013123121000110133212101000031231211100003123121010001332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf155;&#xf248;&#xf150;&#xf24a;&#xf145;&#xf155;&#xf248;&#xf145;&#xf14e;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf150;&#xf24a;&#xf148;&#xf162;&#xf248;&#xf152;&#xf24a;&#xf146;&#xf171;&#xf246;&#xf159;&#xf204;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf146;&#xf151;&#xf246;&#xf159;&#xf205;&#xf249;&#xf16f;&#xf245;&#xf248;&#xf145;&#xf171;&#xf249;&#xf148;&#xf162;&#xf249;&#xf146;&#xf171;&#xf249;&#xf146;&#xf151;&#xf245;&#xf246;&#xf145;&#xf154;&#xf249;&#xf145;&#xf174;&#xf249;&#xf145;&#xf155;&#xf245;&#xf24b;",
    "stanza": 1830
  },
  {
    "role": "comment",
    "lines": [
      "# note, the quoted strings below are just represented as a big number,",
      "# nothing special"
    ],
    "stanza": 1831
  },
  {
    "role": "code",
    "lines": [
      "define geo-map | make-table | map",
      "   (? name | cons $name | room new $name)",
      "   (vector \"boston\" \"dublin\" \"paris\" \"genoa\");"
    ],
    "dt": true,
    "parse": [
      "@",
      "geo-map",
      [
        -1,
        "make-table",
        [
          -1,
          "map",
          [
            "?",
            "name",
            [
              -1,
              "cons",
              [
                -2,
                "name"
              ],
              [
                -1,
                "room",
                "new",
                [
                  -2,
                  "name"
                ]
              ]
            ]
          ],
          [
            "vector",
            "\"boston\"",
            "\"dublin\"",
            "\"paris\"",
            "\"genoa\""
          ]
        ]
      ]
    ],
    "code": "1211013121110100103023121110100013023121001001321211003121010110130231210101312312101011013023121100010031210011110312312101011013321210000302001000100110001001101111011100110111010001101111011011100010001030200100010011001000111010101100010011011000110100101101110001000103020010001001110000011000010111001001101001011100110010001030200100010011001110110010101101110011011110110000100100010332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf156;&#xf248;&#xf14b;&#xf155;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf146;&#xf171;&#xf248;&#xf159;&#xf249;&#xf146;&#xf171;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf146;&#xf171;&#xf245;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf245;&#xf24b;",
    "stanza": 1832
  },
  {
    "role": "code",
    "lines": [
      "define my-links | map",
      "   (? entry |",
      "     assign src (car $entry) |",
      "     assign dest (cdr $entry) |",
      "     door new (geo-map $src) (geo-map $dest))",
      "   (vector",
      "    (cons \"boston\" \"dublin\")",
      "    (cons \"dublin\" \"paris\")",
      "    (cons \"boston\" \"paris\")",
      "    (cons \"paris\" \"genoa\"));"
    ],
    "dt": true,
    "parse": [
      "@",
      "my-links",
      [
        -1,
        "map",
        [
          "?",
          "entry",
          [
            -1,
            "assign",
            "src",
            [
              "cons:0",
              [
                -2,
                "entry"
              ]
            ],
            [
              -1,
              "assign",
              "dest",
              [
                "cons:1",
                [
                  -2,
                  "entry"
                ]
              ],
              [
                -1,
                "door",
                "new",
                [
                  "geo-map",
                  [
                    -2,
                    "src"
                  ]
                ],
                [
                  "geo-map",
                  [
                    -2,
                    "dest"
                  ]
                ]
              ]
            ]
          ]
        ],
        [
          "vector",
          [
            "cons",
            "\"boston\"",
            "\"dublin\""
          ],
          [
            "cons",
            "\"dublin\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"boston\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"paris\"",
            "\"genoa\""
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf157;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf14b;&#xf158;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf147;&#xf246;&#xf159;&#xf204;&#xf249;&#xf14b;&#xf158;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf149;&#xf246;&#xf159;&#xf205;&#xf249;&#xf14b;&#xf158;&#xf245;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf14b;&#xf156;&#xf249;&#xf147;&#xf147;&#xf245;&#xf246;&#xf14b;&#xf156;&#xf249;&#xf147;&#xf149;&#xf245;&#xf245;&#xf246;&#xf154;&#xf246;&#xf159;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1833
  },
  {
    "role": "code",
    "lines": [
      "define myrobo | robo new;"
    ],
    "dt": true,
    "parse": [
      "@",
      "myrobo",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "code": "12110131211101001302312111000003121001111032233",
    "spider": "&#xf151;&#xf24a;&#xf147;&#xf16d;&#xf248;&#xf147;&#xf164;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1834
  },
  {
    "role": "code",
    "lines": [
      "myrobo set-room | geo-map \"dublin\";"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "set-room",
      [
        -1,
        "geo-map",
        "\"dublin\""
      ]
    ],
    "code": "121110100131211010101302312111010010302001000100110010001110101011000100110110001101001011011100010001032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf159;&#xf248;&#xf14b;&#xf156;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf24b;",
    "stanza": 1835
  },
  {
    "role": "code",
    "lines": [
      "equal \"dublin\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"dublin\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "121000100302001000100110010001110101011000100110110001101001011011100010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1836
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "update"
    ],
    "code": "12111010013121101101032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1837
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "1210001003020010001001110000011000010111001001101001011100110010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1838
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "update"
    ],
    "code": "12111010013121101101032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1839
  },
  {
    "role": "code",
    "lines": [
      "equal \"genoa\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"genoa\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "1210001003020010001001100111011001010110111001101111011000010010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1840
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "update"
    ],
    "code": "12111010013121101101032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1841
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "1210001003020010001001110000011000010111001001101001011100110010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1842
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "update"
    ],
    "code": "12111010013121101101032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1843
  },
  {
    "role": "code",
    "lines": [
      "equal \"boston\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"boston\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "121000100302001000100110001001101111011100110111010001101111011011100010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1844
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "update"
    ],
    "code": "12111010013121101101032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1845
  },
  {
    "role": "code",
    "lines": [
      "equal \"dublin\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"dublin\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "121000100302001000100110010001110101011000100110110001101001011011100010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1846
  },
  {
    "role": "code",
    "lines": [
      "myrobo update;"
    ],
    "dt": false,
    "parse": [
      "myrobo",
      "update"
    ],
    "code": "12111010013121101101032233",
    "spider": "&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1847
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | myrobo get-room name;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "myrobo",
        "get-room",
        "name"
      ]
    ],
    "code": "1210001003020010001001110000011000010111001001101001011100110010001030231211101001312110101113121010110132233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf248;&#xf147;&#xf16d;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf24b;",
    "lines_original": [
      "demo | myrobo get-room name;"
    ],
    "stanza": 1848
  },
  {
    "role": "comment",
    "lines": [
      "# all characters should update together"
    ],
    "stanza": 1849
  },
  {
    "role": "code",
    "lines": [
      "class world (the-places the-links)",
      "   (field things | container new)",
      "   (field names | cell new $hash-null)",
      "   (field places | cell new 0)",
      "   (field links | cell new 0)",
      "   (method new | begin",
      "     (places set | make-table | map",
      "        (? name | cons $name | room new $name)",
      "    $the-places)",
      "     (links set | map",
      "        (? entry |",
      "          assign src (car $entry) |",
      "          assign dest (cdr $entry) |",
      "          door new (places get $src) (places get $dest))",
      "        $the-links))",
      "   (method add | lambda (place name val) | begin",
      "     (val set-room | places get $place)",
      "     (val set-name $name)",
      "     (names set | hash-add (names get) $name $val)",
      "     (things add $val))",
      "   (method find | ? n  | names get $n get-room name)",
      "   (method reachable | ? place |",
      "     assign exits (select-match (instanceof door) | places get $place inventory) |",
      "     map (? door | door access-from (places get $place) name) $exits)",
      "   (method update | begin ",
      "     (map (? x | x update) | things inventory)",
      "     $true);"
    ],
    "dt": true,
    "parse": [
      "class",
      "world",
      [
        "the-places",
        "the-links"
      ],
      [
        "field",
        "things",
        [
          -1,
          "container",
          "new"
        ]
      ],
      [
        "field",
        "names",
        [
          -1,
          "cell",
          "new",
          [
            -2,
            "hash-null"
          ]
        ]
      ],
      [
        "field",
        "places",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "links",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "begin",
          [
            "places",
            "set",
            [
              -1,
              "make-table",
              [
                -1,
                "map",
                [
                  "?",
                  "name",
                  [
                    -1,
                    "cons",
                    [
                      -2,
                      "name"
                    ],
                    [
                      -1,
                      "room",
                      "new",
                      [
                        -2,
                        "name"
                      ]
                    ]
                  ]
                ],
                [
                  -2,
                  "the-places"
                ]
              ]
            ]
          ],
          [
            "links",
            "set",
            [
              -1,
              "map",
              [
                "?",
                "entry",
                [
                  -1,
                  "assign",
                  "src",
                  [
                    "cons:0",
                    [
                      -2,
                      "entry"
                    ]
                  ],
                  [
                    -1,
                    "assign",
                    "dest",
                    [
                      "cons:1",
                      [
                        -2,
                        "entry"
                      ]
                    ],
                    [
                      -1,
                      "door",
                      "new",
                      [
                        "places",
                        "get",
                        [
                          -2,
                          "src"
                        ]
                      ],
                      [
                        "places",
                        "get",
                        [
                          -2,
                          "dest"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                -2,
                "the-links"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "lambda",
          [
            "place",
            "name",
            "val"
          ],
          [
            -1,
            "begin",
            [
              "val",
              "set-room",
              [
                -1,
                "places",
                "get",
                [
                  -2,
                  "place"
                ]
              ]
            ],
            [
              "val",
              "set-name",
              [
                -2,
                "name"
              ]
            ],
            [
              "names",
              "set",
              [
                -1,
                "hash-add",
                [
                  "names",
                  "get"
                ],
                [
                  -2,
                  "name"
                ],
                [
                  -2,
                  "val"
                ]
              ]
            ],
            [
              "things",
              "add",
              [
                -2,
                "val"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "find",
        [
          -1,
          "?",
          "n",
          [
            -1,
            "names",
            "get",
            [
              -2,
              "n"
            ],
            "get-room",
            "name"
          ]
        ]
      ],
      [
        "method",
        "reachable",
        [
          -1,
          "?",
          "place",
          [
            -1,
            "assign",
            "exits",
            [
              "select-match",
              [
                "instanceof",
                "door"
              ],
              [
                -1,
                "places",
                "get",
                [
                  -2,
                  "place"
                ],
                "inventory"
              ]
            ],
            [
              -1,
              "map",
              [
                "?",
                "door",
                [
                  -1,
                  "door",
                  "access-from",
                  [
                    "places",
                    "get",
                    [
                      -2,
                      "place"
                    ]
                  ],
                  "name"
                ]
              ],
              [
                -2,
                "exits"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "begin",
          [
            "map",
            [
              "?",
              "x",
              [
                -1,
                "x",
                "update"
              ]
            ],
            [
              -1,
              "things",
              "inventory"
            ]
          ],
          [
            -2,
            "true"
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf159;&#xf246;&#xf14b;&#xf15a;&#xf24a;&#xf14b;&#xf15b;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf15c;&#xf248;&#xf146;&#xf15c;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf15d;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf145;&#xf174;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf15e;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf15f;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf15e;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf14b;&#xf155;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf146;&#xf171;&#xf248;&#xf159;&#xf249;&#xf146;&#xf171;&#xf248;&#xf147;&#xf148;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf146;&#xf171;&#xf245;&#xf249;&#xf14b;&#xf15a;&#xf245;&#xf246;&#xf14b;&#xf15f;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf14b;&#xf158;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf147;&#xf246;&#xf159;&#xf204;&#xf249;&#xf14b;&#xf158;&#xf245;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf149;&#xf246;&#xf159;&#xf205;&#xf249;&#xf14b;&#xf158;&#xf245;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf14b;&#xf15e;&#xf24a;&#xf181;&#xf249;&#xf147;&#xf147;&#xf245;&#xf246;&#xf14b;&#xf15e;&#xf24a;&#xf181;&#xf249;&#xf147;&#xf149;&#xf245;&#xf245;&#xf249;&#xf14b;&#xf15b;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf15f;&#xf248;&#xf15e;&#xf246;&#xf14b;&#xf160;&#xf24a;&#xf146;&#xf171;&#xf24a;&#xf14a;&#xf150;&#xf245;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf14a;&#xf150;&#xf24a;&#xf147;&#xf159;&#xf248;&#xf14b;&#xf15e;&#xf24a;&#xf181;&#xf249;&#xf14b;&#xf160;&#xf245;&#xf246;&#xf14a;&#xf150;&#xf24a;&#xf147;&#xf15c;&#xf249;&#xf146;&#xf171;&#xf245;&#xf246;&#xf14b;&#xf15d;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf145;&#xf171;&#xf246;&#xf14b;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf249;&#xf146;&#xf171;&#xf249;&#xf14a;&#xf150;&#xf245;&#xf246;&#xf14b;&#xf15c;&#xf24a;&#xf146;&#xf15f;&#xf249;&#xf14a;&#xf150;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf150;&#xf248;&#xf150;&#xf24a;&#xf183;&#xf248;&#xf14b;&#xf15d;&#xf24a;&#xf181;&#xf249;&#xf183;&#xf24a;&#xf147;&#xf15b;&#xf24a;&#xf146;&#xf171;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf161;&#xf248;&#xf150;&#xf24a;&#xf14b;&#xf160;&#xf248;&#xf152;&#xf24a;&#xf147;&#xf167;&#xf246;&#xf145;&#xf156;&#xf246;&#xf146;&#xf14d;&#xf24a;&#xf147;&#xf146;&#xf245;&#xf248;&#xf14b;&#xf15e;&#xf24a;&#xf181;&#xf249;&#xf14b;&#xf160;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf248;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf147;&#xf146;&#xf248;&#xf147;&#xf146;&#xf24a;&#xf147;&#xf14a;&#xf246;&#xf14b;&#xf15e;&#xf24a;&#xf181;&#xf249;&#xf14b;&#xf160;&#xf245;&#xf146;&#xf171;&#xf245;&#xf249;&#xf147;&#xf167;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15e;&#xf248;&#xf145;&#xf14f;&#xf246;&#xf145;&#xf14d;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf16f;&#xf24a;&#xf147;&#xf15e;&#xf245;&#xf248;&#xf14b;&#xf15c;&#xf24a;&#xf146;&#xf15e;&#xf245;&#xf249;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1850
  },
  {
    "role": "code",
    "lines": [
      "define geo-world | world new",
      "   (vector \"boston\" \"dublin\" \"paris\" \"genoa\")",
      "     (vector",
      "       (cons \"boston\" \"dublin\")",
      "       (cons \"dublin\" \"paris\")",
      "       (cons \"boston\" \"paris\")",
      "       (cons \"paris\" \"genoa\"));"
    ],
    "dt": true,
    "parse": [
      "@",
      "geo-world",
      [
        -1,
        "world",
        "new",
        [
          "vector",
          "\"boston\"",
          "\"dublin\"",
          "\"paris\"",
          "\"genoa\""
        ],
        [
          "vector",
          [
            "cons",
            "\"boston\"",
            "\"dublin\""
          ],
          [
            "cons",
            "\"dublin\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"boston\"",
            "\"paris\""
          ],
          [
            "cons",
            "\"paris\"",
            "\"genoa\""
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf162;&#xf248;&#xf14b;&#xf159;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf154;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf245;&#xf246;&#xf154;&#xf246;&#xf159;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf246;&#xf159;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1851
  },
  {
    "role": "code",
    "lines": [
      "geo-world add \"dublin\" \"robo1\" | robo new;"
    ],
    "dt": false,
    "parse": [
      "geo-world",
      "add",
      "\"dublin\"",
      "\"robo1\"",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "code": "1211101111031210011011302001000100110010001110101011000100110110001101001011011100010001030200100010011100100110111101100010011011110011000100100010302312111000003121001111032233",
    "spider": "&#xf14b;&#xf162;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf22a;&#xf241;&#xf226;&#xf21f;&#xf237;&#xf208;&#xf226;&#xf248;&#xf147;&#xf164;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1852
  },
  {
    "role": "code",
    "lines": [
      "geo-world add \"genoa\" \"robo2\" | robo new;"
    ],
    "dt": false,
    "parse": [
      "geo-world",
      "add",
      "\"genoa\"",
      "\"robo2\"",
      [
        -1,
        "robo",
        "new"
      ]
    ],
    "code": "12111011110312100110113020010001001100111011001010110111001101111011000010010001030200100010011100100110111101100010011011110011001000100010302312111000003121001111032233",
    "spider": "&#xf14b;&#xf162;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf22a;&#xf241;&#xf226;&#xf21f;&#xf237;&#xf20c;&#xf226;&#xf248;&#xf147;&#xf164;&#xf24a;&#xf146;&#xf162;&#xf24b;",
    "stanza": 1853
  },
  {
    "role": "code",
    "lines": [
      "equal \"dublin\" | geo-world find \"robo1\";"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"dublin\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo1\""
      ]
    ],
    "code": "121000100302001000100110010001110101011000100110110001101001011011100010001030231211101111031210011003020010001001110010011011110110001001101111001100010010001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf248;&#xf14b;&#xf162;&#xf24a;&#xf145;&#xf150;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf22a;&#xf241;&#xf226;&#xf21f;&#xf237;&#xf208;&#xf226;&#xf24b;",
    "lines_original": [
      "demo | geo-world find \"robo1\";"
    ],
    "stanza": 1854
  },
  {
    "role": "code",
    "lines": [
      "equal \"genoa\" | geo-world find \"robo2\";"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"genoa\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo2\""
      ]
    ],
    "code": "1210001003020010001001100111011001010110111001101111011000010010001030231211101111031210011003020010001001110010011011110110001001101111001100100010001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf248;&#xf14b;&#xf162;&#xf24a;&#xf145;&#xf150;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf22a;&#xf241;&#xf226;&#xf21f;&#xf237;&#xf20c;&#xf226;&#xf24b;",
    "lines_original": [
      "demo | geo-world find \"robo2\";"
    ],
    "stanza": 1855
  },
  {
    "role": "code",
    "lines": [
      "geo-world update;"
    ],
    "dt": false,
    "parse": [
      "geo-world",
      "update"
    ],
    "code": "121110111103121101101032233",
    "spider": "&#xf14b;&#xf162;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1856
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | geo-world find \"robo1\";"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo1\""
      ]
    ],
    "code": "1210001003020010001001110000011000010111001001101001011100110010001030231211101111031210011003020010001001110010011011110110001001101111001100010010001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf248;&#xf14b;&#xf162;&#xf24a;&#xf145;&#xf150;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf22a;&#xf241;&#xf226;&#xf21f;&#xf237;&#xf208;&#xf226;&#xf24b;",
    "lines_original": [
      "demo | geo-world find \"robo1\";"
    ],
    "stanza": 1857
  },
  {
    "role": "code",
    "lines": [
      "equal \"paris\" | geo-world find \"robo2\";"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"paris\"",
      [
        -1,
        "geo-world",
        "find",
        "\"robo2\""
      ]
    ],
    "code": "1210001003020010001001110000011000010111001001101001011100110010001030231211101111031210011003020010001001110010011011110110001001101111001100100010001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf248;&#xf14b;&#xf162;&#xf24a;&#xf145;&#xf150;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf22a;&#xf241;&#xf226;&#xf21f;&#xf237;&#xf20c;&#xf226;&#xf24b;",
    "lines_original": [
      "demo | geo-world find \"robo2\";"
    ],
    "stanza": 1858
  },
  {
    "role": "code",
    "lines": [
      "equal (vector \"paris\" \"dublin\") | geo-world reachable \"boston\";"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        "\"paris\"",
        "\"dublin\""
      ],
      [
        -1,
        "geo-world",
        "reachable",
        "\"boston\""
      ]
    ],
    "code": "1210001003212100003020010001001110000011000010111001001101001011100110010001030200100010011001000111010101100010011011000110100101101110001000103302312111011110312111011101302001000100110001001101111011100110111010001101111011011100010001032233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf24a;&#xf206;&#xf20d;&#xf228;&#xf221;&#xf21a;&#xf20d;&#xf230;&#xf21e;&#xf21a;&#xf23c;&#xf226;&#xf245;&#xf248;&#xf14b;&#xf162;&#xf24a;&#xf14b;&#xf161;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24b;",
    "lines_original": [
      "demo | geo-world reachable \"boston\";"
    ],
    "stanza": 1859
  },
  {
    "role": "code",
    "lines": [
      "equal (vector \"paris\") | geo-world reachable \"genoa\";"
    ],
    "dt": false,
    "parse": [
      "equal",
      [
        "vector",
        "\"paris\""
      ],
      [
        -1,
        "geo-world",
        "reachable",
        "\"genoa\""
      ]
    ],
    "code": "1210001003212100003020010001001110000011000010111001001101001011100110010001033023121110111103121110111013020010001001100111011001010110111001101111011000010010001032233",
    "spider": "&#xf145;&#xf148;&#xf246;&#xf154;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf20a;&#xf209;&#xf236;&#xf21e;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf248;&#xf14b;&#xf162;&#xf24a;&#xf14b;&#xf161;&#xf24a;&#xf204;&#xf226;&#xf21d;&#xf23a;&#xf219;&#xf232;&#xf21f;&#xf23a;&#xf208;&#xf226;&#xf24b;",
    "lines_original": [
      "demo | geo-world reachable \"genoa\";"
    ],
    "stanza": 1860
  },
  {
    "role": "file",
    "lines": [
      "== COS_JList_impl =="
    ],
    "stanza": 1861
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "native implementation of a Java list, hash classes",
    "section_category": "JAVA",
    "section_index": 59,
    "stanza": 1862
  },
  {
    "role": "code",
    "lines": [
      "define flex-equals",
      "  (lambda (x y) ",
      "    (if (not | function? | x)",
      "    (if (not | function? | y)",
      "        (= (x) (y))",
      "        (false))",
      "    (if (not | function? | y)",
      "        (false)",
      "        (x equals (y)))));"
    ],
    "dt": true,
    "parse": [
      "@",
      "flex-equals",
      [
        "lambda",
        [
          "x",
          "y"
        ],
        [
          "if",
          [
            "not",
            [
              -1,
              "function?",
              [
                -1,
                "x"
              ]
            ]
          ],
          [
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -1,
                  "y"
                ]
              ]
            ],
            [
              "=",
              [
                "x"
              ],
              [
                "y"
              ]
            ],
            [
              "false"
            ]
          ],
          [
            "if",
            [
              "not",
              [
                -1,
                "function?",
                [
                  -1,
                  "y"
                ]
              ]
            ],
            [
              "false"
            ],
            [
              "x",
              "equals",
              [
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "12110131211101111132121101032121010113121101003321211113212101302312111013023121010113321211113212101302312111013023121101003321211321210101133212110100333212033321211113212101302312111013023121101003321203321210101131210101101132121101003333332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf163;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf246;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf248;&#xf16f;&#xf245;&#xf246;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf248;&#xf178;&#xf245;&#xf246;&#xf147;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf178;&#xf245;&#xf245;&#xf246;&#xf144;&#xf245;&#xf245;&#xf246;&#xf153;&#xf246;&#xf149;&#xf248;&#xf161;&#xf248;&#xf178;&#xf245;&#xf246;&#xf144;&#xf245;&#xf246;&#xf16f;&#xf24a;&#xf149;&#xf15f;&#xf246;&#xf178;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1863
  },
  {
    "role": "code",
    "lines": [
      "define remove-object",
      "  (lambda (x) ",
      "    (remove-match (lambda (y) ",
      "            (flex-equals (x) (y)))));"
    ],
    "dt": true,
    "parse": [
      "@",
      "remove-object",
      [
        "lambda",
        [
          "x"
        ],
        [
          "remove-match",
          [
            "lambda",
            [
              "y"
            ],
            [
              "flex-equals",
              [
                "x"
              ],
              [
                "y"
              ]
            ]
          ]
        ]
      ]
    ],
    "code": "121101312111100000321211010321210101133212100001113212110103212110100332121110111113212101011332121101003333332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf164;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf14b;&#xf246;&#xf15e;&#xf246;&#xf178;&#xf245;&#xf246;&#xf14b;&#xf163;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf178;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1864
  },
  {
    "role": "code",
    "lines": [
      "define contains-object",
      "  (lambda (x lst)",
      "    (if (> (list-length | lst) 0)",
      "    (if (flex-equals (head | lst) (x))",
      "        (true)",
      "        (contains-object (x) (tail | lst)))",
      "    (false)));"
    ],
    "dt": true,
    "parse": [
      "@",
      "contains-object",
      [
        "lambda",
        [
          "x",
          "lst"
        ],
        [
          "if",
          [
            ">",
            [
              "list-length",
              [
                -1,
                "lst"
              ]
            ],
            "0"
          ],
          [
            "if",
            [
              "flex-equals",
              [
                "list:0",
                [
                  -1,
                  "lst"
                ]
              ],
              [
                "x"
              ]
            ],
            [
              "true"
            ],
            [
              "contains-object",
              [
                "x"
              ],
              [
                "list:remainder",
                [
                  -1,
                  "lst"
                ]
              ]
            ]
          ],
          [
            "false"
          ]
        ]
      ]
    ],
    "code": "12110131211110000132121101032121010113121010001332121111321210032121000010302312101000133020332121111321211101111132121211111030203302312101000133212101011333212133212111100001321210101133212121111103121000001330231210100013333212033332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf165;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf145;&#xf155;&#xf245;&#xf246;&#xf153;&#xf246;&#xf148;&#xf246;&#xf145;&#xf146;&#xf248;&#xf145;&#xf155;&#xf245;&#xf204;&#xf245;&#xf246;&#xf153;&#xf246;&#xf14b;&#xf163;&#xf246;&#xf182;&#xf204;&#xf248;&#xf145;&#xf155;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf246;&#xf145;&#xf245;&#xf246;&#xf14b;&#xf165;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf182;&#xf145;&#xf145;&#xf248;&#xf145;&#xf155;&#xf245;&#xf245;&#xf245;&#xf246;&#xf144;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1865
  },
  {
    "role": "code",
    "lines": [
      "class COS_JList ()",
      "       (field super ((java lang Object) new))",
      "       (method unknown (lambda (x) (super (x))))",
      "       (field contents (cell new (vector)))",
      "       (method <init>-V (self))",
      "       (method <init> (self <init>-V))",
      "       (method add-Object-V (lambda (x)",
      "             (contents set (prepend (x) (contents get)))))",
      "       (method add (self add-Object-V))",
      "       (method remove-Object-Z (lambda (x)",
      "            (contents set ",
      "                  (remove-object (x) (contents get)))))",
      "       (method remove (self remove-Object-Z))",
      "       (method contains-Object-Z (lambda (x)",
      "                   (contains-object (x) (contents get))))",
      "       (method contains (self contains-Object-Z))",
      "       (method get-I-Object (lambda (x)",
      "             (list-ref (contents get) (x))))",
      "       (method get (self get-I-Object))",
      "       (method iterator-Iterator (COS_JListIterator new (self)))",
      "       (method iterator (self iterator-Iterator))",
      "       (method size-V-I (list-length (contents get)))",
      "       (method size (self size-V-I));"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JList",
      [],
      [
        "field",
        "super",
        [
          [
            "java",
            "lang",
            "Object"
          ],
          "new"
        ]
      ],
      [
        "method",
        "unknown",
        [
          "lambda",
          [
            "x"
          ],
          [
            "super",
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "contents",
        [
          "cell",
          "new",
          [
            "vector"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "add-Object-V",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contents",
            "set",
            [
              "prepend",
              [
                "x"
              ],
              [
                "contents",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          "self",
          "add-Object-V"
        ]
      ],
      [
        "method",
        "remove-Object-Z",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contents",
            "set",
            [
              "remove-object",
              [
                "x"
              ],
              [
                "contents",
                "get"
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "remove",
        [
          "self",
          "remove-Object-Z"
        ]
      ],
      [
        "method",
        "contains-Object-Z",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contains-object",
            [
              "x"
            ],
            [
              "contents",
              "get"
            ]
          ]
        ]
      ],
      [
        "method",
        "contains",
        [
          "self",
          "contains-Object-Z"
        ]
      ],
      [
        "method",
        "get-I-Object",
        [
          "lambda",
          [
            "x"
          ],
          [
            "list-ref",
            [
              "contents",
              "get"
            ],
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          "self",
          "get-I-Object"
        ]
      ],
      [
        "method",
        "iterator-Iterator",
        [
          "COS_JListIterator",
          "new",
          [
            "self"
          ]
        ]
      ],
      [
        "method",
        "iterator",
        [
          "self",
          "iterator-Iterator"
        ]
      ],
      [
        "method",
        "size-V-I",
        [
          "list-length",
          [
            "contents",
            "get"
          ]
        ]
      ],
      [
        "method",
        "size",
        [
          "self",
          "size-V-I"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf166;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf165;&#xf246;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf146;&#xf162;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf165;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf15d;&#xf246;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf154;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf167;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf145;&#xf16f;&#xf246;&#xf145;&#xf14a;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf15f;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf167;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf168;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf145;&#xf16f;&#xf246;&#xf14b;&#xf164;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf160;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf168;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf169;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf14b;&#xf165;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf16a;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf169;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf16b;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf145;&#xf147;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf16b;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf16c;&#xf246;&#xf14b;&#xf16d;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf146;&#xf156;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf16e;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf16c;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf16f;&#xf246;&#xf145;&#xf146;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf170;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1866
  },
  {
    "role": "code",
    "lines": [
      "define test1 (COS_JList new);"
    ],
    "dt": true,
    "parse": [
      "@",
      "test1",
      [
        "COS_JList",
        "new"
      ]
    ],
    "code": "121101312111010000321211110001031210011110332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf154;&#xf246;&#xf14b;&#xf166;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf24b;",
    "stanza": 1867
  },
  {
    "role": "code",
    "lines": [
      "begin (test1 add-Object-V (test1))",
      "       (= 1 | test1 size-V-I);"
    ],
    "dt": false,
    "parse": [
      "begin",
      [
        "test1",
        "add-Object-V",
        [
          "test1"
        ]
      ],
      [
        "=",
        "1",
        [
          -1,
          "test1",
          "size-V-I"
        ]
      ]
    ],
    "code": "12100101132121110100003121111000113212111010000333212113021302312111010000312111101011332233",
    "spider": "&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf167;&#xf246;&#xf14b;&#xf154;&#xf245;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1868
  },
  {
    "role": "code",
    "lines": [
      "test1 == (test1 get-I-Object 0);"
    ],
    "dt": false,
    "parse": [
      "test1",
      "==",
      [
        "test1",
        "get-I-Object",
        "0"
      ]
    ],
    "code": "121110100003121011001132121110100003121111001113020332233",
    "spider": "&#xf14b;&#xf154;&#xf24a;&#xf146;&#xf177;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf16b;&#xf24a;&#xf204;&#xf245;&#xf24b;",
    "stanza": 1869
  },
  {
    "role": "code",
    "lines": [
      "class COS_JHashMap ()",
      "       (field super ((java lang Object) new))",
      "       (method unknown (lambda (x) (super (x))))",
      "       (field contents (cell new (? x 0)))",
      "       (method <init>-V (self))",
      "       (method <init> (self <init>-V))",
      "       (method put-Object-Object-V (lambda (x y)",
      "                     (let ((prev | contents get))",
      "                       (contents set ",
      "                         (? z ",
      "                            (if (flex-equals (z) (x))",
      "                            (y)",
      "                            (prev (z))))))))",
      "       (method put (self put-Object-Object-V))",
      "       (method get-Object-Object (lambda (x)",
      "                   (contents get (x))))",
      "       (method get (self get-Object-Object));"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JHashMap",
      [],
      [
        "field",
        "super",
        [
          [
            "java",
            "lang",
            "Object"
          ],
          "new"
        ]
      ],
      [
        "method",
        "unknown",
        [
          "lambda",
          [
            "x"
          ],
          [
            "super",
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "contents",
        [
          "cell",
          "new",
          [
            "?",
            "x",
            "0"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "put-Object-Object-V",
        [
          "lambda",
          [
            "x",
            "y"
          ],
          [
            "let",
            [
              [
                "prev",
                [
                  -1,
                  "contents",
                  "get"
                ]
              ]
            ],
            [
              "contents",
              "set",
              [
                "?",
                "z",
                [
                  "if",
                  [
                    "flex-equals",
                    [
                      "z"
                    ],
                    [
                      "x"
                    ]
                  ],
                  [
                    "y"
                  ],
                  [
                    "prev",
                    [
                      "z"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "put",
        [
          "self",
          "put-Object-Object-V"
        ]
      ],
      [
        "method",
        "get-Object-Object",
        [
          "lambda",
          [
            "x"
          ],
          [
            "contents",
            "get",
            [
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          "self",
          "get-Object-Object"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf171;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf165;&#xf246;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf146;&#xf162;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf165;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf15d;&#xf246;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf172;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf24a;&#xf178;&#xf245;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf145;&#xf16b;&#xf248;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf145;&#xf16f;&#xf246;&#xf150;&#xf24a;&#xf179;&#xf246;&#xf153;&#xf246;&#xf14b;&#xf163;&#xf246;&#xf179;&#xf245;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf246;&#xf178;&#xf245;&#xf246;&#xf145;&#xf16b;&#xf246;&#xf179;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf173;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf172;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf174;&#xf246;&#xf15e;&#xf246;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf246;&#xf16f;&#xf245;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf174;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1870
  },
  {
    "role": "code",
    "lines": [
      "define test2 (COS_JHashMap new);"
    ],
    "dt": true,
    "parse": [
      "@",
      "test2",
      [
        "COS_JHashMap",
        "new"
      ]
    ],
    "code": "121101312111110001321211110110131210011110332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf175;&#xf246;&#xf14b;&#xf171;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf24b;",
    "stanza": 1871
  },
  {
    "role": "code",
    "lines": [
      "begin (test2 put-Object-Object-V 5 10)",
      "       (= 10 | test2 get 5);"
    ],
    "dt": false,
    "parse": [
      "begin",
      [
        "test2",
        "put-Object-Object-V",
        "5",
        "10"
      ],
      [
        "=",
        "10",
        [
          -1,
          "test2",
          "get",
          "5"
        ]
      ]
    ],
    "code": "1210010113212111110001312111101110302101302101033212113021010302312111110001312111101302101332233",
    "spider": "&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf175;&#xf24a;&#xf14b;&#xf172;&#xf24a;&#xf209;&#xf24a;&#xf20e;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf20e;&#xf248;&#xf14b;&#xf175;&#xf24a;&#xf181;&#xf24a;&#xf209;&#xf245;&#xf24b;",
    "stanza": 1872
  },
  {
    "role": "file",
    "lines": [
      "== COS_JList =="
    ],
    "stanza": 1873
  },
  {
    "role": "comment",
    "lines": [
      "# There is Java code for COS_JList available"
    ],
    "stanza": 1874
  },
  {
    "role": "file",
    "lines": [
      "== COS_JHashMap =="
    ],
    "stanza": 1875
  },
  {
    "role": "comment",
    "lines": [
      "# There is Java code for COS_JHashMap available"
    ],
    "stanza": 1876
  },
  {
    "role": "file",
    "lines": [
      "== COS_JList_test =="
    ],
    "stanza": 1877
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "testing the JList class",
    "section_category": "JAVA",
    "section_index": 60,
    "stanza": 1878
  },
  {
    "role": "code",
    "lines": [
      "define test1 (COS_JList new);"
    ],
    "dt": true,
    "parse": [
      "@",
      "test1",
      [
        "COS_JList",
        "new"
      ]
    ],
    "code": "121101312111010000321211110001031210011110332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf154;&#xf246;&#xf14b;&#xf166;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf24b;",
    "stanza": 1879
  },
  {
    "role": "code",
    "lines": [
      "begin (test1 add-Object-V (test1))",
      "       (= 1 (test1 size-V-I));"
    ],
    "dt": false,
    "parse": [
      "begin",
      [
        "test1",
        "add-Object-V",
        [
          "test1"
        ]
      ],
      [
        "=",
        "1",
        [
          "test1",
          "size-V-I"
        ]
      ]
    ],
    "code": "1210010113212111010000312111100011321211101000033321211302132121110100003121111010113332233",
    "spider": "&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf167;&#xf246;&#xf14b;&#xf154;&#xf245;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf16f;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1880
  },
  {
    "role": "code",
    "lines": [
      "(test1 get-I-Object 0) == (test1);"
    ],
    "dt": false,
    "parse": [
      [
        "test1",
        "get-I-Object",
        "0"
      ],
      "==",
      [
        "test1"
      ]
    ],
    "code": "21211101000031211110011130203312101100113212111010000332233",
    "spider": "&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf16b;&#xf24a;&#xf204;&#xf245;&#xf146;&#xf177;&#xf246;&#xf14b;&#xf154;&#xf245;&#xf24b;",
    "stanza": 1881
  },
  {
    "role": "file",
    "lines": [
      "== COS_JListIterator_impl =="
    ],
    "stanza": 1882
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "basic iterator implementation",
    "section_category": "JAVA",
    "section_index": 61,
    "stanza": 1883
  },
  {
    "role": "code",
    "lines": [
      "class COS_JListIterator (ref)",
      "       (field pipe (cell new (ref contents get)))",
      "       (method <init>-V (self))",
      "       (method <init> (self <init>-V))",
      "       (method hasNext-Z (> (list-length | pipe get) 0))",
      "       (method hasNext (self hasNext-Z))",
      "       (method next (self next-Object))",
      "       (method next-Object ",
      "           (let ((result (head | pipe get)))",
      "         (begin ",
      "           (pipe set | tail | pipe get)",
      "           (result))));"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JListIterator",
      [
        "ref"
      ],
      [
        "field",
        "pipe",
        [
          "cell",
          "new",
          [
            "ref",
            "contents",
            "get"
          ]
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "self"
        ]
      ],
      [
        "method",
        "<init>",
        [
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "hasNext-Z",
        [
          ">",
          [
            "list-length",
            [
              -1,
              "pipe",
              "get"
            ]
          ],
          "0"
        ]
      ],
      [
        "method",
        "hasNext",
        [
          "self",
          "hasNext-Z"
        ]
      ],
      [
        "method",
        "next",
        [
          "self",
          "next-Object"
        ]
      ],
      [
        "method",
        "next-Object",
        [
          "let",
          [
            [
              "result",
              [
                "list:0",
                [
                  -1,
                  "pipe",
                  "get"
                ]
              ]
            ]
          ],
          [
            "begin",
            [
              "pipe",
              "set",
              [
                -1,
                "list:remainder",
                [
                  -1,
                  "pipe",
                  "get"
                ]
              ]
            ],
            [
              "result"
            ]
          ]
        ]
      ]
    ],
    "code": "1210111001312111101001321211111001033212101101113121111100113212100101312100111103212111110010312100110013121111013333212101011113121010110003212100100103332121010111131210101100132121001001031210101100033321210101111312111110100321210032121000010302312111110011312111101330203332121010111131211111010132121001001031211111010033321210101111312110011032121001001031211111011033321210101111312111110110321211001003221211110103212121111103020330231211111001131211110133332121001011321211111001131211010113023121211111031210000013302312111110011312111101332121111010333332233",
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf16d;&#xf246;&#xf14b;&#xf176;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf177;&#xf246;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf14b;&#xf176;&#xf24a;&#xf146;&#xf15d;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf178;&#xf246;&#xf148;&#xf246;&#xf145;&#xf146;&#xf248;&#xf14b;&#xf177;&#xf24a;&#xf181;&#xf245;&#xf204;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf179;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf178;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf145;&#xf16a;&#xf246;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf17a;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf17a;&#xf246;&#xf145;&#xf168;&#xf246;&#xf246;&#xf145;&#xf17e;&#xf246;&#xf182;&#xf204;&#xf248;&#xf14b;&#xf177;&#xf24a;&#xf181;&#xf245;&#xf245;&#xf245;&#xf246;&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf177;&#xf24a;&#xf145;&#xf16f;&#xf248;&#xf182;&#xf145;&#xf145;&#xf248;&#xf14b;&#xf177;&#xf24a;&#xf181;&#xf245;&#xf246;&#xf145;&#xf17e;&#xf245;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1884
  },
  {
    "role": "code",
    "lines": [
      "define test1 (COS_JList new);"
    ],
    "dt": true,
    "parse": [
      "@",
      "test1",
      [
        "COS_JList",
        "new"
      ]
    ],
    "code": "121101312111010000321211110001031210011110332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf154;&#xf246;&#xf14b;&#xf166;&#xf24a;&#xf146;&#xf162;&#xf245;&#xf24b;",
    "stanza": 1885
  },
  {
    "role": "code",
    "lines": [
      "begin",
      "  (test1 add 15)",
      "  (test1 add 72)",
      "  (test1 add 99)",
      "  (true);"
    ],
    "dt": false,
    "parse": [
      "begin",
      [
        "test1",
        "add",
        "15"
      ],
      [
        "test1",
        "add",
        "72"
      ],
      [
        "test1",
        "add",
        "99"
      ],
      [
        "true"
      ]
    ],
    "code": "12100101132121110100003121001101130211113321211101000031210011011302100100033212111010000312100110113021100011332121332233",
    "spider": "&#xf145;&#xf14f;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf213;&#xf245;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf20c;&#xf245;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf146;&#xf15f;&#xf24a;&#xf205;&#xf227;&#xf245;&#xf246;&#xf145;&#xf245;&#xf24b;",
    "stanza": 1886
  },
  {
    "role": "code",
    "lines": [
      "define iter1 (test1 iterator);"
    ],
    "dt": true,
    "parse": [
      "@",
      "iter1",
      [
        "test1",
        "iterator"
      ]
    ],
    "code": "1211013121111101113212111010000312111101010332233",
    "spider": "&#xf151;&#xf24a;&#xf14b;&#xf17b;&#xf246;&#xf14b;&#xf154;&#xf24a;&#xf14b;&#xf16e;&#xf245;&#xf24b;",
    "stanza": 1887
  },
  {
    "role": "code",
    "lines": [
      "iter1 hasNext;"
    ],
    "dt": false,
    "parse": [
      "iter1",
      "hasNext"
    ],
    "code": "1211111011131211111010132233",
    "spider": "&#xf14b;&#xf17b;&#xf24a;&#xf14b;&#xf179;&#xf24b;",
    "stanza": 1888
  },
  {
    "role": "code",
    "lines": [
      "equal 99 | iter1 next;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "99",
      [
        -1,
        "iter1",
        "next"
      ]
    ],
    "code": "1210001003021100011302312111110111312110011032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf205;&#xf227;&#xf248;&#xf14b;&#xf17b;&#xf24a;&#xf145;&#xf16a;&#xf24b;",
    "lines_original": [
      "demo | iter1 next;"
    ],
    "stanza": 1889
  },
  {
    "role": "code",
    "lines": [
      "iter1 hasNext;"
    ],
    "dt": false,
    "parse": [
      "iter1",
      "hasNext"
    ],
    "code": "1211111011131211111010132233",
    "spider": "&#xf14b;&#xf17b;&#xf24a;&#xf14b;&#xf179;&#xf24b;",
    "stanza": 1890
  },
  {
    "role": "code",
    "lines": [
      "equal 72 | iter1 next;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "72",
      [
        -1,
        "iter1",
        "next"
      ]
    ],
    "code": "1210001003021001000302312111110111312110011032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf205;&#xf20c;&#xf248;&#xf14b;&#xf17b;&#xf24a;&#xf145;&#xf16a;&#xf24b;",
    "lines_original": [
      "demo | iter1 next;"
    ],
    "stanza": 1891
  },
  {
    "role": "code",
    "lines": [
      "iter1 hasNext;"
    ],
    "dt": false,
    "parse": [
      "iter1",
      "hasNext"
    ],
    "code": "1211111011131211111010132233",
    "spider": "&#xf14b;&#xf17b;&#xf24a;&#xf14b;&#xf179;&#xf24b;",
    "stanza": 1892
  },
  {
    "role": "code",
    "lines": [
      "equal 15 | iter1 next;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "15",
      [
        -1,
        "iter1",
        "next"
      ]
    ],
    "code": "1210001003021111302312111110111312110011032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf213;&#xf248;&#xf14b;&#xf17b;&#xf24a;&#xf145;&#xf16a;&#xf24b;",
    "lines_original": [
      "demo | iter1 next;"
    ],
    "stanza": 1893
  },
  {
    "role": "code",
    "lines": [
      "not | iter1 hasNext;"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "iter1",
        "hasNext"
      ]
    ],
    "code": "1210130231211111011131211111010132233",
    "spider": "&#xf149;&#xf248;&#xf14b;&#xf17b;&#xf24a;&#xf14b;&#xf179;&#xf24b;",
    "stanza": 1894
  },
  {
    "role": "file",
    "lines": [
      "== COS_JListIterator =="
    ],
    "stanza": 1895
  },
  {
    "role": "comment",
    "lines": [
      "# There is Java code for COS_JListIterator available"
    ],
    "stanza": 1896
  },
  {
    "role": "file",
    "lines": [
      "== COS_JDoor =="
    ],
    "stanza": 1897
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# public class COS_JDoor {",
      "#     private COS_JRoom src, dest;",
      "#     private String src_cmd, dest_cmd;",
      "# ",
      "#     public COS_JDoor(COS_JRoom src, String src_cmd,",
      "#              COS_JRoom dest, String dest_cmd) {",
      "#     this.src = src;",
      "#     this.dest = dest;",
      "#     this.src_cmd = src_cmd;",
      "#     this.dest_cmd = dest_cmd;",
      "#     src.addDoor(this);",
      "#     dest.addDoor(this);",
      "#     }",
      "# ",
      "#     public COS_JRoom apply(COS_JRoom src, String cmd) {",
      "#     if (src == this.src) {",
      "#         if (src_cmd.equals(cmd)) {",
      "#         return this.dest;",
      "#         }",
      "#     }",
      "#     if (src == this.dest) {",
      "#         if (dest_cmd.equals(cmd)) {",
      "#         return this.src;",
      "#         }",
      "#     }",
      "#     return null;",
      "#     }",
      "# ",
      "#     public COS_JRoom apply(COS_JRoom src) {",
      "#     if (src==this.src) {",
      "#         return this.dest;",
      "#     }",
      "#     if (src==this.dest) {",
      "#         return this.src;",
      "#     }",
      "#     return null;",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JDoor'",
    "section_category": "JAVA",
    "section_index": 62,
    "stanza": 1898
  },
  {
    "role": "code",
    "lines": [
      "class COS_JDoor ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field src | cell new 0)",
      "   (field dest | cell new 0)",
      "   (field src_cmd | cell new 0)",
      "   (field dest_cmd | cell new 0)",
      "   (method <init>-COS_JRoom-String-COS_JRoom-String-V",
      "     (lambda (arg0 arg1 arg2 arg3) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1) (pair 3 $arg2) (pair 4 $arg3))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm aload 1)",
      "         ((= $x 4) | jvm putfield src $COS_JRoom)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm aload 3)",
      "         ((= $x 7) | jvm putfield dest $COS_JRoom)",
      "         ((= $x 8) | jvm aload 0)",
      "         ((= $x 9) | jvm aload 2)",
      "         ((= $x 10) | jvm putfield src_cmd (java lang String))",
      "         ((= $x 11) | jvm aload 0)",
      "         ((= $x 12) | jvm aload 4)",
      "         ((= $x 13) | jvm putfield dest_cmd (java lang String))",
      "         ((= $x 14) | jvm aload 1)",
      "         ((= $x 15) | jvm aload 0)",
      "         ((= $x 16) | jvm invokevirtual addDoor-COS_JDoor-V 1 0)",
      "         ((= $x 17) | jvm aload 3)",
      "         ((= $x 18) | jvm aload 0)",
      "         ((= $x 19) | jvm invokevirtual addDoor-COS_JDoor-V 1 0)",
      "         ((= $x 20) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-COS_JRoom-String-COS_JRoom-String-V)",
      "",
      "   (method apply-COS_JRoom-String-COS_JRoom",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 1)",
      "         ((= $x 1) | jvm aload 0)",
      "         ((= $x 2) | jvm getfield src $COS_JRoom)",
      "         ((= $x 3) | jvm if_acmpne 12)",
      "         ((= $x 4) | jvm aload 0)",
      "         ((= $x 5) | jvm getfield src_cmd (java lang String))",
      "         ((= $x 6) | jvm aload 2)",
      "         ((= $x 7) | jvm invokevirtual equals-Object-Z 1 1)",
      "         ((= $x 8) | jvm ifeq 12)",
      "         ((= $x 9) | jvm aload 0)",
      "         ((= $x 10) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 11) | jvm areturn)",
      "         ((= $x 12) | jvm aload 1)",
      "         ((= $x 13) | jvm aload 0)",
      "         ((= $x 14) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 15) | jvm if_acmpne 24)",
      "         ((= $x 16) | jvm aload 0)",
      "         ((= $x 17) | jvm getfield dest_cmd (java lang String))",
      "         ((= $x 18) | jvm aload 2)",
      "         ((= $x 19) | jvm invokevirtual equals-Object-Z 1 1)",
      "         ((= $x 20) | jvm ifeq 24)",
      "         ((= $x 21) | jvm aload 0)",
      "         ((= $x 22) | jvm getfield src $COS_JRoom)",
      "         ((= $x 23) | jvm areturn)",
      "         ((= $x 24) | jvm aconst_null)",
      "         ((= $x 25) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method apply | self apply-COS_JRoom-String-COS_JRoom)",
      "",
      "   (method apply-COS_JRoom-COS_JRoom",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 1)",
      "         ((= $x 1) | jvm aload 0)",
      "         ((= $x 2) | jvm getfield src $COS_JRoom)",
      "         ((= $x 3) | jvm if_acmpne 7)",
      "         ((= $x 4) | jvm aload 0)",
      "         ((= $x 5) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 6) | jvm areturn)",
      "         ((= $x 7) | jvm aload 1)",
      "         ((= $x 8) | jvm aload 0)",
      "         ((= $x 9) | jvm getfield dest $COS_JRoom)",
      "         ((= $x 10) | jvm if_acmpne 14)",
      "         ((= $x 11) | jvm aload 0)",
      "         ((= $x 12) | jvm getfield src $COS_JRoom)",
      "         ((= $x 13) | jvm areturn)",
      "         ((= $x 14) | jvm aconst_null)",
      "         ((= $x 15) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JDoor",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "src",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "dest",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "src_cmd",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "dest_cmd",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-COS_JRoom-String-COS_JRoom-String-V",
        [
          "lambda",
          [
            "arg0",
            "arg1",
            "arg2",
            "arg3"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ],
                      [
                        "list:2",
                        "3",
                        [
                          -2,
                          "arg2"
                        ]
                      ],
                      [
                        "list:2",
                        "4",
                        [
                          -2,
                          "arg3"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "src_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "dest_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "addDoor-COS_JDoor-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "addDoor-COS_JDoor-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-COS_JRoom-String-COS_JRoom-String-V"
        ]
      ],
      [
        "method",
        "apply-COS_JRoom-String-COS_JRoom",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "12"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "equals-Object-Z",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "12"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "24"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest_cmd",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "equals-Object-Z",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "24"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "21"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "22"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "23"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "24"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "25"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "apply",
        [
          -1,
          "self",
          "apply-COS_JRoom-String-COS_JRoom"
        ]
      ],
      [
        "method",
        "apply-COS_JRoom-COS_JRoom",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "dest",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpne",
                        "14"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "src",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf17c;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf147;&#xf147;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf147;&#xf149;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf17d;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf17e;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf17f;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf24a;&#xf14b;&#xf14e;&#xf24a;&#xf14b;&#xf180;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf246;&#xf182;&#xf206;&#xf207;&#xf249;&#xf14b;&#xf14e;&#xf245;&#xf246;&#xf182;&#xf206;&#xf208;&#xf249;&#xf14b;&#xf180;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf147;&#xf147;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf147;&#xf149;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14b;&#xf17d;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14b;&#xf17e;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf212;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf213;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf214;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf182;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf216;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf217;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf182;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf218;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf17f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf183;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf147;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf163;&#xf24a;&#xf210;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14b;&#xf17d;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf149;&#xf15e;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf160;&#xf24a;&#xf210;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf149;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf212;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf149;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf213;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf163;&#xf24a;&#xf21c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf214;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14b;&#xf17e;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf216;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf217;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf149;&#xf15e;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf218;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf160;&#xf24a;&#xf21c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf219;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf147;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf151;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf144;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf183;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf145;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf147;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf163;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf149;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf149;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf163;&#xf24a;&#xf212;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf147;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf212;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf151;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf213;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1899
  },
  {
    "role": "file",
    "lines": [
      "== COS_JThing =="
    ],
    "stanza": 1900
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# public class COS_JThing extends COS_JNamed {",
      "#     private COS_JRoom location;",
      "#     private COS_JRoom nextLocation;",
      "# ",
      "#     public void setRoom(COS_JRoom location) {",
      "#     if (this.location!=null) {",
      "#         this.location.removeThing(this);",
      "#     }",
      "#     this.location = location;",
      "#     location.addThing(this);",
      "#     this.nextLocation = location;",
      "#     }",
      "#     ",
      "#     public COS_JRoom getRoom() {",
      "#     return location;",
      "#     }",
      "# ",
      "#     public void setNextRoom(COS_JRoom location) {",
      "#     nextLocation = location;",
      "#     }",
      "# ",
      "#     public void postUpdate() {",
      "#     if (nextLocation!=location) {",
      "#         setRoom(nextLocation);",
      "#     }",
      "#     }",
      "# }",
      "# "
    ],
    "section_description": "class translation 'COS_JThing'",
    "section_category": "JAVA",
    "section_index": 63,
    "stanza": 1901
  },
  {
    "role": "code",
    "lines": [
      "class COS_JThing ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (COS_JNamed) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field location | cell new 0)",
      "   (field nextLocation | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method setRoom-COS_JRoom-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield location $COS_JRoom)",
      "         ((= $x 2) | jvm ifnull 7)",
      "         ((= $x 3) | jvm aload 0)",
      "         ((= $x 4) | jvm getfield location $COS_JRoom)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm invokevirtual removeThing-COS_JThing-V 1 0)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm aload 1)",
      "         ((= $x 9) | jvm putfield location $COS_JRoom)",
      "         ((= $x 10) | jvm aload 1)",
      "         ((= $x 11) | jvm aload 0)",
      "         ((= $x 12) | jvm invokevirtual addThing-COS_JThing-V 1 0)",
      "         ((= $x 13) | jvm aload 0)",
      "         ((= $x 14) | jvm aload 1)",
      "         ((= $x 15) | jvm putfield nextLocation $COS_JRoom)",
      "         ((= $x 16) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setRoom | self setRoom-COS_JRoom-V)",
      "",
      "   (method getRoom-COS_JRoom",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield location $COS_JRoom)",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getRoom | self getRoom-COS_JRoom)",
      "",
      "   (method setNextRoom-COS_JRoom-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm aload 1)",
      "         ((= $x 2) | jvm putfield nextLocation $COS_JRoom)",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setNextRoom | self setNextRoom-COS_JRoom-V)",
      "",
      "   (method postUpdate-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield nextLocation $COS_JRoom)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm getfield location $COS_JRoom)",
      "         ((= $x 4) | jvm if_acmpeq 9)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm aload 0)",
      "         ((= $x 7) | jvm getfield nextLocation $COS_JRoom)",
      "         ((= $x 8) | jvm invokevirtual setRoom-COS_JRoom-V 1 0)",
      "         ((= $x 9) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method postUpdate | self postUpdate-V)",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JThing",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "COS_JNamed"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "location",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "nextLocation",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "setRoom-COS_JRoom-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "removeThing-COS_JThing-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "addThing-COS_JThing-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setRoom",
        [
          -1,
          "self",
          "setRoom-COS_JRoom-V"
        ]
      ],
      [
        "method",
        "getRoom-COS_JRoom",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getRoom",
        [
          -1,
          "self",
          "getRoom-COS_JRoom"
        ]
      ],
      [
        "method",
        "setNextRoom-COS_JRoom-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setNextRoom",
        [
          -1,
          "self",
          "setNextRoom-COS_JRoom-V"
        ]
      ],
      [
        "method",
        "postUpdate-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "location",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_acmpeq",
                        "9"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "nextLocation",
                        [
                          -2,
                          "COS_JRoom"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "setRoom-COS_JRoom-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "postUpdate",
        [
          -1,
          "self",
          "postUpdate-V"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14c;&#xf146;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf14c;&#xf147;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf147;&#xf158;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14c;&#xf148;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf149;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf158;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf169;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf158;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf14a;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf147;&#xf158;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf14b;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf212;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf213;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14c;&#xf148;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf214;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf14c;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf149;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf14d;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf158;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf14e;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf14d;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf14f;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14c;&#xf148;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf150;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf14f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf151;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf148;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf147;&#xf158;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf164;&#xf24a;&#xf20d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf148;&#xf249;&#xf14b;&#xf181;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf149;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf152;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf151;&#xf245;&#xf24b;",
    "stanza": 1902
  },
  {
    "role": "file",
    "lines": [
      "== COS_JRoom =="
    ],
    "stanza": 1903
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# import java.util.Iterator;",
      "# ",
      "# public class COS_JRoom extends COS_JNamed {",
      "#     //private COS_JList content = new COS_JList();",
      "#     //private COS_JList doors = new COS_JList();",
      "# ",
      "#     private COS_JList content;",
      "#     private COS_JList doors;",
      "# ",
      "#     public COS_JRoom() {",
      "#     content = new COS_JList();",
      "#     doors = new COS_JList();",
      "#     }",
      "# ",
      "#     public COS_JList get() {",
      "#     return content;",
      "#     }",
      "# ",
      "#     public Iterator getDoors() {",
      "#     return doors.iterator();",
      "#     }",
      "# ",
      "#     public void addDoor(COS_JDoor door) {",
      "#     //System.out.println(\"add door -> \" + getName());",
      "#     doors.add(door);",
      "#     }",
      "# ",
      "#     public void addThing(COS_JThing thing) {",
      "#     content.add(thing);",
      "#     }",
      "# ",
      "#     public void removeThing(COS_JThing thing) {",
      "#     content.remove(thing);",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JRoom'",
    "section_category": "JAVA",
    "section_index": 64,
    "stanza": 1904
  },
  {
    "role": "code",
    "lines": [
      "class COS_JRoom ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (COS_JNamed) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field content | cell new 0)",
      "   (field doors | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm new $COS_JList)",
      "         ((= $x 4) | jvm dup)",
      "         ((= $x 5) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 6) | jvm putfield content $COS_JList)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm new $COS_JList)",
      "         ((= $x 9) | jvm dup)",
      "         ((= $x 10) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 11) | jvm putfield doors $COS_JList)",
      "         ((= $x 12) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method get-COS_JList",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JList)",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method get | self get-COS_JList)",
      "",
      "   (method getDoors-Iterator",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield doors $COS_JList)",
      "         ((= $x 2) | jvm invokevirtual iterator-Iterator 0 1)",
      "         ((= $x 3) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getDoors | self getDoors-Iterator)",
      "",
      "   (method addDoor-COS_JDoor-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield doors $COS_JList)",
      "         ((= $x 2) | jvm aload 1)",
      "         ((= $x 3) | jvm invokevirtual add-Object-V 1 0)",
      "         ((= $x 4) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method addDoor | self addDoor-COS_JDoor-V)",
      "",
      "   (method addThing-COS_JThing-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JList)",
      "         ((= $x 2) | jvm aload 1)",
      "         ((= $x 3) | jvm invokevirtual add-Object-V 1 0)",
      "         ((= $x 4) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method addThing | self addThing-COS_JThing-V)",
      "",
      "   (method removeThing-COS_JThing-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JList)",
      "         ((= $x 2) | jvm aload 1)",
      "         ((= $x 3) | jvm invokevirtual remove-Object-Z 1 1)",
      "         ((= $x 4) | jvm pop)",
      "         ((= $x 5) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method removeThing | self removeThing-COS_JThing-V)",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JRoom",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "COS_JNamed"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "content",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "doors",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "doors",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "get-COS_JList",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "self",
          "get-COS_JList"
        ]
      ],
      [
        "method",
        "getDoors-Iterator",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "doors",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "iterator-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getDoors",
        [
          -1,
          "self",
          "getDoors-Iterator"
        ]
      ],
      [
        "method",
        "addDoor-COS_JDoor-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "doors",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-Object-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "addDoor",
        [
          -1,
          "self",
          "addDoor-COS_JDoor-V"
        ]
      ],
      [
        "method",
        "addThing-COS_JThing-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-Object-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "addThing",
        [
          -1,
          "self",
          "addThing-COS_JThing-V"
        ]
      ],
      [
        "method",
        "removeThing-COS_JThing-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "remove-Object-Z",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "pop"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "removeThing",
        [
          -1,
          "self",
          "removeThing-COS_JThing-V"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14b;&#xf181;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf14c;&#xf147;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14c;&#xf153;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14c;&#xf153;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf154;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf154;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf155;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf153;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf16c;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf156;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf155;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14b;&#xf182;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf153;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf167;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf157;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14b;&#xf182;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf14b;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf167;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf158;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf14b;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf14a;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf168;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14c;&#xf159;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf15a;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf14a;&#xf245;&#xf24b;",
    "stanza": 1905
  },
  {
    "role": "file",
    "lines": [
      "== COS_JNamed =="
    ],
    "stanza": 1906
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# public class COS_JNamed {",
      "#     private String name = \"-\";",
      "#     private COS_JWorld world = null;",
      "# ",
      "#     void setName(String name) {",
      "#     this.name = name;",
      "#     }",
      "# ",
      "#     String getName() {",
      "#     return name;",
      "#     }",
      "# ",
      "#     void setWorld(COS_JWorld world) {",
      "#     this.world = world;",
      "#     }",
      "# ",
      "#     COS_JWorld getWorld() {",
      "#     return world;",
      "#     }",
      "# ",
      "#     void update() {",
      "#     }",
      "# ",
      "#     void postUpdate() {",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JNamed'",
    "section_category": "JAVA",
    "section_index": 65,
    "stanza": 1907
  },
  {
    "role": "code",
    "lines": [
      "class COS_JNamed ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field name | cell new 0)",
      "   (field world | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm ldc (String new int-init \"-\"))",
      "         ((= $x 4) | jvm putfield name (java lang String))",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm aconst_null)",
      "         ((= $x 7) | jvm putfield world $COS_JWorld)",
      "         ((= $x 8) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method setName-String-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm aload 1)",
      "         ((= $x 2) | jvm putfield name (java lang String))",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setName | self setName-String-V)",
      "",
      "   (method getName-String",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield name (java lang String))",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getName | self getName-String)",
      "",
      "   (method setWorld-COS_JWorld-V",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm aload 1)",
      "         ((= $x 2) | jvm putfield world $COS_JWorld)",
      "         ((= $x 3) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method setWorld | self setWorld-COS_JWorld-V)",
      "",
      "   (method getWorld-COS_JWorld",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield world $COS_JWorld)",
      "         ((= $x 2) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method getWorld | self getWorld-COS_JWorld)",
      "",
      "   (method update-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method update | self update-V)",
      "",
      "   (method postUpdate-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method postUpdate | self postUpdate-V)",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JNamed",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "name",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "world",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "ldc",
                        [
                          "String",
                          "new",
                          "int-init",
                          "\"-\""
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "name",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "world",
                        [
                          -2,
                          "COS_JWorld"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "setName-String-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "name",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setName",
        [
          -1,
          "self",
          "setName-String-V"
        ]
      ],
      [
        "method",
        "getName-String",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "name",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getName",
        [
          -1,
          "self",
          "getName-String"
        ]
      ],
      [
        "method",
        "setWorld-COS_JWorld-V",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "world",
                        [
                          -2,
                          "COS_JWorld"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "setWorld",
        [
          -1,
          "self",
          "setWorld-COS_JWorld-V"
        ]
      ],
      [
        "method",
        "getWorld-COS_JWorld",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "world",
                        [
                          -2,
                          "COS_JWorld"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "getWorld",
        [
          -1,
          "self",
          "getWorld-COS_JWorld"
        ]
      ],
      [
        "method",
        "update-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "self",
          "update-V"
        ]
      ],
      [
        "method",
        "postUpdate-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "postUpdate",
        [
          -1,
          "self",
          "postUpdate-V"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14c;&#xf147;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf171;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf159;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14f;&#xf246;&#xf149;&#xf168;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf16a;&#xf24a;&#xf20c;&#xf226;&#xf238;&#xf226;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf146;&#xf171;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf151;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14b;&#xf159;&#xf249;&#xf14c;&#xf15b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf146;&#xf171;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf15e;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf171;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf15f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf15e;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf160;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14b;&#xf159;&#xf249;&#xf14c;&#xf15b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf161;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf160;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf162;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14b;&#xf159;&#xf249;&#xf14c;&#xf15b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf163;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf162;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf164;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15e;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf164;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf151;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf152;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf151;&#xf245;&#xf24b;",
    "stanza": 1908
  },
  {
    "role": "file",
    "lines": [
      "== COS_JWorld =="
    ],
    "stanza": 1909
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# import java.util.Iterator;",
      "# ",
      "# public class COS_JWorld {",
      "#     private COS_JHashMap content;",
      "#     private COS_JList inventory;",
      "# ",
      "#     public COS_JWorld() {",
      "#     content = new COS_JHashMap();",
      "#     inventory = new COS_JList();",
      "#     }",
      "# ",
      "#     public void add(COS_JNamed named, String name) {",
      "#     named.setName(name);",
      "#     content.put(named.getName(),named);",
      "#     inventory.add(named);",
      "#     }",
      "# ",
      "#     public COS_JNamed get(String name) {",
      "#     return (COS_JNamed)content.get(new String(name));",
      "#     }",
      "# ",
      "#     public void update() {",
      "#     for (Iterator i = inventory.iterator(); i.hasNext(); ) {",
      "#         COS_JNamed o = (COS_JNamed) i.next();",
      "#         o.update();",
      "#     }",
      "#     for (Iterator i = inventory.iterator(); i.hasNext(); ) {",
      "#         COS_JNamed o = (COS_JNamed) i.next();",
      "#         o.postUpdate();",
      "#     }",
      "#     }",
      "# }"
    ],
    "section_description": "class translation 'COS_JWorld'",
    "section_category": "JAVA",
    "section_index": 66,
    "stanza": 1910
  },
  {
    "role": "code",
    "lines": [
      "class COS_JWorld ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (java lang Object) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field content | cell new 0)",
      "   (field inventory | cell new 0)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm new $COS_JHashMap)",
      "         ((= $x 4) | jvm dup)",
      "         ((= $x 5) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 6) | jvm putfield content $COS_JHashMap)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm new $COS_JList)",
      "         ((= $x 9) | jvm dup)",
      "         ((= $x 10) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 11) | jvm putfield inventory $COS_JList)",
      "         ((= $x 12) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method add-COS_JNamed-String-V",
      "     (lambda (arg0 arg1) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0) (pair 2 $arg1))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 1)",
      "         ((= $x 1) | jvm aload 2)",
      "         ((= $x 2) | jvm invokevirtual setName-String-V 1 0)",
      "         ((= $x 3) | jvm aload 0)",
      "         ((= $x 4) | jvm getfield content $COS_JHashMap)",
      "         ((= $x 5) | jvm aload 1)",
      "         ((= $x 6) | jvm invokevirtual getName-String 0 1)",
      "         ((= $x 7) | jvm aload 1)",
      "         ((= $x 8) | jvm invokevirtual put-Object-Object-V 2 0)",
      "         ((= $x 9) | jvm aload 0)",
      "         ((= $x 10) | jvm getfield inventory $COS_JList)",
      "         ((= $x 11) | jvm aload 1)",
      "         ((= $x 12) | jvm invokevirtual add-Object-V 1 0)",
      "         ((= $x 13) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method add | self add-COS_JNamed-String-V)",
      "",
      "   (method get-String-COS_JNamed",
      "     (lambda (arg0) |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self) (pair 1 $arg0))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield content $COS_JHashMap)",
      "         ((= $x 2) | jvm new (java lang String))",
      "         ((= $x 3) | jvm dup)",
      "         ((= $x 4) | jvm aload 1)",
      "         ((= $x 5) | jvm invokespecial <init>-String-V 1 0)",
      "         ((= $x 6) | jvm invokevirtual get-Object-Object 1 1)",
      "         ((= $x 7) | jvm checkcast $COS_JNamed)",
      "         ((= $x 8) | jvm areturn)",
      "         (jvm return))",
      "   )",
      "",
      "   (method get | self get-String-COS_JNamed)",
      "",
      "   (method update-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm getfield inventory $COS_JList)",
      "         ((= $x 2) | jvm invokevirtual iterator-Iterator 0 1)",
      "         ((= $x 3) | jvm astore 1)",
      "         ((= $x 4) | jvm aload 1)",
      "         ((= $x 5) | jvm invokeinterface hasNext-Z 0 1 1)",
      "         ((= $x 6) | jvm ifeq 14)",
      "         ((= $x 7) | jvm aload 1)",
      "         ((= $x 8) | jvm invokeinterface next-Object 0 1 1)",
      "         ((= $x 9) | jvm checkcast $COS_JNamed)",
      "         ((= $x 10) | jvm astore 2)",
      "         ((= $x 11) | jvm aload 2)",
      "         ((= $x 12) | jvm invokevirtual update-V 0 0)",
      "         ((= $x 13) | jvm goto 4)",
      "         ((= $x 14) | jvm aload 0)",
      "         ((= $x 15) | jvm getfield inventory $COS_JList)",
      "         ((= $x 16) | jvm invokevirtual iterator-Iterator 0 1)",
      "         ((= $x 17) | jvm astore 1)",
      "         ((= $x 18) | jvm aload 1)",
      "         ((= $x 19) | jvm invokeinterface hasNext-Z 0 1 1)",
      "         ((= $x 20) | jvm ifeq 28)",
      "         ((= $x 21) | jvm aload 1)",
      "         ((= $x 22) | jvm invokeinterface next-Object 0 1 1)",
      "         ((= $x 23) | jvm checkcast $COS_JNamed)",
      "         ((= $x 24) | jvm astore 2)",
      "         ((= $x 25) | jvm aload 2)",
      "         ((= $x 26) | jvm invokevirtual postUpdate-V 0 0)",
      "         ((= $x 27) | jvm goto 18)",
      "         ((= $x 28) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method update | self update-V)",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JWorld",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "java",
              "lang",
              "Object"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "content",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "inventory",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "content",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "add-COS_JNamed-String-V",
        [
          "lambda",
          [
            "arg0",
            "arg1"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ],
                      [
                        "list:2",
                        "2",
                        [
                          -2,
                          "arg1"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "setName-String-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "getName-String",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "put-Object-Object-V",
                        "2",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "add-Object-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "add",
        [
          -1,
          "self",
          "add-COS_JNamed-String-V"
        ]
      ],
      [
        "method",
        "get-String-COS_JNamed",
        [
          "lambda",
          [
            "arg0"
          ],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ],
                      [
                        "list:2",
                        "1",
                        [
                          -2,
                          "arg0"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "content",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          "java",
                          "lang",
                          "String"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-String-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "get-Object-Object",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JNamed"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "areturn"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "get",
        [
          -1,
          "self",
          "get-String-COS_JNamed"
        ]
      ],
      [
        "method",
        "update-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "iterator-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "hasNext-Z",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "14"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "next-Object",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JNamed"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "update-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "inventory",
                        [
                          -2,
                          "COS_JList"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "iterator-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "hasNext-Z",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "28"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "21"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "22"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "next-Object",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "23"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JNamed"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "24"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "25"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "26"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "postUpdate-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "27"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "18"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "28"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "self",
          "update-V"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14c;&#xf15b;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf15a;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf146;&#xf15e;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf146;&#xf15e;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf165;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf24a;&#xf14a;&#xf183;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf246;&#xf182;&#xf206;&#xf206;&#xf249;&#xf14a;&#xf183;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf15c;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf15e;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf172;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf15e;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf167;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf15f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf165;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf166;&#xf246;&#xf15e;&#xf246;&#xf14a;&#xf182;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf246;&#xf182;&#xf206;&#xf205;&#xf249;&#xf14a;&#xf182;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf180;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf168;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf169;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf174;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf148;&#xf249;&#xf14c;&#xf147;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16c;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf181;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf166;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf164;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf15e;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf16c;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf170;&#xf24a;&#xf14b;&#xf178;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf160;&#xf24a;&#xf212;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf170;&#xf24a;&#xf14b;&#xf17a;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf148;&#xf249;&#xf14c;&#xf147;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf164;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf15a;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf212;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf213;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf146;&#xf15e;&#xf249;&#xf14b;&#xf166;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf214;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf16c;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf216;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf217;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf170;&#xf24a;&#xf14b;&#xf178;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf218;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf160;&#xf24a;&#xf220;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf219;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf170;&#xf24a;&#xf14b;&#xf17a;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf148;&#xf249;&#xf14c;&#xf147;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf151;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf15a;&#xf24a;&#xf216;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf220;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15e;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf164;&#xf245;&#xf24b;",
    "stanza": 1911
  },
  {
    "role": "file",
    "lines": [
      "== COS_JRobo =="
    ],
    "stanza": 1912
  },
  {
    "role": "comment",
    "lines": [
      "# Produced by Fritzifier, based on JasminVisitor",
      "# Using BCEL library to read Java bytecode",
      "# Here is the original code:",
      "# ",
      "# import java.util.Iterator;",
      "# ",
      "# public class COS_JRobo extends COS_JThing {",
      "#     private COS_JHashMap times;",
      "#     private int now;",
      "# ",
      "#     public COS_JRobo() {",
      "#     times = new COS_JHashMap();",
      "#     now = 1;",
      "#     }",
      "# ",
      "#     public void update() {",
      "#     COS_JRoom location = getRoom();",
      "#     //System.out.println(\"Updating robo...\");",
      "#     if (location!=null) {",
      "#         int oldestTime = now;",
      "#         COS_JDoor oldestDoor = null;",
      "#         for (Iterator i = location.getDoors(); i.hasNext(); ) {",
      "#         COS_JDoor door = (COS_JDoor) i.next();",
      "#         //System.out.println(\" scanning door \");",
      "#         Integer t = (Integer)times.get(door);",
      "#         int v = 0;",
      "#         if (t!=null) {",
      "#             v = t.intValue();",
      "#         }",
      "#         if (v<oldestTime) {",
      "#             oldestTime = v;",
      "#             oldestDoor = door;",
      "#         }",
      "#         }",
      "#         if (oldestDoor!=null) {",
      "#         times.put(oldestDoor,new Integer(now));",
      "#         setNextRoom(oldestDoor.apply(location));",
      "#         }",
      "#     }",
      "#     now++;",
      "#     }",
      "# }",
      "# "
    ],
    "section_description": "class translation 'COS_JRobo'",
    "section_category": "JAVA",
    "section_index": 67,
    "stanza": 1913
  },
  {
    "role": "code",
    "lines": [
      "class COS_JRobo ()",
      "   (field super-ref | make-cell 0)",
      "   (method new | set! $super-ref | (COS_JThing) $this)",
      "   (method super | ? x | (get! $super-ref) $x)",
      "   (method unknown | ? x | self super $x)",
      "   (field times | cell new 0)",
      "   (field now | (int) new)",
      "   (method <init>-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 2) | jvm aload 0)",
      "         ((= $x 3) | jvm new $COS_JHashMap)",
      "         ((= $x 4) | jvm dup)",
      "         ((= $x 5) | jvm invokespecial <init>-V 0 0)",
      "         ((= $x 6) | jvm putfield times $COS_JHashMap)",
      "         ((= $x 7) | jvm aload 0)",
      "         ((= $x 8) | jvm iconst 1)",
      "         ((= $x 9) | jvm putfield now $int)",
      "         ((= $x 10) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method <init> | self <init>-V)",
      "",
      "   (method update-V",
      "     (lambda () |",
      "      let ((vars | cell new | make-hash | vector",
      "                    (pair 0 $self))",
      "           (stack | cell new | vector)) |",
      "      state-machine $vars $stack | ? jvm | ? x | cond",
      "         ((= $x 0) | jvm aload 0)",
      "         ((= $x 1) | jvm invokevirtual getRoom-COS_JRoom 0 1)",
      "         ((= $x 2) | jvm astore 1)",
      "         ((= $x 3) | jvm aload 1)",
      "         ((= $x 4) | jvm ifnull 57)",
      "         ((= $x 5) | jvm aload 0)",
      "         ((= $x 6) | jvm getfield now $int)",
      "         ((= $x 7) | jvm istore 2)",
      "         ((= $x 8) | jvm aconst_null)",
      "         ((= $x 9) | jvm astore 3)",
      "         ((= $x 10) | jvm aload 1)",
      "         ((= $x 11) | jvm invokevirtual getDoors-Iterator 0 1)",
      "         ((= $x 12) | jvm astore 4)",
      "         ((= $x 13) | jvm aload 4)",
      "         ((= $x 14) | jvm invokeinterface hasNext-Z 0 1 1)",
      "         ((= $x 15) | jvm ifeq 41)",
      "         ((= $x 16) | jvm aload 4)",
      "         ((= $x 17) | jvm invokeinterface next-Object 0 1 1)",
      "         ((= $x 18) | jvm checkcast $COS_JDoor)",
      "         ((= $x 19) | jvm astore 5)",
      "         ((= $x 20) | jvm aload 0)",
      "         ((= $x 21) | jvm getfield times $COS_JHashMap)",
      "         ((= $x 22) | jvm aload 5)",
      "         ((= $x 23) | jvm invokevirtual get-Object-Object 1 1)",
      "         ((= $x 24) | jvm checkcast (java lang Integer))",
      "         ((= $x 25) | jvm astore 6)",
      "         ((= $x 26) | jvm iconst 0)",
      "         ((= $x 27) | jvm istore 7)",
      "         ((= $x 28) | jvm aload 6)",
      "         ((= $x 29) | jvm ifnull 33)",
      "         ((= $x 30) | jvm aload 6)",
      "         ((= $x 31) | jvm invokevirtual intValue-I 0 1)",
      "         ((= $x 32) | jvm istore 7)",
      "         ((= $x 33) | jvm iload 7)",
      "         ((= $x 34) | jvm iload 2)",
      "         ((= $x 35) | jvm if_icmpge 40)",
      "         ((= $x 36) | jvm iload 7)",
      "         ((= $x 37) | jvm istore 2)",
      "         ((= $x 38) | jvm aload 5)",
      "         ((= $x 39) | jvm astore 3)",
      "         ((= $x 40) | jvm goto 13)",
      "         ((= $x 41) | jvm aload 3)",
      "         ((= $x 42) | jvm ifnull 57)",
      "         ((= $x 43) | jvm aload 0)",
      "         ((= $x 44) | jvm getfield times $COS_JHashMap)",
      "         ((= $x 45) | jvm aload 3)",
      "         ((= $x 46) | jvm new (java lang Integer))",
      "         ((= $x 47) | jvm dup)",
      "         ((= $x 48) | jvm aload 0)",
      "         ((= $x 49) | jvm getfield now $int)",
      "         ((= $x 50) | jvm invokespecial <init>-I-V 1 0)",
      "         ((= $x 51) | jvm invokevirtual put-Object-Object-V 2 0)",
      "         ((= $x 52) | jvm aload 0)",
      "         ((= $x 53) | jvm aload 3)",
      "         ((= $x 54) | jvm aload 1)",
      "         ((= $x 55) | jvm invokevirtual apply-COS_JRoom-COS_JRoom 1 1)",
      "         ((= $x 56) | jvm invokevirtual setNextRoom-COS_JRoom-V 1 0)",
      "         ((= $x 57) | jvm aload 0)",
      "         ((= $x 58) | jvm dup)",
      "         ((= $x 59) | jvm getfield now $int)",
      "         ((= $x 60) | jvm iconst 1)",
      "         ((= $x 61) | jvm iadd)",
      "         ((= $x 62) | jvm putfield now $int)",
      "         ((= $x 63) | jvm return)",
      "         (jvm return))",
      "   )",
      "",
      "   (method update | self update-V)",
      "",
      " ;"
    ],
    "dt": true,
    "parse": [
      "class",
      "COS_JRobo",
      [],
      [
        "field",
        "super-ref",
        [
          -1,
          "cell:make",
          "0"
        ]
      ],
      [
        "method",
        "new",
        [
          -1,
          "cell:assign",
          [
            -2,
            "super-ref"
          ],
          [
            -1,
            [
              "COS_JThing"
            ],
            [
              -2,
              "this"
            ]
          ]
        ]
      ],
      [
        "method",
        "super",
        [
          -1,
          "?",
          "x",
          [
            -1,
            [
              "cell:get",
              [
                -2,
                "super-ref"
              ]
            ],
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "method",
        "unknown",
        [
          -1,
          "?",
          "x",
          [
            -1,
            "self",
            "super",
            [
              -2,
              "x"
            ]
          ]
        ]
      ],
      [
        "field",
        "times",
        [
          -1,
          "cell",
          "new",
          "0"
        ]
      ],
      [
        "field",
        "now",
        [
          -1,
          [
            "int"
          ],
          "new"
        ]
      ],
      [
        "method",
        "<init>-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-V",
                        "0",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "times",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "<init>",
        [
          -1,
          "self",
          "<init>-V"
        ]
      ],
      [
        "method",
        "update-V",
        [
          "lambda",
          [],
          [
            -1,
            "let",
            [
              [
                "vars",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "make-hash",
                    [
                      -1,
                      "vector",
                      [
                        "list:2",
                        "0",
                        [
                          -2,
                          "self"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "stack",
                [
                  -1,
                  "cell",
                  "new",
                  [
                    -1,
                    "vector"
                  ]
                ]
              ]
            ],
            [
              -1,
              "state-machine",
              [
                -2,
                "vars"
              ],
              [
                -2,
                "stack"
              ],
              [
                -1,
                "?",
                "jvm",
                [
                  -1,
                  "?",
                  "x",
                  [
                    -1,
                    "cond",
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "0"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "1"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "getRoom-COS_JRoom",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "2"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "3"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "4"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "57"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "5"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "6"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "7"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "8"
                      ],
                      [
                        -1,
                        "jvm",
                        "aconst_null"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "9"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "10"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "11"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "getDoors-Iterator",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "12"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "13"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "14"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "hasNext-Z",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "15"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifeq",
                        "41"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "16"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "4"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "17"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokeinterface",
                        "next-Object",
                        "0",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "18"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          -2,
                          "COS_JDoor"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "19"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "5"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "20"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "21"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "times",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "22"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "5"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "23"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "get-Object-Object",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "24"
                      ],
                      [
                        -1,
                        "jvm",
                        "checkcast",
                        [
                          "java",
                          "lang",
                          "Integer"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "25"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "6"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "26"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "27"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "28"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "6"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "29"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "33"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "30"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "6"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "31"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "intValue-I",
                        "0",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "32"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "33"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "34"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "35"
                      ],
                      [
                        -1,
                        "jvm",
                        "if_icmpge",
                        "40"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "36"
                      ],
                      [
                        -1,
                        "jvm",
                        "iload",
                        "7"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "37"
                      ],
                      [
                        -1,
                        "jvm",
                        "istore",
                        "2"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "38"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "5"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "39"
                      ],
                      [
                        -1,
                        "jvm",
                        "astore",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "40"
                      ],
                      [
                        -1,
                        "jvm",
                        "goto",
                        "13"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "41"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "42"
                      ],
                      [
                        -1,
                        "jvm",
                        "ifnull",
                        "57"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "43"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "44"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "times",
                        [
                          -2,
                          "COS_JHashMap"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "45"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "46"
                      ],
                      [
                        -1,
                        "jvm",
                        "new",
                        [
                          "java",
                          "lang",
                          "Integer"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "47"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "48"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "49"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "50"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokespecial",
                        "<init>-I-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "51"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "put-Object-Object-V",
                        "2",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "52"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "53"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "3"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "54"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "55"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "apply-COS_JRoom-COS_JRoom",
                        "1",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "56"
                      ],
                      [
                        -1,
                        "jvm",
                        "invokevirtual",
                        "setNextRoom-COS_JRoom-V",
                        "1",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "57"
                      ],
                      [
                        -1,
                        "jvm",
                        "aload",
                        "0"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "58"
                      ],
                      [
                        -1,
                        "jvm",
                        "dup"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "59"
                      ],
                      [
                        -1,
                        "jvm",
                        "getfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "60"
                      ],
                      [
                        -1,
                        "jvm",
                        "iconst",
                        "1"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "61"
                      ],
                      [
                        -1,
                        "jvm",
                        "iadd"
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "62"
                      ],
                      [
                        -1,
                        "jvm",
                        "putfield",
                        "now",
                        [
                          -2,
                          "int"
                        ]
                      ]
                    ],
                    [
                      [
                        "=",
                        [
                          -2,
                          "x"
                        ],
                        "63"
                      ],
                      [
                        -1,
                        "jvm",
                        "return"
                      ]
                    ],
                    [
                      "jvm",
                      "return"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      [
        "method",
        "update",
        [
          -1,
          "self",
          "update-V"
        ]
      ]
    ],
    "code
    "spider": "&#xf146;&#xf17d;&#xf24a;&#xf14c;&#xf167;&#xf246;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14b;&#xf145;&#xf248;&#xf169;&#xf15f;&#xf204;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf169;&#xf152;&#xf249;&#xf14b;&#xf145;&#xf248;&#xf246;&#xf14c;&#xf146;&#xf245;&#xf249;&#xf146;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf165;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf246;&#xf169;&#xf181;&#xf249;&#xf14b;&#xf145;&#xf245;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf146;&#xf175;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf146;&#xf165;&#xf249;&#xf16f;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14c;&#xf168;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf146;&#xf17b;&#xf24a;&#xf14c;&#xf169;&#xf248;&#xf246;&#xf174;&#xf245;&#xf146;&#xf162;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15c;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf15c;&#xf24a;&#xf204;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14c;&#xf168;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14c;&#xf169;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf149;&#xf15d;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf149;&#xf15c;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf14c;&#xf164;&#xf246;&#xf15e;&#xf246;&#xf245;&#xf248;&#xf145;&#xf168;&#xf246;&#xf246;&#xf149;&#xf180;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf145;&#xf177;&#xf248;&#xf154;&#xf246;&#xf182;&#xf206;&#xf204;&#xf249;&#xf146;&#xf156;&#xf245;&#xf245;&#xf246;&#xf149;&#xf181;&#xf248;&#xf169;&#xf24a;&#xf146;&#xf162;&#xf248;&#xf154;&#xf245;&#xf245;&#xf248;&#xf14a;&#xf180;&#xf249;&#xf149;&#xf180;&#xf249;&#xf149;&#xf181;&#xf248;&#xf150;&#xf24a;&#xf14a;&#xf17f;&#xf248;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf146;&#xf148;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf204;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf205;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf14d;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf206;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf207;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf208;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf169;&#xf24a;&#xf23d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf209;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf169;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf151;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf20f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf155;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf210;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf211;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf212;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf170;&#xf24a;&#xf14b;&#xf178;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf213;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf160;&#xf24a;&#xf22d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf214;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf208;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf215;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf170;&#xf24a;&#xf14b;&#xf17a;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf216;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf148;&#xf249;&#xf14b;&#xf17c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf217;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf218;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf219;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf168;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf174;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf148;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf163;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf21f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14a;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf220;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf221;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf169;&#xf24a;&#xf225;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf222;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf20a;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf223;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf16a;&#xf24a;&#xf204;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf224;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14a;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf225;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf226;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf227;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf165;&#xf24a;&#xf22c;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf228;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14d;&#xf24a;&#xf20b;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf229;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14a;&#xf24a;&#xf206;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf22a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf209;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf22b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf149;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf22c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf15a;&#xf24a;&#xf211;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf22d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf22e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf169;&#xf24a;&#xf23d;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf22f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf230;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf168;&#xf249;&#xf14b;&#xf171;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf231;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf232;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf162;&#xf246;&#xf149;&#xf16b;&#xf24a;&#xf14b;&#xf146;&#xf24a;&#xf149;&#xf163;&#xf245;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf233;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf234;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf235;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf169;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf236;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf171;&#xf24a;&#xf149;&#xf164;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf237;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14b;&#xf172;&#xf24a;&#xf206;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf238;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf239;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf207;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf23a;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf23b;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf145;&#xf24a;&#xf205;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf23c;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf16d;&#xf24a;&#xf14c;&#xf14f;&#xf24a;&#xf205;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf23d;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14c;&#xf24a;&#xf204;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf23e;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf146;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf23f;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf152;&#xf24a;&#xf14c;&#xf169;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf240;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf14e;&#xf24a;&#xf205;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf241;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf158;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf242;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf14a;&#xf154;&#xf24a;&#xf14c;&#xf169;&#xf249;&#xf174;&#xf245;&#xf246;&#xf246;&#xf147;&#xf249;&#xf16f;&#xf24a;&#xf243;&#xf245;&#xf248;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf246;&#xf14a;&#xf17f;&#xf24a;&#xf146;&#xf150;&#xf245;&#xf245;&#xf245;&#xf246;&#xf146;&#xf173;&#xf24a;&#xf147;&#xf15e;&#xf248;&#xf146;&#xf156;&#xf24a;&#xf14c;&#xf164;&#xf245;&#xf24b;",
    "stanza": 1914
  },
  {
    "role": "file",
    "lines": [
      "== COS_JRoom_test =="
    ],
    "stanza": 1915
  },
  {
    "role": "comment",
    "lines": [],
    "section_description": "test JRoom, JDoor, JThing, etc",
    "section_category": "JAVA",
    "section_index": 68,
    "stanza": 1916
  },
  {
    "role": "code",
    "lines": [
      "define s (? x | String new int-init | x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "s",
      [
        "?",
        "x",
        [
          -1,
          "String",
          "new",
          "int-init",
          [
            -1,
            "x"
          ]
        ]
      ]
    ],
    "code": "12110131210001001113212110031210101130231210110010031210011110312101100110302312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf16b;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf149;&#xf168;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf16a;&#xf248;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1917
  },
  {
    "role": "code",
    "lines": [
      "define room1 (COS_JRoom new <init>);"
    ],
    "dt": true,
    "parse": [
      "@",
      "room1",
      [
        "COS_JRoom",
        "new",
        "<init>"
      ]
    ],
    "code": "1211013121000101000321211111110131210011110312101011001332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf16c;&#xf246;&#xf14b;&#xf181;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15d;&#xf245;&#xf24b;",
    "stanza": 1918
  },
  {
    "role": "code",
    "lines": [
      "define room2 (COS_JRoom new <init>);"
    ],
    "dt": true,
    "parse": [
      "@",
      "room2",
      [
        "COS_JRoom",
        "new",
        "<init>"
      ]
    ],
    "code": "1211013121000101001321211111110131210011110312101011001332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf16d;&#xf246;&#xf14b;&#xf181;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15d;&#xf245;&#xf24b;",
    "stanza": 1919
  },
  {
    "role": "code",
    "lines": [
      "define door12 (COS_JDoor new <init> ",
      "              (room1) (s \"south\") (room2) (s \"north\"));"
    ],
    "dt": true,
    "parse": [
      "@",
      "door12",
      [
        "COS_JDoor",
        "new",
        "<init>",
        [
          "room1"
        ],
        [
          "s",
          "\"south\""
        ],
        [
          "room2"
        ],
        [
          "s",
          "\"north\""
        ]
      ]
    ],
    "code": "12110131210001010103212111111000312100111103121010110013212100010100033212100010011130200100010011100110110111101110101011101000110100000100010332121000101001332121000100111302001000100110111001101111011100100111010001101000001000103332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf16e;&#xf246;&#xf14b;&#xf17c;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15d;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf246;&#xf14c;&#xf16b;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf23a;&#xf241;&#xf239;&#xf221;&#xf20a;&#xf224;&#xf226;&#xf245;&#xf246;&#xf14c;&#xf16d;&#xf245;&#xf246;&#xf14c;&#xf16b;&#xf24a;&#xf204;&#xf226;&#xf21f;&#xf22a;&#xf241;&#xf236;&#xf221;&#xf20a;&#xf224;&#xf226;&#xf245;&#xf245;&#xf24b;",
    "stanza": 1920
  },
  {
    "role": "code",
    "lines": [
      "define jworld (COS_JWorld new <init>);"
    ],
    "dt": true,
    "parse": [
      "@",
      "jworld",
      [
        "COS_JWorld",
        "new",
        "<init>"
      ]
    ],
    "code": "12110131210001010113212100001011131210011110312101011001332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf16f;&#xf246;&#xf14c;&#xf15b;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15d;&#xf245;&#xf24b;",
    "stanza": 1921
  },
  {
    "role": "code",
    "lines": [
      "define thing1 (COS_JThing new <init>);"
    ],
    "dt": true,
    "parse": [
      "@",
      "thing1",
      [
        "COS_JThing",
        "new",
        "<init>"
      ]
    ],
    "code": "12110131210001011003212100000001031210011110312101011001332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf170;&#xf246;&#xf14c;&#xf146;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15d;&#xf245;&#xf24b;",
    "stanza": 1922
  },
  {
    "role": "code",
    "lines": [
      "define robo1 (COS_JRobo new <init>);"
    ],
    "dt": true,
    "parse": [
      "@",
      "robo1",
      [
        "COS_JRobo",
        "new",
        "<init>"
      ]
    ],
    "code": "12110131210001011013212100010001131210011110312101011001332233",
    "spider": "&#xf151;&#xf24a;&#xf14c;&#xf171;&#xf246;&#xf14c;&#xf167;&#xf24a;&#xf146;&#xf162;&#xf24a;&#xf149;&#xf15d;&#xf245;&#xf24b;",
    "stanza": 1923
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (thing1) | s \"bus\";"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "thing1"
        ],
        [
          -1,
          "s",
          "\"bus\""
        ]
      ]
    ],
    "code": "121010111003023121000101011312100110113212100010110033023121000100111302001000100110001001110101011100110010001032233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf16f;&#xf24a;&#xf146;&#xf15f;&#xf246;&#xf14c;&#xf170;&#xf245;&#xf248;&#xf14c;&#xf16b;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf221;&#xf21b;&#xf210;&#xf226;&#xf24b;",
    "stanza": 1924
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (robo1) | s \"autobus\";"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "robo1"
        ],
        [
          -1,
          "s",
          "\"autobus\""
        ]
      ]
    ],
    "code": "12101011100302312100010101131210011011321210001011013302312100010011130200100010011000010111010101110100011011110110001001110101011100110010001032233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf16f;&#xf24a;&#xf146;&#xf15f;&#xf246;&#xf14c;&#xf171;&#xf245;&#xf248;&#xf14c;&#xf16b;&#xf24a;&#xf20c;&#xf22a;&#xf209;&#xf239;&#xf221;&#xf20a;&#xf241;&#xf226;&#xf221;&#xf21b;&#xf210;&#xf226;&#xf24b;",
    "stanza": 1925
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (room1) | s \"boston\";"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "room1"
        ],
        [
          -1,
          "s",
          "\"boston\""
        ]
      ]
    ],
    "code": "121010111003023121000101011312100110113212100010100033023121000100111302001000100110001001101111011100110111010001101111011011100010001032233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf16f;&#xf24a;&#xf146;&#xf15f;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf248;&#xf14c;&#xf16b;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf24b;",
    "stanza": 1926
  },
  {
    "role": "code",
    "lines": [
      "act | jworld add (room2) | s \"newyork\";"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "add",
        [
          "room2"
        ],
        [
          -1,
          "s",
          "\"newyork\""
        ]
      ]
    ],
    "code": "12101011100302312100010101131210011011321210001010013302312100010011130200100010011011100110010101110111011110010110111101110010011010110010001032233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf16f;&#xf24a;&#xf146;&#xf15f;&#xf246;&#xf14c;&#xf16d;&#xf245;&#xf248;&#xf14c;&#xf16b;&#xf24a;&#xf20c;&#xf22a;&#xf23d;&#xf229;&#xf221;&#xf23b;&#xf229;&#xf233;&#xf220;&#xf22a;&#xf230;&#xf226;&#xf24b;",
    "stanza": 1927
  },
  {
    "role": "code",
    "lines": [
      "begin (room1 get add (room1))",
      "       (= 1 | room1 get size);"
    ],
    "dt": false,
    "parse": [
      "begin",
      [
        "room1",
        "get",
        "add",
        [
          "room1"
        ]
      ],
      [
        "=",
        "1",
        [
          -1,
          "room1",
          "get",
          "size"
        ]
      ]
    ],
    "code": "1210010113212100010100031211110131210011011321210001010003332121130213023121000101000312111101312111101100332233",
    "spider": "&#xf145;&#xf14f;&#xf246;&#xf14c;&#xf16c;&#xf24a;&#xf181;&#xf24a;&#xf146;&#xf15f;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf245;&#xf246;&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14c;&#xf16c;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf245;&#xf24b;",
    "stanza": 1928
  },
  {
    "role": "code",
    "lines": [
      "= 1 | room1 get size;"
    ],
    "dt": false,
    "parse": [
      "=",
      "1",
      [
        -1,
        "room1",
        "get",
        "size"
      ]
    ],
    "code": "12113021302312100010100031211110131211110110032233",
    "spider": "&#xf147;&#xf24a;&#xf205;&#xf248;&#xf14c;&#xf16c;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf24b;",
    "stanza": 1929
  },
  {
    "role": "code",
    "lines": [
      "= 0 | room2 get size;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "room2",
        "get",
        "size"
      ]
    ],
    "code": "12113020302312100010100131211110131211110110032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14c;&#xf16d;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf24b;",
    "stanza": 1930
  },
  {
    "role": "code",
    "lines": [
      "act | thing1 setRoom (room1);"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "thing1",
        "setRoom",
        [
          "room1"
        ]
      ]
    ],
    "code": "121010111003023121000101100312100000100032121000101000332233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf170;&#xf24a;&#xf14c;&#xf14c;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf24b;",
    "stanza": 1931
  },
  {
    "role": "code",
    "lines": [
      "= 2 | room1 get size;"
    ],
    "dt": false,
    "parse": [
      "=",
      "2",
      [
        -1,
        "room1",
        "get",
        "size"
      ]
    ],
    "code": "121130210302312100010100031211110131211110110032233",
    "spider": "&#xf147;&#xf24a;&#xf206;&#xf248;&#xf14c;&#xf16c;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf24b;",
    "stanza": 1932
  },
  {
    "role": "code",
    "lines": [
      "= 0 | room2 get size;"
    ],
    "dt": false,
    "parse": [
      "=",
      "0",
      [
        -1,
        "room2",
        "get",
        "size"
      ]
    ],
    "code": "12113020302312100010100131211110131211110110032233",
    "spider": "&#xf147;&#xf24a;&#xf204;&#xf248;&#xf14c;&#xf16d;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf24b;",
    "stanza": 1933
  },
  {
    "role": "code",
    "lines": [
      "act | thing1 setRoom (room2);"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "thing1",
        "setRoom",
        [
          "room2"
        ]
      ]
    ],
    "code": "121010111003023121000101100312100000100032121000101001332233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf170;&#xf24a;&#xf14c;&#xf14c;&#xf246;&#xf14c;&#xf16d;&#xf245;&#xf24b;",
    "stanza": 1934
  },
  {
    "role": "code",
    "lines": [
      "room1 get size;"
    ],
    "dt": false,
    "parse": [
      "room1",
      "get",
      "size"
    ],
    "code": "12100010100031211110131211110110032233",
    "spider": "&#xf14c;&#xf16c;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf24b;",
    "stanza": 1935
  },
  {
    "role": "code",
    "lines": [
      "room2 get size;"
    ],
    "dt": false,
    "parse": [
      "room2",
      "get",
      "size"
    ],
    "code": "12100010100131211110131211110110032233",
    "spider": "&#xf14c;&#xf16d;&#xf24a;&#xf181;&#xf24a;&#xf14b;&#xf170;&#xf24b;",
    "stanza": 1936
  },
  {
    "role": "code",
    "lines": [
      "thing1 equals (thing1);"
    ],
    "dt": false,
    "parse": [
      "thing1",
      "equals",
      [
        "thing1"
      ]
    ],
    "code": "12100010110031210101101132121000101100332233",
    "spider": "&#xf14c;&#xf170;&#xf24a;&#xf149;&#xf15f;&#xf246;&#xf14c;&#xf170;&#xf245;&#xf24b;",
    "stanza": 1937
  },
  {
    "role": "code",
    "lines": [
      "room1 equals (room1);"
    ],
    "dt": false,
    "parse": [
      "room1",
      "equals",
      [
        "room1"
      ]
    ],
    "code": "12100010100031210101101132121000101000332233",
    "spider": "&#xf14c;&#xf16c;&#xf24a;&#xf149;&#xf15f;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf24b;",
    "stanza": 1938
  },
  {
    "role": "code",
    "lines": [
      "not | thing1 equals (room1);"
    ],
    "dt": false,
    "parse": [
      "not",
      [
        -1,
        "thing1",
        "equals",
        [
          "room1"
        ]
      ]
    ],
    "code": "12101302312100010110031210101101132121000101000332233",
    "spider": "&#xf149;&#xf248;&#xf14c;&#xf170;&#xf24a;&#xf149;&#xf15f;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf24b;",
    "stanza": 1939
  },
  {
    "role": "code",
    "lines": [
      "equal \"newyork\" | door12 apply (room1) (s \"south\") getName intValue;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"newyork\"",
      [
        -1,
        "door12",
        "apply",
        [
          "room1"
        ],
        [
          "s",
          "\"south\""
        ],
        "getName",
        "intValue"
      ]
    ],
    "code": "1210001003020010001001101110011001010111011101111001011011110111001001101011001000103023121000101010312100000000032121000101000332121000100111302001000100111001101101111011101010111010001101000001000103312100001101131210110001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf20c;&#xf22a;&#xf23d;&#xf229;&#xf221;&#xf23b;&#xf229;&#xf233;&#xf220;&#xf22a;&#xf230;&#xf226;&#xf248;&#xf14c;&#xf16e;&#xf24a;&#xf14c;&#xf144;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf246;&#xf14c;&#xf16b;&#xf24a;&#xf204;&#xf226;&#xf220;&#xf23a;&#xf241;&#xf239;&#xf221;&#xf20a;&#xf224;&#xf226;&#xf245;&#xf14c;&#xf15f;&#xf24a;&#xf149;&#xf166;&#xf24b;",
    "lines_original": [
      "demo | door12 apply (room1) (s \"south\") getName intValue;"
    ],
    "stanza": 1940
  },
  {
    "role": "code",
    "lines": [
      "equal \"boston\" | door12 apply (room2) (s \"north\") getName intValue;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"boston\"",
      [
        -1,
        "door12",
        "apply",
        [
          "room2"
        ],
        [
          "s",
          "\"north\""
        ],
        "getName",
        "intValue"
      ]
    ],
    "code": "12100010030200100010011000100110111101110011011101000110111101101110001000103023121000101010312100000000032121000101001332121000100111302001000100110111001101111011100100111010001101000001000103312100001101131210110001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf248;&#xf14c;&#xf16e;&#xf24a;&#xf14c;&#xf144;&#xf246;&#xf14c;&#xf16d;&#xf245;&#xf246;&#xf14c;&#xf16b;&#xf24a;&#xf204;&#xf226;&#xf21f;&#xf22a;&#xf241;&#xf236;&#xf221;&#xf20a;&#xf224;&#xf226;&#xf245;&#xf14c;&#xf15f;&#xf24a;&#xf149;&#xf166;&#xf24b;",
    "lines_original": [
      "demo | door12 apply (room2) (s \"north\") getName intValue;"
    ],
    "stanza": 1941
  },
  {
    "role": "code",
    "lines": [
      "define o",
      "  (? x | jworld get | s | x);"
    ],
    "dt": true,
    "parse": [
      "@",
      "o",
      [
        "?",
        "x",
        [
          -1,
          "jworld",
          "get",
          [
            -1,
            "s",
            [
              -1,
              "x"
            ]
          ]
        ]
      ]
    ],
    "code": "1211013121011000113212110031210101130231210001010113121111013023121000100111302312101011332233",
    "spider": "&#xf151;&#xf24a;&#xf149;&#xf167;&#xf246;&#xf150;&#xf24a;&#xf16f;&#xf248;&#xf14c;&#xf16f;&#xf24a;&#xf181;&#xf248;&#xf14c;&#xf16b;&#xf248;&#xf16f;&#xf245;&#xf24b;",
    "stanza": 1942
  },
  {
    "role": "code",
    "lines": [
      "= \"newyork\" | (o \"bus\") getRoom getName intValue;"
    ],
    "dt": false,
    "parse": [
      "=",
      "\"newyork\"",
      [
        -1,
        [
          "o",
          "\"bus\""
        ],
        "getRoom",
        "getName",
        "intValue"
      ]
    ],
    "code": "12113020010001001101110011001010111011101111001011011110111001001101011001000103023212101100011302001000100110001001110101011100110010001033121000001010312100001101131210110001032233",
    "spider": "&#xf147;&#xf24a;&#xf20c;&#xf22a;&#xf23d;&#xf229;&#xf221;&#xf23b;&#xf229;&#xf233;&#xf220;&#xf22a;&#xf230;&#xf226;&#xf248;&#xf246;&#xf149;&#xf167;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf221;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf14c;&#xf14e;&#xf24a;&#xf14c;&#xf15f;&#xf24a;&#xf149;&#xf166;&#xf24b;",
    "stanza": 1943
  },
  {
    "role": "code",
    "lines": [
      "act | robo1 setRoom (room1);"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "robo1",
        "setRoom",
        [
          "room1"
        ]
      ]
    ],
    "code": "121010111003023121000101101312100000100032121000101000332233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf171;&#xf24a;&#xf14c;&#xf14c;&#xf246;&#xf14c;&#xf16c;&#xf245;&#xf24b;",
    "stanza": 1944
  },
  {
    "role": "code",
    "lines": [
      "equal \"boston\" | (o \"autobus\") getRoom getName intValue;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"boston\"",
      [
        -1,
        [
          "o",
          "\"autobus\""
        ],
        "getRoom",
        "getName",
        "intValue"
      ]
    ],
    "code": "1210001003020010001001100010011011110111001101110100011011110110111000100010302321210110001130200100010011000010111010101110100011011110110001001110101011100110010001033121000001010312100001101131210110001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf206;&#xf20d;&#xf226;&#xf21f;&#xf23b;&#xf211;&#xf238;&#xf21f;&#xf23a;&#xf23c;&#xf226;&#xf248;&#xf246;&#xf149;&#xf167;&#xf24a;&#xf20c;&#xf22a;&#xf209;&#xf239;&#xf221;&#xf20a;&#xf241;&#xf226;&#xf221;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf14c;&#xf14e;&#xf24a;&#xf14c;&#xf15f;&#xf24a;&#xf149;&#xf166;&#xf24b;",
    "lines_original": [
      "demo | (o \"autobus\") getRoom getName intValue;"
    ],
    "stanza": 1945
  },
  {
    "role": "code",
    "lines": [
      "act | jworld update;"
    ],
    "dt": true,
    "parse": [
      "act",
      [
        -1,
        "jworld",
        "update"
      ]
    ],
    "code": "1210101110030231210001010113121101101032233",
    "spider": "&#xf149;&#xf160;&#xf248;&#xf14c;&#xf16f;&#xf24a;&#xf147;&#xf15e;&#xf24b;",
    "stanza": 1946
  },
  {
    "role": "code",
    "lines": [
      "equal \"newyork\" | (o \"autobus\") getRoom getName intValue;"
    ],
    "dt": false,
    "parse": [
      "equal",
      "\"newyork\"",
      [
        -1,
        [
          "o",
          "\"autobus\""
        ],
        "getRoom",
        "getName",
        "intValue"
      ]
    ],
    "code": "121000100302001000100110111001100101011101110111100101101111011100100110101100100010302321210110001130200100010011000010111010101110100011011110110001001110101011100110010001033121000001010312100001101131210110001032233",
    "spider": "&#xf145;&#xf148;&#xf24a;&#xf20c;&#xf22a;&#xf23d;&#xf229;&#xf221;&#xf23b;&#xf229;&#xf233;&#xf220;&#xf22a;&#xf230;&#xf226;&#xf248;&#xf246;&#xf149;&#xf167;&#xf24a;&#xf20c;&#xf22a;&#xf209;&#xf239;&#xf221;&#xf20a;&#xf241;&#xf226;&#xf221;&#xf21b;&#xf210;&#xf226;&#xf245;&#xf14c;&#xf14e;&#xf24a;&#xf14c;&#xf15f;&#xf24a;&#xf149;&#xf166;&#xf24b;",
    "lines_original": [
      "demo | (o \"autobus\") getRoom getName intValue;"
    ],
    "stanza": 1947
  }
]